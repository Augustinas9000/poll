(function (global, factory) {
  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :
  typeof define === 'function' && define.amd ? define(factory) :
  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.geensJsSdk = factory());
})(this, (function () { 'use strict';

  var geensLogout = {
  	url: "/oauth/logout",
  	client: "client_id="
  };
  var geensAuthorize = {
  	url: "/oauth/authorize",
  	client: "client_id=",
  	responseType: {
  		code: "response_type=code"
  	},
  	redirectUri: "redirect_uri="
  };
  var geensUserCredentials = {
  	url: "/api/oauth/user_credentials",
  	accessToken: "access_token="
  };
  var geensGetItemUrl = "/api/item/get";
  var geensGetListUrl = "/api/item/list";
  var geensMoveItemUrl = "/api/item/move";
  var geensCopyItemUrl = "/api/item/copy";
  var geensGetAllItemsUrl = "/api/item/all";
  var geensCreateItemUrl = "/api/item/create";
  var geensRemoveItemUrl = "/api/item/delete";
  var geensUpdateItemUrl = "/api/item/update";
  var geensContentGetUrl = "/api/content/get";
  var geensStoreItemUrl = "/api/content/store";
  var geensRestoreItemUrl = "/api/item/restore";
  var geensUpdateNoteUrl = "/api/item/update-note";
  var geensGetFragmentListUrl = "/api/fragment/list";
  var geensGroupsUserListUrl = "/api/groups/users/list";
  var geensItemsDescendantsUrl = "/api/item/descendants";
  var geensSoftDeletedItemsUrl = "/api/item/deleted-list";
  var geensGenerateSharableUrl = "/api/item/generate-share-url";
  var geensRevokeSharesUrl = "/api/item/revoke-access";
  var geensDeleteItemVersionUrl = "/api/item/versions/delete";
  var geensGetAllUrlSharedItems = "/api/item/get-all-url-shared-items";
  var geensGetSharedForMeItems = "/api/item/shared-for-me";
  var geensGetSharedByMeItems = "/api/item/shared-by-me";
  var geensGetSharedUrl = "/api/item/shared-url";
  var geensShareItem = "/api/item/share";
  var geensGetUserPublicKeys = "/api/oauth/get-public-user-keys";
  var geensGetUserByUid = "/api/oauth/get-users-by-uid";

  var LibraryConverterService = /** @class */ (function () {
      function LibraryConverterService() {
      }
      /**
       * Returns web worker as url object
       * */
      LibraryConverterService.asmWorkerUrl = function () {
          var worker = "function workerFunctionList(e) {\n" +
              "    var bytesToB64 = function(bits) {\n" +
              "        return asmCrypto.bytes_to_base64(bits);\n" +
              "    };\n" +
              "\n" +
              "    var bytesToString = function(bits) {\n" +
              "        return asmCrypto.bytes_to_string(bits);\n" +
              "    };\n" +
              "\n" +
              "    var bytesToHex = function(bits) {\n" +
              "        return asmCrypto.bytes_to_hex(bits);\n" +
              "    };\n" +
              "\n" +
              "    var hexToBytes = function(hex) {\n" +
              "        return asmCrypto.hex_to_bytes(hex);\n" +
              "    };\n" +
              "\n" +
              "    var stringToBytes = function(str) {\n" +
              "        return asmCrypto.string_to_bytes(str);\n" +
              "    };\n" +
              "\n" +
              "    var b64ToBytes = function(b64) {\n" +
              "        return asmCrypto.base64_to_bytes(b64);\n" +
              "    };\n" +
              "\n" +
              "    var getRandom = function(bits) {\n" +
              "        if (bits % 16 !== 0) {\n" +
              "            throw 'getRandom(bits) not a modules of 32';\n" +
              "        }\n" +
              "        var buf = new Int8Array(bits);\n" +
              "        var rand = (window && window.crypto && window.crypto.getRandomValues && Int8Array) ?\n" +
              "            window.crypto.getRandomValues(buf) :\n" +
              "            asmCrypto.random.getValues(buf);\n" +
              "        return new Uint8Array(rand);\n" +
              "    };\n" +
              "\n" +
              "\n" +
              "    var symDecryptFile = function(data, password) {\n" +
              "        if (data instanceof ArrayBuffer) data = new Uint8Array(data);\n" +
              "        var iv = data.subarray(0, 64);\n" +
              "        var salt = data.subarray(64, 192);\n" +
              "        var iterations = data.subarray(192, 196);\n" +
              "        data = data.subarray(196, data.byteLength);\n" +
              "        var stretchedPass = keyStretch(password, salt, parseInt(bytesToString(iterations)), 32);\n" +
              "\n" +
              "        return asmCrypto.AES_GCM.decrypt(data, stretchedPass, iv);\n" +
              "    };\n" +
              "\n" +
              "    var keyStretch = function(password, salt, iterations, length) {\n" +
              "        var passwordBytes = stringToBytes(password);\n" +
              "        return asmCrypto.PBKDF2_HMAC_SHA256.bytes(passwordBytes,\n" +
              "            salt,\n" +
              "            iterations || 60000,\n" +
              "            length\n" +
              "        );\n" +
              "    };\n" +
              "\n" +
              "    var asmSet = false;\n" +
              "\n" +
              "    if (!asmSet) {\n" +
              "        console.log(e);\n" +
              "        importScripts(e.data.asm_crypto_url);\n" +
              "        asmSet = true;\n" +
              "    }\n" +
              "\n" +
              "    var data = e.data;\n" +
              "    var decrypted = symDecryptFile(data.data, data.password);\n" +
              "\n" +
              "    postMessage({\n" +
              "        data: decrypted,\n" +
              "        key: data.key,\n" +
              "        worker_id: data.worker_id,\n" +
              "        position: data.position\n" +
              "    });\n" +
              "}";
          var blob = new Blob(['self.onmessage = ', worker], { type: 'text/javascript' });
          return URL.createObjectURL(blob);
      };
      /**
       * Returns AsmCrypto library as url object
       * */
      LibraryConverterService.asmCryptoUrl = function () {
          var cryptoString = "!function(a,b){function c(){var a=Error.apply(this,arguments);this.message=a.message,this.stack=a.stack}function d(){var a=Error.apply(this,arguments);this.message=a.message,this.stack=a.stack}function e(){var a=Error.apply(this,arguments);this.message=a.message,this.stack=a.stack}function f(a,b){b=!!b;for(var c=a.length,d=new Uint8Array(b?4*c:c),e=0,f=0;c>e;e++){var g=a.charCodeAt(e);if(b&&g>=55296&&56319>=g){if(++e>=c)throw new Error(\"Malformed string, low surrogate expected at position \"+e);g=(55296^g)<<10|65536|56320^a.charCodeAt(e)}else if(!b&&g>>>8)throw new Error(\"Wide characters are not allowed.\");!b||127>=g?d[f++]=g:2047>=g?(d[f++]=192|g>>6,d[f++]=128|63&g):65535>=g?(d[f++]=224|g>>12,d[f++]=128|g>>6&63,d[f++]=128|63&g):(d[f++]=240|g>>18,d[f++]=128|g>>12&63,d[f++]=128|g>>6&63,d[f++]=128|63&g)}return d.subarray(0,f)}function g(a){var b=a.length;1&b&&(a=\"0\"+a,b++);for(var c=new Uint8Array(b>>1),d=0;b>d;d+=2)c[d>>1]=parseInt(a.substr(d,2),16);return c}function h(a){return f(atob(a))}function i(a,b){b=!!b;for(var c=a.length,d=new Array(c),e=0,f=0;c>e;e++){var g=a[e];if(!b||128>g)d[f++]=g;else if(g>=192&&224>g&&c>e+1)d[f++]=(31&g)<<6|63&a[++e];else if(g>=224&&240>g&&c>e+2)d[f++]=(15&g)<<12|(63&a[++e])<<6|63&a[++e];else{if(!(g>=240&&248>g&&c>e+3))throw new Error(\"Malformed UTF8 character at byte offset \"+e);var h=(7&g)<<18|(63&a[++e])<<12|(63&a[++e])<<6|63&a[++e];65535>=h?d[f++]=h:(h^=65536,d[f++]=55296|h>>10,d[f++]=56320|1023&h)}}for(var i=\"\",j=16384,e=0;f>e;e+=j)i+=String.fromCharCode.apply(String,d.slice(e,f>=e+j?e+j:f));return i}function j(a){for(var b=\"\",c=0;c<a.length;c++){var d=(255&a[c]).toString(16);d.length<2&&(b+=\"0\"),b+=d}return b}function k(a){return btoa(i(a))}function l(a){return a-=1,a|=a>>>1,a|=a>>>2,a|=a>>>4,a|=a>>>8,a|=a>>>16,a+=1}function m(a){return\"number\"==typeof a}function n(a){return\"string\"==typeof a}function o(a){return a instanceof ArrayBuffer}function p(a){return a instanceof Uint8Array}function q(a){return a instanceof Int8Array||a instanceof Uint8Array||a instanceof Int16Array||a instanceof Uint16Array||a instanceof Int32Array||a instanceof Uint32Array||a instanceof Float32Array||a instanceof Float64Array}function r(a,b){var c=b.heap,d=c?c.byteLength:b.heapSize||65536;if(4095&d||0>=d)throw new Error(\"heap size must be a positive integer and a multiple of 4096\");return c=c||new a(new ArrayBuffer(d))}function s(a,b,c,d,e){var f=a.length-b,g=e>f?f:e;return a.set(c.subarray(d,d+g),b),g}function t(a){a=a||{},this.heap=r(Uint8Array,a).subarray(Xb.HEAP_DATA),this.asm=a.asm||Xb(b,null,this.heap.buffer),this.mode=null,this.key=null,this.reset(a)}function u(a){if(void 0!==a){if(o(a)||p(a))a=new Uint8Array(a);else{if(!n(a))throw new TypeError(\"unexpected key type\");a=f(a)}var b=a.length;if(16!==b&&24!==b&&32!==b)throw new d(\"illegal key size\");var c=new DataView(a.buffer,a.byteOffset,a.byteLength);this.asm.set_key(b>>2,c.getUint32(0),c.getUint32(4),c.getUint32(8),c.getUint32(12),b>16?c.getUint32(16):0,b>16?c.getUint32(20):0,b>24?c.getUint32(24):0,b>24?c.getUint32(28):0),this.key=a}else if(!this.key)throw new Error(\"key is required\")}function v(a){if(void 0!==a){if(o(a)||p(a))a=new Uint8Array(a);else{if(!n(a))throw new TypeError(\"unexpected iv type\");a=f(a)}if(16!==a.length)throw new d(\"illegal iv size\");var b=new DataView(a.buffer,a.byteOffset,a.byteLength);this.iv=a,this.asm.set_iv(b.getUint32(0),b.getUint32(4),b.getUint32(8),b.getUint32(12))}else this.iv=null,this.asm.set_iv(0,0,0,0)}function w(a){void 0!==a?this.padding=!!a:this.padding=!0}function x(a){return a=a||{},this.result=null,this.pos=0,this.len=0,u.call(this,a.key),this.hasOwnProperty(\"iv\")&&v.call(this,a.iv),this.hasOwnProperty(\"padding\")&&w.call(this,a.padding),this}function y(a){if(n(a)&&(a=f(a)),o(a)&&(a=new Uint8Array(a)),!p(a))throw new TypeError(\"data isn't of expected type\");for(var b=this.asm,c=this.heap,d=Xb.ENC[this.mode],e=Xb.HEAP_DATA,g=this.pos,h=this.len,i=0,j=a.length||0,k=0,l=h+j&-16,m=0,q=new Uint8Array(l);j>0;)m=s(c,g+h,a,i,j),h+=m,i+=m,j-=m,m=b.cipher(d,e+g,h),m&&q.set(c.subarray(g,g+m),k),k+=m,h>m?(g+=m,h-=m):(g=0,h=0);return this.result=q,this.pos=g,this.len=h,this}function z(a){var b=null,c=0;void 0!==a&&(b=y.call(this,a).result,c=b.length);var e=this.asm,f=this.heap,g=Xb.ENC[this.mode],h=Xb.HEAP_DATA,i=this.pos,j=this.len,k=16-j%16,l=j;if(this.hasOwnProperty(\"padding\")){if(this.padding){for(var m=0;k>m;++m)f[i+j+m]=k;j+=k,l=j}else if(j%16)throw new d(\"data length must be a multiple of the block size\")}else j+=k;var n=new Uint8Array(c+l);return c&&n.set(b),j&&e.cipher(g,h+i,j),l&&n.set(f.subarray(i,i+l),c),this.result=n,this.pos=0,this.len=0,this}function A(a){if(n(a)&&(a=f(a)),o(a)&&(a=new Uint8Array(a)),!p(a))throw new TypeError(\"data isn't of expected type\");var b=this.asm,c=this.heap,d=Xb.DEC[this.mode],e=Xb.HEAP_DATA,g=this.pos,h=this.len,i=0,j=a.length||0,k=0,l=h+j&-16,m=0,q=0;this.hasOwnProperty(\"padding\")&&this.padding&&(m=h+j-l||16,l-=m);for(var r=new Uint8Array(l);j>0;)q=s(c,g+h,a,i,j),h+=q,i+=q,j-=q,q=b.cipher(d,e+g,h-(j?0:m)),q&&r.set(c.subarray(g,g+q),k),k+=q,h>q?(g+=q,h-=q):(g=0,h=0);return this.result=r,this.pos=g,this.len=h,this}function B(a){var b=null,c=0;void 0!==a&&(b=A.call(this,a).result,c=b.length);var f=this.asm,g=this.heap,h=Xb.DEC[this.mode],i=Xb.HEAP_DATA,j=this.pos,k=this.len,l=k;if(k>0){if(k%16){if(this.hasOwnProperty(\"padding\"))throw new d(\"data length must be a multiple of the block size\");k+=16-k%16}if(f.cipher(h,i+j,k),this.hasOwnProperty(\"padding\")&&this.padding){var m=g[j+l-1];if(1>m||m>16||m>l)throw new e(\"bad padding\");for(var n=0,o=m;o>1;o--)n|=m^g[j+l-o];if(n)throw new e(\"bad padding\");l-=m}}var p=new Uint8Array(c+l);return c>0&&p.set(b),l>0&&p.set(g.subarray(j,j+l),c),this.result=p,this.pos=0,this.len=0,this}function C(a){this.padding=!0,this.iv=null,t.call(this,a),this.mode=\"CBC\"}function D(a){C.call(this,a)}function E(a){C.call(this,a)}function F(a){this.nonce=null,this.counter=0,this.counterSize=0,t.call(this,a),this.mode=\"CTR\"}function G(a){F.call(this,a)}function H(a,b,c){if(void 0!==c){if(8>c||c>48)throw new d(\"illegal counter size\");this.counterSize=c;var e=Math.pow(2,c)-1;this.asm.set_mask(0,0,e/4294967296|0,0|e)}else this.counterSize=c=48,this.asm.set_mask(0,0,65535,4294967295);if(void 0===a)throw new Error(\"nonce is required\");if(o(a)||p(a))a=new Uint8Array(a);else{if(!n(a))throw new TypeError(\"unexpected nonce type\");a=f(a)}var g=a.length;if(!g||g>16)throw new d(\"illegal nonce size\");this.nonce=a;var h=new DataView(new ArrayBuffer(16));if(new Uint8Array(h.buffer).set(a),this.asm.set_nonce(h.getUint32(0),h.getUint32(4),h.getUint32(8),h.getUint32(12)),void 0!==b){if(!m(b))throw new TypeError(\"unexpected counter type\");if(0>b||b>=Math.pow(2,c))throw new d(\"illegal counter value\");this.counter=b,this.asm.set_counter(0,0,b/4294967296|0,0|b)}else this.counter=b=0}function I(a){return a=a||{},x.call(this,a),H.call(this,a.nonce,a.counter,a.counterSize),this}function J(a){for(var b=this.heap,c=this.asm,d=0,e=a.length||0,f=0;e>0;){for(f=s(b,0,a,d,e),d+=f,e-=f;15&f;)b[f++]=0;c.mac(Xb.MAC.GCM,Xb.HEAP_DATA,f)}}function K(a){this.nonce=null,this.adata=null,this.iv=null,this.counter=1,this.tagSize=16,t.call(this,a),this.mode=\"GCM\"}function L(a){K.call(this,a)}function M(a){K.call(this,a)}function N(a){a=a||{},x.call(this,a);var b=this.asm,c=this.heap;b.gcm_init();var e=a.tagSize;if(void 0!==e){if(!m(e))throw new TypeError(\"tagSize must be a number\");if(4>e||e>16)throw new d(\"illegal tagSize value\");this.tagSize=e}else this.tagSize=16;var g=a.nonce;if(void 0===g)throw new Error(\"nonce is required\");if(p(g)||o(g))g=new Uint8Array(g);else{if(!n(g))throw new TypeError(\"unexpected nonce type\");g=f(g)}this.nonce=g;var h=g.length||0,i=new Uint8Array(16);12!==h?(J.call(this,g),c[0]=c[1]=c[2]=c[3]=c[4]=c[5]=c[6]=c[7]=c[8]=c[9]=c[10]=0,c[11]=h>>>29,c[12]=h>>>21&255,c[13]=h>>>13&255,c[14]=h>>>5&255,c[15]=h<<3&255,b.mac(Xb.MAC.GCM,Xb.HEAP_DATA,16),b.get_iv(Xb.HEAP_DATA),b.set_iv(),i.set(c.subarray(0,16))):(i.set(g),i[15]=1);var j=new DataView(i.buffer);this.gamma0=j.getUint32(12),b.set_nonce(j.getUint32(0),j.getUint32(4),j.getUint32(8),0),b.set_mask(0,0,0,4294967295);var k=a.adata;if(void 0!==k&&null!==k){if(p(k)||o(k))k=new Uint8Array(k);else{if(!n(k))throw new TypeError(\"unexpected adata type\");k=f(k)}if(k.length>bc)throw new d(\"illegal adata length\");k.length?(this.adata=k,J.call(this,k)):this.adata=null}else this.adata=null;var l=a.counter;if(void 0!==l){if(!m(l))throw new TypeError(\"counter must be a number\");if(1>l||l>4294967295)throw new RangeError(\"counter must be a positive 32-bit integer\");this.counter=l,b.set_counter(0,0,0,this.gamma0+l|0)}else this.counter=1,b.set_counter(0,0,0,this.gamma0+1|0);var q=a.iv;if(void 0!==q){if(!m(l))throw new TypeError(\"counter must be a number\");this.iv=q,v.call(this,q)}return this}function O(a){if(n(a)&&(a=f(a)),o(a)&&(a=new Uint8Array(a)),!p(a))throw new TypeError(\"data isn't of expected type\");var b=0,c=a.length||0,d=this.asm,e=this.heap,g=this.counter,h=this.pos,i=this.len,j=0,k=i+c&-16,l=0;if((g-1<<4)+i+c>bc)throw new RangeError(\"counter overflow\");for(var m=new Uint8Array(k);c>0;)l=s(e,h+i,a,b,c),i+=l,b+=l,c-=l,l=d.cipher(Xb.ENC.CTR,Xb.HEAP_DATA+h,i),l=d.mac(Xb.MAC.GCM,Xb.HEAP_DATA+h,l),l&&m.set(e.subarray(h,h+l),j),g+=l>>>4,j+=l,i>l?(h+=l,i-=l):(h=0,i=0);return this.result=m,this.counter=g,this.pos=h,this.len=i,this}function P(){var a=this.asm,b=this.heap,c=this.counter,d=this.tagSize,e=this.adata,f=this.pos,g=this.len,h=new Uint8Array(g+d);a.cipher(Xb.ENC.CTR,Xb.HEAP_DATA+f,g+15&-16),g&&h.set(b.subarray(f,f+g));for(var i=g;15&i;i++)b[f+i]=0;a.mac(Xb.MAC.GCM,Xb.HEAP_DATA+f,i);var j=null!==e?e.length:0,k=(c-1<<4)+g;return b[0]=b[1]=b[2]=0,b[3]=j>>>29,b[4]=j>>>21,b[5]=j>>>13&255,b[6]=j>>>5&255,b[7]=j<<3&255,b[8]=b[9]=b[10]=0,b[11]=k>>>29,b[12]=k>>>21&255,b[13]=k>>>13&255,b[14]=k>>>5&255,b[15]=k<<3&255,a.mac(Xb.MAC.GCM,Xb.HEAP_DATA,16),a.get_iv(Xb.HEAP_DATA),a.set_counter(0,0,0,this.gamma0),a.cipher(Xb.ENC.CTR,Xb.HEAP_DATA,16),h.set(b.subarray(0,d),g),this.result=h,this.counter=1,this.pos=0,this.len=0,this}function Q(a){var b=O.call(this,a).result,c=P.call(this).result,d=new Uint8Array(b.length+c.length);return b.length&&d.set(b),c.length&&d.set(c,b.length),this.result=d,this}function R(a){if(n(a)&&(a=f(a)),o(a)&&(a=new Uint8Array(a)),!p(a))throw new TypeError(\"data isn't of expected type\");var b=0,c=a.length||0,d=this.asm,e=this.heap,g=this.counter,h=this.tagSize,i=this.pos,j=this.len,k=0,l=j+c>h?j+c-h&-16:0,m=j+c-l,q=0;if((g-1<<4)+j+c>bc)throw new RangeError(\"counter overflow\");for(var r=new Uint8Array(l);c>m;)q=s(e,i+j,a,b,c-m),j+=q,b+=q,c-=q,q=d.mac(Xb.MAC.GCM,Xb.HEAP_DATA+i,q),q=d.cipher(Xb.DEC.CTR,Xb.HEAP_DATA+i,q),q&&r.set(e.subarray(i,i+q),k),g+=q>>>4,k+=q,i=0,j=0;return c>0&&(j+=s(e,0,a,b,c)),this.result=r,this.counter=g,this.pos=i,this.len=j,this}function S(){var a=this.asm,b=this.heap,d=this.tagSize,f=this.adata,g=this.counter,h=this.pos,i=this.len,j=i-d,k=0;if(d>i)throw new c(\"authentication tag not found\");for(var l=new Uint8Array(j),m=new Uint8Array(b.subarray(h+j,h+i)),n=j;15&n;n++)b[h+n]=0;k=a.mac(Xb.MAC.GCM,Xb.HEAP_DATA+h,n),k=a.cipher(Xb.DEC.CTR,Xb.HEAP_DATA+h,n),j&&l.set(b.subarray(h,h+j));var o=null!==f?f.length:0,p=(g-1<<4)+i-d;b[0]=b[1]=b[2]=0,b[3]=o>>>29,b[4]=o>>>21,b[5]=o>>>13&255,b[6]=o>>>5&255,b[7]=o<<3&255,b[8]=b[9]=b[10]=0,b[11]=p>>>29,b[12]=p>>>21&255,b[13]=p>>>13&255,b[14]=p>>>5&255,b[15]=p<<3&255,a.mac(Xb.MAC.GCM,Xb.HEAP_DATA,16),a.get_iv(Xb.HEAP_DATA),a.set_counter(0,0,0,this.gamma0),a.cipher(Xb.ENC.CTR,Xb.HEAP_DATA,16);for(var q=0,n=0;d>n;++n)q|=m[n]^b[n];if(q)throw new e(\"data integrity check failed\");return this.result=l,this.counter=1,this.pos=0,this.len=0,this}function T(a){var b=R.call(this,a).result,c=S.call(this).result,d=new Uint8Array(b.length+c.length);return b.length&&d.set(b),c.length&&d.set(c,b.length),this.result=d,this}function U(a,b,c,d){if(void 0===a)throw new SyntaxError(\"data required\");if(void 0===b)throw new SyntaxError(\"key required\");return new C({heap:fc,asm:gc,key:b,padding:c,iv:d}).encrypt(a).result}function V(a,b,c,d){if(void 0===a)throw new SyntaxError(\"data required\");if(void 0===b)throw new SyntaxError(\"key required\");return new C({heap:fc,asm:gc,key:b,padding:c,iv:d}).decrypt(a).result}function W(a,b,c,d,e){if(void 0===a)throw new SyntaxError(\"data required\");if(void 0===b)throw new SyntaxError(\"key required\");if(void 0===c)throw new SyntaxError(\"nonce required\");return new K({heap:fc,asm:gc,key:b,nonce:c,adata:d,tagSize:e}).encrypt(a).result}function X(a,b,c,d,e){if(void 0===a)throw new SyntaxError(\"data required\");if(void 0===b)throw new SyntaxError(\"key required\");if(void 0===c)throw new SyntaxError(\"nonce required\");return new K({heap:fc,asm:gc,key:b,nonce:c,adata:d,tagSize:e}).decrypt(a).result}function Y(){return this.result=null,this.pos=0,this.len=0,this.asm.reset(),this}function Z(a){if(null!==this.result)throw new c(\"state must be reset before processing new data\");if(n(a)&&(a=f(a)),o(a)&&(a=new Uint8Array(a)),!p(a))throw new TypeError(\"data isn't of expected type\");for(var b=this.asm,d=this.heap,e=this.pos,g=this.len,h=0,i=a.length,j=0;i>0;)j=s(d,e+g,a,h,i),g+=j,h+=j,i-=j,j=b.process(e,g),e+=j,g-=j,g||(e=0);return this.pos=e,this.len=g,this}function $(){if(null!==this.result)throw new c(\"state must be reset before processing new data\");return this.asm.finish(this.pos,this.len,0),this.result=new Uint8Array(this.HASH_SIZE),this.result.set(this.heap.subarray(0,this.HASH_SIZE)),this.pos=0,this.len=0,this}function _(a,b,c){\"use asm\";var d=0,e=0,f=0,g=0,h=0,i=0,j=0;var k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;var u=new a.Uint8Array(c);function v(H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W){H=H|0;I=I|0;J=J|0;K=K|0;L=L|0;M=M|0;N=N|0;O=O|0;P=P|0;Q=Q|0;R=R|0;S=S|0;T=T|0;U=U|0;V=V|0;W=W|0;var X=0,Y=0,Z=0,$=0,_=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0,Ya=0,Za=0,$a=0,_a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0;X=d;Y=e;Z=f;$=g;_=h;ba=H+(X<<5|X>>>27)+_+(Y&Z|~Y&$)+1518500249|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;ba=I+(X<<5|X>>>27)+_+(Y&Z|~Y&$)+1518500249|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;ba=J+(X<<5|X>>>27)+_+(Y&Z|~Y&$)+1518500249|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;ba=K+(X<<5|X>>>27)+_+(Y&Z|~Y&$)+1518500249|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;ba=L+(X<<5|X>>>27)+_+(Y&Z|~Y&$)+1518500249|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;ba=M+(X<<5|X>>>27)+_+(Y&Z|~Y&$)+1518500249|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;ba=N+(X<<5|X>>>27)+_+(Y&Z|~Y&$)+1518500249|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;ba=O+(X<<5|X>>>27)+_+(Y&Z|~Y&$)+1518500249|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;ba=P+(X<<5|X>>>27)+_+(Y&Z|~Y&$)+1518500249|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;ba=Q+(X<<5|X>>>27)+_+(Y&Z|~Y&$)+1518500249|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;ba=R+(X<<5|X>>>27)+_+(Y&Z|~Y&$)+1518500249|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;ba=S+(X<<5|X>>>27)+_+(Y&Z|~Y&$)+1518500249|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;ba=T+(X<<5|X>>>27)+_+(Y&Z|~Y&$)+1518500249|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;ba=U+(X<<5|X>>>27)+_+(Y&Z|~Y&$)+1518500249|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;ba=V+(X<<5|X>>>27)+_+(Y&Z|~Y&$)+1518500249|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;ba=W+(X<<5|X>>>27)+_+(Y&Z|~Y&$)+1518500249|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=U^P^J^H;ca=aa<<1|aa>>>31;ba=ca+(X<<5|X>>>27)+_+(Y&Z|~Y&$)+1518500249|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=V^Q^K^I;da=aa<<1|aa>>>31;ba=da+(X<<5|X>>>27)+_+(Y&Z|~Y&$)+1518500249|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=W^R^L^J;ea=aa<<1|aa>>>31;ba=ea+(X<<5|X>>>27)+_+(Y&Z|~Y&$)+1518500249|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=ca^S^M^K;fa=aa<<1|aa>>>31;ba=fa+(X<<5|X>>>27)+_+(Y&Z|~Y&$)+1518500249|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=da^T^N^L;ga=aa<<1|aa>>>31;ba=ga+(X<<5|X>>>27)+_+(Y^Z^$)+1859775393|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=ea^U^O^M;ha=aa<<1|aa>>>31;ba=ha+(X<<5|X>>>27)+_+(Y^Z^$)+1859775393|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=fa^V^P^N;ia=aa<<1|aa>>>31;ba=ia+(X<<5|X>>>27)+_+(Y^Z^$)+1859775393|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=ga^W^Q^O;ja=aa<<1|aa>>>31;ba=ja+(X<<5|X>>>27)+_+(Y^Z^$)+1859775393|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=ha^ca^R^P;ka=aa<<1|aa>>>31;ba=ka+(X<<5|X>>>27)+_+(Y^Z^$)+1859775393|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=ia^da^S^Q;la=aa<<1|aa>>>31;ba=la+(X<<5|X>>>27)+_+(Y^Z^$)+1859775393|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=ja^ea^T^R;ma=aa<<1|aa>>>31;ba=ma+(X<<5|X>>>27)+_+(Y^Z^$)+1859775393|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=ka^fa^U^S;na=aa<<1|aa>>>31;ba=na+(X<<5|X>>>27)+_+(Y^Z^$)+1859775393|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=la^ga^V^T;oa=aa<<1|aa>>>31;ba=oa+(X<<5|X>>>27)+_+(Y^Z^$)+1859775393|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=ma^ha^W^U;pa=aa<<1|aa>>>31;ba=pa+(X<<5|X>>>27)+_+(Y^Z^$)+1859775393|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=na^ia^ca^V;qa=aa<<1|aa>>>31;ba=qa+(X<<5|X>>>27)+_+(Y^Z^$)+1859775393|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=oa^ja^da^W;ra=aa<<1|aa>>>31;ba=ra+(X<<5|X>>>27)+_+(Y^Z^$)+1859775393|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=pa^ka^ea^ca;sa=aa<<1|aa>>>31;ba=sa+(X<<5|X>>>27)+_+(Y^Z^$)+1859775393|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=qa^la^fa^da;ta=aa<<1|aa>>>31;ba=ta+(X<<5|X>>>27)+_+(Y^Z^$)+1859775393|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=ra^ma^ga^ea;ua=aa<<1|aa>>>31;ba=ua+(X<<5|X>>>27)+_+(Y^Z^$)+1859775393|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=sa^na^ha^fa;va=aa<<1|aa>>>31;ba=va+(X<<5|X>>>27)+_+(Y^Z^$)+1859775393|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=ta^oa^ia^ga;wa=aa<<1|aa>>>31;ba=wa+(X<<5|X>>>27)+_+(Y^Z^$)+1859775393|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=ua^pa^ja^ha;xa=aa<<1|aa>>>31;ba=xa+(X<<5|X>>>27)+_+(Y^Z^$)+1859775393|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=va^qa^ka^ia;ya=aa<<1|aa>>>31;ba=ya+(X<<5|X>>>27)+_+(Y^Z^$)+1859775393|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=wa^ra^la^ja;za=aa<<1|aa>>>31;ba=za+(X<<5|X>>>27)+_+(Y^Z^$)+1859775393|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=xa^sa^ma^ka;Aa=aa<<1|aa>>>31;ba=Aa+(X<<5|X>>>27)+_+(Y&Z|Y&$|Z&$)-1894007588|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=ya^ta^na^la;Ba=aa<<1|aa>>>31;ba=Ba+(X<<5|X>>>27)+_+(Y&Z|Y&$|Z&$)-1894007588|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=za^ua^oa^ma;Ca=aa<<1|aa>>>31;ba=Ca+(X<<5|X>>>27)+_+(Y&Z|Y&$|Z&$)-1894007588|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=Aa^va^pa^na;Da=aa<<1|aa>>>31;ba=Da+(X<<5|X>>>27)+_+(Y&Z|Y&$|Z&$)-1894007588|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=Ba^wa^qa^oa;Ea=aa<<1|aa>>>31;ba=Ea+(X<<5|X>>>27)+_+(Y&Z|Y&$|Z&$)-1894007588|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=Ca^xa^ra^pa;Fa=aa<<1|aa>>>31;ba=Fa+(X<<5|X>>>27)+_+(Y&Z|Y&$|Z&$)-1894007588|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=Da^ya^sa^qa;Ga=aa<<1|aa>>>31;ba=Ga+(X<<5|X>>>27)+_+(Y&Z|Y&$|Z&$)-1894007588|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=Ea^za^ta^ra;Ha=aa<<1|aa>>>31;ba=Ha+(X<<5|X>>>27)+_+(Y&Z|Y&$|Z&$)-1894007588|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=Fa^Aa^ua^sa;Ia=aa<<1|aa>>>31;ba=Ia+(X<<5|X>>>27)+_+(Y&Z|Y&$|Z&$)-1894007588|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=Ga^Ba^va^ta;Ja=aa<<1|aa>>>31;ba=Ja+(X<<5|X>>>27)+_+(Y&Z|Y&$|Z&$)-1894007588|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=Ha^Ca^wa^ua;Ka=aa<<1|aa>>>31;ba=Ka+(X<<5|X>>>27)+_+(Y&Z|Y&$|Z&$)-1894007588|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=Ia^Da^xa^va;La=aa<<1|aa>>>31;ba=La+(X<<5|X>>>27)+_+(Y&Z|Y&$|Z&$)-1894007588|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=Ja^Ea^ya^wa;Ma=aa<<1|aa>>>31;ba=Ma+(X<<5|X>>>27)+_+(Y&Z|Y&$|Z&$)-1894007588|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=Ka^Fa^za^xa;Na=aa<<1|aa>>>31;ba=Na+(X<<5|X>>>27)+_+(Y&Z|Y&$|Z&$)-1894007588|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=La^Ga^Aa^ya;Oa=aa<<1|aa>>>31;ba=Oa+(X<<5|X>>>27)+_+(Y&Z|Y&$|Z&$)-1894007588|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=Ma^Ha^Ba^za;Pa=aa<<1|aa>>>31;ba=Pa+(X<<5|X>>>27)+_+(Y&Z|Y&$|Z&$)-1894007588|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=Na^Ia^Ca^Aa;Qa=aa<<1|aa>>>31;ba=Qa+(X<<5|X>>>27)+_+(Y&Z|Y&$|Z&$)-1894007588|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=Oa^Ja^Da^Ba;Ra=aa<<1|aa>>>31;ba=Ra+(X<<5|X>>>27)+_+(Y&Z|Y&$|Z&$)-1894007588|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=Pa^Ka^Ea^Ca;Sa=aa<<1|aa>>>31;ba=Sa+(X<<5|X>>>27)+_+(Y&Z|Y&$|Z&$)-1894007588|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=Qa^La^Fa^Da;Ta=aa<<1|aa>>>31;ba=Ta+(X<<5|X>>>27)+_+(Y&Z|Y&$|Z&$)-1894007588|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=Ra^Ma^Ga^Ea;Ua=aa<<1|aa>>>31;ba=Ua+(X<<5|X>>>27)+_+(Y^Z^$)-899497514|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=Sa^Na^Ha^Fa;Va=aa<<1|aa>>>31;ba=Va+(X<<5|X>>>27)+_+(Y^Z^$)-899497514|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=Ta^Oa^Ia^Ga;Wa=aa<<1|aa>>>31;ba=Wa+(X<<5|X>>>27)+_+(Y^Z^$)-899497514|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=Ua^Pa^Ja^Ha;Xa=aa<<1|aa>>>31;ba=Xa+(X<<5|X>>>27)+_+(Y^Z^$)-899497514|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=Va^Qa^Ka^Ia;Ya=aa<<1|aa>>>31;ba=Ya+(X<<5|X>>>27)+_+(Y^Z^$)-899497514|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=Wa^Ra^La^Ja;Za=aa<<1|aa>>>31;ba=Za+(X<<5|X>>>27)+_+(Y^Z^$)-899497514|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=Xa^Sa^Ma^Ka;$a=aa<<1|aa>>>31;ba=$a+(X<<5|X>>>27)+_+(Y^Z^$)-899497514|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=Ya^Ta^Na^La;_a=aa<<1|aa>>>31;ba=_a+(X<<5|X>>>27)+_+(Y^Z^$)-899497514|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=Za^Ua^Oa^Ma;ab=aa<<1|aa>>>31;ba=ab+(X<<5|X>>>27)+_+(Y^Z^$)-899497514|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=$a^Va^Pa^Na;bb=aa<<1|aa>>>31;ba=bb+(X<<5|X>>>27)+_+(Y^Z^$)-899497514|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=_a^Wa^Qa^Oa;cb=aa<<1|aa>>>31;ba=cb+(X<<5|X>>>27)+_+(Y^Z^$)-899497514|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=ab^Xa^Ra^Pa;db=aa<<1|aa>>>31;ba=db+(X<<5|X>>>27)+_+(Y^Z^$)-899497514|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=bb^Ya^Sa^Qa;eb=aa<<1|aa>>>31;ba=eb+(X<<5|X>>>27)+_+(Y^Z^$)-899497514|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=cb^Za^Ta^Ra;fb=aa<<1|aa>>>31;ba=fb+(X<<5|X>>>27)+_+(Y^Z^$)-899497514|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=db^$a^Ua^Sa;gb=aa<<1|aa>>>31;ba=gb+(X<<5|X>>>27)+_+(Y^Z^$)-899497514|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=eb^_a^Va^Ta;hb=aa<<1|aa>>>31;ba=hb+(X<<5|X>>>27)+_+(Y^Z^$)-899497514|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=fb^ab^Wa^Ua;ib=aa<<1|aa>>>31;ba=ib+(X<<5|X>>>27)+_+(Y^Z^$)-899497514|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=gb^bb^Xa^Va;jb=aa<<1|aa>>>31;ba=jb+(X<<5|X>>>27)+_+(Y^Z^$)-899497514|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=hb^cb^Ya^Wa;kb=aa<<1|aa>>>31;ba=kb+(X<<5|X>>>27)+_+(Y^Z^$)-899497514|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;aa=ib^db^Za^Xa;lb=aa<<1|aa>>>31;ba=lb+(X<<5|X>>>27)+_+(Y^Z^$)-899497514|0;_=$;$=Z;Z=Y<<30|Y>>>2;Y=X;X=ba;d=d+X|0;e=e+Y|0;f=f+Z|0;g=g+$|0;h=h+_|0}function w(H){H=H|0;v(u[H|0]<<24|u[H|1]<<16|u[H|2]<<8|u[H|3],u[H|4]<<24|u[H|5]<<16|u[H|6]<<8|u[H|7],u[H|8]<<24|u[H|9]<<16|u[H|10]<<8|u[H|11],u[H|12]<<24|u[H|13]<<16|u[H|14]<<8|u[H|15],u[H|16]<<24|u[H|17]<<16|u[H|18]<<8|u[H|19],u[H|20]<<24|u[H|21]<<16|u[H|22]<<8|u[H|23],u[H|24]<<24|u[H|25]<<16|u[H|26]<<8|u[H|27],u[H|28]<<24|u[H|29]<<16|u[H|30]<<8|u[H|31],u[H|32]<<24|u[H|33]<<16|u[H|34]<<8|u[H|35],u[H|36]<<24|u[H|37]<<16|u[H|38]<<8|u[H|39],u[H|40]<<24|u[H|41]<<16|u[H|42]<<8|u[H|43],u[H|44]<<24|u[H|45]<<16|u[H|46]<<8|u[H|47],u[H|48]<<24|u[H|49]<<16|u[H|50]<<8|u[H|51],u[H|52]<<24|u[H|53]<<16|u[H|54]<<8|u[H|55],u[H|56]<<24|u[H|57]<<16|u[H|58]<<8|u[H|59],u[H|60]<<24|u[H|61]<<16|u[H|62]<<8|u[H|63])}function x(H){H=H|0;u[H|0]=d>>>24;u[H|1]=d>>>16&255;u[H|2]=d>>>8&255;u[H|3]=d&255;u[H|4]=e>>>24;u[H|5]=e>>>16&255;u[H|6]=e>>>8&255;u[H|7]=e&255;u[H|8]=f>>>24;u[H|9]=f>>>16&255;u[H|10]=f>>>8&255;u[H|11]=f&255;u[H|12]=g>>>24;u[H|13]=g>>>16&255;u[H|14]=g>>>8&255;u[H|15]=g&255;u[H|16]=h>>>24;u[H|17]=h>>>16&255;u[H|18]=h>>>8&255;u[H|19]=h&255}function y(){d=1732584193;e=4023233417;f=2562383102;g=271733878;h=3285377520;i=j=0}function z(H,I,J,K,L,M,N){H=H|0;I=I|0;J=J|0;K=K|0;L=L|0;M=M|0;N=N|0;d=H;e=I;f=J;g=K;h=L;i=M;j=N}function A(H,I){H=H|0;I=I|0;var J=0;if(H&63)return-1;while((I|0)>=64){w(H);H=H+64|0;I=I-64|0;J=J+64|0}i=i+J|0;if(i>>>0<J>>>0)j=j+1|0;return J|0}function B(H,I,J){H=H|0;I=I|0;J=J|0;var K=0,L=0;if(H&63)return-1;if(~J)if(J&31)return-1;if((I|0)>=64){K=A(H,I)|0;if((K|0)==-1)return-1;H=H+K|0;I=I-K|0}K=K+I|0;i=i+I|0;if(i>>>0<I>>>0)j=j+1|0;u[H|I]=128;if((I|0)>=56){for(L=I+1|0;(L|0)<64;L=L+1|0)u[H|L]=0;w(H);I=0;u[H|0]=0}for(L=I+1|0;(L|0)<59;L=L+1|0)u[H|L]=0;u[H|56]=j>>>21&255;u[H|57]=j>>>13&255;u[H|58]=j>>>5&255;u[H|59]=j<<3&255|i>>>29;u[H|60]=i>>>21&255;u[H|61]=i>>>13&255;u[H|62]=i>>>5&255;u[H|63]=i<<3&255;w(H);if(~J)x(J);return K|0}function C(){d=k;e=l;f=m;g=n;h=o;i=64;j=0}function D(){d=p;e=q;f=r;g=s;h=t;i=64;j=0}function E(H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W){H=H|0;I=I|0;J=J|0;K=K|0;L=L|0;M=M|0;N=N|0;O=O|0;P=P|0;Q=Q|0;R=R|0;S=S|0;T=T|0;U=U|0;V=V|0;W=W|0;y();v(H^1549556828,I^1549556828,J^1549556828,K^1549556828,L^1549556828,M^1549556828,N^1549556828,O^1549556828,P^1549556828,Q^1549556828,R^1549556828,S^1549556828,T^1549556828,U^1549556828,V^1549556828,W^1549556828);p=d;q=e;r=f;s=g;t=h;y();v(H^909522486,I^909522486,J^909522486,K^909522486,L^909522486,M^909522486,N^909522486,O^909522486,P^909522486,Q^909522486,R^909522486,S^909522486,T^909522486,U^909522486,V^909522486,W^909522486);k=d;l=e;m=f;n=g;o=h;i=64;j=0}function F(H,I,J){H=H|0;I=I|0;J=J|0;var K=0,L=0,M=0,N=0,O=0,P=0;if(H&63)return-1;if(~J)if(J&31)return-1;P=B(H,I,-1)|0;K=d,L=e,M=f,N=g,O=h;D();v(K,L,M,N,O,2147483648,0,0,0,0,0,0,0,0,0,672);if(~J)x(J);return P|0}function G(H,I,J,K,L){H=H|0;I=I|0;J=J|0;K=K|0;L=L|0;var M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0;if(H&63)return-1;if(~L)if(L&31)return-1;u[H+I|0]=J>>>24;u[H+I+1|0]=J>>>16&255;u[H+I+2|0]=J>>>8&255;u[H+I+3|0]=J&255;F(H,I+4|0,-1)|0;M=R=d,N=S=e,O=T=f,P=U=g,Q=V=h;K=K-1|0;while((K|0)>0){C();v(R,S,T,U,V,2147483648,0,0,0,0,0,0,0,0,0,672);R=d,S=e,T=f,U=g,V=h;D();v(R,S,T,U,V,2147483648,0,0,0,0,0,0,0,0,0,672);R=d,S=e,T=f,U=g,V=h;M=M^d;N=N^e;O=O^f;P=P^g;Q=Q^h;K=K-1|0}d=M;e=N;f=O;g=P;h=Q;if(~L)x(L);return 0}return{reset:y,init:z,process:A,finish:B,hmac_reset:C,hmac_init:E,hmac_finish:F,pbkdf2_generate_block:G}}function aa(a){a=a||{},this.heap=r(Uint8Array,a),this.asm=a.asm||_({Uint8Array:Uint8Array},null,this.heap.buffer),this.BLOCK_SIZE=hc,this.HASH_SIZE=ic,this.reset()}function ba(){return null===kc&&(kc=new aa({heapSize:1048576})),kc}function ca(a){if(void 0===a)throw new SyntaxError(\"data required\");return ba().reset().process(a).finish().result}function da(a){var b=ca(a);return j(b)}function ea(a){var b=ca(a);return k(b)}function fa(a,b,c){\"use asm\";var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0;var n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;var D=new a.Uint8Array(c);function E(Q,R,S,T,U,V,W,X,Y,Z,$,_,aa,ba,ca,da){Q=Q|0;R=R|0;S=S|0;T=T|0;U=U|0;V=V|0;W=W|0;X=X|0;Y=Y|0;Z=Z|0;$=$|0;_=_|0;aa=aa|0;ba=ba|0;ca=ca|0;da=da|0;var ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0;ea=d;fa=e;ga=f;ha=g;ia=h;ja=i;ka=j;la=k;ma=Q+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+1116352408|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;ma=R+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+1899447441|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;ma=S+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+3049323471|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;ma=T+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+3921009573|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;ma=U+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+961987163|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;ma=V+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+1508970993|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;ma=W+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+2453635748|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;ma=X+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+2870763221|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;ma=Y+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+3624381080|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;ma=Z+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+310598401|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;ma=$+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+607225278|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;ma=_+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+1426881987|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;ma=aa+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+1925078388|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;ma=ba+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+2162078206|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;ma=ca+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+2614888103|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;ma=da+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+3248222580|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;Q=ma=(R>>>7^R>>>18^R>>>3^R<<25^R<<14)+(ca>>>17^ca>>>19^ca>>>10^ca<<15^ca<<13)+Q+Z|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+3835390401|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;R=ma=(S>>>7^S>>>18^S>>>3^S<<25^S<<14)+(da>>>17^da>>>19^da>>>10^da<<15^da<<13)+R+$|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+4022224774|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;S=ma=(T>>>7^T>>>18^T>>>3^T<<25^T<<14)+(Q>>>17^Q>>>19^Q>>>10^Q<<15^Q<<13)+S+_|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+264347078|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;T=ma=(U>>>7^U>>>18^U>>>3^U<<25^U<<14)+(R>>>17^R>>>19^R>>>10^R<<15^R<<13)+T+aa|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+604807628|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;U=ma=(V>>>7^V>>>18^V>>>3^V<<25^V<<14)+(S>>>17^S>>>19^S>>>10^S<<15^S<<13)+U+ba|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+770255983|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;V=ma=(W>>>7^W>>>18^W>>>3^W<<25^W<<14)+(T>>>17^T>>>19^T>>>10^T<<15^T<<13)+V+ca|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+1249150122|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;W=ma=(X>>>7^X>>>18^X>>>3^X<<25^X<<14)+(U>>>17^U>>>19^U>>>10^U<<15^U<<13)+W+da|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+1555081692|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;X=ma=(Y>>>7^Y>>>18^Y>>>3^Y<<25^Y<<14)+(V>>>17^V>>>19^V>>>10^V<<15^V<<13)+X+Q|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+1996064986|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;Y=ma=(Z>>>7^Z>>>18^Z>>>3^Z<<25^Z<<14)+(W>>>17^W>>>19^W>>>10^W<<15^W<<13)+Y+R|0;\n" +
              "\n" +
              "ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+2554220882|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;Z=ma=($>>>7^$>>>18^$>>>3^$<<25^$<<14)+(X>>>17^X>>>19^X>>>10^X<<15^X<<13)+Z+S|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+2821834349|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;$=ma=(_>>>7^_>>>18^_>>>3^_<<25^_<<14)+(Y>>>17^Y>>>19^Y>>>10^Y<<15^Y<<13)+$+T|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+2952996808|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;_=ma=(aa>>>7^aa>>>18^aa>>>3^aa<<25^aa<<14)+(Z>>>17^Z>>>19^Z>>>10^Z<<15^Z<<13)+_+U|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+3210313671|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;aa=ma=(ba>>>7^ba>>>18^ba>>>3^ba<<25^ba<<14)+($>>>17^$>>>19^$>>>10^$<<15^$<<13)+aa+V|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+3336571891|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;ba=ma=(ca>>>7^ca>>>18^ca>>>3^ca<<25^ca<<14)+(_>>>17^_>>>19^_>>>10^_<<15^_<<13)+ba+W|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+3584528711|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;ca=ma=(da>>>7^da>>>18^da>>>3^da<<25^da<<14)+(aa>>>17^aa>>>19^aa>>>10^aa<<15^aa<<13)+ca+X|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+113926993|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;da=ma=(Q>>>7^Q>>>18^Q>>>3^Q<<25^Q<<14)+(ba>>>17^ba>>>19^ba>>>10^ba<<15^ba<<13)+da+Y|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+338241895|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;Q=ma=(R>>>7^R>>>18^R>>>3^R<<25^R<<14)+(ca>>>17^ca>>>19^ca>>>10^ca<<15^ca<<13)+Q+Z|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+666307205|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;R=ma=(S>>>7^S>>>18^S>>>3^S<<25^S<<14)+(da>>>17^da>>>19^da>>>10^da<<15^da<<13)+R+$|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+773529912|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;S=ma=(T>>>7^T>>>18^T>>>3^T<<25^T<<14)+(Q>>>17^Q>>>19^Q>>>10^Q<<15^Q<<13)+S+_|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+1294757372|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;T=ma=(U>>>7^U>>>18^U>>>3^U<<25^U<<14)+(R>>>17^R>>>19^R>>>10^R<<15^R<<13)+T+aa|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+1396182291|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;U=ma=(V>>>7^V>>>18^V>>>3^V<<25^V<<14)+(S>>>17^S>>>19^S>>>10^S<<15^S<<13)+U+ba|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+1695183700|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;V=ma=(W>>>7^W>>>18^W>>>3^W<<25^W<<14)+(T>>>17^T>>>19^T>>>10^T<<15^T<<13)+V+ca|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+1986661051|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;W=ma=(X>>>7^X>>>18^X>>>3^X<<25^X<<14)+(U>>>17^U>>>19^U>>>10^U<<15^U<<13)+W+da|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+2177026350|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;X=ma=(Y>>>7^Y>>>18^Y>>>3^Y<<25^Y<<14)+(V>>>17^V>>>19^V>>>10^V<<15^V<<13)+X+Q|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+2456956037|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;Y=ma=(Z>>>7^Z>>>18^Z>>>3^Z<<25^Z<<14)+(W>>>17^W>>>19^W>>>10^W<<15^W<<13)+Y+R|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+2730485921|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;Z=ma=($>>>7^$>>>18^$>>>3^$<<25^$<<14)+(X>>>17^X>>>19^X>>>10^X<<15^X<<13)+Z+S|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+2820302411|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;$=ma=(_>>>7^_>>>18^_>>>3^_<<25^_<<14)+(Y>>>17^Y>>>19^Y>>>10^Y<<15^Y<<13)+$+T|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+3259730800|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;_=ma=(aa>>>7^aa>>>18^aa>>>3^aa<<25^aa<<14)+(Z>>>17^Z>>>19^Z>>>10^Z<<15^Z<<13)+_+U|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+3345764771|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;aa=ma=(ba>>>7^ba>>>18^ba>>>3^ba<<25^ba<<14)+($>>>17^$>>>19^$>>>10^$<<15^$<<13)+aa+V|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+3516065817|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;ba=ma=(ca>>>7^ca>>>18^ca>>>3^ca<<25^ca<<14)+(_>>>17^_>>>19^_>>>10^_<<15^_<<13)+ba+W|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+3600352804|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;ca=ma=(da>>>7^da>>>18^da>>>3^da<<25^da<<14)+(aa>>>17^aa>>>19^aa>>>10^aa<<15^aa<<13)+ca+X|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+4094571909|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;da=ma=(Q>>>7^Q>>>18^Q>>>3^Q<<25^Q<<14)+(ba>>>17^ba>>>19^ba>>>10^ba<<15^ba<<13)+da+Y|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+275423344|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;Q=ma=(R>>>7^R>>>18^R>>>3^R<<25^R<<14)+(ca>>>17^ca>>>19^ca>>>10^ca<<15^ca<<13)+Q+Z|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+430227734|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;R=ma=(S>>>7^S>>>18^S>>>3^S<<25^S<<14)+(da>>>17^da>>>19^da>>>10^da<<15^da<<13)+R+$|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+506948616|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;S=ma=(T>>>7^T>>>18^T>>>3^T<<25^T<<14)+(Q>>>17^Q>>>19^Q>>>10^Q<<15^Q<<13)+S+_|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+659060556|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;T=ma=(U>>>7^U>>>18^U>>>3^U<<25^U<<14)+(R>>>17^R>>>19^R>>>10^R<<15^R<<13)+T+aa|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+883997877|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;U=ma=(V>>>7^V>>>18^V>>>3^V<<25^V<<14)+(S>>>17^S>>>19^S>>>10^S<<15^S<<13)+U+ba|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+958139571|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;V=ma=(W>>>7^W>>>18^W>>>3^W<<25^W<<14)+(T>>>17^T>>>19^T>>>10^T<<15^T<<13)+V+ca|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+1322822218|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;W=ma=(X>>>7^X>>>18^X>>>3^X<<25^X<<14)+(U>>>17^U>>>19^U>>>10^U<<15^U<<13)+W+da|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+1537002063|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;X=ma=(Y>>>7^Y>>>18^Y>>>3^Y<<25^Y<<14)+(V>>>17^V>>>19^V>>>10^V<<15^V<<13)+X+Q|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+1747873779|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;Y=ma=(Z>>>7^Z>>>18^Z>>>3^Z<<25^Z<<14)+(W>>>17^W>>>19^W>>>10^W<<15^W<<13)+Y+R|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+1955562222|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;Z=ma=($>>>7^$>>>18^$>>>3^$<<25^$<<14)+(X>>>17^X>>>19^X>>>10^X<<15^X<<13)+Z+S|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+2024104815|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;$=ma=(_>>>7^_>>>18^_>>>3^_<<25^_<<14)+(Y>>>17^Y>>>19^Y>>>10^Y<<15^Y<<13)+$+T|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+2227730452|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;_=ma=(aa>>>7^aa>>>18^aa>>>3^aa<<25^aa<<14)+(Z>>>17^Z>>>19^Z>>>10^Z<<15^Z<<13)+_+U|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+2361852424|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;aa=ma=(ba>>>7^ba>>>18^ba>>>3^ba<<25^ba<<14)+($>>>17^$>>>19^$>>>10^$<<15^$<<13)+aa+V|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+2428436474|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;ba=ma=(ca>>>7^ca>>>18^ca>>>3^ca<<25^ca<<14)+(_>>>17^_>>>19^_>>>10^_<<15^_<<13)+ba+W|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+2756734187|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;ca=ma=(da>>>7^da>>>18^da>>>3^da<<25^da<<14)+(aa>>>17^aa>>>19^aa>>>10^aa<<15^aa<<13)+ca+X|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+3204031479|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;da=ma=(Q>>>7^Q>>>18^Q>>>3^Q<<25^Q<<14)+(ba>>>17^ba>>>19^ba>>>10^ba<<15^ba<<13)+da+Y|0;ma=ma+la+(ia>>>6^ia>>>11^ia>>>25^ia<<26^ia<<21^ia<<7)+(ka^ia&(ja^ka))+3329325298|0;la=ka;ka=ja;ja=ia;ia=ha+ma|0;ha=ga;ga=fa;fa=ea;ea=ma+(fa&ga^ha&(fa^ga))+(fa>>>2^fa>>>13^fa>>>22^fa<<30^fa<<19^fa<<10)|0;d=d+ea|0;e=e+fa|0;f=f+ga|0;g=g+ha|0;h=h+ia|0;i=i+ja|0;j=j+ka|0;k=k+la|0}function F(Q){Q=Q|0;E(D[Q|0]<<24|D[Q|1]<<16|D[Q|2]<<8|D[Q|3],D[Q|4]<<24|D[Q|5]<<16|D[Q|6]<<8|D[Q|7],D[Q|8]<<24|D[Q|9]<<16|D[Q|10]<<8|D[Q|11],D[Q|12]<<24|D[Q|13]<<16|D[Q|14]<<8|D[Q|15],D[Q|16]<<24|D[Q|17]<<16|D[Q|18]<<8|D[Q|19],D[Q|20]<<24|D[Q|21]<<16|D[Q|22]<<8|D[Q|23],D[Q|24]<<24|D[Q|25]<<16|D[Q|26]<<8|D[Q|27],D[Q|28]<<24|D[Q|29]<<16|D[Q|30]<<8|D[Q|31],D[Q|32]<<24|D[Q|33]<<16|D[Q|34]<<8|D[Q|35],D[Q|36]<<24|D[Q|37]<<16|D[Q|38]<<8|D[Q|39],D[Q|40]<<24|D[Q|41]<<16|D[Q|42]<<8|D[Q|43],D[Q|44]<<24|D[Q|45]<<16|D[Q|46]<<8|D[Q|47],D[Q|48]<<24|D[Q|49]<<16|D[Q|50]<<8|D[Q|51],D[Q|52]<<24|D[Q|53]<<16|D[Q|54]<<8|D[Q|55],D[Q|56]<<24|D[Q|57]<<16|D[Q|58]<<8|D[Q|59],D[Q|60]<<24|D[Q|61]<<16|D[Q|62]<<8|D[Q|63])}function G(Q){Q=Q|0;D[Q|0]=d>>>24;D[Q|1]=d>>>16&255;D[Q|2]=d>>>8&255;D[Q|3]=d&255;D[Q|4]=e>>>24;D[Q|5]=e>>>16&255;D[Q|6]=e>>>8&255;D[Q|7]=e&255;D[Q|8]=f>>>24;D[Q|9]=f>>>16&255;D[Q|10]=f>>>8&255;D[Q|11]=f&255;D[Q|12]=g>>>24;D[Q|13]=g>>>16&255;D[Q|14]=g>>>8&255;D[Q|15]=g&255;D[Q|16]=h>>>24;D[Q|17]=h>>>16&255;D[Q|18]=h>>>8&255;D[Q|19]=h&255;D[Q|20]=i>>>24;D[Q|21]=i>>>16&255;D[Q|22]=i>>>8&255;D[Q|23]=i&255;D[Q|24]=j>>>24;D[Q|25]=j>>>16&255;D[Q|26]=j>>>8&255;D[Q|27]=j&255;D[Q|28]=k>>>24;D[Q|29]=k>>>16&255;D[Q|30]=k>>>8&255;D[Q|31]=k&255}function H(){d=1779033703;e=3144134277;f=1013904242;g=2773480762;h=1359893119;i=2600822924;j=528734635;k=1541459225;l=m=0}function I(Q,R,S,T,U,V,W,X,Y,Z){Q=Q|0;R=R|0;S=S|0;T=T|0;U=U|0;V=V|0;W=W|0;X=X|0;Y=Y|0;Z=Z|0;d=Q;e=R;f=S;g=T;h=U;i=V;j=W;k=X;l=Y;m=Z}function J(Q,R){Q=Q|0;R=R|0;var S=0;if(Q&63)return-1;while((R|0)>=64){F(Q);Q=Q+64|0;R=R-64|0;S=S+64|0}l=l+S|0;if(l>>>0<S>>>0)m=m+1|0;return S|0}function K(Q,R,S){Q=Q|0;R=R|0;S=S|0;var T=0,U=0;if(Q&63)return-1;if(~S)if(S&31)return-1;if((R|0)>=64){T=J(Q,R)|0;if((T|0)==-1)return-1;Q=Q+T|0;R=R-T|0}T=T+R|0;l=l+R|0;if(l>>>0<R>>>0)m=m+1|0;D[Q|R]=128;if((R|0)>=56){for(U=R+1|0;(U|0)<64;U=U+1|0)D[Q|U]=0;F(Q);R=0;D[Q|0]=0}for(U=R+1|0;(U|0)<59;U=U+1|0)D[Q|U]=0;D[Q|56]=m>>>21&255;D[Q|57]=m>>>13&255;D[Q|58]=m>>>5&255;D[Q|59]=m<<3&255|l>>>29;D[Q|60]=l>>>21&255;D[Q|61]=l>>>13&255;D[Q|62]=l>>>5&255;D[Q|63]=l<<3&255;F(Q);if(~S)G(S);return T|0}function L(){d=n;e=o;f=p;g=q;h=r;i=s;j=t;k=u;l=64;m=0}function M(){d=v;e=w;f=x;g=y;h=z;i=A;j=B;k=C;l=64;m=0}function N(Q,R,S,T,U,V,W,X,Y,Z,$,_,aa,ba,ca,da){Q=Q|0;R=R|0;S=S|0;T=T|0;U=U|0;V=V|0;W=W|0;X=X|0;Y=Y|0;Z=Z|0;$=$|0;_=_|0;aa=aa|0;ba=ba|0;ca=ca|0;da=da|0;H();E(Q^1549556828,R^1549556828,S^1549556828,T^1549556828,U^1549556828,V^1549556828,W^1549556828,X^1549556828,Y^1549556828,Z^1549556828,$^1549556828,_^1549556828,aa^1549556828,ba^1549556828,ca^1549556828,da^1549556828);v=d;w=e;x=f;y=g;z=h;A=i;B=j;C=k;H();E(Q^909522486,R^909522486,S^909522486,T^909522486,U^909522486,V^909522486,W^909522486,X^909522486,Y^909522486,Z^909522486,$^909522486,_^909522486,aa^909522486,ba^909522486,ca^909522486,da^909522486);n=d;o=e;p=f;q=g;r=h;s=i;t=j;u=k;l=64;m=0}function O(Q,R,S){Q=Q|0;R=R|0;S=S|0;var T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,$=0,_=0;if(Q&63)return-1;if(~S)if(S&31)return-1;_=K(Q,R,-1)|0;T=d,U=e,V=f,W=g,X=h,Y=i,Z=j,$=k;M();E(T,U,V,W,X,Y,Z,$,2147483648,0,0,0,0,0,0,768);if(~S)G(S);return _|0}function P(Q,R,S,T,U){Q=Q|0;R=R|0;S=S|0;T=T|0;U=U|0;var V=0,W=0,X=0,Y=0,Z=0,$=0,_=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0;if(Q&63)return-1;if(~U)if(U&31)return-1;D[Q+R|0]=S>>>24;D[Q+R+1|0]=S>>>16&255;D[Q+R+2|0]=S>>>8&255;D[Q+R+3|0]=S&255;O(Q,R+4|0,-1)|0;V=ba=d,W=ca=e,X=da=f,Y=ea=g,Z=fa=h,$=ga=i,_=ha=j,aa=ia=k;T=T-1|0;while((T|0)>0){L();E(ba,ca,da,ea,fa,ga,ha,ia,2147483648,0,0,0,0,0,0,768);ba=d,ca=e,da=f,ea=g,fa=h,ga=i,ha=j,ia=k;M();E(ba,ca,da,ea,fa,ga,ha,ia,2147483648,0,0,0,0,0,0,768);ba=d,ca=e,da=f,ea=g,fa=h,ga=i,ha=j,ia=k;V=V^d;W=W^e;X=X^f;Y=Y^g;Z=Z^h;$=$^i;_=_^j;aa=aa^k;T=T-1|0}d=V;e=W;f=X;g=Y;h=Z;i=$;j=_;k=aa;if(~U)G(U);return 0}return{reset:H,init:I,process:J,finish:K,hmac_reset:L,hmac_init:N,hmac_finish:O,pbkdf2_generate_block:P}}function ga(a){a=a||{},this.heap=r(Uint8Array,a),this.asm=a.asm||fa({Uint8Array:Uint8Array},null,this.heap.buffer),this.BLOCK_SIZE=lc,this.HASH_SIZE=mc,this.reset()}function ha(){return null===oc&&(oc=new ga({heapSize:1048576})),oc}function ia(a){if(void 0===a)throw new SyntaxError(\"data required\");return ha().reset().process(a).finish().result}function ja(a){var b=ia(a);return j(b)}function ka(a){var b=ia(a);return k(b)}function la(a){if(a=a||{},!a.hash)throw new SyntaxError(\"option 'hash' is required\");if(!a.hash.HASH_SIZE)throw new SyntaxError(\"option 'hash' supplied doesn't seem to be a valid hash function\");return this.hash=a.hash,this.BLOCK_SIZE=this.hash.BLOCK_SIZE,this.HMAC_SIZE=this.hash.HASH_SIZE,this.key=null,this.verify=null,this.result=null,(void 0!==a.password||void 0!==a.verify)&&this.reset(a),this}function ma(a,b){if(o(b)&&(b=new Uint8Array(b)),n(b)&&(b=f(b)),!p(b))throw new TypeError(\"password isn't of expected type\");var c=new Uint8Array(a.BLOCK_SIZE);return c.set(b.length>a.BLOCK_SIZE?a.reset().process(b).finish().result:b),c}function na(a){if(o(a)||p(a))a=new Uint8Array(a);else{if(!n(a))throw new TypeError(\"verify tag isn't of expected type\");a=f(a)}if(a.length!==this.HMAC_SIZE)throw new d(\"illegal verification tag size\");this.verify=a}function oa(a){a=a||{};var b=a.password;if(null===this.key&&!n(b)&&!b)throw new c(\"no key is associated with the instance\");this.result=null,this.hash.reset(),(b||n(b))&&(this.key=ma(this.hash,b));for(var d=new Uint8Array(this.key),e=0;e<d.length;++e)d[e]^=54;this.hash.process(d);var f=a.verify;return void 0!==f?na.call(this,f):this.verify=null,this}function pa(a){if(null===this.key)throw new c(\"no key is associated with the instance\");if(null!==this.result)throw new c(\"state must be reset before processing new data\");return this.hash.process(a),this}function qa(){if(null===this.key)throw new c(\"no key is associated with the instance\");if(null!==this.result)throw new c(\"state must be reset before processing new data\");for(var a=this.hash.finish().result,b=new Uint8Array(this.key),d=0;d<b.length;++d)b[d]^=92;var e=this.verify,f=this.hash.reset().process(b).process(a).finish().result;if(e)if(e.length===f.length){for(var g=0,d=0;d<e.length;d++)g|=e[d]^f[d];this.result=!g}else this.result=!1;else this.result=f;return this}function ra(a){return a=a||{},a.hash instanceof aa||(a.hash=ba()),la.call(this,a),this}function sa(a){a=a||{},this.result=null,this.hash.reset();var b=a.password;if(void 0!==b){n(b)&&(b=f(b));var c=this.key=ma(this.hash,b);this.hash.reset().asm.hmac_init(c[0]<<24|c[1]<<16|c[2]<<8|c[3],c[4]<<24|c[5]<<16|c[6]<<8|c[7],c[8]<<24|c[9]<<16|c[10]<<8|c[11],c[12]<<24|c[13]<<16|c[14]<<8|c[15],c[16]<<24|c[17]<<16|c[18]<<8|c[19],c[20]<<24|c[21]<<16|c[22]<<8|c[23],c[24]<<24|c[25]<<16|c[26]<<8|c[27],c[28]<<24|c[29]<<16|c[30]<<8|c[31],c[32]<<24|c[33]<<16|c[34]<<8|c[35],c[36]<<24|c[37]<<16|c[38]<<8|c[39],c[40]<<24|c[41]<<16|c[42]<<8|c[43],c[44]<<24|c[45]<<16|c[46]<<8|c[47],c[48]<<24|c[49]<<16|c[50]<<8|c[51],c[52]<<24|c[53]<<16|c[54]<<8|c[55],c[56]<<24|c[57]<<16|c[58]<<8|c[59],c[60]<<24|c[61]<<16|c[62]<<8|c[63])}else this.hash.asm.hmac_reset();var d=a.verify;return void 0!==d?na.call(this,d):this.verify=null,this}function ta(){if(null===this.key)throw new c(\"no key is associated with the instance\");if(null!==this.result)throw new c(\"state must be reset before processing new data\");var a=this.hash,b=this.hash.asm,d=this.hash.heap;b.hmac_finish(a.pos,a.len,0);var e=this.verify,f=new Uint8Array(ic);if(f.set(d.subarray(0,ic)),e)if(e.length===f.length){for(var g=0,h=0;h<e.length;h++)g|=e[h]^f[h];this.result=!g}else this.result=!1;else this.result=f;return this}function ua(){return null===rc&&(rc=new ra),rc}function va(a){return a=a||{},a.hash instanceof ga||(a.hash=ha()),la.call(this,a),this}function wa(a){a=a||{},this.result=null,this.hash.reset();var b=a.password;if(void 0!==b){n(b)&&(b=f(b));var c=this.key=ma(this.hash,b);this.hash.reset().asm.hmac_init(c[0]<<24|c[1]<<16|c[2]<<8|c[3],c[4]<<24|c[5]<<16|c[6]<<8|c[7],c[8]<<24|c[9]<<16|c[10]<<8|c[11],c[12]<<24|c[13]<<16|c[14]<<8|c[15],c[16]<<24|c[17]<<16|c[18]<<8|c[19],c[20]<<24|c[21]<<16|c[22]<<8|c[23],c[24]<<24|c[25]<<16|c[26]<<8|c[27],c[28]<<24|c[29]<<16|c[30]<<8|c[31],c[32]<<24|c[33]<<16|c[34]<<8|c[35],c[36]<<24|c[37]<<16|c[38]<<8|c[39],c[40]<<24|c[41]<<16|c[42]<<8|c[43],c[44]<<24|c[45]<<16|c[46]<<8|c[47],c[48]<<24|c[49]<<16|c[50]<<8|c[51],c[52]<<24|c[53]<<16|c[54]<<8|c[55],c[56]<<24|c[57]<<16|c[58]<<8|c[59],c[60]<<24|c[61]<<16|c[62]<<8|c[63])}else this.hash.asm.hmac_reset();var d=a.verify;return void 0!==d?na.call(this,d):this.verify=null,this}function xa(){if(null===this.key)throw new c(\"no key is associated with the instance\");if(null!==this.result)throw new c(\"state must be reset before processing new data\");var a=this.hash,b=this.hash.asm,d=this.hash.heap;b.hmac_finish(a.pos,a.len,0);var e=this.verify,f=new Uint8Array(mc);if(f.set(d.subarray(0,mc)),e)if(e.length===f.length){for(var g=0,h=0;h<e.length;h++)g|=e[h]^f[h];this.result=!g}else this.result=!1;else this.result=f;return this}function ya(){return null===tc&&(tc=new va),tc}function za(a,b){if(void 0===a)throw new SyntaxError(\"data required\");if(void 0===b)throw new SyntaxError(\"password required\");return ua().reset({password:b}).process(a).finish().result}function Aa(a,b){var c=za(a,b);return j(c)}function Ba(a,b){var c=za(a,b);return k(c)}function Ca(a,b){if(void 0===a)throw new SyntaxError(\"data required\");if(void 0===b)throw new SyntaxError(\"password required\");return ya().reset({password:b}).process(a).finish().result}function Da(a,b){var c=Ca(a,b);return j(c)}function Ea(a,b){var c=Ca(a,b);return k(c)}function Fa(a){if(a=a||{},!a.hmac)throw new SyntaxError(\"option 'hmac' is required\");if(!a.hmac.HMAC_SIZE)throw new SyntaxError(\"option 'hmac' supplied doesn't seem to be a valid HMAC function\");this.hmac=a.hmac,this.count=a.count||4096,this.length=a.length||this.hmac.HMAC_SIZE,this.result=null;var b=a.password;return(b||n(b))&&this.reset(a),this}function Ga(a){return this.result=null,this.hmac.reset(a),this}function Ha(a,b,e){if(null!==this.result)throw new c(\"state must be reset before processing new data\");if(!a&&!n(a))throw new d(\"bad 'salt' value\");b=b||this.count,e=e||this.length,this.result=new Uint8Array(e);for(var f=Math.ceil(e/this.hmac.HMAC_SIZE),g=1;f>=g;++g){var h=(g-1)*this.hmac.HMAC_SIZE,i=(f>g?0:e%this.hmac.HMAC_SIZE)||this.hmac.HMAC_SIZE,j=new Uint8Array(this.hmac.reset().process(a).process(new Uint8Array([g>>>24&255,g>>>16&255,g>>>8&255,255&g])).finish().result);this.result.set(j.subarray(0,i),h);for(var k=1;b>k;++k){j=new Uint8Array(this.hmac.reset().process(j).finish().result);for(var l=0;i>l;++l)this.result[h+l]^=j[l]}}return this}function Ia(a){return a=a||{},a.hmac instanceof ra||(a.hmac=ua()),Fa.call(this,a),this}function Ja(a,b,e){if(null!==this.result)throw new c(\"state must be reset before processing new data\");if(!a&&!n(a))throw new d(\"bad 'salt' value\");b=b||this.count,e=e||this.length,this.result=new Uint8Array(e);for(var f=Math.ceil(e/this.hmac.HMAC_SIZE),g=1;f>=g;++g){var h=(g-1)*this.hmac.HMAC_SIZE,i=(f>g?0:e%this.hmac.HMAC_SIZE)||this.hmac.HMAC_SIZE;this.hmac.reset().process(a),this.hmac.hash.asm.pbkdf2_generate_block(this.hmac.hash.pos,this.hmac.hash.len,g,b,0),this.result.set(this.hmac.hash.heap.subarray(0,i),h)}return this}function Ka(){return null===wc&&(wc=new Ia),wc}function La(a){return a=a||{},a.hmac instanceof va||(a.hmac=ya()),Fa.call(this,a),this}function Ma(a,b,e){if(null!==this.result)throw new c(\"state must be reset before processing new data\");if(!a&&!n(a))throw new d(\"bad 'salt' value\");b=b||this.count,e=e||this.length,this.result=new Uint8Array(e);for(var f=Math.ceil(e/this.hmac.HMAC_SIZE),g=1;f>=g;++g){var h=(g-1)*this.hmac.HMAC_SIZE,i=(f>g?0:e%this.hmac.HMAC_SIZE)||this.hmac.HMAC_SIZE;this.hmac.reset().process(a),this.hmac.hash.asm.pbkdf2_generate_block(this.hmac.hash.pos,this.hmac.hash.len,g,b,0),this.result.set(this.hmac.hash.heap.subarray(0,i),h)}return this}function Na(){return null===yc&&(yc=new La),yc}function Oa(a,b,c,d){if(void 0===a)throw new SyntaxError(\"password required\");if(void 0===b)throw new SyntaxError(\"salt required\");return Ka().reset({password:a}).generate(b,c,d).result}function Pa(a,b,c,d){var e=Oa(a,b,c,d);return j(e)}function Qa(a,b,c,d){var e=Oa(a,b,c,d);return k(e)}function Ra(a,b,c,d){if(void 0===a)throw new SyntaxError(\"password required\");if(void 0===b)throw new SyntaxError(\"salt required\");return Na().reset({password:a}).generate(b,c,d).result}function Sa(a,b,c,d){var e=Ra(a,b,c,d);return j(e)}function Ta(a,b,c,d){var e=Ra(a,b,c,d);return k(e)}function Ua(){if(void 0!==Ec)d=new Uint8Array(32),zc.call(Ec,d),Hc(d);else{var a,c,d=new Ub(3);d[0]=Cc(),d[1]=Bc(),d[2]=Fc(),d=new Uint8Array(d.buffer);var e=\"\";void 0!==b.location?e+=b.location.href:void 0!==b.process&&(e+=b.process.pid+b.process.title);var f=Na();for(a=0;100>a;a++)d=f.reset({password:d}).generate(e,1e3,32).result,c=Fc(),d[0]^=c>>>24,d[1]^=c>>>16,d[2]^=c>>>8,d[3]^=c;Hc(d)}Ic=0,Jc=!0}function Va(a){if(!o(a)&&!q(a))throw new TypeError(\"bad seed type\");var b=a.byteOffset||0,c=a.byteLength||a.length,d=new Uint8Array(a.buffer||a,b,c);Hc(d),Ic=0;for(var e=0,f=0;f<d.length;f++)e|=d[f],d[f]=0;return 0!==e&&(Lc+=4*c),Kc=Lc>=Mc}function Wa(a){if(Jc||Ua(),!Kc&&void 0===Ec){if(!Nc)throw new e(\"No strong PRNGs available. Use asmCrypto.random.seed().\");void 0!==Vb&&Vb.error(\"No strong PRNGs available; your security is greatly lowered. Use asmCrypto.random.seed().\")}if(!Oc&&!Kc&&void 0!==Ec&&void 0!==Vb){var b=(new Error).stack;Pc[b]|=0,Pc[b]++||Vb.warn(\"asmCrypto PRNG not seeded; your security relies on your system PRNG. If this is not acceptable, use asmCrypto.random.seed().\")}if(!o(a)&&!q(a))throw new TypeError(\"unexpected buffer type\");var c,d,f=a.byteOffset||0,g=a.byteLength||a.length,h=new Uint8Array(a.buffer||a,f,g);for(void 0!==Ec&&zc.call(Ec,h),c=0;g>c;c++)0===(3&c)&&(Ic>=1099511627776&&Ua(),d=Gc(),Ic++),h[c]^=d,d>>>=8;return a}function Xa(){(!Jc||Ic>=1099511627776)&&Ua();var a=(1048576*Gc()+(Gc()>>>12))/4503599627370496;return Ic+=2,a}function Ya(a,b,c){\"use asm\";var d=0;var e=new a.Uint32Array(c);var f=a.Math.imul;function g(u){u=u|0;d=u=u+31&-32;return u|0}function h(u){u=u|0;var v=0;v=d;d=v+(u+31&-32)|0;return v|0}function i(u){u=u|0;d=d-(u+31&-32)|0}function j(u,v,w){u=u|0;v=v|0;w=w|0;var x=0;if((v|0)>(w|0)){for(;(x|0)<(u|0);x=x+4|0){e[w+x>>2]=e[v+x>>2]}}else{for(x=u-4|0;(x|0)>=0;x=x-4|0){e[w+x>>2]=e[v+x>>2]}}}function k(u,v,w){u=u|0;v=v|0;w=w|0;var x=0;for(;(x|0)<(u|0);x=x+4|0){e[w+x>>2]=v}}function l(u,v,w,x){u=u|0;v=v|0;w=w|0;x=x|0;var y=0,z=0,A=0,B=0,C=0;if((x|0)<=0)x=v;if((x|0)<(v|0))v=x;z=1;for(;(C|0)<(v|0);C=C+4|0){y=~e[u+C>>2];A=(y&65535)+z|0;B=(y>>>16)+(A>>>16)|0;e[w+C>>2]=B<<16|A&65535;z=B>>>16}for(;(C|0)<(x|0);C=C+4|0){e[w+C>>2]=z-1|0}return z|0}function m(u,v,w,x){u=u|0;v=v|0;w=w|0;x=x|0;var y=0,z=0,A=0;if((v|0)>(x|0)){for(A=v-4|0;(A|0)>=(x|0);A=A-4|0){if(e[u+A>>2]|0)return 1}}else{for(A=x-4|0;(A|0)>=(v|0);A=A-4|0){if(e[w+A>>2]|0)return-1}}for(;(A|0)>=0;A=A-4|0){y=e[u+A>>2]|0,z=e[w+A>>2]|0;if(y>>>0<z>>>0)return-1;if(y>>>0>z>>>0)return 1}return 0}function n(u,v){u=u|0;v=v|0;var w=0;for(w=v-4|0;(w|0)>=0;w=w-4|0){if(e[u+w>>2]|0)return w+4|0}return 0}function o(u,v,w,x,y,z){u=u|0;v=v|0;w=w|0;x=x|0;y=y|0;z=z|0;var A=0,B=0,C=0,D=0,E=0,F=0;if((v|0)<(x|0)){D=u,u=w,w=D;D=v,v=x,x=D}if((z|0)<=0)z=v+4|0;if((z|0)<(x|0))v=x=z;for(;(F|0)<(x|0);F=F+4|0){A=e[u+F>>2]|0;B=e[w+F>>2]|0;D=((A&65535)+(B&65535)|0)+C|0;E=((A>>>16)+(B>>>16)|0)+(D>>>16)|0;e[y+F>>2]=D&65535|E<<16;C=E>>>16}for(;(F|0)<(v|0);F=F+4|0){A=e[u+F>>2]|0;D=(A&65535)+C|0;E=(A>>>16)+(D>>>16)|0;e[y+F>>2]=D&65535|E<<16;C=E>>>16}for(;(F|0)<(z|0);F=F+4|0){e[y+F>>2]=C|0;C=0}return C|0}function p(u,v,w,x,y,z){u=u|0;v=v|0;w=w|0;x=x|0;y=y|0;z=z|0;var A=0,B=0,C=0,D=0,E=0,F=0;if((z|0)<=0)z=(v|0)>(x|0)?v+4|0:x+4|0;if((z|0)<(v|0))v=z;if((z|0)<(x|0))x=z;if((v|0)<(x|0)){for(;(F|0)<(v|0);F=F+4|0){A=e[u+F>>2]|0;B=e[w+F>>2]|0;D=((A&65535)-(B&65535)|0)+C|0;E=((A>>>16)-(B>>>16)|0)+(D>>16)|0;e[y+F>>2]=D&65535|E<<16;C=E>>16}for(;(F|0)<(x|0);F=F+4|0){B=e[w+F>>2]|0;D=C-(B&65535)|0;E=(D>>16)-(B>>>16)|0;e[y+F>>2]=D&65535|E<<16;C=E>>16}}else{for(;(F|0)<(x|0);F=F+4|0){A=e[u+F>>2]|0;B=e[w+F>>2]|0;D=((A&65535)-(B&65535)|0)+C|0;E=((A>>>16)-(B>>>16)|0)+(D>>16)|0;e[y+F>>2]=D&65535|E<<16;C=E>>16}for(;(F|0)<(v|0);F=F+4|0){A=e[u+F>>2]|0;D=(A&65535)+C|0;E=(A>>>16)+(D>>16)|0;e[y+F>>2]=D&65535|E<<16;C=E>>16}}for(;(F|0)<(z|0);F=F+4|0){e[y+F>>2]=C|0}return C|0}function q(u,v,w,x,y,z){u=u|0;v=v|0;w=w|0;x=x|0;y=y|0;z=z|0;var A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,$=0,_=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0;if((v|0)>(x|0)){ua=u,va=v;u=w,v=x;w=ua,x=va}xa=v+x|0;if((z|0)>(xa|0)|(z|0)<=0)z=xa;if((z|0)<(v|0))v=z;if((z|0)<(x|0))x=z;for(;(ya|0)<(v|0);ya=ya+32|0){za=u+ya|0;I=e[(za|0)>>2]|0,J=e[(za|4)>>2]|0,K=e[(za|8)>>2]|0,L=e[(za|12)>>2]|0,M=e[(za|16)>>2]|0,N=e[(za|20)>>2]|0,O=e[(za|24)>>2]|0,P=e[(za|28)>>2]|0,A=I&65535,B=J&65535,C=K&65535,D=L&65535,E=M&65535,F=N&65535,G=O&65535,H=P&65535,I=I>>>16,J=J>>>16,K=K>>>16,L=L>>>16,M=M>>>16,N=N>>>16,O=O>>>16,P=P>>>16;ma=na=oa=pa=qa=ra=sa=ta=0;for(Aa=0;(Aa|0)<(x|0);Aa=Aa+32|0){Ba=w+Aa|0;Ca=y+(ya+Aa|0)|0;Y=e[(Ba|0)>>2]|0,Z=e[(Ba|4)>>2]|0,$=e[(Ba|8)>>2]|0,_=e[(Ba|12)>>2]|0,aa=e[(Ba|16)>>2]|0,ba=e[(Ba|20)>>2]|0,ca=e[(Ba|24)>>2]|0,da=e[(Ba|28)>>2]|0,Q=Y&65535,R=Z&65535,S=$&65535,T=_&65535,U=aa&65535,V=ba&65535,W=ca&65535,X=da&65535,Y=Y>>>16,Z=Z>>>16,$=$>>>16,_=_>>>16,aa=aa>>>16,ba=ba>>>16,ca=ca>>>16,da=da>>>16;ea=e[(Ca|0)>>2]|0,fa=e[(Ca|4)>>2]|0,ga=e[(Ca|8)>>2]|0,ha=e[(Ca|12)>>2]|0,ia=e[(Ca|16)>>2]|0,ja=e[(Ca|20)>>2]|0,ka=e[(Ca|24)>>2]|0,la=e[(Ca|28)>>2]|0;ua=((f(A,Q)|0)+(ma&65535)|0)+(ea&65535)|0;va=((f(I,Q)|0)+(ma>>>16)|0)+(ea>>>16)|0;wa=((f(A,Y)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(I,Y)|0)+(va>>>16)|0)+(wa>>>16)|0;ea=wa<<16|ua&65535;ua=((f(A,R)|0)+(xa&65535)|0)+(fa&65535)|0;va=((f(I,R)|0)+(xa>>>16)|0)+(fa>>>16)|0;wa=((f(A,Z)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(I,Z)|0)+(va>>>16)|0)+(wa>>>16)|0;fa=wa<<16|ua&65535;ua=((f(A,S)|0)+(xa&65535)|0)+(ga&65535)|0;va=((f(I,S)|0)+(xa>>>16)|0)+(ga>>>16)|0;wa=((f(A,$)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(I,$)|0)+(va>>>16)|0)+(wa>>>16)|0;ga=wa<<16|ua&65535;ua=((f(A,T)|0)+(xa&65535)|0)+(ha&65535)|0;va=((f(I,T)|0)+(xa>>>16)|0)+(ha>>>16)|0;wa=((f(A,_)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(I,_)|0)+(va>>>16)|0)+(wa>>>16)|0;ha=wa<<16|ua&65535;ua=((f(A,U)|0)+(xa&65535)|0)+(ia&65535)|0;va=((f(I,U)|0)+(xa>>>16)|0)+(ia>>>16)|0;wa=((f(A,aa)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(I,aa)|0)+(va>>>16)|0)+(wa>>>16)|0;ia=wa<<16|ua&65535;ua=((f(A,V)|0)+(xa&65535)|0)+(ja&65535)|0;va=((f(I,V)|0)+(xa>>>16)|0)+(ja>>>16)|0;wa=((f(A,ba)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(I,ba)|0)+(va>>>16)|0)+(wa>>>16)|0;ja=wa<<16|ua&65535;ua=((f(A,W)|0)+(xa&65535)|0)+(ka&65535)|0;va=((f(I,W)|0)+(xa>>>16)|0)+(ka>>>16)|0;wa=((f(A,ca)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(I,ca)|0)+(va>>>16)|0)+(wa>>>16)|0;ka=wa<<16|ua&65535;ua=((f(A,X)|0)+(xa&65535)|0)+(la&65535)|0;va=((f(I,X)|0)+(xa>>>16)|0)+(la>>>16)|0;wa=((f(A,da)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(I,da)|0)+(va>>>16)|0)+(wa>>>16)|0;la=wa<<16|ua&65535;ma=xa;ua=((f(B,Q)|0)+(na&65535)|0)+(fa&65535)|0;va=((f(J,Q)|0)+(na>>>16)|0)+(fa>>>16)|0;wa=((f(B,Y)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(J,Y)|0)+(va>>>16)|0)+(wa>>>16)|0;fa=wa<<16|ua&65535;ua=((f(B,R)|0)+(xa&65535)|0)+(ga&65535)|0;va=((f(J,R)|0)+(xa>>>16)|0)+(ga>>>16)|0;wa=((f(B,Z)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(J,Z)|0)+(va>>>16)|0)+(wa>>>16)|0;ga=wa<<16|ua&65535;ua=((f(B,S)|0)+(xa&65535)|0)+(ha&65535)|0;va=((f(J,S)|0)+(xa>>>16)|0)+(ha>>>16)|0;wa=((f(B,$)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(J,$)|0)+(va>>>16)|0)+(wa>>>16)|0;ha=wa<<16|ua&65535;ua=((f(B,T)|0)+(xa&65535)|0)+(ia&65535)|0;va=((f(J,T)|0)+(xa>>>16)|0)+(ia>>>16)|0;wa=((f(B,_)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(J,_)|0)+(va>>>16)|0)+(wa>>>16)|0;ia=wa<<16|ua&65535;ua=((f(B,U)|0)+(xa&65535)|0)+(ja&65535)|0;va=((f(J,U)|0)+(xa>>>16)|0)+(ja>>>16)|0;wa=((f(B,aa)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(J,aa)|0)+(va>>>16)|0)+(wa>>>16)|0;ja=wa<<16|ua&65535;ua=((f(B,V)|0)+(xa&65535)|0)+(ka&65535)|0;va=((f(J,V)|0)+(xa>>>16)|0)+(ka>>>16)|0;wa=((f(B,ba)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(J,ba)|0)+(va>>>16)|0)+(wa>>>16)|0;ka=wa<<16|ua&65535;ua=((f(B,W)|0)+(xa&65535)|0)+(la&65535)|0;va=((f(J,W)|0)+(xa>>>16)|0)+(la>>>16)|0;wa=((f(B,ca)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(J,ca)|0)+(va>>>16)|0)+(wa>>>16)|0;la=wa<<16|ua&65535;ua=((f(B,X)|0)+(xa&65535)|0)+(ma&65535)|0;va=((f(J,X)|0)+(xa>>>16)|0)+(ma>>>16)|0;wa=((f(B,da)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(J,da)|0)+(va>>>16)|0)+(wa>>>16)|0;\n" +
              "\n" +
              "ma=wa<<16|ua&65535;na=xa;ua=((f(C,Q)|0)+(oa&65535)|0)+(ga&65535)|0;va=((f(K,Q)|0)+(oa>>>16)|0)+(ga>>>16)|0;wa=((f(C,Y)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(K,Y)|0)+(va>>>16)|0)+(wa>>>16)|0;ga=wa<<16|ua&65535;ua=((f(C,R)|0)+(xa&65535)|0)+(ha&65535)|0;va=((f(K,R)|0)+(xa>>>16)|0)+(ha>>>16)|0;wa=((f(C,Z)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(K,Z)|0)+(va>>>16)|0)+(wa>>>16)|0;ha=wa<<16|ua&65535;ua=((f(C,S)|0)+(xa&65535)|0)+(ia&65535)|0;va=((f(K,S)|0)+(xa>>>16)|0)+(ia>>>16)|0;wa=((f(C,$)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(K,$)|0)+(va>>>16)|0)+(wa>>>16)|0;ia=wa<<16|ua&65535;ua=((f(C,T)|0)+(xa&65535)|0)+(ja&65535)|0;va=((f(K,T)|0)+(xa>>>16)|0)+(ja>>>16)|0;wa=((f(C,_)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(K,_)|0)+(va>>>16)|0)+(wa>>>16)|0;ja=wa<<16|ua&65535;ua=((f(C,U)|0)+(xa&65535)|0)+(ka&65535)|0;va=((f(K,U)|0)+(xa>>>16)|0)+(ka>>>16)|0;wa=((f(C,aa)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(K,aa)|0)+(va>>>16)|0)+(wa>>>16)|0;ka=wa<<16|ua&65535;ua=((f(C,V)|0)+(xa&65535)|0)+(la&65535)|0;va=((f(K,V)|0)+(xa>>>16)|0)+(la>>>16)|0;wa=((f(C,ba)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(K,ba)|0)+(va>>>16)|0)+(wa>>>16)|0;la=wa<<16|ua&65535;ua=((f(C,W)|0)+(xa&65535)|0)+(ma&65535)|0;va=((f(K,W)|0)+(xa>>>16)|0)+(ma>>>16)|0;wa=((f(C,ca)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(K,ca)|0)+(va>>>16)|0)+(wa>>>16)|0;ma=wa<<16|ua&65535;ua=((f(C,X)|0)+(xa&65535)|0)+(na&65535)|0;va=((f(K,X)|0)+(xa>>>16)|0)+(na>>>16)|0;wa=((f(C,da)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(K,da)|0)+(va>>>16)|0)+(wa>>>16)|0;na=wa<<16|ua&65535;oa=xa;ua=((f(D,Q)|0)+(pa&65535)|0)+(ha&65535)|0;va=((f(L,Q)|0)+(pa>>>16)|0)+(ha>>>16)|0;wa=((f(D,Y)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(L,Y)|0)+(va>>>16)|0)+(wa>>>16)|0;ha=wa<<16|ua&65535;ua=((f(D,R)|0)+(xa&65535)|0)+(ia&65535)|0;va=((f(L,R)|0)+(xa>>>16)|0)+(ia>>>16)|0;wa=((f(D,Z)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(L,Z)|0)+(va>>>16)|0)+(wa>>>16)|0;ia=wa<<16|ua&65535;ua=((f(D,S)|0)+(xa&65535)|0)+(ja&65535)|0;va=((f(L,S)|0)+(xa>>>16)|0)+(ja>>>16)|0;wa=((f(D,$)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(L,$)|0)+(va>>>16)|0)+(wa>>>16)|0;ja=wa<<16|ua&65535;ua=((f(D,T)|0)+(xa&65535)|0)+(ka&65535)|0;va=((f(L,T)|0)+(xa>>>16)|0)+(ka>>>16)|0;wa=((f(D,_)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(L,_)|0)+(va>>>16)|0)+(wa>>>16)|0;ka=wa<<16|ua&65535;ua=((f(D,U)|0)+(xa&65535)|0)+(la&65535)|0;va=((f(L,U)|0)+(xa>>>16)|0)+(la>>>16)|0;wa=((f(D,aa)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(L,aa)|0)+(va>>>16)|0)+(wa>>>16)|0;la=wa<<16|ua&65535;ua=((f(D,V)|0)+(xa&65535)|0)+(ma&65535)|0;va=((f(L,V)|0)+(xa>>>16)|0)+(ma>>>16)|0;wa=((f(D,ba)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(L,ba)|0)+(va>>>16)|0)+(wa>>>16)|0;ma=wa<<16|ua&65535;ua=((f(D,W)|0)+(xa&65535)|0)+(na&65535)|0;va=((f(L,W)|0)+(xa>>>16)|0)+(na>>>16)|0;wa=((f(D,ca)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(L,ca)|0)+(va>>>16)|0)+(wa>>>16)|0;na=wa<<16|ua&65535;ua=((f(D,X)|0)+(xa&65535)|0)+(oa&65535)|0;va=((f(L,X)|0)+(xa>>>16)|0)+(oa>>>16)|0;wa=((f(D,da)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(L,da)|0)+(va>>>16)|0)+(wa>>>16)|0;oa=wa<<16|ua&65535;pa=xa;ua=((f(E,Q)|0)+(qa&65535)|0)+(ia&65535)|0;va=((f(M,Q)|0)+(qa>>>16)|0)+(ia>>>16)|0;wa=((f(E,Y)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(M,Y)|0)+(va>>>16)|0)+(wa>>>16)|0;ia=wa<<16|ua&65535;ua=((f(E,R)|0)+(xa&65535)|0)+(ja&65535)|0;va=((f(M,R)|0)+(xa>>>16)|0)+(ja>>>16)|0;wa=((f(E,Z)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(M,Z)|0)+(va>>>16)|0)+(wa>>>16)|0;ja=wa<<16|ua&65535;ua=((f(E,S)|0)+(xa&65535)|0)+(ka&65535)|0;va=((f(M,S)|0)+(xa>>>16)|0)+(ka>>>16)|0;wa=((f(E,$)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(M,$)|0)+(va>>>16)|0)+(wa>>>16)|0;ka=wa<<16|ua&65535;ua=((f(E,T)|0)+(xa&65535)|0)+(la&65535)|0;va=((f(M,T)|0)+(xa>>>16)|0)+(la>>>16)|0;wa=((f(E,_)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(M,_)|0)+(va>>>16)|0)+(wa>>>16)|0;la=wa<<16|ua&65535;ua=((f(E,U)|0)+(xa&65535)|0)+(ma&65535)|0;va=((f(M,U)|0)+(xa>>>16)|0)+(ma>>>16)|0;wa=((f(E,aa)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(M,aa)|0)+(va>>>16)|0)+(wa>>>16)|0;ma=wa<<16|ua&65535;ua=((f(E,V)|0)+(xa&65535)|0)+(na&65535)|0;va=((f(M,V)|0)+(xa>>>16)|0)+(na>>>16)|0;wa=((f(E,ba)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(M,ba)|0)+(va>>>16)|0)+(wa>>>16)|0;na=wa<<16|ua&65535;ua=((f(E,W)|0)+(xa&65535)|0)+(oa&65535)|0;va=((f(M,W)|0)+(xa>>>16)|0)+(oa>>>16)|0;wa=((f(E,ca)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(M,ca)|0)+(va>>>16)|0)+(wa>>>16)|0;oa=wa<<16|ua&65535;ua=((f(E,X)|0)+(xa&65535)|0)+(pa&65535)|0;va=((f(M,X)|0)+(xa>>>16)|0)+(pa>>>16)|0;wa=((f(E,da)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(M,da)|0)+(va>>>16)|0)+(wa>>>16)|0;pa=wa<<16|ua&65535;qa=xa;ua=((f(F,Q)|0)+(ra&65535)|0)+(ja&65535)|0;va=((f(N,Q)|0)+(ra>>>16)|0)+(ja>>>16)|0;wa=((f(F,Y)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(N,Y)|0)+(va>>>16)|0)+(wa>>>16)|0;ja=wa<<16|ua&65535;ua=((f(F,R)|0)+(xa&65535)|0)+(ka&65535)|0;va=((f(N,R)|0)+(xa>>>16)|0)+(ka>>>16)|0;wa=((f(F,Z)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(N,Z)|0)+(va>>>16)|0)+(wa>>>16)|0;ka=wa<<16|ua&65535;ua=((f(F,S)|0)+(xa&65535)|0)+(la&65535)|0;va=((f(N,S)|0)+(xa>>>16)|0)+(la>>>16)|0;wa=((f(F,$)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(N,$)|0)+(va>>>16)|0)+(wa>>>16)|0;la=wa<<16|ua&65535;ua=((f(F,T)|0)+(xa&65535)|0)+(ma&65535)|0;va=((f(N,T)|0)+(xa>>>16)|0)+(ma>>>16)|0;wa=((f(F,_)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(N,_)|0)+(va>>>16)|0)+(wa>>>16)|0;ma=wa<<16|ua&65535;ua=((f(F,U)|0)+(xa&65535)|0)+(na&65535)|0;va=((f(N,U)|0)+(xa>>>16)|0)+(na>>>16)|0;wa=((f(F,aa)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(N,aa)|0)+(va>>>16)|0)+(wa>>>16)|0;na=wa<<16|ua&65535;ua=((f(F,V)|0)+(xa&65535)|0)+(oa&65535)|0;va=((f(N,V)|0)+(xa>>>16)|0)+(oa>>>16)|0;wa=((f(F,ba)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(N,ba)|0)+(va>>>16)|0)+(wa>>>16)|0;oa=wa<<16|ua&65535;ua=((f(F,W)|0)+(xa&65535)|0)+(pa&65535)|0;va=((f(N,W)|0)+(xa>>>16)|0)+(pa>>>16)|0;wa=((f(F,ca)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(N,ca)|0)+(va>>>16)|0)+(wa>>>16)|0;pa=wa<<16|ua&65535;ua=((f(F,X)|0)+(xa&65535)|0)+(qa&65535)|0;va=((f(N,X)|0)+(xa>>>16)|0)+(qa>>>16)|0;wa=((f(F,da)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(N,da)|0)+(va>>>16)|0)+(wa>>>16)|0;qa=wa<<16|ua&65535;ra=xa;ua=((f(G,Q)|0)+(sa&65535)|0)+(ka&65535)|0;va=((f(O,Q)|0)+(sa>>>16)|0)+(ka>>>16)|0;wa=((f(G,Y)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(O,Y)|0)+(va>>>16)|0)+(wa>>>16)|0;ka=wa<<16|ua&65535;ua=((f(G,R)|0)+(xa&65535)|0)+(la&65535)|0;va=((f(O,R)|0)+(xa>>>16)|0)+(la>>>16)|0;wa=((f(G,Z)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(O,Z)|0)+(va>>>16)|0)+(wa>>>16)|0;la=wa<<16|ua&65535;ua=((f(G,S)|0)+(xa&65535)|0)+(ma&65535)|0;va=((f(O,S)|0)+(xa>>>16)|0)+(ma>>>16)|0;wa=((f(G,$)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(O,$)|0)+(va>>>16)|0)+(wa>>>16)|0;ma=wa<<16|ua&65535;ua=((f(G,T)|0)+(xa&65535)|0)+(na&65535)|0;va=((f(O,T)|0)+(xa>>>16)|0)+(na>>>16)|0;wa=((f(G,_)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(O,_)|0)+(va>>>16)|0)+(wa>>>16)|0;na=wa<<16|ua&65535;ua=((f(G,U)|0)+(xa&65535)|0)+(oa&65535)|0;va=((f(O,U)|0)+(xa>>>16)|0)+(oa>>>16)|0;wa=((f(G,aa)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(O,aa)|0)+(va>>>16)|0)+(wa>>>16)|0;oa=wa<<16|ua&65535;ua=((f(G,V)|0)+(xa&65535)|0)+(pa&65535)|0;va=((f(O,V)|0)+(xa>>>16)|0)+(pa>>>16)|0;wa=((f(G,ba)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(O,ba)|0)+(va>>>16)|0)+(wa>>>16)|0;pa=wa<<16|ua&65535;ua=((f(G,W)|0)+(xa&65535)|0)+(qa&65535)|0;va=((f(O,W)|0)+(xa>>>16)|0)+(qa>>>16)|0;wa=((f(G,ca)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(O,ca)|0)+(va>>>16)|0)+(wa>>>16)|0;qa=wa<<16|ua&65535;ua=((f(G,X)|0)+(xa&65535)|0)+(ra&65535)|0;va=((f(O,X)|0)+(xa>>>16)|0)+(ra>>>16)|0;wa=((f(G,da)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(O,da)|0)+(va>>>16)|0)+(wa>>>16)|0;ra=wa<<16|ua&65535;sa=xa;ua=((f(H,Q)|0)+(ta&65535)|0)+(la&65535)|0;va=((f(P,Q)|0)+(ta>>>16)|0)+(la>>>16)|0;wa=((f(H,Y)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(P,Y)|0)+(va>>>16)|0)+(wa>>>16)|0;la=wa<<16|ua&65535;ua=((f(H,R)|0)+(xa&65535)|0)+(ma&65535)|0;va=((f(P,R)|0)+(xa>>>16)|0)+(ma>>>16)|0;wa=((f(H,Z)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(P,Z)|0)+(va>>>16)|0)+(wa>>>16)|0;ma=wa<<16|ua&65535;ua=((f(H,S)|0)+(xa&65535)|0)+(na&65535)|0;va=((f(P,S)|0)+(xa>>>16)|0)+(na>>>16)|0;wa=((f(H,$)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(P,$)|0)+(va>>>16)|0)+(wa>>>16)|0;na=wa<<16|ua&65535;ua=((f(H,T)|0)+(xa&65535)|0)+(oa&65535)|0;va=((f(P,T)|0)+(xa>>>16)|0)+(oa>>>16)|0;wa=((f(H,_)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(P,_)|0)+(va>>>16)|0)+(wa>>>16)|0;oa=wa<<16|ua&65535;ua=((f(H,U)|0)+(xa&65535)|0)+(pa&65535)|0;va=((f(P,U)|0)+(xa>>>16)|0)+(pa>>>16)|0;wa=((f(H,aa)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(P,aa)|0)+(va>>>16)|0)+(wa>>>16)|0;pa=wa<<16|ua&65535;ua=((f(H,V)|0)+(xa&65535)|0)+(qa&65535)|0;va=((f(P,V)|0)+(xa>>>16)|0)+(qa>>>16)|0;wa=((f(H,ba)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(P,ba)|0)+(va>>>16)|0)+(wa>>>16)|0;qa=wa<<16|ua&65535;ua=((f(H,W)|0)+(xa&65535)|0)+(ra&65535)|0;va=((f(P,W)|0)+(xa>>>16)|0)+(ra>>>16)|0;wa=((f(H,ca)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(P,ca)|0)+(va>>>16)|0)+(wa>>>16)|0;ra=wa<<16|ua&65535;ua=((f(H,X)|0)+(xa&65535)|0)+(sa&65535)|0;va=((f(P,X)|0)+(xa>>>16)|0)+(sa>>>16)|0;wa=((f(H,da)|0)+(va&65535)|0)+(ua>>>16)|0;xa=((f(P,da)|0)+(va>>>16)|0)+(wa>>>16)|0;sa=wa<<16|ua&65535;ta=xa;e[(Ca|0)>>2]=ea,e[(Ca|4)>>2]=fa,e[(Ca|8)>>2]=ga,e[(Ca|12)>>2]=ha,e[(Ca|16)>>2]=ia,e[(Ca|20)>>2]=ja,e[(Ca|24)>>2]=ka,e[(Ca|28)>>2]=la}Ca=y+(ya+Aa|0)|0;e[(Ca|0)>>2]=ma,e[(Ca|4)>>2]=na,e[(Ca|8)>>2]=oa,e[(Ca|12)>>2]=pa,e[(Ca|16)>>2]=qa,e[(Ca|20)>>2]=ra,e[(Ca|24)>>2]=sa,e[(Ca|28)>>2]=ta}}function r(u,v,w){u=u|0;v=v|0;w=w|0;var x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,$=0,_=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0;for(;(Ba|0)<(v|0);Ba=Ba+4|0){Ga=w+(Ba<<1)|0;F=e[u+Ba>>2]|0,x=F&65535,F=F>>>16;ra=f(x,x)|0;sa=(f(x,F)|0)+(ra>>>17)|0;ta=(f(F,F)|0)+(sa>>>15)|0;e[Ga>>2]=sa<<17|ra&131071;e[(Ga|4)>>2]=ta}for(Aa=0;(Aa|0)<(v|0);Aa=Aa+8|0){Ea=u+Aa|0,Ga=w+(Aa<<1)|0;F=e[Ea>>2]|0,x=F&65535,F=F>>>16;V=e[(Ea|4)>>2]|0,N=V&65535,V=V>>>16;ra=f(x,N)|0;sa=(f(x,V)|0)+(ra>>>16)|0;ta=(f(F,N)|0)+(sa&65535)|0;wa=((f(F,V)|0)+(sa>>>16)|0)+(ta>>>16)|0;xa=e[(Ga|4)>>2]|0;ra=(xa&65535)+((ra&65535)<<1)|0;ta=((xa>>>16)+((ta&65535)<<1)|0)+(ra>>>16)|0;e[(Ga|4)>>2]=ta<<16|ra&65535;ua=ta>>>16;xa=e[(Ga|8)>>2]|0;ra=((xa&65535)+((wa&65535)<<1)|0)+ua|0;ta=((xa>>>16)+(wa>>>16<<1)|0)+(ra>>>16)|0;e[(Ga|8)>>2]=ta<<16|ra&65535;ua=ta>>>16;if(ua){xa=e[(Ga|12)>>2]|0;ra=(xa&65535)+ua|0;ta=(xa>>>16)+(ra>>>16)|0;e[(Ga|12)>>2]=ta<<16|ra&65535}}for(Aa=0;(Aa|0)<(v|0);Aa=Aa+16|0){Ea=u+Aa|0,Ga=w+(Aa<<1)|0;F=e[Ea>>2]|0,x=F&65535,F=F>>>16,G=e[(Ea|4)>>2]|0,y=G&65535,G=G>>>16;V=e[(Ea|8)>>2]|0,N=V&65535,V=V>>>16,W=e[(Ea|12)>>2]|0,O=W&65535,W=W>>>16;ra=f(x,N)|0;sa=f(F,N)|0;ta=((f(x,V)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(F,V)|0)+(sa>>>16)|0)+(ta>>>16)|0;ba=ta<<16|ra&65535;ra=(f(x,O)|0)+(wa&65535)|0;sa=(f(F,O)|0)+(wa>>>16)|0;ta=((f(x,W)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(F,W)|0)+(sa>>>16)|0)+(ta>>>16)|0;ca=ta<<16|ra&65535;da=wa;ra=(f(y,N)|0)+(ca&65535)|0;sa=(f(G,N)|0)+(ca>>>16)|0;ta=((f(y,V)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(G,V)|0)+(sa>>>16)|0)+(ta>>>16)|0;ca=ta<<16|ra&65535;ra=((f(y,O)|0)+(da&65535)|0)+(wa&65535)|0;sa=((f(G,O)|0)+(da>>>16)|0)+(wa>>>16)|0;ta=((f(y,W)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(G,W)|0)+(sa>>>16)|0)+(ta>>>16)|0;da=ta<<16|ra&65535;ea=wa;xa=e[(Ga|8)>>2]|0;ra=(xa&65535)+((ba&65535)<<1)|0;ta=((xa>>>16)+(ba>>>16<<1)|0)+(ra>>>16)|0;e[(Ga|8)>>2]=ta<<16|ra&65535;ua=ta>>>16;xa=e[(Ga|12)>>2]|0;ra=((xa&65535)+((ca&65535)<<1)|0)+ua|0;ta=((xa>>>16)+(ca>>>16<<1)|0)+(ra>>>16)|0;e[(Ga|12)>>2]=ta<<16|ra&65535;ua=ta>>>16;xa=e[(Ga|16)>>2]|0;ra=((xa&65535)+((da&65535)<<1)|0)+ua|0;ta=((xa>>>16)+(da>>>16<<1)|0)+(ra>>>16)|0;e[(Ga|16)>>2]=ta<<16|ra&65535;ua=ta>>>16;xa=e[(Ga|20)>>2]|0;ra=((xa&65535)+((ea&65535)<<1)|0)+ua|0;ta=((xa>>>16)+(ea>>>16<<1)|0)+(ra>>>16)|0;e[(Ga|20)>>2]=ta<<16|ra&65535;ua=ta>>>16;for(Da=24;!!ua&(Da|0)<32;Da=Da+4|0){xa=e[(Ga|Da)>>2]|0;ra=(xa&65535)+ua|0;ta=(xa>>>16)+(ra>>>16)|0;e[(Ga|Da)>>2]=ta<<16|ra&65535;ua=ta>>>16}}for(Aa=0;(Aa|0)<(v|0);Aa=Aa+32|0){Ea=u+Aa|0,Ga=w+(Aa<<1)|0;F=e[Ea>>2]|0,x=F&65535,F=F>>>16,G=e[(Ea|4)>>2]|0,y=G&65535,G=G>>>16,H=e[(Ea|8)>>2]|0,z=H&65535,H=H>>>16,I=e[(Ea|12)>>2]|0,A=I&65535,I=I>>>16;V=e[(Ea|16)>>2]|0,N=V&65535,V=V>>>16,W=e[(Ea|20)>>2]|0,O=W&65535,W=W>>>16,X=e[(Ea|24)>>2]|0,P=X&65535,X=X>>>16,Y=e[(Ea|28)>>2]|0,Q=Y&65535,Y=Y>>>16;ra=f(x,N)|0;sa=f(F,N)|0;ta=((f(x,V)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(F,V)|0)+(sa>>>16)|0)+(ta>>>16)|0;ba=ta<<16|ra&65535;ra=(f(x,O)|0)+(wa&65535)|0;sa=(f(F,O)|0)+(wa>>>16)|0;ta=((f(x,W)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(F,W)|0)+(sa>>>16)|0)+(ta>>>16)|0;ca=ta<<16|ra&65535;ra=(f(x,P)|0)+(wa&65535)|0;sa=(f(F,P)|0)+(wa>>>16)|0;ta=((f(x,X)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(F,X)|0)+(sa>>>16)|0)+(ta>>>16)|0;da=ta<<16|ra&65535;ra=(f(x,Q)|0)+(wa&65535)|0;sa=(f(F,Q)|0)+(wa>>>16)|0;ta=((f(x,Y)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(F,Y)|0)+(sa>>>16)|0)+(ta>>>16)|0;ea=ta<<16|ra&65535;fa=wa;ra=(f(y,N)|0)+(ca&65535)|0;sa=(f(G,N)|0)+(ca>>>16)|0;ta=((f(y,V)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(G,V)|0)+(sa>>>16)|0)+(ta>>>16)|0;ca=ta<<16|ra&65535;ra=((f(y,O)|0)+(da&65535)|0)+(wa&65535)|0;sa=((f(G,O)|0)+(da>>>16)|0)+(wa>>>16)|0;ta=((f(y,W)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(G,W)|0)+(sa>>>16)|0)+(ta>>>16)|0;da=ta<<16|ra&65535;ra=((f(y,P)|0)+(ea&65535)|0)+(wa&65535)|0;sa=((f(G,P)|0)+(ea>>>16)|0)+(wa>>>16)|0;ta=((f(y,X)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(G,X)|0)+(sa>>>16)|0)+(ta>>>16)|0;ea=ta<<16|ra&65535;ra=((f(y,Q)|0)+(fa&65535)|0)+(wa&65535)|0;sa=((f(G,Q)|0)+(fa>>>16)|0)+(wa>>>16)|0;ta=((f(y,Y)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(G,Y)|0)+(sa>>>16)|0)+(ta>>>16)|0;fa=ta<<16|ra&65535;ga=wa;ra=(f(z,N)|0)+(da&65535)|0;sa=(f(H,N)|0)+(da>>>16)|0;ta=((f(z,V)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(H,V)|0)+(sa>>>16)|0)+(ta>>>16)|0;da=ta<<16|ra&65535;ra=((f(z,O)|0)+(ea&65535)|0)+(wa&65535)|0;sa=((f(H,O)|0)+(ea>>>16)|0)+(wa>>>16)|0;ta=((f(z,W)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(H,W)|0)+(sa>>>16)|0)+(ta>>>16)|0;ea=ta<<16|ra&65535;ra=((f(z,P)|0)+(fa&65535)|0)+(wa&65535)|0;sa=((f(H,P)|0)+(fa>>>16)|0)+(wa>>>16)|0;ta=((f(z,X)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(H,X)|0)+(sa>>>16)|0)+(ta>>>16)|0;fa=ta<<16|ra&65535;ra=((f(z,Q)|0)+(ga&65535)|0)+(wa&65535)|0;sa=((f(H,Q)|0)+(ga>>>16)|0)+(wa>>>16)|0;ta=((f(z,Y)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(H,Y)|0)+(sa>>>16)|0)+(ta>>>16)|0;ga=ta<<16|ra&65535;ha=wa;ra=(f(A,N)|0)+(ea&65535)|0;sa=(f(I,N)|0)+(ea>>>16)|0;ta=((f(A,V)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(I,V)|0)+(sa>>>16)|0)+(ta>>>16)|0;ea=ta<<16|ra&65535;ra=((f(A,O)|0)+(fa&65535)|0)+(wa&65535)|0;sa=((f(I,O)|0)+(fa>>>16)|0)+(wa>>>16)|0;ta=((f(A,W)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(I,W)|0)+(sa>>>16)|0)+(ta>>>16)|0;fa=ta<<16|ra&65535;ra=((f(A,P)|0)+(ga&65535)|0)+(wa&65535)|0;sa=((f(I,P)|0)+(ga>>>16)|0)+(wa>>>16)|0;ta=((f(A,X)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(I,X)|0)+(sa>>>16)|0)+(ta>>>16)|0;ga=ta<<16|ra&65535;ra=((f(A,Q)|0)+(ha&65535)|0)+(wa&65535)|0;sa=((f(I,Q)|0)+(ha>>>16)|0)+(wa>>>16)|0;ta=((f(A,Y)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(I,Y)|0)+(sa>>>16)|0)+(ta>>>16)|0;ha=ta<<16|ra&65535;ia=wa;xa=e[(Ga|16)>>2]|0;ra=(xa&65535)+((ba&65535)<<1)|0;ta=((xa>>>16)+(ba>>>16<<1)|0)+(ra>>>16)|0;e[(Ga|16)>>2]=ta<<16|ra&65535;ua=ta>>>16;xa=e[(Ga|20)>>2]|0;ra=((xa&65535)+((ca&65535)<<1)|0)+ua|0;ta=((xa>>>16)+(ca>>>16<<1)|0)+(ra>>>16)|0;e[(Ga|20)>>2]=ta<<16|ra&65535;ua=ta>>>16;xa=e[(Ga|24)>>2]|0;ra=((xa&65535)+((da&65535)<<1)|0)+ua|0;ta=((xa>>>16)+(da>>>16<<1)|0)+(ra>>>16)|0;e[(Ga|24)>>2]=ta<<16|ra&65535;ua=ta>>>16;xa=e[(Ga|28)>>2]|0;ra=((xa&65535)+((ea&65535)<<1)|0)+ua|0;ta=((xa>>>16)+(ea>>>16<<1)|0)+(ra>>>16)|0;e[(Ga|28)>>2]=ta<<16|ra&65535;ua=ta>>>16;xa=e[Ga+32>>2]|0;ra=((xa&65535)+((fa&65535)<<1)|0)+ua|0;ta=((xa>>>16)+(fa>>>16<<1)|0)+(ra>>>16)|0;e[Ga+32>>2]=ta<<16|ra&65535;ua=ta>>>16;xa=e[Ga+36>>2]|0;ra=((xa&65535)+((ga&65535)<<1)|0)+ua|0;ta=((xa>>>16)+(ga>>>16<<1)|0)+(ra>>>16)|0;e[Ga+36>>2]=ta<<16|ra&65535;ua=ta>>>16;xa=e[Ga+40>>2]|0;ra=((xa&65535)+((ha&65535)<<1)|0)+ua|0;ta=((xa>>>16)+(ha>>>16<<1)|0)+(ra>>>16)|0;e[Ga+40>>2]=ta<<16|ra&65535;ua=ta>>>16;xa=e[Ga+44>>2]|0;ra=((xa&65535)+((ia&65535)<<1)|0)+ua|0;ta=((xa>>>16)+(ia>>>16<<1)|0)+(ra>>>16)|0;e[Ga+44>>2]=ta<<16|ra&65535;ua=ta>>>16;for(Da=48;!!ua&(Da|0)<64;Da=Da+4|0){xa=e[Ga+Da>>2]|0;ra=(xa&65535)+ua|0;ta=(xa>>>16)+(ra>>>16)|0;e[Ga+Da>>2]=ta<<16|ra&65535;ua=ta>>>16}}for(ya=32;(ya|0)<(v|0);ya=ya<<1){za=ya<<1;for(Aa=0;(Aa|0)<(v|0);Aa=Aa+za|0){Ga=w+(Aa<<1)|0;va=0;for(Ba=0;(Ba|0)<(ya|0);Ba=Ba+32|0){Ea=(u+Aa|0)+Ba|0;F=e[Ea>>2]|0,x=F&65535,F=F>>>16,G=e[(Ea|4)>>2]|0,y=G&65535,G=G>>>16,H=e[(Ea|8)>>2]|0,z=H&65535,H=H>>>16,I=e[(Ea|12)>>2]|0,A=I&65535,I=I>>>16,J=e[(Ea|16)>>2]|0,B=J&65535,J=J>>>16,K=e[(Ea|20)>>2]|0,C=K&65535,K=K>>>16,L=e[(Ea|24)>>2]|0,D=L&65535,L=L>>>16,M=e[(Ea|28)>>2]|0,E=M&65535,M=M>>>16;ja=ka=la=ma=na=oa=pa=qa=ua=0;for(Ca=0;(Ca|0)<(ya|0);Ca=Ca+32|0){Fa=((u+Aa|0)+ya|0)+Ca|0;V=e[Fa>>2]|0,N=V&65535,V=V>>>16,W=e[(Fa|4)>>2]|0,O=W&65535,W=W>>>16,X=e[(Fa|8)>>2]|0,P=X&65535,X=X>>>16,Y=e[(Fa|12)>>2]|0,Q=Y&65535,Y=Y>>>16,Z=e[(Fa|16)>>2]|0,R=Z&65535,Z=Z>>>16,$=e[(Fa|20)>>2]|0,S=$&65535,$=$>>>16,_=e[(Fa|24)>>2]|0,T=_&65535,_=_>>>16,aa=e[(Fa|28)>>2]|0,U=aa&65535,aa=aa>>>16;ba=ca=da=ea=fa=ga=ha=ia=0;ra=((f(x,N)|0)+(ba&65535)|0)+(ja&65535)|0;sa=((f(F,N)|0)+(ba>>>16)|0)+(ja>>>16)|0;ta=((f(x,V)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(F,V)|0)+(sa>>>16)|0)+(ta>>>16)|0;ba=ta<<16|ra&65535;ra=((f(x,O)|0)+(ca&65535)|0)+(wa&65535)|0;sa=((f(F,O)|0)+(ca>>>16)|0)+(wa>>>16)|0;ta=((f(x,W)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(F,W)|0)+(sa>>>16)|0)+(ta>>>16)|0;ca=ta<<16|ra&65535;ra=((f(x,P)|0)+(da&65535)|0)+(wa&65535)|0;sa=((f(F,P)|0)+(da>>>16)|0)+(wa>>>16)|0;ta=((f(x,X)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(F,X)|0)+(sa>>>16)|0)+(ta>>>16)|0;da=ta<<16|ra&65535;ra=((f(x,Q)|0)+(ea&65535)|0)+(wa&65535)|0;sa=((f(F,Q)|0)+(ea>>>16)|0)+(wa>>>16)|0;ta=((f(x,Y)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(F,Y)|0)+(sa>>>16)|0)+(ta>>>16)|0;ea=ta<<16|ra&65535;ra=((f(x,R)|0)+(fa&65535)|0)+(wa&65535)|0;sa=((f(F,R)|0)+(fa>>>16)|0)+(wa>>>16)|0;ta=((f(x,Z)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(F,Z)|0)+(sa>>>16)|0)+(ta>>>16)|0;fa=ta<<16|ra&65535;ra=((f(x,S)|0)+(ga&65535)|0)+(wa&65535)|0;sa=((f(F,S)|0)+(ga>>>16)|0)+(wa>>>16)|0;ta=((f(x,$)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(F,$)|0)+(sa>>>16)|0)+(ta>>>16)|0;ga=ta<<16|ra&65535;ra=((f(x,T)|0)+(ha&65535)|0)+(wa&65535)|0;sa=((f(F,T)|0)+(ha>>>16)|0)+(wa>>>16)|0;ta=((f(x,_)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(F,_)|0)+(sa>>>16)|0)+(ta>>>16)|0;ha=ta<<16|ra&65535;ra=((f(x,U)|0)+(ia&65535)|0)+(wa&65535)|0;sa=((f(F,U)|0)+(ia>>>16)|0)+(wa>>>16)|0;ta=((f(x,aa)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(F,aa)|0)+(sa>>>16)|0)+(ta>>>16)|0;ia=ta<<16|ra&65535;ja=wa;ra=((f(y,N)|0)+(ca&65535)|0)+(ka&65535)|0;sa=((f(G,N)|0)+(ca>>>16)|0)+(ka>>>16)|0;ta=((f(y,V)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(G,V)|0)+(sa>>>16)|0)+(ta>>>16)|0;ca=ta<<16|ra&65535;ra=((f(y,O)|0)+(da&65535)|0)+(wa&65535)|0;sa=((f(G,O)|0)+(da>>>16)|0)+(wa>>>16)|0;ta=((f(y,W)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(G,W)|0)+(sa>>>16)|0)+(ta>>>16)|0;da=ta<<16|ra&65535;ra=((f(y,P)|0)+(ea&65535)|0)+(wa&65535)|0;sa=((f(G,P)|0)+(ea>>>16)|0)+(wa>>>16)|0;ta=((f(y,X)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(G,X)|0)+(sa>>>16)|0)+(ta>>>16)|0;ea=ta<<16|ra&65535;ra=((f(y,Q)|0)+(fa&65535)|0)+(wa&65535)|0;sa=((f(G,Q)|0)+(fa>>>16)|0)+(wa>>>16)|0;ta=((f(y,Y)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(G,Y)|0)+(sa>>>16)|0)+(ta>>>16)|0;fa=ta<<16|ra&65535;ra=((f(y,R)|0)+(ga&65535)|0)+(wa&65535)|0;sa=((f(G,R)|0)+(ga>>>16)|0)+(wa>>>16)|0;ta=((f(y,Z)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(G,Z)|0)+(sa>>>16)|0)+(ta>>>16)|0;ga=ta<<16|ra&65535;ra=((f(y,S)|0)+(ha&65535)|0)+(wa&65535)|0;sa=((f(G,S)|0)+(ha>>>16)|0)+(wa>>>16)|0;ta=((f(y,$)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(G,$)|0)+(sa>>>16)|0)+(ta>>>16)|0;ha=ta<<16|ra&65535;ra=((f(y,T)|0)+(ia&65535)|0)+(wa&65535)|0;sa=((f(G,T)|0)+(ia>>>16)|0)+(wa>>>16)|0;ta=((f(y,_)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(G,_)|0)+(sa>>>16)|0)+(ta>>>16)|0;ia=ta<<16|ra&65535;ra=((f(y,U)|0)+(ja&65535)|0)+(wa&65535)|0;sa=((f(G,U)|0)+(ja>>>16)|0)+(wa>>>16)|0;ta=((f(y,aa)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(G,aa)|0)+(sa>>>16)|0)+(ta>>>16)|0;ja=ta<<16|ra&65535;ka=wa;ra=((f(z,N)|0)+(da&65535)|0)+(la&65535)|0;sa=((f(H,N)|0)+(da>>>16)|0)+(la>>>16)|0;ta=((f(z,V)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(H,V)|0)+(sa>>>16)|0)+(ta>>>16)|0;da=ta<<16|ra&65535;ra=((f(z,O)|0)+(ea&65535)|0)+(wa&65535)|0;sa=((f(H,O)|0)+(ea>>>16)|0)+(wa>>>16)|0;ta=((f(z,W)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(H,W)|0)+(sa>>>16)|0)+(ta>>>16)|0;ea=ta<<16|ra&65535;ra=((f(z,P)|0)+(fa&65535)|0)+(wa&65535)|0;sa=((f(H,P)|0)+(fa>>>16)|0)+(wa>>>16)|0;ta=((f(z,X)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(H,X)|0)+(sa>>>16)|0)+(ta>>>16)|0;fa=ta<<16|ra&65535;ra=((f(z,Q)|0)+(ga&65535)|0)+(wa&65535)|0;sa=((f(H,Q)|0)+(ga>>>16)|0)+(wa>>>16)|0;ta=((f(z,Y)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(H,Y)|0)+(sa>>>16)|0)+(ta>>>16)|0;ga=ta<<16|ra&65535;ra=((f(z,R)|0)+(ha&65535)|0)+(wa&65535)|0;sa=((f(H,R)|0)+(ha>>>16)|0)+(wa>>>16)|0;ta=((f(z,Z)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(H,Z)|0)+(sa>>>16)|0)+(ta>>>16)|0;ha=ta<<16|ra&65535;ra=((f(z,S)|0)+(ia&65535)|0)+(wa&65535)|0;sa=((f(H,S)|0)+(ia>>>16)|0)+(wa>>>16)|0;ta=((f(z,$)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(H,$)|0)+(sa>>>16)|0)+(ta>>>16)|0;ia=ta<<16|ra&65535;ra=((f(z,T)|0)+(ja&65535)|0)+(wa&65535)|0;sa=((f(H,T)|0)+(ja>>>16)|0)+(wa>>>16)|0;ta=((f(z,_)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(H,_)|0)+(sa>>>16)|0)+(ta>>>16)|0;ja=ta<<16|ra&65535;ra=((f(z,U)|0)+(ka&65535)|0)+(wa&65535)|0;sa=((f(H,U)|0)+(ka>>>16)|0)+(wa>>>16)|0;ta=((f(z,aa)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(H,aa)|0)+(sa>>>16)|0)+(ta>>>16)|0;ka=ta<<16|ra&65535;la=wa;ra=((f(A,N)|0)+(ea&65535)|0)+(ma&65535)|0;sa=((f(I,N)|0)+(ea>>>16)|0)+(ma>>>16)|0;ta=((f(A,V)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(I,V)|0)+(sa>>>16)|0)+(ta>>>16)|0;ea=ta<<16|ra&65535;ra=((f(A,O)|0)+(fa&65535)|0)+(wa&65535)|0;sa=((f(I,O)|0)+(fa>>>16)|0)+(wa>>>16)|0;ta=((f(A,W)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(I,W)|0)+(sa>>>16)|0)+(ta>>>16)|0;fa=ta<<16|ra&65535;ra=((f(A,P)|0)+(ga&65535)|0)+(wa&65535)|0;sa=((f(I,P)|0)+(ga>>>16)|0)+(wa>>>16)|0;ta=((f(A,X)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(I,X)|0)+(sa>>>16)|0)+(ta>>>16)|0;ga=ta<<16|ra&65535;ra=((f(A,Q)|0)+(ha&65535)|0)+(wa&65535)|0;sa=((f(I,Q)|0)+(ha>>>16)|0)+(wa>>>16)|0;ta=((f(A,Y)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(I,Y)|0)+(sa>>>16)|0)+(ta>>>16)|0;ha=ta<<16|ra&65535;ra=((f(A,R)|0)+(ia&65535)|0)+(wa&65535)|0;sa=((f(I,R)|0)+(ia>>>16)|0)+(wa>>>16)|0;ta=((f(A,Z)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(I,Z)|0)+(sa>>>16)|0)+(ta>>>16)|0;ia=ta<<16|ra&65535;ra=((f(A,S)|0)+(ja&65535)|0)+(wa&65535)|0;sa=((f(I,S)|0)+(ja>>>16)|0)+(wa>>>16)|0;ta=((f(A,$)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(I,$)|0)+(sa>>>16)|0)+(ta>>>16)|0;ja=ta<<16|ra&65535;ra=((f(A,T)|0)+(ka&65535)|0)+(wa&65535)|0;sa=((f(I,T)|0)+(ka>>>16)|0)+(wa>>>16)|0;ta=((f(A,_)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(I,_)|0)+(sa>>>16)|0)+(ta>>>16)|0;ka=ta<<16|ra&65535;ra=((f(A,U)|0)+(la&65535)|0)+(wa&65535)|0;sa=((f(I,U)|0)+(la>>>16)|0)+(wa>>>16)|0;ta=((f(A,aa)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(I,aa)|0)+(sa>>>16)|0)+(ta>>>16)|0;la=ta<<16|ra&65535;ma=wa;ra=((f(B,N)|0)+(fa&65535)|0)+(na&65535)|0;sa=((f(J,N)|0)+(fa>>>16)|0)+(na>>>16)|0;ta=((f(B,V)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(J,V)|0)+(sa>>>16)|0)+(ta>>>16)|0;fa=ta<<16|ra&65535;ra=((f(B,O)|0)+(ga&65535)|0)+(wa&65535)|0;sa=((f(J,O)|0)+(ga>>>16)|0)+(wa>>>16)|0;ta=((f(B,W)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(J,W)|0)+(sa>>>16)|0)+(ta>>>16)|0;ga=ta<<16|ra&65535;ra=((f(B,P)|0)+(ha&65535)|0)+(wa&65535)|0;sa=((f(J,P)|0)+(ha>>>16)|0)+(wa>>>16)|0;ta=((f(B,X)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(J,X)|0)+(sa>>>16)|0)+(ta>>>16)|0;ha=ta<<16|ra&65535;ra=((f(B,Q)|0)+(ia&65535)|0)+(wa&65535)|0;sa=((f(J,Q)|0)+(ia>>>16)|0)+(wa>>>16)|0;ta=((f(B,Y)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(J,Y)|0)+(sa>>>16)|0)+(ta>>>16)|0;ia=ta<<16|ra&65535;ra=((f(B,R)|0)+(ja&65535)|0)+(wa&65535)|0;sa=((f(J,R)|0)+(ja>>>16)|0)+(wa>>>16)|0;ta=((f(B,Z)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(J,Z)|0)+(sa>>>16)|0)+(ta>>>16)|0;ja=ta<<16|ra&65535;ra=((f(B,S)|0)+(ka&65535)|0)+(wa&65535)|0;sa=((f(J,S)|0)+(ka>>>16)|0)+(wa>>>16)|0;ta=((f(B,$)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(J,$)|0)+(sa>>>16)|0)+(ta>>>16)|0;ka=ta<<16|ra&65535;ra=((f(B,T)|0)+(la&65535)|0)+(wa&65535)|0;sa=((f(J,T)|0)+(la>>>16)|0)+(wa>>>16)|0;ta=((f(B,_)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(J,_)|0)+(sa>>>16)|0)+(ta>>>16)|0;la=ta<<16|ra&65535;ra=((f(B,U)|0)+(ma&65535)|0)+(wa&65535)|0;sa=((f(J,U)|0)+(ma>>>16)|0)+(wa>>>16)|0;ta=((f(B,aa)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(J,aa)|0)+(sa>>>16)|0)+(ta>>>16)|0;ma=ta<<16|ra&65535;na=wa;ra=((f(C,N)|0)+(ga&65535)|0)+(oa&65535)|0;sa=((f(K,N)|0)+(ga>>>16)|0)+(oa>>>16)|0;ta=((f(C,V)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(K,V)|0)+(sa>>>16)|0)+(ta>>>16)|0;ga=ta<<16|ra&65535;ra=((f(C,O)|0)+(ha&65535)|0)+(wa&65535)|0;sa=((f(K,O)|0)+(ha>>>16)|0)+(wa>>>16)|0;ta=((f(C,W)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(K,W)|0)+(sa>>>16)|0)+(ta>>>16)|0;ha=ta<<16|ra&65535;ra=((f(C,P)|0)+(ia&65535)|0)+(wa&65535)|0;sa=((f(K,P)|0)+(ia>>>16)|0)+(wa>>>16)|0;ta=((f(C,X)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(K,X)|0)+(sa>>>16)|0)+(ta>>>16)|0;ia=ta<<16|ra&65535;ra=((f(C,Q)|0)+(ja&65535)|0)+(wa&65535)|0;sa=((f(K,Q)|0)+(ja>>>16)|0)+(wa>>>16)|0;ta=((f(C,Y)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(K,Y)|0)+(sa>>>16)|0)+(ta>>>16)|0;ja=ta<<16|ra&65535;ra=((f(C,R)|0)+(ka&65535)|0)+(wa&65535)|0;sa=((f(K,R)|0)+(ka>>>16)|0)+(wa>>>16)|0;ta=((f(C,Z)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(K,Z)|0)+(sa>>>16)|0)+(ta>>>16)|0;ka=ta<<16|ra&65535;ra=((f(C,S)|0)+(la&65535)|0)+(wa&65535)|0;sa=((f(K,S)|0)+(la>>>16)|0)+(wa>>>16)|0;ta=((f(C,$)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(K,$)|0)+(sa>>>16)|0)+(ta>>>16)|0;la=ta<<16|ra&65535;ra=((f(C,T)|0)+(ma&65535)|0)+(wa&65535)|0;sa=((f(K,T)|0)+(ma>>>16)|0)+(wa>>>16)|0;ta=((f(C,_)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(K,_)|0)+(sa>>>16)|0)+(ta>>>16)|0;ma=ta<<16|ra&65535;ra=((f(C,U)|0)+(na&65535)|0)+(wa&65535)|0;sa=((f(K,U)|0)+(na>>>16)|0)+(wa>>>16)|0;ta=((f(C,aa)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(K,aa)|0)+(sa>>>16)|0)+(ta>>>16)|0;na=ta<<16|ra&65535;oa=wa;ra=((f(D,N)|0)+(ha&65535)|0)+(pa&65535)|0;sa=((f(L,N)|0)+(ha>>>16)|0)+(pa>>>16)|0;ta=((f(D,V)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(L,V)|0)+(sa>>>16)|0)+(ta>>>16)|0;ha=ta<<16|ra&65535;ra=((f(D,O)|0)+(ia&65535)|0)+(wa&65535)|0;sa=((f(L,O)|0)+(ia>>>16)|0)+(wa>>>16)|0;ta=((f(D,W)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(L,W)|0)+(sa>>>16)|0)+(ta>>>16)|0;ia=ta<<16|ra&65535;ra=((f(D,P)|0)+(ja&65535)|0)+(wa&65535)|0;sa=((f(L,P)|0)+(ja>>>16)|0)+(wa>>>16)|0;ta=((f(D,X)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(L,X)|0)+(sa>>>16)|0)+(ta>>>16)|0;ja=ta<<16|ra&65535;ra=((f(D,Q)|0)+(ka&65535)|0)+(wa&65535)|0;sa=((f(L,Q)|0)+(ka>>>16)|0)+(wa>>>16)|0;ta=((f(D,Y)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(L,Y)|0)+(sa>>>16)|0)+(ta>>>16)|0;ka=ta<<16|ra&65535;ra=((f(D,R)|0)+(la&65535)|0)+(wa&65535)|0;sa=((f(L,R)|0)+(la>>>16)|0)+(wa>>>16)|0;ta=((f(D,Z)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(L,Z)|0)+(sa>>>16)|0)+(ta>>>16)|0;la=ta<<16|ra&65535;ra=((f(D,S)|0)+(ma&65535)|0)+(wa&65535)|0;sa=((f(L,S)|0)+(ma>>>16)|0)+(wa>>>16)|0;ta=((f(D,$)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(L,$)|0)+(sa>>>16)|0)+(ta>>>16)|0;ma=ta<<16|ra&65535;ra=((f(D,T)|0)+(na&65535)|0)+(wa&65535)|0;sa=((f(L,T)|0)+(na>>>16)|0)+(wa>>>16)|0;ta=((f(D,_)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(L,_)|0)+(sa>>>16)|0)+(ta>>>16)|0;na=ta<<16|ra&65535;ra=((f(D,U)|0)+(oa&65535)|0)+(wa&65535)|0;sa=((f(L,U)|0)+(oa>>>16)|0)+(wa>>>16)|0;ta=((f(D,aa)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(L,aa)|0)+(sa>>>16)|0)+(ta>>>16)|0;oa=ta<<16|ra&65535;pa=wa;ra=((f(E,N)|0)+(ia&65535)|0)+(qa&65535)|0;sa=((f(M,N)|0)+(ia>>>16)|0)+(qa>>>16)|0;ta=((f(E,V)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(M,V)|0)+(sa>>>16)|0)+(ta>>>16)|0;ia=ta<<16|ra&65535;ra=((f(E,O)|0)+(ja&65535)|0)+(wa&65535)|0;sa=((f(M,O)|0)+(ja>>>16)|0)+(wa>>>16)|0;ta=((f(E,W)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(M,W)|0)+(sa>>>16)|0)+(ta>>>16)|0;ja=ta<<16|ra&65535;ra=((f(E,P)|0)+(ka&65535)|0)+(wa&65535)|0;sa=((f(M,P)|0)+(ka>>>16)|0)+(wa>>>16)|0;ta=((f(E,X)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(M,X)|0)+(sa>>>16)|0)+(ta>>>16)|0;ka=ta<<16|ra&65535;ra=((f(E,Q)|0)+(la&65535)|0)+(wa&65535)|0;sa=((f(M,Q)|0)+(la>>>16)|0)+(wa>>>16)|0;ta=((f(E,Y)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(M,Y)|0)+(sa>>>16)|0)+(ta>>>16)|0;la=ta<<16|ra&65535;ra=((f(E,R)|0)+(ma&65535)|0)+(wa&65535)|0;sa=((f(M,R)|0)+(ma>>>16)|0)+(wa>>>16)|0;ta=((f(E,Z)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(M,Z)|0)+(sa>>>16)|0)+(ta>>>16)|0;ma=ta<<16|ra&65535;ra=((f(E,S)|0)+(na&65535)|0)+(wa&65535)|0;sa=((f(M,S)|0)+(na>>>16)|0)+(wa>>>16)|0;ta=((f(E,$)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(M,$)|0)+(sa>>>16)|0)+(ta>>>16)|0;na=ta<<16|ra&65535;ra=((f(E,T)|0)+(oa&65535)|0)+(wa&65535)|0;sa=((f(M,T)|0)+(oa>>>16)|0)+(wa>>>16)|0;ta=((f(E,_)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(M,_)|0)+(sa>>>16)|0)+(ta>>>16)|0;oa=ta<<16|ra&65535;ra=((f(E,U)|0)+(pa&65535)|0)+(wa&65535)|0;sa=((f(M,U)|0)+(pa>>>16)|0)+(wa>>>16)|0;ta=((f(E,aa)|0)+(sa&65535)|0)+(ra>>>16)|0;wa=((f(M,aa)|0)+(sa>>>16)|0)+(ta>>>16)|0;pa=ta<<16|ra&65535;qa=wa;Da=ya+(Ba+Ca|0)|0;xa=e[Ga+Da>>2]|0;ra=((xa&65535)+((ba&65535)<<1)|0)+ua|0;ta=((xa>>>16)+(ba>>>16<<1)|0)+(ra>>>16)|0;e[Ga+Da>>2]=ta<<16|ra&65535;ua=ta>>>16;Da=Da+4|0;xa=e[Ga+Da>>2]|0;ra=((xa&65535)+((ca&65535)<<1)|0)+ua|0;ta=((xa>>>16)+(ca>>>16<<1)|0)+(ra>>>16)|0;e[Ga+Da>>2]=ta<<16|ra&65535;ua=ta>>>16;Da=Da+4|0;xa=e[Ga+Da>>2]|0;ra=((xa&65535)+((da&65535)<<1)|0)+ua|0;ta=((xa>>>16)+(da>>>16<<1)|0)+(ra>>>16)|0;e[Ga+Da>>2]=ta<<16|ra&65535;ua=ta>>>16;Da=Da+4|0;xa=e[Ga+Da>>2]|0;ra=((xa&65535)+((ea&65535)<<1)|0)+ua|0;ta=((xa>>>16)+(ea>>>16<<1)|0)+(ra>>>16)|0;e[Ga+Da>>2]=ta<<16|ra&65535;ua=ta>>>16;Da=Da+4|0;xa=e[Ga+Da>>2]|0;ra=((xa&65535)+((fa&65535)<<1)|0)+ua|0;ta=((xa>>>16)+(fa>>>16<<1)|0)+(ra>>>16)|0;e[Ga+Da>>2]=ta<<16|ra&65535;ua=ta>>>16;Da=Da+4|0;xa=e[Ga+Da>>2]|0;ra=((xa&65535)+((ga&65535)<<1)|0)+ua|0;ta=((xa>>>16)+(ga>>>16<<1)|0)+(ra>>>16)|0;e[Ga+Da>>2]=ta<<16|ra&65535;ua=ta>>>16;Da=Da+4|0;xa=e[Ga+Da>>2]|0;ra=((xa&65535)+((ha&65535)<<1)|0)+ua|0;ta=((xa>>>16)+(ha>>>16<<1)|0)+(ra>>>16)|0;e[Ga+Da>>2]=ta<<16|ra&65535;ua=ta>>>16;Da=Da+4|0;xa=e[Ga+Da>>2]|0;ra=((xa&65535)+((ia&65535)<<1)|0)+ua|0;ta=((xa>>>16)+(ia>>>16<<1)|0)+(ra>>>16)|0;e[Ga+Da>>2]=ta<<16|ra&65535;ua=ta>>>16}Da=ya+(Ba+Ca|0)|0;xa=e[Ga+Da>>2]|0;ra=(((xa&65535)+((ja&65535)<<1)|0)+ua|0)+va|0;ta=((xa>>>16)+(ja>>>16<<1)|0)+(ra>>>16)|0;e[Ga+Da>>2]=ta<<16|ra&65535;ua=ta>>>16;Da=Da+4|0;xa=e[Ga+Da>>2]|0;ra=((xa&65535)+((ka&65535)<<1)|0)+ua|0;ta=((xa>>>16)+(ka>>>16<<1)|0)+(ra>>>16)|0;e[Ga+Da>>2]=ta<<16|ra&65535;ua=ta>>>16;Da=Da+4|0;xa=e[Ga+Da>>2]|0;ra=((xa&65535)+((la&65535)<<1)|0)+ua|0;ta=((xa>>>16)+(la>>>16<<1)|0)+(ra>>>16)|0;e[Ga+Da>>2]=ta<<16|ra&65535;ua=ta>>>16;Da=Da+4|0;xa=e[Ga+Da>>2]|0;ra=((xa&65535)+((ma&65535)<<1)|0)+ua|0;ta=((xa>>>16)+(ma>>>16<<1)|0)+(ra>>>16)|0;e[Ga+Da>>2]=ta<<16|ra&65535;ua=ta>>>16;Da=Da+4|0;xa=e[Ga+Da>>2]|0;ra=((xa&65535)+((na&65535)<<1)|0)+ua|0;ta=((xa>>>16)+(na>>>16<<1)|0)+(ra>>>16)|0;e[Ga+Da>>2]=ta<<16|ra&65535;ua=ta>>>16;Da=Da+4|0;xa=e[Ga+Da>>2]|0;ra=((xa&65535)+((oa&65535)<<1)|0)+ua|0;ta=((xa>>>16)+(oa>>>16<<1)|0)+(ra>>>16)|0;e[Ga+Da>>2]=ta<<16|ra&65535;ua=ta>>>16;Da=Da+4|0;xa=e[Ga+Da>>2]|0;ra=((xa&65535)+((pa&65535)<<1)|0)+ua|0;ta=((xa>>>16)+(pa>>>16<<1)|0)+(ra>>>16)|0;e[Ga+Da>>2]=ta<<16|ra&65535;ua=ta>>>16;Da=Da+4|0;xa=e[Ga+Da>>2]|0;ra=((xa&65535)+((qa&65535)<<1)|0)+ua|0;ta=((xa>>>16)+(qa>>>16<<1)|0)+(ra>>>16)|0;e[Ga+Da>>2]=ta<<16|ra&65535;va=ta>>>16}for(Da=Da+4|0;!!va&(Da|0)<za<<1;Da=Da+4|0){xa=e[Ga+Da>>2]|0;ra=(xa&65535)+va|0;ta=(xa>>>16)+(ra>>>16)|0;e[Ga+Da>>2]=ta<<16|ra&65535;va=ta>>>16}}}}function s(u,v,w,x,y){u=u|0;v=v|0;w=w|0;x=x|0;y=y|0;var z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0;for(P=v-1&-4;(P|0)>=0;P=P-4|0){z=e[u+P>>2]|0;if(z){v=P;break}}for(P=x-1&-4;(P|0)>=0;P=P-4|0){A=e[w+P>>2]|0;if(A){x=P;break}}while((A&2147483648)==0){A=A<<1;B=B+1|0}D=e[u+v>>2]|0;if(B){C=D>>>(32-B|0);for(P=v-4|0;(P|0)>=0;P=P-4|0){z=e[u+P>>2]|0;e[u+P+4>>2]=D<<B|(B?z>>>(32-B|0):0);D=z}e[u>>2]=D<<B}if(B){E=e[w+x>>2]|0;for(P=x-4|0;(P|0)>=0;P=P-4|0){A=e[w+P>>2]|0;e[w+P+4>>2]=E<<B|A>>>(32-B|0);E=A}e[w>>2]=E<<B}E=e[w+x>>2]|0;F=E>>>16,G=E&65535;for(P=v;(P|0)>=(x|0);P=P-4|0){Q=P-x|0;D=e[u+P>>2]|0;H=(C>>>0)/(F>>>0)|0,J=(C>>>0)%(F>>>0)|0,L=f(H,G)|0;while((H|0)==65536|L>>>0>(J<<16|D>>>16)>>>0){H=H-1|0,J=J+F|0,L=L-G|0;if((J|0)>=65536)break}N=0,O=0;for(R=0;(R|0)<=(x|0);R=R+4|0){A=e[w+R>>2]|0;L=(f(H,A&65535)|0)+(N>>>16)|0;M=(f(H,A>>>16)|0)+(L>>>16)|0;\n" +
              "\n" +
              "A=N&65535|L<<16;N=M;z=e[u+Q+R>>2]|0;L=((z&65535)-(A&65535)|0)+O|0;M=((z>>>16)-(A>>>16)|0)+(L>>16)|0;e[u+Q+R>>2]=M<<16|L&65535;O=M>>16}L=((C&65535)-(N&65535)|0)+O|0;M=((C>>>16)-(N>>>16)|0)+(L>>16)|0;C=M<<16|L&65535;O=M>>16;if(O){H=H-1|0;O=0;for(R=0;(R|0)<=(x|0);R=R+4|0){A=e[w+R>>2]|0;z=e[u+Q+R>>2]|0;L=(z&65535)+O|0;M=(z>>>16)+A+(L>>>16)|0;e[u+Q+R>>2]=M<<16|L&65535;O=M>>>16}C=C+O|0}D=e[u+P>>2]|0;z=C<<16|D>>>16;I=(z>>>0)/(F>>>0)|0,K=(z>>>0)%(F>>>0)|0,L=f(I,G)|0;while((I|0)==65536|L>>>0>(K<<16|D&65535)>>>0){I=I-1|0,K=K+F|0,L=L-G|0;if((K|0)>=65536)break}N=0,O=0;for(R=0;(R|0)<=(x|0);R=R+4|0){A=e[w+R>>2]|0;L=(f(I,A&65535)|0)+(N&65535)|0;M=((f(I,A>>>16)|0)+(L>>>16)|0)+(N>>>16)|0;A=L&65535|M<<16;N=M>>>16;z=e[u+Q+R>>2]|0;L=((z&65535)-(A&65535)|0)+O|0;M=((z>>>16)-(A>>>16)|0)+(L>>16)|0;O=M>>16;e[u+Q+R>>2]=M<<16|L&65535}L=((C&65535)-(N&65535)|0)+O|0;M=((C>>>16)-(N>>>16)|0)+(L>>16)|0;O=M>>16;if(O){I=I-1|0;O=0;for(R=0;(R|0)<=(x|0);R=R+4|0){A=e[w+R>>2]|0;z=e[u+Q+R>>2]|0;L=((z&65535)+(A&65535)|0)+O|0;M=((z>>>16)+(A>>>16)|0)+(L>>>16)|0;O=M>>>16;e[u+Q+R>>2]=L&65535|M<<16}}e[y+Q>>2]=H<<16|I;C=e[u+P>>2]|0}if(B){D=e[u>>2]|0;for(P=4;(P|0)<=(x|0);P=P+4|0){z=e[u+P>>2]|0;e[u+P-4>>2]=z<<(32-B|0)|D>>>B;D=z}e[u+x>>2]=D>>>B}}function t(u,v,w,x,y,z){u=u|0;v=v|0;w=w|0;x=x|0;y=y|0;z=z|0;var A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;A=h(x<<1)|0;k(x<<1,0,A);j(v,u,A);for(L=0;(L|0)<(x|0);L=L+4|0){C=e[A+L>>2]|0,D=C&65535,C=C>>>16;F=y>>>16,E=y&65535;G=f(D,E)|0,H=((f(D,F)|0)+(f(C,E)|0)|0)+(G>>>16)|0;D=G&65535,C=H&65535;K=0;for(M=0;(M|0)<(x|0);M=M+4|0){N=L+M|0;F=e[w+M>>2]|0,E=F&65535,F=F>>>16;J=e[A+N>>2]|0;G=((f(D,E)|0)+(K&65535)|0)+(J&65535)|0;H=((f(D,F)|0)+(K>>>16)|0)+(J>>>16)|0;I=((f(C,E)|0)+(H&65535)|0)+(G>>>16)|0;K=((f(C,F)|0)+(I>>>16)|0)+(H>>>16)|0;J=I<<16|G&65535;e[A+N>>2]=J}N=L+M|0;J=e[A+N>>2]|0;G=((J&65535)+(K&65535)|0)+B|0;H=((J>>>16)+(K>>>16)|0)+(G>>>16)|0;e[A+N>>2]=H<<16|G&65535;B=H>>>16}j(x,A+x|0,z);i(x<<1);if(B|(m(w,x,z,x)|0)<=0){p(z,x,w,x,z,x)|0}}return{sreset:g,salloc:h,sfree:i,z:k,tst:n,neg:l,cmp:m,add:o,sub:p,mul:q,sqr:r,div:s,mredc:t}}function Za(a){return a instanceof _a}function $a(a,b){return a*b|0}function _a(a){var b=Uc,c=0,d=0;if(n(a)&&(a=f(a)),o(a)&&(a=new Uint8Array(a)),void 0===a);else if(m(a)){var e=Math.abs(a);e>4294967295?(b=new Uint32Array(2),b[0]=0|e,b[1]=e/4294967296|0,c=52):e>0?(b=new Uint32Array(1),b[0]=e,c=32):(b=Uc,c=0),d=0>a?-1:1}else if(p(a)){for(var g=0;!a[g];g++);if(c=8*(a.length-g),!c)return Wc;b=new Uint32Array(c+31>>5);for(var h=a.length-4;h>=g;h-=4)b[a.length-4-h>>2]=a[h]<<24|a[h+1]<<16|a[h+2]<<8|a[h+3];g-h===3?b[b.length-1]=a[g]:g-h===2?b[b.length-1]=a[g]<<8|a[g+1]:g-h===1&&(b[b.length-1]=a[g]<<16|a[g+1]<<8|a[g+2]),d=1}else{if(\"object\"!=typeof a||null===a)throw new TypeError(\"number is of unexpected type\");b=new Uint32Array(a.limbs),c=a.bitLength,d=a.sign}this.limbs=b,this.bitLength=c,this.sign=d}function ab(a){a=a||16;var b=this.limbs,c=this.bitLength,e=\"\";if(16!==a)throw new d(\"bad radix\");for(var f=(c+31>>5)-1;f>=0;f--){var g=b[f].toString(16);e+=\"00000000\".substr(g.length),e+=g}return e=e.replace(/^0+/,\"\"),e.length||(e=\"0\"),this.sign<0&&(e=\"-\"+e),e}function bb(){var a=this.bitLength,b=this.limbs;if(0===a)return new Uint8Array(0);for(var c=a+7>>3,d=new Uint8Array(c),e=0;c>e;e++){var f=c-e-1;d[e]=b[f>>2]>>((3&f)<<3)}return d}function cb(){var a=this.limbs,b=this.bitLength,c=this.sign;if(!c)return 0;if(32>=b)return c*(a[0]>>>0);if(52>=b)return c*(4294967296*(a[1]>>>0)+(a[0]>>>0));var d,e,f=0;for(d=a.length-1;d>=0;d--)if(0!==(e=a[d])){for(;0===(e<<f&2147483648);)f++;break}return 0===d?c*(a[0]>>>0):c*(1048576*((a[d]<<f|(f?a[d-1]>>>32-f:0))>>>0)+((a[d-1]<<f|(f&&d>1?a[d-2]>>>32-f:0))>>>12))*Math.pow(2,32*d-f-52)}function db(a){var b=this.limbs,c=this.bitLength;if(a>=c)return this;var d=new _a,e=a+31>>5,f=a%32;return d.limbs=new Uint32Array(b.subarray(0,e)),d.bitLength=a,d.sign=this.sign,f&&(d.limbs[e-1]&=-1>>>32-f),d}function eb(a,b){if(!m(a))throw new TypeError(\"TODO\");if(void 0!==b&&!m(b))throw new TypeError(\"TODO\");var c=this.limbs,d=this.bitLength;if(0>a)throw new RangeError(\"TODO\");if(a>=d)return Wc;(void 0===b||b>d-a)&&(b=d-a);var e,f=new _a,g=a>>5,h=a+b+31>>5,i=b+31>>5,j=a%32,k=b%32;if(e=new Uint32Array(i),j){for(var l=0;h-g-1>l;l++)e[l]=c[g+l]>>>j|c[g+l+1]<<32-j;e[l]=c[g+l]>>>j}else e.set(c.subarray(g,h));return k&&(e[i-1]&=-1>>>32-k),f.limbs=e,f.bitLength=b,f.sign=this.sign,f}function fb(){var a=new _a;return a.limbs=this.limbs,a.bitLength=this.bitLength,a.sign=-1*this.sign,a}function gb(a){Za(a)||(a=new _a(a));var b=this.limbs,c=b.length,d=a.limbs,e=d.length,f=0;return this.sign<a.sign?-1:this.sign>a.sign?1:(Tc.set(b,0),Tc.set(d,c),f=Rc.cmp(0,c<<2,c<<2,e<<2),f*this.sign)}function hb(a){if(Za(a)||(a=new _a(a)),!this.sign)return a;if(!a.sign)return this;var b,c,d,e,f=this.bitLength,g=this.limbs,h=g.length,i=this.sign,j=a.bitLength,k=a.limbs,l=k.length,m=a.sign,n=new _a;b=(f>j?f:j)+(i*m>0?1:0),c=b+31>>5,Rc.sreset();var o=Rc.salloc(h<<2),p=Rc.salloc(l<<2),q=Rc.salloc(c<<2);return Rc.z(q-o+(c<<2),0,o),Tc.set(g,o>>2),Tc.set(k,p>>2),i*m>0?(Rc.add(o,h<<2,p,l<<2,q,c<<2),d=i):i>m?(e=Rc.sub(o,h<<2,p,l<<2,q,c<<2),d=e?m:i):(e=Rc.sub(p,l<<2,o,h<<2,q,c<<2),d=e?i:m),e&&Rc.neg(q,c<<2,q,c<<2),0===Rc.tst(q,c<<2)?Wc:(n.limbs=new Uint32Array(Tc.subarray(q>>2,(q>>2)+c)),n.bitLength=b,n.sign=d,n)}function ib(a){return Za(a)||(a=new _a(a)),this.add(a.negate())}function jb(a){if(Za(a)||(a=new _a(a)),!this.sign||!a.sign)return Wc;var b,c,d=this.bitLength,e=this.limbs,f=e.length,g=a.bitLength,h=a.limbs,i=h.length,j=new _a;b=d+g,c=b+31>>5,Rc.sreset();var k=Rc.salloc(f<<2),l=Rc.salloc(i<<2),m=Rc.salloc(c<<2);return Rc.z(m-k+(c<<2),0,k),Tc.set(e,k>>2),Tc.set(h,l>>2),Rc.mul(k,f<<2,l,i<<2,m,c<<2),j.limbs=new Uint32Array(Tc.subarray(m>>2,(m>>2)+c)),j.sign=this.sign*a.sign,j.bitLength=b,j}function kb(){if(!this.sign)return Wc;var a,b,c=this.bitLength,d=this.limbs,e=d.length,f=new _a;a=c<<1,b=a+31>>5,Rc.sreset();var g=Rc.salloc(e<<2),h=Rc.salloc(b<<2);return Rc.z(h-g+(b<<2),0,g),Tc.set(d,g>>2),Rc.sqr(g,e<<2,h),f.limbs=new Uint32Array(Tc.subarray(h>>2,(h>>2)+b)),f.bitLength=a,f.sign=1,f}function lb(a){Za(a)||(a=new _a(a));var b,c,d=this.bitLength,e=this.limbs,f=e.length,g=a.bitLength,h=a.limbs,i=h.length,j=Wc,k=Wc;Rc.sreset();var l=Rc.salloc(f<<2),m=Rc.salloc(i<<2),n=Rc.salloc(f<<2);return Rc.z(n-l+(f<<2),0,l),Tc.set(e,l>>2),Tc.set(h,m>>2),Rc.div(l,f<<2,m,i<<2,n),b=Rc.tst(n,f<<2)>>2,b&&(j=new _a,j.limbs=new Uint32Array(Tc.subarray(n>>2,(n>>2)+b)),j.bitLength=b<<5>d?d:b<<5,j.sign=this.sign*a.sign),c=Rc.tst(l,i<<2)>>2,c&&(k=new _a,k.limbs=new Uint32Array(Tc.subarray(l>>2,(l>>2)+c)),k.bitLength=c<<5>g?g:c<<5,k.sign=this.sign),{quotient:j,remainder:k}}function mb(a,b){var c,d,e,f,g=0>a?-1:1,h=0>b?-1:1,i=1,j=0,k=0,l=1;for(a*=g,b*=h,f=b>a,f&&(e=a,a=b,b=e,e=g,g=h,h=e),d=Math.floor(a/b),c=a-d*b;c;)e=i-d*j,i=j,j=e,e=k-d*l,k=l,l=e,a=b,b=c,d=Math.floor(a/b),c=a-d*b;return j*=g,l*=h,f&&(e=j,j=l,l=e),{gcd:b,x:j,y:l}}function nb(a,b){Za(a)||(a=new _a(a)),Za(b)||(b=new _a(b));var c=a.sign,d=b.sign;0>c&&(a=a.negate()),0>d&&(b=b.negate());var e=a.compare(b);if(0>e){var f=a;a=b,b=f,f=c,c=d,d=f}var g,h,i,j=Xc,k=Wc,l=b.bitLength,m=Wc,n=Xc,o=a.bitLength;for(g=a.divide(b);(h=g.remainder)!==Wc;)i=g.quotient,g=j.subtract(i.multiply(k).clamp(l)).clamp(l),j=k,k=g,g=m.subtract(i.multiply(n).clamp(o)).clamp(o),m=n,n=g,a=b,b=h,g=a.divide(b);if(0>c&&(k=k.negate()),0>d&&(n=n.negate()),0>e){var f=k;k=n,n=f}return{gcd:b,x:k,y:n}}function ob(){if(_a.apply(this,arguments),this.valueOf()<1)throw new RangeError;if(!(this.bitLength<=32)){var a;if(1&this.limbs[0]){var b=(this.bitLength+31&-32)+1,c=new Uint32Array(b+31>>5);c[c.length-1]=1,a=new _a,a.sign=1,a.bitLength=b,a.limbs=c;var d=mb(4294967296,this.limbs[0]).y;this.coefficient=0>d?-d:4294967296-d,this.comodulus=a,this.comodulusRemainder=a.divide(this).remainder,this.comodulusRemainderSquare=a.square().divide(this).remainder}}}function pb(a){return Za(a)||(a=new _a(a)),a.bitLength<=32&&this.bitLength<=32?new _a(a.valueOf()%this.valueOf()):a.compare(this)<0?a:a.divide(this).remainder}function qb(a){a=this.reduce(a);var b=nb(this,a);return 1!==b.gcd.valueOf()?null:(b=b.y,b.sign<0&&(b=b.add(this).clamp(this.bitLength)),b)}function rb(a,b){Za(a)||(a=new _a(a)),Za(b)||(b=new _a(b));for(var c=0,d=0;d<b.limbs.length;d++)for(var e=b.limbs[d];e;)1&e&&c++,e>>>=1;var f=8;b.bitLength<=4536&&(f=7),b.bitLength<=1736&&(f=6),b.bitLength<=630&&(f=5),b.bitLength<=210&&(f=4),b.bitLength<=60&&(f=3),b.bitLength<=12&&(f=2),1<<f-1>=c&&(f=1),a=sb(this.reduce(a).multiply(this.comodulusRemainderSquare),this);var g=sb(a.square(),this),h=new Array(1<<f-1);h[0]=a,h[1]=sb(a.multiply(g),this);for(var d=2;1<<f-1>d;d++)h[d]=sb(h[d-1].multiply(g),this);for(var i=this.comodulusRemainder,j=i,d=b.limbs.length-1;d>=0;d--)for(var e=b.limbs[d],k=32;k>0;)if(2147483648&e){for(var l=e>>>32-f,m=f;0===(1&l);)l>>>=1,m--;for(var n=h[l>>>1];l;)l>>>=1,j!==i&&(j=sb(j.square(),this));j=j!==i?sb(j.multiply(n),this):n,e<<=m,k-=m}else j!==i&&(j=sb(j.square(),this)),e<<=1,k--;return j=sb(j,this)}function sb(a,b){var c=a.limbs,d=c.length,e=b.limbs,f=e.length,g=b.coefficient;Rc.sreset();var h=Rc.salloc(d<<2),i=Rc.salloc(f<<2),j=Rc.salloc(f<<2);Rc.z(j-h+(f<<2),0,h),Tc.set(c,h>>2),Tc.set(e,i>>2),Rc.mredc(h,d<<2,i,f<<2,g,j);var k=new _a;return k.limbs=new Uint32Array(Tc.subarray(j>>2,(j>>2)+f)),k.bitLength=b.bitLength,k.sign=1,k}function tb(a){var b=new _a(this),c=0;for(b.limbs[0]-=1;0===b.limbs[c>>5];)c+=32;for(;0===(b.limbs[c>>5]>>(31&c)&1);)c++;b=b.slice(c);for(var d=new ob(this),e=this.subtract(Xc),f=new _a(this),g=this.limbs.length-1;0===f.limbs[g];)g--;for(;--a>=0;){for(Wa(f.limbs),f.limbs[0]<2&&(f.limbs[0]+=2);f.compare(e)>=0;)f.limbs[g]>>>=1;var h=d.power(f,b);if(0!==h.compare(Xc)&&0!==h.compare(e)){for(var i=c;--i>0;){if(h=h.square().divide(d).remainder,0===h.compare(Xc))return!1;if(0===h.compare(e))break}if(0===i)return!1}}return!0}function ub(a){a=a||80;var b=this.limbs,c=0;if(0===(1&b[0]))return!1;if(1>=a)return!0;var d=0,e=0,f=0;for(c=0;c<b.length;c++){for(var g=b[c];g;)d+=3&g,g>>>=2;for(var h=b[c];h;)e+=3&h,h>>>=2,e-=3&h,h>>>=2;for(var i=b[c];i;)f+=15&i,i>>>=4,f-=15&i,i>>>=4}return d%3&&e%5&&f%17?2>=a?!0:tb.call(this,a>>>1):!1}function vb(a){if(Zc.length>=a)return Zc.slice(0,a);for(var b=Zc[Zc.length-1]+2;Zc.length<a;b+=2){for(var c=0,d=Zc[c];b>=d*d&&b%d!=0;d=Zc[++c]);d*d>b&&Zc.push(b)}return Zc}function wb(a,c){var d=a+31>>5,e=new _a({sign:1,bitLength:a,limbs:d}),f=e.limbs,g=1e4;512>=a&&(g=2200),256>=a&&(g=600);var h=vb(g),i=new Uint32Array(g),j=a*b.Math.LN2|0,k=27;for(a>=250&&(k=12),a>=450&&(k=6),a>=850&&(k=3),a>=1300&&(k=2);;){Wa(f),f[0]|=1,f[d-1]|=1<<(a-1&31),31&a&&(f[d-1]&=l(a+1&31)-1),i[0]=1;for(var m=1;g>m;m++)i[m]=e.divide(h[m]).remainder.valueOf();a:for(var n=0;j>n;n+=2,f[0]+=2){for(var m=1;g>m;m++)if((i[m]+n)%h[m]===0)continue a;if((\"function\"!=typeof c||c(e))&&tb.call(e,k))return e}}}function xb(a){a=a||{},this.key=null,this.result=null,this.reset(a)}function yb(a){a=a||{},this.result=null;var b=a.key;if(void 0!==b){if(!(b instanceof Array))throw new TypeError(\"unexpected key type\");var c=b.length;if(2!==c&&3!==c&&8!==c)throw new SyntaxError(\"unexpected key type\");var d=[];d[0]=new ob(b[0]),d[1]=new _a(b[1]),c>2&&(d[2]=new _a(b[2])),c>3&&(d[3]=new ob(b[3]),d[4]=new ob(b[4]),d[5]=new _a(b[5]),d[6]=new _a(b[6]),d[7]=new _a(b[7])),this.key=d}return this}function zb(a){if(!this.key)throw new c(\"no key is associated with the instance\");n(a)&&(a=f(a)),o(a)&&(a=new Uint8Array(a));var b;if(p(a))b=new _a(a);else{if(!Za(a))throw new TypeError(\"unexpected data type\");b=a}if(this.key[0].compare(b)<=0)throw new RangeError(\"data too large\");var d=this.key[0],e=this.key[1],g=d.power(b,e).toBytes(),h=d.bitLength+7>>3;if(g.length<h){var i=new Uint8Array(h);i.set(g,h-g.length),g=i}return this.result=g,this}function Ab(a){if(!this.key)throw new c(\"no key is associated with the instance\");if(this.key.length<3)throw new c(\"key isn't suitable for decription\");n(a)&&(a=f(a)),o(a)&&(a=new Uint8Array(a));var b;if(p(a))b=new _a(a);else{if(!Za(a))throw new TypeError(\"unexpected data type\");b=a}if(this.key[0].compare(b)<=0)throw new RangeError(\"data too large\");var d;if(this.key.length>3){for(var e=this.key[0],g=this.key[3],h=this.key[4],i=this.key[5],j=this.key[6],k=this.key[7],l=g.power(b,i),m=h.power(b,j),q=l.subtract(m);q.sign<0;)q=q.add(g);var r=g.reduce(k.multiply(q));d=r.multiply(h).add(m).clamp(e.bitLength).toBytes()}else{var e=this.key[0],s=this.key[2];d=e.power(b,s).toBytes()}var t=e.bitLength+7>>3;if(d.length<t){var u=new Uint8Array(t);u.set(d,t-d.length),d=u}return this.result=d,this}function Bb(a,b){if(a=a||2048,b=b||65537,512>a)throw new d(\"bit length is too small\");if(n(b)&&(b=f(b)),o(b)&&(b=new Uint8Array(b)),!(p(b)||m(b)||Za(b)))throw new TypeError(\"unexpected exponent type\");if(b=new _a(b),0===(1&b.limbs[0]))throw new d(\"exponent must be an odd number\");var c,b,e,g,h,i,j,k,l,q;g=wb(a>>1,function(a){return i=new _a(a),i.limbs[0]-=1,1==nb(i,b).gcd.valueOf()}),h=wb(a-(a>>1),function(d){return c=new ob(g.multiply(d)),c.limbs[(a+31>>5)-1]>>>(a-1&31)?(j=new _a(d),j.limbs[0]-=1,1==nb(j,b).gcd.valueOf()):!1}),e=new ob(i.multiply(j)).inverse(b),k=e.divide(i).remainder,l=e.divide(j).remainder,g=new ob(g),h=new ob(h);var q=g.inverse(h);return[c,b,e,g,h,k,l,q]}function Cb(a){if(a=a||{},!a.hash)throw new SyntaxError(\"option 'hash' is required\");if(!a.hash.HASH_SIZE)throw new SyntaxError(\"option 'hash' supplied doesn't seem to be a valid hash function\");this.hash=a.hash,this.label=null,this.reset(a)}function Db(a){a=a||{};var b=a.label;if(void 0!==b){if(o(b)||p(b))b=new Uint8Array(b);else{if(!n(b))throw new TypeError(\"unexpected label type\");b=f(b)}this.label=b.length>0?b:null}else this.label=null;yb.call(this,a)}function Eb(a){if(!this.key)throw new c(\"no key is associated with the instance\");var b=Math.ceil(this.key[0].bitLength/8),e=this.hash.HASH_SIZE,g=a.byteLength||a.length||0,h=b-g-2*e-2;if(g>b-2*this.hash.HASH_SIZE-2)throw new d(\"data too large\");var i=new Uint8Array(b),j=i.subarray(1,e+1),k=i.subarray(e+1);if(p(a))k.set(a,e+h+1);else if(o(a))k.set(new Uint8Array(a),e+h+1);else{if(!n(a))throw new TypeError(\"unexpected data type\");k.set(f(a),e+h+1)}k.set(this.hash.reset().process(this.label||\"\").finish().result,0),k[e+h]=1,Wa(j);for(var l=Gb.call(this,j,k.length),m=0;m<k.length;m++)k[m]^=l[m];for(var q=Gb.call(this,k,j.length),m=0;m<j.length;m++)j[m]^=q[m];return zb.call(this,i),this}function Fb(a){if(!this.key)throw new c(\"no key is associated with the instance\");var b=Math.ceil(this.key[0].bitLength/8),f=this.hash.HASH_SIZE,g=a.byteLength||a.length||0;if(g!==b)throw new d(\"bad data\");Ab.call(this,a);var h=this.result[0],i=this.result.subarray(1,f+1),j=this.result.subarray(f+1);if(0!==h)throw new e(\"decryption failed\");for(var k=Gb.call(this,j,i.length),l=0;l<i.length;l++)i[l]^=k[l];for(var m=Gb.call(this,i,j.length),l=0;l<j.length;l++)j[l]^=m[l];for(var n=this.hash.reset().process(this.label||\"\").finish().result,l=0;f>l;l++)if(n[l]!==j[l])throw new e(\"decryption failed\");for(var o=f;o<j.length;o++){var p=j[o];if(1===p)break;if(0!==p)throw new e(\"decryption failed\")}if(o===j.length)throw new e(\"decryption failed\");return this.result=j.subarray(o+1),this}function Gb(a,b){a=a||\"\",b=b||0;for(var c=this.hash.HASH_SIZE,d=new Uint8Array(b),e=new Uint8Array(4),f=Math.ceil(b/c),g=0;f>g;g++){e[0]=g>>>24,e[1]=g>>>16&255,e[2]=g>>>8&255,e[3]=255&g;var h=d.subarray(g*c),i=this.hash.reset().process(a).process(e).finish().result;i.length>h.length&&(i=i.subarray(0,h.length)),h.set(i)}return d}function Hb(a){if(a=a||{},!a.hash)throw new SyntaxError(\"option 'hash' is required\");if(!a.hash.HASH_SIZE)throw new SyntaxError(\"option 'hash' supplied doesn't seem to be a valid hash function\");this.hash=a.hash,this.saltLength=4,this.reset(a)}function Ib(a){a=a||{},yb.call(this,a);var b=a.saltLength;if(void 0!==b){if(!m(b)||0>b)throw new TypeError(\"saltLength should be a non-negative number\");if(null!==this.key&&Math.ceil((this.key[0].bitLength-1)/8)<this.hash.HASH_SIZE+b+2)throw new SyntaxError(\"saltLength is too large\");this.saltLength=b}else this.saltLength=4}function Jb(a){if(!this.key)throw new c(\"no key is associated with the instance\");var b=this.key[0].bitLength,d=this.hash.HASH_SIZE,e=Math.ceil((b-1)/8),f=this.saltLength,g=e-f-d-2,h=new Uint8Array(e),i=h.subarray(e-d-1,e-1),j=h.subarray(0,e-d-1),k=j.subarray(g+1),l=new Uint8Array(8+d+f),m=l.subarray(8,8+d),n=l.subarray(8+d);m.set(this.hash.reset().process(a).finish().result),f>0&&Wa(n),j[g]=1,k.set(n),i.set(this.hash.reset().process(l).finish().result);for(var o=Gb.call(this,i,j.length),p=0;p<j.length;p++)j[p]^=o[p];h[e-1]=188;var q=8*e-b+1;return q%8&&(h[0]&=255>>>q),Ab.call(this,h),this}function Kb(a,b){if(!this.key)throw new c(\"no key is associated with the instance\");var d=this.key[0].bitLength,f=this.hash.HASH_SIZE,g=Math.ceil((d-1)/8),h=this.saltLength,i=g-h-f-2;zb.call(this,a);var j=this.result;if(188!==j[g-1])throw new e(\"bad signature\");var k=j.subarray(g-f-1,g-1),l=j.subarray(0,g-f-1),m=l.subarray(i+1),n=8*g-d+1;if(n%8&&j[0]>>>8-n)throw new e(\"bad signature\");for(var o=Gb.call(this,k,l.length),p=0;p<l.length;p++)l[p]^=o[p];n%8&&(j[0]&=255>>>n);for(var p=0;i>p;p++)if(0!==l[p])throw new e(\"bad signature\");if(1!==l[i])throw new e(\"bad signature\");var q=new Uint8Array(8+f+h),r=q.subarray(8,8+f),s=q.subarray(8+f);r.set(this.hash.reset().process(b).finish().result),s.set(m);for(var t=this.hash.reset().process(q).finish().result,p=0;f>p;p++)if(k[p]!==t[p])throw new e(\"bad signature\");return this}function Lb(a,b){if(void 0===a)throw new SyntaxError(\"bitlen required\");if(void 0===b)throw new SyntaxError(\"e required\");for(var c=Bb(a,b),d=0;d<c.length;d++)Za(c[d])&&(c[d]=c[d].toBytes());return c}function Mb(a,b,c){if(void 0===a)throw new SyntaxError(\"data required\");if(void 0===b)throw new SyntaxError(\"key required\");return new Cb({hash:ba(),key:b,label:c}).encrypt(a).result}function Nb(a,b,c){if(void 0===a)throw new SyntaxError(\"data required\");if(void 0===b)throw new SyntaxError(\"key required\");return new Cb({hash:ba(),key:b,label:c}).decrypt(a).result}function Ob(a,b,c){if(void 0===a)throw new SyntaxError(\"data required\");if(void 0===b)throw new SyntaxError(\"key required\");return new Cb({hash:ha(),key:b,label:c}).encrypt(a).result}function Pb(a,b,c){if(void 0===a)throw new SyntaxError(\"data required\");if(void 0===b)throw new SyntaxError(\"key required\");return new Cb({hash:ha(),key:b,label:c}).decrypt(a).result}function Qb(a,b,c){if(void 0===a)throw new SyntaxError(\"data required\");if(void 0===b)throw new SyntaxError(\"key required\");return new Hb({hash:ba(),key:b,saltLength:c}).sign(a).result}function Rb(a,b,c,d){if(void 0===a)throw new SyntaxError(\"signature required\");if(void 0===b)throw new SyntaxError(\"data required\");if(void 0===c)throw new SyntaxError(\"key required\");try{return new Hb({hash:ba(),key:c,saltLength:d}).verify(a,b),!0}catch(a){if(!(a instanceof e))throw a}return!1}function Sb(a,b,c){if(void 0===a)throw new SyntaxError(\"data required\");if(void 0===b)throw new SyntaxError(\"key required\");return new Hb({hash:ha(),key:b,saltLength:c}).sign(a).result}function Tb(a,b,c,d){if(void 0===a)throw new SyntaxError(\"signature required\");if(void 0===b)throw new SyntaxError(\"data required\");if(void 0===c)throw new SyntaxError(\"key required\");try{return new Hb({hash:ha(),key:c,saltLength:d}).verify(a,b),!0}catch(a){if(!(a instanceof e))throw a}return!1}c.prototype=Object.create(Error.prototype,{name:{value:\"IllegalStateError\"}}),d.prototype=Object.create(Error.prototype,{name:{value:\"IllegalArgumentError\"}}),e.prototype=Object.create(Error.prototype,{name:{value:\"SecurityError\"}});var Ub=b.Float64Array||b.Float32Array,Vb=b.console,Wb=void 0===b.location||!b.location.protocol.search(/https:|file:|chrome:|chrome-extension:/);Wb||void 0===Vb||Vb.warn(\"asmCrypto seems to be load from an insecure origin; this may cause to MitM-attack vulnerability. Consider using secure transport protocol.\"),a.string_to_bytes=f,a.hex_to_bytes=g,a.base64_to_bytes=h,a.bytes_to_string=i,a.bytes_to_hex=j,a.bytes_to_base64=k,b.IllegalStateError=c,b.IllegalArgumentError=d,b.SecurityError=e;var Xb=function(){\"use strict\";function a(){e=[],f=[];var a,b,c=1;for(a=0;255>a;a++)e[a]=c,b=128&c,c<<=1,c&=255,128===b&&(c^=27),c^=e[a],f[e[a]]=a;e[255]=e[0],f[0]=0,k=!0}function b(a,b){var c=e[(f[a]+f[b])%255];return(0===a||0===b)&&(c=0),c}function c(a){var b=e[255-f[a]];return 0===a&&(b=0),b}function d(){function d(a){var b,d,e;for(d=e=c(a),b=0;4>b;b++)d=255&(d<<1|d>>>7),e^=d;return e^=99}k||a(),g=[],h=[],i=[[],[],[],[]],j=[[],[],[],[]];for(var e=0;256>e;e++){var f=d(e);g[e]=f,h[f]=e,i[0][e]=b(2,f)<<24|f<<16|f<<8|b(3,f),j[0][f]=b(14,e)<<24|b(9,e)<<16|b(13,e)<<8|b(11,e);for(var l=1;4>l;l++)i[l][e]=i[l-1][e]>>>8|i[l-1][e]<<24,j[l][f]=j[l-1][f]>>>8|j[l-1][f]<<24}}var e,f,g,h,i,j,k=!1,l=!1,m=function(a,b,c){function e(a,b,c,d,e,h,i,k,l){var m=f.subarray(0,60),o=f.subarray(256,316);m.set([b,c,d,e,h,i,k,l]);for(var p=a,q=1;4*a+28>p;p++){var r=m[p-1];(p%a===0||8===a&&p%a===4)&&(r=g[r>>>24]<<24^g[r>>>16&255]<<16^g[r>>>8&255]<<8^g[255&r]),p%a===0&&(r=r<<8^r>>>24^q<<24,q=q<<1^(128&q?27:0)),m[p]=m[p-a]^r}for(var s=0;p>s;s+=4)for(var t=0;4>t;t++){var r=m[p-(4+s)+(4-t)%4];4>s||s>=p-4?o[s+t]=r:o[s+t]=j[0][g[r>>>24]]^j[1][g[r>>>16&255]]^j[2][g[r>>>8&255]]^j[3][g[255&r]]}n.set_rounds(a+5)}l||d();var f=new Uint32Array(c);f.set(g,512),f.set(h,768);for(var k=0;4>k;k++)f.set(i[k],4096+1024*k>>2),f.set(j[k],8192+1024*k>>2);var m={Uint8Array:Uint8Array,Uint32Array:Uint32Array},n=function(a,b,c){\"use asm\";var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;var y=new a.Uint32Array(c),z=new a.Uint8Array(c);function A(X,Y,Z,$,_,aa,ba,ca){X=X|0;Y=Y|0;Z=Z|0;$=$|0;_=_|0;aa=aa|0;ba=ba|0;ca=ca|0;var da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0;da=Z|1024,ea=Z|2048,fa=Z|3072;_=_^y[(X|0)>>2],aa=aa^y[(X|4)>>2],ba=ba^y[(X|8)>>2],ca=ca^y[(X|12)>>2];for(ka=16;(ka|0)<=$<<4;ka=ka+16|0){ga=y[(Z|_>>22&1020)>>2]^y[(da|aa>>14&1020)>>2]^y[(ea|ba>>6&1020)>>2]^y[(fa|ca<<2&1020)>>2]^y[(X|ka|0)>>2],ha=y[(Z|aa>>22&1020)>>2]^y[(da|ba>>14&1020)>>2]^y[(ea|ca>>6&1020)>>2]^y[(fa|_<<2&1020)>>2]^y[(X|ka|4)>>2],ia=y[(Z|ba>>22&1020)>>2]^y[(da|ca>>14&1020)>>2]^y[(ea|_>>6&1020)>>2]^y[(fa|aa<<2&1020)>>2]^y[(X|ka|8)>>2],ja=y[(Z|ca>>22&1020)>>2]^y[(da|_>>14&1020)>>2]^y[(ea|aa>>6&1020)>>2]^y[(fa|ba<<2&1020)>>2]^y[(X|ka|12)>>2];_=ga,aa=ha,ba=ia,ca=ja}d=y[(Y|_>>22&1020)>>2]<<24^y[(Y|aa>>14&1020)>>2]<<16^y[(Y|ba>>6&1020)>>2]<<8^y[(Y|ca<<2&1020)>>2]^y[(X|ka|0)>>2],e=y[(Y|aa>>22&1020)>>2]<<24^y[(Y|ba>>14&1020)>>2]<<16^y[(Y|ca>>6&1020)>>2]<<8^y[(Y|_<<2&1020)>>2]^y[(X|ka|4)>>2],f=y[(Y|ba>>22&1020)>>2]<<24^y[(Y|ca>>14&1020)>>2]<<16^y[(Y|_>>6&1020)>>2]<<8^y[(Y|aa<<2&1020)>>2]^y[(X|ka|8)>>2],g=y[(Y|ca>>22&1020)>>2]<<24^y[(Y|_>>14&1020)>>2]<<16^y[(Y|aa>>6&1020)>>2]<<8^y[(Y|ba<<2&1020)>>2]^y[(X|ka|12)>>2]}function B(X,Y,Z,$){X=X|0;Y=Y|0;Z=Z|0;$=$|0;A(0,2048,4096,x,X,Y,Z,$)}function C(X,Y,Z,$){X=X|0;Y=Y|0;Z=Z|0;$=$|0;var _=0;A(1024,3072,8192,x,X,$,Z,Y);_=e,e=g,g=_}function D(X,Y,Z,$){X=X|0;Y=Y|0;Z=Z|0;$=$|0;A(0,2048,4096,x,h^X,i^Y,j^Z,k^$);h=d,i=e,j=f,k=g}function E(X,Y,Z,$){X=X|0;Y=Y|0;Z=Z|0;$=$|0;var _=0;A(1024,3072,8192,x,X,$,Z,Y);_=e,e=g,g=_;d=d^h,e=e^i,f=f^j,g=g^k;h=X,i=Y,j=Z,k=$}function F(X,Y,Z,$){X=X|0;Y=Y|0;Z=Z|0;$=$|0;A(0,2048,4096,x,h,i,j,k);h=d=d^X,i=e=e^Y,j=f=f^Z,k=g=g^$}function G(X,Y,Z,$){X=X|0;Y=Y|0;Z=Z|0;$=$|0;A(0,2048,4096,x,h,i,j,k);d=d^X,e=e^Y,f=f^Z,g=g^$;h=X,i=Y,j=Z,k=$}function H(X,Y,Z,$){X=X|0;Y=Y|0;Z=Z|0;$=$|0;A(0,2048,4096,x,h,i,j,k);h=d,i=e,j=f,k=g;d=d^X,e=e^Y,f=f^Z,g=g^$}function I(X,Y,Z,$){X=X|0;Y=Y|0;Z=Z|0;$=$|0;A(0,2048,4096,x,l,m,n,o);o=~s&o|s&o+1,n=~r&n|r&n+((o|0)==0),m=~q&m|q&m+((n|0)==0),l=~p&l|p&l+((m|0)==0);d=d^X,e=e^Y,f=f^Z,g=g^$}function J(X,Y,Z,$){X=X|0;Y=Y|0;Z=Z|0;$=$|0;var _=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0;X=X^h,Y=Y^i,Z=Z^j,$=$^k;_=t|0,aa=u|0,ba=v|0,ca=w|0;for(;(ha|0)<128;ha=ha+1|0){if(_>>>31){da=da^X,ea=ea^Y,fa=fa^Z,ga=ga^$}_=_<<1|aa>>>31,aa=aa<<1|ba>>>31,ba=ba<<1|ca>>>31,ca=ca<<1;ia=$&1;$=$>>>1|Z<<31,Z=Z>>>1|Y<<31,Y=Y>>>1|X<<31,X=X>>>1;if(ia)X=X^3774873600}h=da,i=ea,j=fa,k=ga}function K(X){X=X|0;x=X}function L(X,Y,Z,$){X=X|0;Y=Y|0;Z=Z|0;$=$|0;d=X,e=Y,f=Z,g=$}function M(X,Y,Z,$){X=X|0;Y=Y|0;Z=Z|0;$=$|0;h=X,i=Y,j=Z,k=$}function N(X,Y,Z,$){X=X|0;Y=Y|0;Z=Z|0;$=$|0;l=X,m=Y,n=Z,o=$}function O(X,Y,Z,$){X=X|0;Y=Y|0;Z=Z|0;$=$|0;p=X,q=Y,r=Z,s=$}function P(X,Y,Z,$){X=X|0;Y=Y|0;Z=Z|0;$=$|0;o=~s&o|s&$,n=~r&n|r&Z,m=~q&m|q&Y,l=~p&l|p&X}function Q(X){X=X|0;if(X&15)return-1;z[X|0]=d>>>24,z[X|1]=d>>>16&255,z[X|2]=d>>>8&255,z[X|3]=d&255,z[X|4]=e>>>24,z[X|5]=e>>>16&255,z[X|6]=e>>>8&255,z[X|7]=e&255,z[X|8]=f>>>24,z[X|9]=f>>>16&255,z[X|10]=f>>>8&255,z[X|11]=f&255,z[X|12]=g>>>24,z[X|13]=g>>>16&255,z[X|14]=g>>>8&255,z[X|15]=g&255;return 16}function R(X){X=X|0;if(X&15)return-1;z[X|0]=h>>>24,z[X|1]=h>>>16&255,z[X|2]=h>>>8&255,z[X|3]=h&255,z[X|4]=i>>>24,z[X|5]=i>>>16&255,z[X|6]=i>>>8&255,z[X|7]=i&255,z[X|8]=j>>>24,z[X|9]=j>>>16&255,z[X|10]=j>>>8&255,z[X|11]=j&255,z[X|12]=k>>>24,z[X|13]=k>>>16&255,z[X|14]=k>>>8&255,z[X|15]=k&255;return 16}function S(){B(0,0,0,0);t=d,u=e,v=f,w=g}function T(X,Y,Z){X=X|0;Y=Y|0;Z=Z|0;var $=0;if(Y&15)return-1;while((Z|0)>=16){V[X&7](z[Y|0]<<24|z[Y|1]<<16|z[Y|2]<<8|z[Y|3],z[Y|4]<<24|z[Y|5]<<16|z[Y|6]<<8|z[Y|7],z[Y|8]<<24|z[Y|9]<<16|z[Y|10]<<8|z[Y|11],z[Y|12]<<24|z[Y|13]<<16|z[Y|14]<<8|z[Y|15]);z[Y|0]=d>>>24,z[Y|1]=d>>>16&255,z[Y|2]=d>>>8&255,z[Y|3]=d&255,z[Y|4]=e>>>24,z[Y|5]=e>>>16&255,z[Y|6]=e>>>8&255,z[Y|7]=e&255,z[Y|8]=f>>>24,z[Y|9]=f>>>16&255,z[Y|10]=f>>>8&255,z[Y|11]=f&255,z[Y|12]=g>>>24,z[Y|13]=g>>>16&255,z[Y|14]=g>>>8&255,z[Y|15]=g&255;$=$+16|0,Y=Y+16|0,Z=Z-16|0}return $|0}function U(X,Y,Z){X=X|0;Y=Y|0;Z=Z|0;var $=0;if(Y&15)return-1;while((Z|0)>=16){W[X&1](z[Y|0]<<24|z[Y|1]<<16|z[Y|2]<<8|z[Y|3],z[Y|4]<<24|z[Y|5]<<16|z[Y|6]<<8|z[Y|7],z[Y|8]<<24|z[Y|9]<<16|z[Y|10]<<8|z[Y|11],z[Y|12]<<24|z[Y|13]<<16|z[Y|14]<<8|z[Y|15]);$=$+16|0,Y=Y+16|0,Z=Z-16|0}return $|0}var V=[B,C,D,E,F,G,H,I];var W=[D,J];return{set_rounds:K,set_state:L,set_iv:M,set_nonce:N,set_mask:O,set_counter:P,get_state:Q,get_iv:R,gcm_init:S,cipher:T,mac:U}}(m,b,c);return n.set_key=e,n};return m.ENC={ECB:0,CBC:2,CFB:4,OFB:6,CTR:7},m.DEC={ECB:1,CBC:3,CFB:5,OFB:6,CTR:7},m.MAC={CBC:0,GCM:1},m.HEAP_DATA=16384,m}(),Yb=C.prototype;Yb.BLOCK_SIZE=16,Yb.reset=x,Yb.encrypt=z,Yb.decrypt=B;var Zb=D.prototype;Zb.BLOCK_SIZE=16,Zb.reset=x,Zb.process=y,Zb.finish=z;var $b=E.prototype;$b.BLOCK_SIZE=16,$b.reset=x,$b.process=A,$b.finish=B;var _b=F.prototype;_b.BLOCK_SIZE=16,_b.reset=I,_b.encrypt=z,_b.decrypt=z;var ac=G.prototype;ac.BLOCK_SIZE=16,ac.reset=I,ac.process=y,ac.finish=z;var bc=68719476704,cc=K.prototype;cc.BLOCK_SIZE=16,cc.reset=N,cc.encrypt=Q,cc.decrypt=T;var dc=L.prototype;dc.BLOCK_SIZE=16,dc.reset=N,dc.process=O,dc.finish=P;var ec=M.prototype;ec.BLOCK_SIZE=16,ec.reset=N,ec.process=R,ec.finish=S;var fc=new Uint8Array(1048576),gc=Xb(b,null,fc.buffer);a.AES_CBC=C,a.AES_CBC.encrypt=U,a.AES_CBC.decrypt=V,a.AES_CBC.Encrypt=D,a.AES_CBC.Decrypt=E,a.AES_GCM=K,a.AES_GCM.encrypt=W,a.AES_GCM.decrypt=X,a.AES_GCM.Encrypt=L,a.AES_GCM.Decrypt=M;var hc=64,ic=20;aa.BLOCK_SIZE=hc,aa.HASH_SIZE=ic;var jc=aa.prototype;jc.reset=Y,jc.process=Z,jc.finish=$;var kc=null;aa.bytes=ca,aa.hex=da,aa.base64=ea,a.SHA1=aa;var lc=64,mc=32;ga.BLOCK_SIZE=lc,ga.HASH_SIZE=mc;var nc=ga.prototype;nc.reset=Y,nc.process=Z,nc.finish=$;var oc=null;ga.bytes=ia,ga.hex=ja,ga.base64=ka,a.SHA256=ga;var pc=la.prototype;pc.reset=oa,pc.process=pa,pc.finish=qa,ra.BLOCK_SIZE=aa.BLOCK_SIZE,ra.HMAC_SIZE=aa.HASH_SIZE;var qc=ra.prototype;qc.reset=sa,qc.process=pa,qc.finish=ta;var rc=null;va.BLOCK_SIZE=ga.BLOCK_SIZE,va.HMAC_SIZE=ga.HASH_SIZE;var sc=va.prototype;sc.reset=wa,sc.process=pa,sc.finish=xa;var tc=null;a.HMAC=la,ra.bytes=za,ra.hex=Aa,ra.base64=Ba,a.HMAC_SHA1=ra,va.bytes=Ca,va.hex=Da,va.base64=Ea,a.HMAC_SHA256=va;var uc=Fa.prototype;uc.reset=Ga,uc.generate=Ha;var vc=Ia.prototype;vc.reset=Ga,vc.generate=Ja;var wc=null,xc=La.prototype;xc.reset=Ga,xc.generate=Ma;var yc=null;a.PBKDF2=a.PBKDF2_HMAC_SHA1={bytes:Oa,hex:Pa,base64:Qa},a.PBKDF2_HMAC_SHA256={bytes:Ra,hex:Sa,base64:Ta};var zc,Ac=function(){function a(){function a(){b^=d<<11,l=l+b|0,d=d+f|0,d^=f>>>2,m=m+d|0,f=f+l|0,f^=l<<8,n=n+f|0,l=l+m|0,l^=m>>>16,o=o+l|0,m=m+n|0,m^=n<<10,p=p+m|0,n=n+o|0,n^=o>>>4,b=b+n|0,o=o+p|0,o^=p<<8,d=d+o|0,p=p+b|0,p^=b>>>9,f=f+p|0,b=b+d|0}var b,d,f,l,m,n,o,p;h=i=j=0,b=d=f=l=m=n=o=p=2654435769;for(var q=0;4>q;q++)a();for(var q=0;256>q;q+=8)b=b+g[0|q]|0,d=d+g[1|q]|0,f=f+g[2|q]|0,l=l+g[3|q]|0,m=m+g[4|q]|0,n=n+g[5|q]|0,o=o+g[6|q]|0,p=p+g[7|q]|0,a(),e.set([b,d,f,l,m,n,o,p],q);for(var q=0;256>q;q+=8)b=b+e[0|q]|0,d=d+e[1|q]|0,f=f+e[2|q]|0,l=l+e[3|q]|0,m=m+e[4|q]|0,n=n+e[5|q]|0,o=o+e[6|q]|0,p=p+e[7|q]|0,a(),e.set([b,d,f,l,m,n,o,p],q);c(1),k=256}function b(b){var c,d,e,h,i;if(q(b))b=new Uint8Array(b.buffer);else if(m(b))h=new Ub(1),h[0]=b,b=new Uint8Array(h.buffer);else if(n(b))b=f(b);else{if(!o(b))throw new TypeError(\"bad seed type\");b=new Uint8Array(b)}for(i=b.length,d=0;i>d;d+=1024){for(e=d,c=0;1024>c&&i>e;e=d|++c)g[c>>2]^=b[e]<<((3&c)<<3);a()}}function c(a){a=a||1;for(var b,c,d;a--;)for(j=j+1|0,i=i+j|0,b=0;256>b;b+=4)h^=h<<13,h=e[b+128&255]+h|0,c=e[0|b],e[0|b]=d=e[c>>>2&255]+(h+i|0)|0,g[0|b]=i=e[d>>>10&255]+c|0,h^=h>>>6,h=e[b+129&255]+h|0,c=e[1|b],e[1|b]=d=e[c>>>2&255]+(h+i|0)|0,g[1|b]=i=e[d>>>10&255]+c|0,h^=h<<2,h=e[b+130&255]+h|0,c=e[2|b],e[2|b]=d=e[c>>>2&255]+(h+i|0)|0,g[2|b]=i=e[d>>>10&255]+c|0,h^=h>>>16,h=e[b+131&255]+h|0,c=e[3|b],e[3|b]=d=e[c>>>2&255]+(h+i|0)|0,g[3|b]=i=e[d>>>10&255]+c|0}function d(){return k--||(c(1),k=255),g[k]}var e=new Uint32Array(256),g=new Uint32Array(256),h=0,i=0,j=0,k=0;return{seed:b,prng:c,rand:d}}(),Vb=b.console,Bc=b.Date.now,Cc=b.Math.random,Dc=b.performance,Ec=b.crypto||b.msCrypto;void 0!==Ec&&(zc=Ec.getRandomValues);var Fc,Gc=Ac.rand,Hc=Ac.seed,Ic=0,Jc=!1,Kc=!1,Lc=0,Mc=256,Nc=!1,Oc=!1,Pc={};if(void 0!==Dc)Fc=function(){return 1e3*Dc.now()|0};else{var Qc=1e3*Bc()|0;Fc=function(){return 1e3*Bc()-Qc|0}}a.random=Xa,a.random.seed=Va,Object.defineProperty(Xa,\"allowWeak\",{get:function(){return Nc},set:function(a){Nc=a}}),Object.defineProperty(Xa,\"skipSystemRNGWarning\",{get:function(){return Oc},set:function(a){Oc=a}}),a.getRandomValues=Wa,a.getRandomValues.seed=Va,Object.defineProperty(Wa,\"allowWeak\",{get:function(){return Nc},set:function(a){Nc=a}}),Object.defineProperty(Wa,\"skipSystemRNGWarning\",{get:function(){return Oc},set:function(a){Oc=a}}),b.Math.random=Xa,void 0===b.crypto&&(b.crypto={}),b.crypto.getRandomValues=Wa;var Rc,Sc={Uint32Array:Uint32Array,Math:b.Math},Tc=new Uint32Array(1048576);void 0===Sc.Math.imul?(Sc.Math.imul=$a,Rc=Ya(Sc,null,Tc.buffer),delete Sc.Math.imul):Rc=Ya(Sc,null,Tc.buffer);var Uc=new Uint32Array(0),Vc=_a.prototype=new Number;Vc.toString=ab,Vc.toBytes=bb,Vc.valueOf=cb,Vc.clamp=db,Vc.slice=eb,Vc.negate=fb,Vc.compare=gb,Vc.add=hb,Vc.subtract=ib,Vc.multiply=jb,Vc.square=kb,Vc.divide=lb;var Wc=new _a(0),Xc=new _a(1);Object.freeze(Wc),Object.freeze(Xc);var Yc=ob.prototype=new _a;Yc.reduce=pb,Yc.inverse=qb,Yc.power=rb;var Zc=[2,3];Vc.isProbablePrime=ub,_a.randomProbablePrime=wb,_a.ZERO=Wc,_a.ONE=Xc,_a.extGCD=nb,a.BigNumber=_a,a.Modulus=ob;var $c=xb.prototype;$c.reset=yb,$c.encrypt=zb,$c.decrypt=Ab,xb.generateKey=Bb;var _c=Cb.prototype;_c.reset=Db,_c.encrypt=Eb,_c.decrypt=Fb;var ad=Hb.prototype;return ad.reset=Ib,ad.sign=Jb,ad.verify=Kb,a.RSA={generateKey:Lb},a.RSA_OAEP=Cb,a.RSA_OAEP_SHA1={encrypt:Mb,decrypt:Nb},a.RSA_OAEP=Cb,a.RSA_OAEP_SHA256={encrypt:Ob,decrypt:Pb},a.RSA_PSS=Hb,a.RSA_PSS_SHA1={sign:Qb,verify:Rb},a.RSA_PSS=Hb,a.RSA_PSS_SHA256={sign:Sb,verify:Tb},\"function\"==typeof define&&define.amd?define([],function(){return a}):\"object\"==typeof module&&module.exports?module.exports=a:b.asmCrypto=a,a}({},this);";
          var blob = new Blob([cryptoString], { type: 'text/javascript' });
          return URL.createObjectURL(blob);
      };
      return LibraryConverterService;
  }());

  /******************************************************************************
  Copyright (c) Microsoft Corporation.

  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.

  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** */
  /* global Reflect, Promise */

  var extendStatics = function(d, b) {
      extendStatics = Object.setPrototypeOf ||
          ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
          function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
      return extendStatics(d, b);
  };

  function __extends$1(d, b) {
      if (typeof b !== "function" && b !== null)
          throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
      extendStatics(d, b);
      function __() { this.constructor = d; }
      d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
  }

  /** PURE_IMPORTS_START  PURE_IMPORTS_END */
  function isFunction(x) {
      return typeof x === 'function';
  }

  /** PURE_IMPORTS_START  PURE_IMPORTS_END */
  var _enable_super_gross_mode_that_will_cause_bad_things = false;
  var config$2 = {
      Promise: undefined,
      set useDeprecatedSynchronousErrorHandling(value) {
          if (value) {
              var error = /*@__PURE__*/ new Error();
              /*@__PURE__*/ console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n' + error.stack);
          }
          _enable_super_gross_mode_that_will_cause_bad_things = value;
      },
      get useDeprecatedSynchronousErrorHandling() {
          return _enable_super_gross_mode_that_will_cause_bad_things;
      },
  };

  /** PURE_IMPORTS_START  PURE_IMPORTS_END */
  function hostReportError(err) {
      setTimeout(function () { throw err; }, 0);
  }

  /** PURE_IMPORTS_START _config,_util_hostReportError PURE_IMPORTS_END */
  var empty = {
      closed: true,
      next: function (value) { },
      error: function (err) {
          if (config$2.useDeprecatedSynchronousErrorHandling) {
              throw err;
          }
          else {
              hostReportError(err);
          }
      },
      complete: function () { }
  };

  /** PURE_IMPORTS_START  PURE_IMPORTS_END */
  var isArray$2 = /*@__PURE__*/ (function () { return Array.isArray || (function (x) { return x && typeof x.length === 'number'; }); })();

  /** PURE_IMPORTS_START  PURE_IMPORTS_END */
  function isObject(x) {
      return x !== null && typeof x === 'object';
  }

  /** PURE_IMPORTS_START  PURE_IMPORTS_END */
  var UnsubscriptionErrorImpl = /*@__PURE__*/ (function () {
      function UnsubscriptionErrorImpl(errors) {
          Error.call(this);
          this.message = errors ?
              errors.length + " errors occurred during unsubscription:\n" + errors.map(function (err, i) { return i + 1 + ") " + err.toString(); }).join('\n  ') : '';
          this.name = 'UnsubscriptionError';
          this.errors = errors;
          return this;
      }
      UnsubscriptionErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);
      return UnsubscriptionErrorImpl;
  })();
  var UnsubscriptionError$1 = UnsubscriptionErrorImpl;

  /** PURE_IMPORTS_START _util_isArray,_util_isObject,_util_isFunction,_util_UnsubscriptionError PURE_IMPORTS_END */
  var Subscription = /*@__PURE__*/ (function () {
      function Subscription(unsubscribe) {
          this.closed = false;
          this._parentOrParents = null;
          this._subscriptions = null;
          if (unsubscribe) {
              this._ctorUnsubscribe = true;
              this._unsubscribe = unsubscribe;
          }
      }
      Subscription.prototype.unsubscribe = function () {
          var errors;
          if (this.closed) {
              return;
          }
          var _a = this, _parentOrParents = _a._parentOrParents, _ctorUnsubscribe = _a._ctorUnsubscribe, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;
          this.closed = true;
          this._parentOrParents = null;
          this._subscriptions = null;
          if (_parentOrParents instanceof Subscription) {
              _parentOrParents.remove(this);
          }
          else if (_parentOrParents !== null) {
              for (var index = 0; index < _parentOrParents.length; ++index) {
                  var parent_1 = _parentOrParents[index];
                  parent_1.remove(this);
              }
          }
          if (isFunction(_unsubscribe)) {
              if (_ctorUnsubscribe) {
                  this._unsubscribe = undefined;
              }
              try {
                  _unsubscribe.call(this);
              }
              catch (e) {
                  errors = e instanceof UnsubscriptionError$1 ? flattenUnsubscriptionErrors(e.errors) : [e];
              }
          }
          if (isArray$2(_subscriptions)) {
              var index = -1;
              var len = _subscriptions.length;
              while (++index < len) {
                  var sub = _subscriptions[index];
                  if (isObject(sub)) {
                      try {
                          sub.unsubscribe();
                      }
                      catch (e) {
                          errors = errors || [];
                          if (e instanceof UnsubscriptionError$1) {
                              errors = errors.concat(flattenUnsubscriptionErrors(e.errors));
                          }
                          else {
                              errors.push(e);
                          }
                      }
                  }
              }
          }
          if (errors) {
              throw new UnsubscriptionError$1(errors);
          }
      };
      Subscription.prototype.add = function (teardown) {
          var subscription = teardown;
          if (!teardown) {
              return Subscription.EMPTY;
          }
          switch (typeof teardown) {
              case 'function':
                  subscription = new Subscription(teardown);
              case 'object':
                  if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {
                      return subscription;
                  }
                  else if (this.closed) {
                      subscription.unsubscribe();
                      return subscription;
                  }
                  else if (!(subscription instanceof Subscription)) {
                      var tmp = subscription;
                      subscription = new Subscription();
                      subscription._subscriptions = [tmp];
                  }
                  break;
              default: {
                  throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');
              }
          }
          var _parentOrParents = subscription._parentOrParents;
          if (_parentOrParents === null) {
              subscription._parentOrParents = this;
          }
          else if (_parentOrParents instanceof Subscription) {
              if (_parentOrParents === this) {
                  return subscription;
              }
              subscription._parentOrParents = [_parentOrParents, this];
          }
          else if (_parentOrParents.indexOf(this) === -1) {
              _parentOrParents.push(this);
          }
          else {
              return subscription;
          }
          var subscriptions = this._subscriptions;
          if (subscriptions === null) {
              this._subscriptions = [subscription];
          }
          else {
              subscriptions.push(subscription);
          }
          return subscription;
      };
      Subscription.prototype.remove = function (subscription) {
          var subscriptions = this._subscriptions;
          if (subscriptions) {
              var subscriptionIndex = subscriptions.indexOf(subscription);
              if (subscriptionIndex !== -1) {
                  subscriptions.splice(subscriptionIndex, 1);
              }
          }
      };
      Subscription.EMPTY = (function (empty) {
          empty.closed = true;
          return empty;
      }(new Subscription()));
      return Subscription;
  }());
  function flattenUnsubscriptionErrors(errors) {
      return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError$1) ? err.errors : err); }, []);
  }

  /** PURE_IMPORTS_START  PURE_IMPORTS_END */
  var rxSubscriber$1 = /*@__PURE__*/ (function () {
      return typeof Symbol === 'function'
          ? /*@__PURE__*/ Symbol('rxSubscriber')
          : '@@rxSubscriber_' + /*@__PURE__*/ Math.random();
  })();

  /** PURE_IMPORTS_START tslib,_util_isFunction,_Observer,_Subscription,_internal_symbol_rxSubscriber,_config,_util_hostReportError PURE_IMPORTS_END */
  var Subscriber = /*@__PURE__*/ (function (_super) {
      __extends$1(Subscriber, _super);
      function Subscriber(destinationOrNext, error, complete) {
          var _this = _super.call(this) || this;
          _this.syncErrorValue = null;
          _this.syncErrorThrown = false;
          _this.syncErrorThrowable = false;
          _this.isStopped = false;
          switch (arguments.length) {
              case 0:
                  _this.destination = empty;
                  break;
              case 1:
                  if (!destinationOrNext) {
                      _this.destination = empty;
                      break;
                  }
                  if (typeof destinationOrNext === 'object') {
                      if (destinationOrNext instanceof Subscriber) {
                          _this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;
                          _this.destination = destinationOrNext;
                          destinationOrNext.add(_this);
                      }
                      else {
                          _this.syncErrorThrowable = true;
                          _this.destination = new SafeSubscriber(_this, destinationOrNext);
                      }
                      break;
                  }
              default:
                  _this.syncErrorThrowable = true;
                  _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);
                  break;
          }
          return _this;
      }
      Subscriber.prototype[rxSubscriber$1] = function () { return this; };
      Subscriber.create = function (next, error, complete) {
          var subscriber = new Subscriber(next, error, complete);
          subscriber.syncErrorThrowable = false;
          return subscriber;
      };
      Subscriber.prototype.next = function (value) {
          if (!this.isStopped) {
              this._next(value);
          }
      };
      Subscriber.prototype.error = function (err) {
          if (!this.isStopped) {
              this.isStopped = true;
              this._error(err);
          }
      };
      Subscriber.prototype.complete = function () {
          if (!this.isStopped) {
              this.isStopped = true;
              this._complete();
          }
      };
      Subscriber.prototype.unsubscribe = function () {
          if (this.closed) {
              return;
          }
          this.isStopped = true;
          _super.prototype.unsubscribe.call(this);
      };
      Subscriber.prototype._next = function (value) {
          this.destination.next(value);
      };
      Subscriber.prototype._error = function (err) {
          this.destination.error(err);
          this.unsubscribe();
      };
      Subscriber.prototype._complete = function () {
          this.destination.complete();
          this.unsubscribe();
      };
      Subscriber.prototype._unsubscribeAndRecycle = function () {
          var _parentOrParents = this._parentOrParents;
          this._parentOrParents = null;
          this.unsubscribe();
          this.closed = false;
          this.isStopped = false;
          this._parentOrParents = _parentOrParents;
          return this;
      };
      return Subscriber;
  }(Subscription));
  var SafeSubscriber = /*@__PURE__*/ (function (_super) {
      __extends$1(SafeSubscriber, _super);
      function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {
          var _this = _super.call(this) || this;
          _this._parentSubscriber = _parentSubscriber;
          var next;
          var context = _this;
          if (isFunction(observerOrNext)) {
              next = observerOrNext;
          }
          else if (observerOrNext) {
              next = observerOrNext.next;
              error = observerOrNext.error;
              complete = observerOrNext.complete;
              if (observerOrNext !== empty) {
                  context = Object.create(observerOrNext);
                  if (isFunction(context.unsubscribe)) {
                      _this.add(context.unsubscribe.bind(context));
                  }
                  context.unsubscribe = _this.unsubscribe.bind(_this);
              }
          }
          _this._context = context;
          _this._next = next;
          _this._error = error;
          _this._complete = complete;
          return _this;
      }
      SafeSubscriber.prototype.next = function (value) {
          if (!this.isStopped && this._next) {
              var _parentSubscriber = this._parentSubscriber;
              if (!config$2.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
                  this.__tryOrUnsub(this._next, value);
              }
              else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {
                  this.unsubscribe();
              }
          }
      };
      SafeSubscriber.prototype.error = function (err) {
          if (!this.isStopped) {
              var _parentSubscriber = this._parentSubscriber;
              var useDeprecatedSynchronousErrorHandling = config$2.useDeprecatedSynchronousErrorHandling;
              if (this._error) {
                  if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
                      this.__tryOrUnsub(this._error, err);
                      this.unsubscribe();
                  }
                  else {
                      this.__tryOrSetError(_parentSubscriber, this._error, err);
                      this.unsubscribe();
                  }
              }
              else if (!_parentSubscriber.syncErrorThrowable) {
                  this.unsubscribe();
                  if (useDeprecatedSynchronousErrorHandling) {
                      throw err;
                  }
                  hostReportError(err);
              }
              else {
                  if (useDeprecatedSynchronousErrorHandling) {
                      _parentSubscriber.syncErrorValue = err;
                      _parentSubscriber.syncErrorThrown = true;
                  }
                  else {
                      hostReportError(err);
                  }
                  this.unsubscribe();
              }
          }
      };
      SafeSubscriber.prototype.complete = function () {
          var _this = this;
          if (!this.isStopped) {
              var _parentSubscriber = this._parentSubscriber;
              if (this._complete) {
                  var wrappedComplete = function () { return _this._complete.call(_this._context); };
                  if (!config$2.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
                      this.__tryOrUnsub(wrappedComplete);
                      this.unsubscribe();
                  }
                  else {
                      this.__tryOrSetError(_parentSubscriber, wrappedComplete);
                      this.unsubscribe();
                  }
              }
              else {
                  this.unsubscribe();
              }
          }
      };
      SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {
          try {
              fn.call(this._context, value);
          }
          catch (err) {
              this.unsubscribe();
              if (config$2.useDeprecatedSynchronousErrorHandling) {
                  throw err;
              }
              else {
                  hostReportError(err);
              }
          }
      };
      SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {
          if (!config$2.useDeprecatedSynchronousErrorHandling) {
              throw new Error('bad call');
          }
          try {
              fn.call(this._context, value);
          }
          catch (err) {
              if (config$2.useDeprecatedSynchronousErrorHandling) {
                  parent.syncErrorValue = err;
                  parent.syncErrorThrown = true;
                  return true;
              }
              else {
                  hostReportError(err);
                  return true;
              }
          }
          return false;
      };
      SafeSubscriber.prototype._unsubscribe = function () {
          var _parentSubscriber = this._parentSubscriber;
          this._context = null;
          this._parentSubscriber = null;
          _parentSubscriber.unsubscribe();
      };
      return SafeSubscriber;
  }(Subscriber));

  /** PURE_IMPORTS_START _Subscriber PURE_IMPORTS_END */
  function canReportError(observer) {
      while (observer) {
          var _a = observer, closed_1 = _a.closed, destination = _a.destination, isStopped = _a.isStopped;
          if (closed_1 || isStopped) {
              return false;
          }
          else if (destination && destination instanceof Subscriber) {
              observer = destination;
          }
          else {
              observer = null;
          }
      }
      return true;
  }

  /** PURE_IMPORTS_START _Subscriber,_symbol_rxSubscriber,_Observer PURE_IMPORTS_END */
  function toSubscriber(nextOrObserver, error, complete) {
      if (nextOrObserver) {
          if (nextOrObserver instanceof Subscriber) {
              return nextOrObserver;
          }
          if (nextOrObserver[rxSubscriber$1]) {
              return nextOrObserver[rxSubscriber$1]();
          }
      }
      if (!nextOrObserver && !error && !complete) {
          return new Subscriber(empty);
      }
      return new Subscriber(nextOrObserver, error, complete);
  }

  /** PURE_IMPORTS_START  PURE_IMPORTS_END */
  var observable$1 = /*@__PURE__*/ (function () { return typeof Symbol === 'function' && Symbol.observable || '@@observable'; })();

  /** PURE_IMPORTS_START  PURE_IMPORTS_END */
  function identity(x) {
      return x;
  }

  /** PURE_IMPORTS_START _identity PURE_IMPORTS_END */
  function pipeFromArray(fns) {
      if (fns.length === 0) {
          return identity;
      }
      if (fns.length === 1) {
          return fns[0];
      }
      return function piped(input) {
          return fns.reduce(function (prev, fn) { return fn(prev); }, input);
      };
  }

  /** PURE_IMPORTS_START _util_canReportError,_util_toSubscriber,_symbol_observable,_util_pipe,_config PURE_IMPORTS_END */
  var Observable = /*@__PURE__*/ (function () {
      function Observable(subscribe) {
          this._isScalar = false;
          if (subscribe) {
              this._subscribe = subscribe;
          }
      }
      Observable.prototype.lift = function (operator) {
          var observable = new Observable();
          observable.source = this;
          observable.operator = operator;
          return observable;
      };
      Observable.prototype.subscribe = function (observerOrNext, error, complete) {
          var operator = this.operator;
          var sink = toSubscriber(observerOrNext, error, complete);
          if (operator) {
              sink.add(operator.call(sink, this.source));
          }
          else {
              sink.add(this.source || (config$2.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?
                  this._subscribe(sink) :
                  this._trySubscribe(sink));
          }
          if (config$2.useDeprecatedSynchronousErrorHandling) {
              if (sink.syncErrorThrowable) {
                  sink.syncErrorThrowable = false;
                  if (sink.syncErrorThrown) {
                      throw sink.syncErrorValue;
                  }
              }
          }
          return sink;
      };
      Observable.prototype._trySubscribe = function (sink) {
          try {
              return this._subscribe(sink);
          }
          catch (err) {
              if (config$2.useDeprecatedSynchronousErrorHandling) {
                  sink.syncErrorThrown = true;
                  sink.syncErrorValue = err;
              }
              if (canReportError(sink)) {
                  sink.error(err);
              }
              else {
                  console.warn(err);
              }
          }
      };
      Observable.prototype.forEach = function (next, promiseCtor) {
          var _this = this;
          promiseCtor = getPromiseCtor(promiseCtor);
          return new promiseCtor(function (resolve, reject) {
              var subscription;
              subscription = _this.subscribe(function (value) {
                  try {
                      next(value);
                  }
                  catch (err) {
                      reject(err);
                      if (subscription) {
                          subscription.unsubscribe();
                      }
                  }
              }, reject, resolve);
          });
      };
      Observable.prototype._subscribe = function (subscriber) {
          var source = this.source;
          return source && source.subscribe(subscriber);
      };
      Observable.prototype[observable$1] = function () {
          return this;
      };
      Observable.prototype.pipe = function () {
          var operations = [];
          for (var _i = 0; _i < arguments.length; _i++) {
              operations[_i] = arguments[_i];
          }
          if (operations.length === 0) {
              return this;
          }
          return pipeFromArray(operations)(this);
      };
      Observable.prototype.toPromise = function (promiseCtor) {
          var _this = this;
          promiseCtor = getPromiseCtor(promiseCtor);
          return new promiseCtor(function (resolve, reject) {
              var value;
              _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });
          });
      };
      Observable.create = function (subscribe) {
          return new Observable(subscribe);
      };
      return Observable;
  }());
  function getPromiseCtor(promiseCtor) {
      if (!promiseCtor) {
          promiseCtor = config$2.Promise || Promise;
      }
      if (!promiseCtor) {
          throw new Error('no Promise impl found');
      }
      return promiseCtor;
  }

  /** PURE_IMPORTS_START  PURE_IMPORTS_END */
  var ObjectUnsubscribedErrorImpl = /*@__PURE__*/ (function () {
      function ObjectUnsubscribedErrorImpl() {
          Error.call(this);
          this.message = 'object unsubscribed';
          this.name = 'ObjectUnsubscribedError';
          return this;
      }
      ObjectUnsubscribedErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);
      return ObjectUnsubscribedErrorImpl;
  })();
  var ObjectUnsubscribedError$1 = ObjectUnsubscribedErrorImpl;

  /** PURE_IMPORTS_START tslib,_Subscription PURE_IMPORTS_END */
  var SubjectSubscription = /*@__PURE__*/ (function (_super) {
      __extends$1(SubjectSubscription, _super);
      function SubjectSubscription(subject, subscriber) {
          var _this = _super.call(this) || this;
          _this.subject = subject;
          _this.subscriber = subscriber;
          _this.closed = false;
          return _this;
      }
      SubjectSubscription.prototype.unsubscribe = function () {
          if (this.closed) {
              return;
          }
          this.closed = true;
          var subject = this.subject;
          var observers = subject.observers;
          this.subject = null;
          if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {
              return;
          }
          var subscriberIndex = observers.indexOf(this.subscriber);
          if (subscriberIndex !== -1) {
              observers.splice(subscriberIndex, 1);
          }
      };
      return SubjectSubscription;
  }(Subscription));

  /** PURE_IMPORTS_START tslib,_Observable,_Subscriber,_Subscription,_util_ObjectUnsubscribedError,_SubjectSubscription,_internal_symbol_rxSubscriber PURE_IMPORTS_END */
  var SubjectSubscriber = /*@__PURE__*/ (function (_super) {
      __extends$1(SubjectSubscriber, _super);
      function SubjectSubscriber(destination) {
          var _this = _super.call(this, destination) || this;
          _this.destination = destination;
          return _this;
      }
      return SubjectSubscriber;
  }(Subscriber));
  var Subject = /*@__PURE__*/ (function (_super) {
      __extends$1(Subject, _super);
      function Subject() {
          var _this = _super.call(this) || this;
          _this.observers = [];
          _this.closed = false;
          _this.isStopped = false;
          _this.hasError = false;
          _this.thrownError = null;
          return _this;
      }
      Subject.prototype[rxSubscriber$1] = function () {
          return new SubjectSubscriber(this);
      };
      Subject.prototype.lift = function (operator) {
          var subject = new AnonymousSubject(this, this);
          subject.operator = operator;
          return subject;
      };
      Subject.prototype.next = function (value) {
          if (this.closed) {
              throw new ObjectUnsubscribedError$1();
          }
          if (!this.isStopped) {
              var observers = this.observers;
              var len = observers.length;
              var copy = observers.slice();
              for (var i = 0; i < len; i++) {
                  copy[i].next(value);
              }
          }
      };
      Subject.prototype.error = function (err) {
          if (this.closed) {
              throw new ObjectUnsubscribedError$1();
          }
          this.hasError = true;
          this.thrownError = err;
          this.isStopped = true;
          var observers = this.observers;
          var len = observers.length;
          var copy = observers.slice();
          for (var i = 0; i < len; i++) {
              copy[i].error(err);
          }
          this.observers.length = 0;
      };
      Subject.prototype.complete = function () {
          if (this.closed) {
              throw new ObjectUnsubscribedError$1();
          }
          this.isStopped = true;
          var observers = this.observers;
          var len = observers.length;
          var copy = observers.slice();
          for (var i = 0; i < len; i++) {
              copy[i].complete();
          }
          this.observers.length = 0;
      };
      Subject.prototype.unsubscribe = function () {
          this.isStopped = true;
          this.closed = true;
          this.observers = null;
      };
      Subject.prototype._trySubscribe = function (subscriber) {
          if (this.closed) {
              throw new ObjectUnsubscribedError$1();
          }
          else {
              return _super.prototype._trySubscribe.call(this, subscriber);
          }
      };
      Subject.prototype._subscribe = function (subscriber) {
          if (this.closed) {
              throw new ObjectUnsubscribedError$1();
          }
          else if (this.hasError) {
              subscriber.error(this.thrownError);
              return Subscription.EMPTY;
          }
          else if (this.isStopped) {
              subscriber.complete();
              return Subscription.EMPTY;
          }
          else {
              this.observers.push(subscriber);
              return new SubjectSubscription(this, subscriber);
          }
      };
      Subject.prototype.asObservable = function () {
          var observable = new Observable();
          observable.source = this;
          return observable;
      };
      Subject.create = function (destination, source) {
          return new AnonymousSubject(destination, source);
      };
      return Subject;
  }(Observable));
  var AnonymousSubject = /*@__PURE__*/ (function (_super) {
      __extends$1(AnonymousSubject, _super);
      function AnonymousSubject(destination, source) {
          var _this = _super.call(this) || this;
          _this.destination = destination;
          _this.source = source;
          return _this;
      }
      AnonymousSubject.prototype.next = function (value) {
          var destination = this.destination;
          if (destination && destination.next) {
              destination.next(value);
          }
      };
      AnonymousSubject.prototype.error = function (err) {
          var destination = this.destination;
          if (destination && destination.error) {
              this.destination.error(err);
          }
      };
      AnonymousSubject.prototype.complete = function () {
          var destination = this.destination;
          if (destination && destination.complete) {
              this.destination.complete();
          }
      };
      AnonymousSubject.prototype._subscribe = function (subscriber) {
          var source = this.source;
          if (source) {
              return this.source.subscribe(subscriber);
          }
          else {
              return Subscription.EMPTY;
          }
      };
      return AnonymousSubject;
  }(Subject));

  /** PURE_IMPORTS_START tslib,_Subject,_util_ObjectUnsubscribedError PURE_IMPORTS_END */
  var BehaviorSubject = /*@__PURE__*/ (function (_super) {
      __extends$1(BehaviorSubject, _super);
      function BehaviorSubject(_value) {
          var _this = _super.call(this) || this;
          _this._value = _value;
          return _this;
      }
      Object.defineProperty(BehaviorSubject.prototype, "value", {
          get: function () {
              return this.getValue();
          },
          enumerable: true,
          configurable: true
      });
      BehaviorSubject.prototype._subscribe = function (subscriber) {
          var subscription = _super.prototype._subscribe.call(this, subscriber);
          if (subscription && !subscription.closed) {
              subscriber.next(this._value);
          }
          return subscription;
      };
      BehaviorSubject.prototype.getValue = function () {
          if (this.hasError) {
              throw this.thrownError;
          }
          else if (this.closed) {
              throw new ObjectUnsubscribedError$1();
          }
          else {
              return this._value;
          }
      };
      BehaviorSubject.prototype.next = function (value) {
          _super.prototype.next.call(this, this._value = value);
      };
      return BehaviorSubject;
  }(Subject));

  /** PURE_IMPORTS_START  PURE_IMPORTS_END */
  function isScheduler(value) {
      return value && typeof value.schedule === 'function';
  }

  /** PURE_IMPORTS_START  PURE_IMPORTS_END */
  var subscribeToArray$1 = function (array) {
      return function (subscriber) {
          for (var i = 0, len = array.length; i < len && !subscriber.closed; i++) {
              subscriber.next(array[i]);
          }
          subscriber.complete();
      };
  };

  /** PURE_IMPORTS_START _Observable,_Subscription PURE_IMPORTS_END */
  function scheduleArray(input, scheduler) {
      return new Observable(function (subscriber) {
          var sub = new Subscription();
          var i = 0;
          sub.add(scheduler.schedule(function () {
              if (i === input.length) {
                  subscriber.complete();
                  return;
              }
              subscriber.next(input[i++]);
              if (!subscriber.closed) {
                  sub.add(this.schedule());
              }
          }));
          return sub;
      });
  }

  /** PURE_IMPORTS_START _Observable,_util_subscribeToArray,_scheduled_scheduleArray PURE_IMPORTS_END */
  function fromArray(input, scheduler) {
      if (!scheduler) {
          return new Observable(subscribeToArray$1(input));
      }
      else {
          return scheduleArray(input, scheduler);
      }
  }

  /** PURE_IMPORTS_START _util_isScheduler,_fromArray,_scheduled_scheduleArray PURE_IMPORTS_END */
  function of() {
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
          args[_i] = arguments[_i];
      }
      var scheduler = args[args.length - 1];
      if (isScheduler(scheduler)) {
          args.pop();
          return scheduleArray(args, scheduler);
      }
      else {
          return fromArray(args);
      }
  }

  /** PURE_IMPORTS_START _Observable PURE_IMPORTS_END */
  function throwError(error, scheduler) {
      if (!scheduler) {
          return new Observable(function (subscriber) { return subscriber.error(error); });
      }
      else {
          return new Observable(function (subscriber) { return scheduler.schedule(dispatch, 0, { error: error, subscriber: subscriber }); });
      }
  }
  function dispatch(_a) {
      var error = _a.error, subscriber = _a.subscriber;
      subscriber.error(error);
  }

  /** PURE_IMPORTS_START tslib,_Subscriber PURE_IMPORTS_END */
  function map(project, thisArg) {
      return function mapOperation(source) {
          if (typeof project !== 'function') {
              throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');
          }
          return source.lift(new MapOperator(project, thisArg));
      };
  }
  var MapOperator = /*@__PURE__*/ (function () {
      function MapOperator(project, thisArg) {
          this.project = project;
          this.thisArg = thisArg;
      }
      MapOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));
      };
      return MapOperator;
  }());
  var MapSubscriber = /*@__PURE__*/ (function (_super) {
      __extends$1(MapSubscriber, _super);
      function MapSubscriber(destination, project, thisArg) {
          var _this = _super.call(this, destination) || this;
          _this.project = project;
          _this.count = 0;
          _this.thisArg = thisArg || _this;
          return _this;
      }
      MapSubscriber.prototype._next = function (value) {
          var result;
          try {
              result = this.project.call(this.thisArg, value, this.count++);
          }
          catch (err) {
              this.destination.error(err);
              return;
          }
          this.destination.next(result);
      };
      return MapSubscriber;
  }(Subscriber));

  var global$1 = (typeof global !== "undefined" ? global :
    typeof self !== "undefined" ? self :
    typeof window !== "undefined" ? window : {});

  /** PURE_IMPORTS_START  PURE_IMPORTS_END */
  var __window = typeof window !== 'undefined' && window;
  var __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&
      self instanceof WorkerGlobalScope && self;
  var __global = typeof global$1 !== 'undefined' && global$1;
  var _root = __window || __global || __self;

  /** PURE_IMPORTS_START tslib,_.._util_root,_.._Observable,_.._Subscriber,_.._operators_map PURE_IMPORTS_END */
  function getCORSRequest() {
      if (_root.XMLHttpRequest) {
          return new _root.XMLHttpRequest();
      }
      else if (!!_root.XDomainRequest) {
          return new _root.XDomainRequest();
      }
      else {
          throw new Error('CORS is not supported by your browser');
      }
  }
  function getXMLHttpRequest() {
      if (_root.XMLHttpRequest) {
          return new _root.XMLHttpRequest();
      }
      else {
          var progId = void 0;
          try {
              var progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'];
              for (var i = 0; i < 3; i++) {
                  try {
                      progId = progIds[i];
                      if (new _root.ActiveXObject(progId)) {
                          break;
                      }
                  }
                  catch (e) {
                  }
              }
              return new _root.ActiveXObject(progId);
          }
          catch (e) {
              throw new Error('XMLHttpRequest is not supported by your browser');
          }
      }
  }
  function ajaxGet(url, headers) {
      if (headers === void 0) {
          headers = null;
      }
      return new AjaxObservable({ method: 'GET', url: url, headers: headers });
  }
  function ajaxPost(url, body, headers) {
      return new AjaxObservable({ method: 'POST', url: url, body: body, headers: headers });
  }
  function ajaxDelete(url, headers) {
      return new AjaxObservable({ method: 'DELETE', url: url, headers: headers });
  }
  function ajaxPut(url, body, headers) {
      return new AjaxObservable({ method: 'PUT', url: url, body: body, headers: headers });
  }
  function ajaxPatch(url, body, headers) {
      return new AjaxObservable({ method: 'PATCH', url: url, body: body, headers: headers });
  }
  var mapResponse = /*@__PURE__*/ map(function (x, index) { return x.response; });
  function ajaxGetJSON(url, headers) {
      return mapResponse(new AjaxObservable({
          method: 'GET',
          url: url,
          responseType: 'json',
          headers: headers
      }));
  }
  var AjaxObservable = /*@__PURE__*/ (function (_super) {
      __extends$1(AjaxObservable, _super);
      function AjaxObservable(urlOrRequest) {
          var _this = _super.call(this) || this;
          var request = {
              async: true,
              createXHR: function () {
                  return this.crossDomain ? getCORSRequest() : getXMLHttpRequest();
              },
              crossDomain: true,
              withCredentials: false,
              headers: {},
              method: 'GET',
              responseType: 'json',
              timeout: 0
          };
          if (typeof urlOrRequest === 'string') {
              request.url = urlOrRequest;
          }
          else {
              for (var prop in urlOrRequest) {
                  if (urlOrRequest.hasOwnProperty(prop)) {
                      request[prop] = urlOrRequest[prop];
                  }
              }
          }
          _this.request = request;
          return _this;
      }
      AjaxObservable.prototype._subscribe = function (subscriber) {
          return new AjaxSubscriber(subscriber, this.request);
      };
      AjaxObservable.create = (function () {
          var create = function (urlOrRequest) {
              return new AjaxObservable(urlOrRequest);
          };
          create.get = ajaxGet;
          create.post = ajaxPost;
          create.delete = ajaxDelete;
          create.put = ajaxPut;
          create.patch = ajaxPatch;
          create.getJSON = ajaxGetJSON;
          return create;
      })();
      return AjaxObservable;
  }(Observable));
  var AjaxSubscriber = /*@__PURE__*/ (function (_super) {
      __extends$1(AjaxSubscriber, _super);
      function AjaxSubscriber(destination, request) {
          var _this = _super.call(this, destination) || this;
          _this.request = request;
          _this.done = false;
          var headers = request.headers = request.headers || {};
          if (!request.crossDomain && !_this.getHeader(headers, 'X-Requested-With')) {
              headers['X-Requested-With'] = 'XMLHttpRequest';
          }
          var contentTypeHeader = _this.getHeader(headers, 'Content-Type');
          if (!contentTypeHeader && !(_root.FormData && request.body instanceof _root.FormData) && typeof request.body !== 'undefined') {
              headers['Content-Type'] = 'application/x-www-form-urlencoded; charset=UTF-8';
          }
          request.body = _this.serializeBody(request.body, _this.getHeader(request.headers, 'Content-Type'));
          _this.send();
          return _this;
      }
      AjaxSubscriber.prototype.next = function (e) {
          this.done = true;
          var _a = this, xhr = _a.xhr, request = _a.request, destination = _a.destination;
          var result;
          try {
              result = new AjaxResponse(e, xhr, request);
          }
          catch (err) {
              return destination.error(err);
          }
          destination.next(result);
      };
      AjaxSubscriber.prototype.send = function () {
          var _a = this, request = _a.request, _b = _a.request, user = _b.user, method = _b.method, url = _b.url, async = _b.async, password = _b.password, headers = _b.headers, body = _b.body;
          try {
              var xhr = this.xhr = request.createXHR();
              this.setupEvents(xhr, request);
              if (user) {
                  xhr.open(method, url, async, user, password);
              }
              else {
                  xhr.open(method, url, async);
              }
              if (async) {
                  xhr.timeout = request.timeout;
                  xhr.responseType = request.responseType;
              }
              if ('withCredentials' in xhr) {
                  xhr.withCredentials = !!request.withCredentials;
              }
              this.setHeaders(xhr, headers);
              if (body) {
                  xhr.send(body);
              }
              else {
                  xhr.send();
              }
          }
          catch (err) {
              this.error(err);
          }
      };
      AjaxSubscriber.prototype.serializeBody = function (body, contentType) {
          if (!body || typeof body === 'string') {
              return body;
          }
          else if (_root.FormData && body instanceof _root.FormData) {
              return body;
          }
          if (contentType) {
              var splitIndex = contentType.indexOf(';');
              if (splitIndex !== -1) {
                  contentType = contentType.substring(0, splitIndex);
              }
          }
          switch (contentType) {
              case 'application/x-www-form-urlencoded':
                  return Object.keys(body).map(function (key) { return encodeURIComponent(key) + "=" + encodeURIComponent(body[key]); }).join('&');
              case 'application/json':
                  return JSON.stringify(body);
              default:
                  return body;
          }
      };
      AjaxSubscriber.prototype.setHeaders = function (xhr, headers) {
          for (var key in headers) {
              if (headers.hasOwnProperty(key)) {
                  xhr.setRequestHeader(key, headers[key]);
              }
          }
      };
      AjaxSubscriber.prototype.getHeader = function (headers, headerName) {
          for (var key in headers) {
              if (key.toLowerCase() === headerName.toLowerCase()) {
                  return headers[key];
              }
          }
          return undefined;
      };
      AjaxSubscriber.prototype.setupEvents = function (xhr, request) {
          var progressSubscriber = request.progressSubscriber;
          function xhrTimeout(e) {
              var _a = xhrTimeout, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;
              if (progressSubscriber) {
                  progressSubscriber.error(e);
              }
              var error;
              try {
                  error = new AjaxTimeoutError(this, request);
              }
              catch (err) {
                  error = err;
              }
              subscriber.error(error);
          }
          xhr.ontimeout = xhrTimeout;
          xhrTimeout.request = request;
          xhrTimeout.subscriber = this;
          xhrTimeout.progressSubscriber = progressSubscriber;
          if (xhr.upload && 'withCredentials' in xhr) {
              if (progressSubscriber) {
                  var xhrProgress_1;
                  xhrProgress_1 = function (e) {
                      var progressSubscriber = xhrProgress_1.progressSubscriber;
                      progressSubscriber.next(e);
                  };
                  if (_root.XDomainRequest) {
                      xhr.onprogress = xhrProgress_1;
                  }
                  else {
                      xhr.upload.onprogress = xhrProgress_1;
                  }
                  xhrProgress_1.progressSubscriber = progressSubscriber;
              }
              var xhrError_1;
              xhrError_1 = function (e) {
                  var _a = xhrError_1, progressSubscriber = _a.progressSubscriber, subscriber = _a.subscriber, request = _a.request;
                  if (progressSubscriber) {
                      progressSubscriber.error(e);
                  }
                  var error;
                  try {
                      error = new AjaxError('ajax error', this, request);
                  }
                  catch (err) {
                      error = err;
                  }
                  subscriber.error(error);
              };
              xhr.onerror = xhrError_1;
              xhrError_1.request = request;
              xhrError_1.subscriber = this;
              xhrError_1.progressSubscriber = progressSubscriber;
          }
          function xhrReadyStateChange(e) {
              return;
          }
          xhr.onreadystatechange = xhrReadyStateChange;
          xhrReadyStateChange.subscriber = this;
          xhrReadyStateChange.progressSubscriber = progressSubscriber;
          xhrReadyStateChange.request = request;
          function xhrLoad(e) {
              var _a = xhrLoad, subscriber = _a.subscriber, progressSubscriber = _a.progressSubscriber, request = _a.request;
              if (this.readyState === 4) {
                  var status_1 = this.status === 1223 ? 204 : this.status;
                  var response = (this.responseType === 'text' ? (this.response || this.responseText) : this.response);
                  if (status_1 === 0) {
                      status_1 = response ? 200 : 0;
                  }
                  if (status_1 < 400) {
                      if (progressSubscriber) {
                          progressSubscriber.complete();
                      }
                      subscriber.next(e);
                      subscriber.complete();
                  }
                  else {
                      if (progressSubscriber) {
                          progressSubscriber.error(e);
                      }
                      var error = void 0;
                      try {
                          error = new AjaxError('ajax error ' + status_1, this, request);
                      }
                      catch (err) {
                          error = err;
                      }
                      subscriber.error(error);
                  }
              }
          }
          xhr.onload = xhrLoad;
          xhrLoad.subscriber = this;
          xhrLoad.progressSubscriber = progressSubscriber;
          xhrLoad.request = request;
      };
      AjaxSubscriber.prototype.unsubscribe = function () {
          var _a = this, done = _a.done, xhr = _a.xhr;
          if (!done && xhr && xhr.readyState !== 4 && typeof xhr.abort === 'function') {
              xhr.abort();
          }
          _super.prototype.unsubscribe.call(this);
      };
      return AjaxSubscriber;
  }(Subscriber));
  var AjaxResponse = /*@__PURE__*/ (function () {
      function AjaxResponse(originalEvent, xhr, request) {
          this.originalEvent = originalEvent;
          this.xhr = xhr;
          this.request = request;
          this.status = xhr.status;
          this.responseType = xhr.responseType || request.responseType;
          this.response = parseXhrResponse(this.responseType, xhr);
      }
      return AjaxResponse;
  }());
  var AjaxErrorImpl = /*@__PURE__*/ (function () {
      function AjaxErrorImpl(message, xhr, request) {
          Error.call(this);
          this.message = message;
          this.name = 'AjaxError';
          this.xhr = xhr;
          this.request = request;
          this.status = xhr.status;
          this.responseType = xhr.responseType || request.responseType;
          this.response = parseXhrResponse(this.responseType, xhr);
          return this;
      }
      AjaxErrorImpl.prototype = /*@__PURE__*/ Object.create(Error.prototype);
      return AjaxErrorImpl;
  })();
  var AjaxError = AjaxErrorImpl;
  function parseJson(xhr) {
      if ('response' in xhr) {
          return xhr.responseType ? xhr.response : JSON.parse(xhr.response || xhr.responseText || 'null');
      }
      else {
          return JSON.parse(xhr.responseText || 'null');
      }
  }
  function parseXhrResponse(responseType, xhr) {
      switch (responseType) {
          case 'json':
              return parseJson(xhr);
          case 'xml':
              return xhr.responseXML;
          case 'text':
          default:
              return ('response' in xhr) ? xhr.response : xhr.responseText;
      }
  }
  function AjaxTimeoutErrorImpl(xhr, request) {
      AjaxError.call(this, 'ajax timeout', xhr, request);
      this.name = 'AjaxTimeoutError';
      return this;
  }
  var AjaxTimeoutError = AjaxTimeoutErrorImpl;

  /** PURE_IMPORTS_START _AjaxObservable PURE_IMPORTS_END */
  var ajax = /*@__PURE__*/ (function () { return AjaxObservable.create; })();

  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

  function unwrapExports (x) {
  	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
  }

  function createCommonjsModule(fn, module) {
  	return module = { exports: {} }, fn(module, module.exports), module.exports;
  }

  var isFunction_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });
  function isFunction(x) {
      return typeof x === 'function';
  }
  exports.isFunction = isFunction;

  });

  unwrapExports(isFunction_1$1);
  isFunction_1$1.isFunction;

  var config$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });
  var _enable_super_gross_mode_that_will_cause_bad_things = false;
  exports.config = {
      Promise: undefined,
      set useDeprecatedSynchronousErrorHandling(value) {
          if (value) {
              var error = new Error();
              console.warn('DEPRECATED! RxJS was set to use deprecated synchronous error handling behavior by code at: \n' + error.stack);
          }
          else if (_enable_super_gross_mode_that_will_cause_bad_things) {
              console.log('RxJS: Back to a better error behavior. Thank you. <3');
          }
          _enable_super_gross_mode_that_will_cause_bad_things = value;
      },
      get useDeprecatedSynchronousErrorHandling() {
          return _enable_super_gross_mode_that_will_cause_bad_things;
      },
  };

  });

  unwrapExports(config$1);
  config$1.config;

  var hostReportError_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });
  function hostReportError(err) {
      setTimeout(function () { throw err; }, 0);
  }
  exports.hostReportError = hostReportError;

  });

  unwrapExports(hostReportError_1$1);
  hostReportError_1$1.hostReportError;

  var config_1 = config$1;

  var hostReportError_1 = hostReportError_1$1;

  var Observer = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });


  exports.empty = {
      closed: true,
      next: function (value) { },
      error: function (err) {
          if (config_1.config.useDeprecatedSynchronousErrorHandling) {
              throw err;
          }
          else {
              hostReportError_1.hostReportError(err);
          }
      },
      complete: function () { }
  };

  });

  unwrapExports(Observer);
  Observer.empty;

  var isArray$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.isArray = (function () { return Array.isArray || (function (x) { return x && typeof x.length === 'number'; }); })();

  });

  unwrapExports(isArray$1);
  isArray$1.isArray;

  var isObject_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });
  function isObject(x) {
      return x !== null && typeof x === 'object';
  }
  exports.isObject = isObject;

  });

  unwrapExports(isObject_1$1);
  isObject_1$1.isObject;

  var UnsubscriptionError = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });
  var UnsubscriptionErrorImpl = (function () {
      function UnsubscriptionErrorImpl(errors) {
          Error.call(this);
          this.message = errors ?
              errors.length + " errors occurred during unsubscription:\n" + errors.map(function (err, i) { return i + 1 + ") " + err.toString(); }).join('\n  ') : '';
          this.name = 'UnsubscriptionError';
          this.errors = errors;
          return this;
      }
      UnsubscriptionErrorImpl.prototype = Object.create(Error.prototype);
      return UnsubscriptionErrorImpl;
  })();
  exports.UnsubscriptionError = UnsubscriptionErrorImpl;

  });

  unwrapExports(UnsubscriptionError);
  UnsubscriptionError.UnsubscriptionError;

  var isArray_1 = isArray$1;

  var isObject_1 = isObject_1$1;

  var isFunction_1 = isFunction_1$1;

  var UnsubscriptionError_1 = UnsubscriptionError;

  var Subscription_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });




  var Subscription = (function () {
      function Subscription(unsubscribe) {
          this.closed = false;
          this._parentOrParents = null;
          this._subscriptions = null;
          if (unsubscribe) {
              this._ctorUnsubscribe = true;
              this._unsubscribe = unsubscribe;
          }
      }
      Subscription.prototype.unsubscribe = function () {
          var errors;
          if (this.closed) {
              return;
          }
          var _a = this, _parentOrParents = _a._parentOrParents, _ctorUnsubscribe = _a._ctorUnsubscribe, _unsubscribe = _a._unsubscribe, _subscriptions = _a._subscriptions;
          this.closed = true;
          this._parentOrParents = null;
          this._subscriptions = null;
          if (_parentOrParents instanceof Subscription) {
              _parentOrParents.remove(this);
          }
          else if (_parentOrParents !== null) {
              for (var index = 0; index < _parentOrParents.length; ++index) {
                  var parent_1 = _parentOrParents[index];
                  parent_1.remove(this);
              }
          }
          if (isFunction_1.isFunction(_unsubscribe)) {
              if (_ctorUnsubscribe) {
                  this._unsubscribe = undefined;
              }
              try {
                  _unsubscribe.call(this);
              }
              catch (e) {
                  errors = e instanceof UnsubscriptionError_1.UnsubscriptionError ? flattenUnsubscriptionErrors(e.errors) : [e];
              }
          }
          if (isArray_1.isArray(_subscriptions)) {
              var index = -1;
              var len = _subscriptions.length;
              while (++index < len) {
                  var sub = _subscriptions[index];
                  if (isObject_1.isObject(sub)) {
                      try {
                          sub.unsubscribe();
                      }
                      catch (e) {
                          errors = errors || [];
                          if (e instanceof UnsubscriptionError_1.UnsubscriptionError) {
                              errors = errors.concat(flattenUnsubscriptionErrors(e.errors));
                          }
                          else {
                              errors.push(e);
                          }
                      }
                  }
              }
          }
          if (errors) {
              throw new UnsubscriptionError_1.UnsubscriptionError(errors);
          }
      };
      Subscription.prototype.add = function (teardown) {
          var subscription = teardown;
          if (!teardown) {
              return Subscription.EMPTY;
          }
          switch (typeof teardown) {
              case 'function':
                  subscription = new Subscription(teardown);
              case 'object':
                  if (subscription === this || subscription.closed || typeof subscription.unsubscribe !== 'function') {
                      return subscription;
                  }
                  else if (this.closed) {
                      subscription.unsubscribe();
                      return subscription;
                  }
                  else if (!(subscription instanceof Subscription)) {
                      var tmp = subscription;
                      subscription = new Subscription();
                      subscription._subscriptions = [tmp];
                  }
                  break;
              default: {
                  throw new Error('unrecognized teardown ' + teardown + ' added to Subscription.');
              }
          }
          var _parentOrParents = subscription._parentOrParents;
          if (_parentOrParents === null) {
              subscription._parentOrParents = this;
          }
          else if (_parentOrParents instanceof Subscription) {
              if (_parentOrParents === this) {
                  return subscription;
              }
              subscription._parentOrParents = [_parentOrParents, this];
          }
          else if (_parentOrParents.indexOf(this) === -1) {
              _parentOrParents.push(this);
          }
          else {
              return subscription;
          }
          var subscriptions = this._subscriptions;
          if (subscriptions === null) {
              this._subscriptions = [subscription];
          }
          else {
              subscriptions.push(subscription);
          }
          return subscription;
      };
      Subscription.prototype.remove = function (subscription) {
          var subscriptions = this._subscriptions;
          if (subscriptions) {
              var subscriptionIndex = subscriptions.indexOf(subscription);
              if (subscriptionIndex !== -1) {
                  subscriptions.splice(subscriptionIndex, 1);
              }
          }
      };
      Subscription.EMPTY = (function (empty) {
          empty.closed = true;
          return empty;
      }(new Subscription()));
      return Subscription;
  }());
  exports.Subscription = Subscription;
  function flattenUnsubscriptionErrors(errors) {
      return errors.reduce(function (errs, err) { return errs.concat((err instanceof UnsubscriptionError_1.UnsubscriptionError) ? err.errors : err); }, []);
  }

  });

  unwrapExports(Subscription_1$1);
  Subscription_1$1.Subscription;

  var rxSubscriber = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.rxSubscriber = (function () {
      return typeof Symbol === 'function'
          ? Symbol('rxSubscriber')
          : '@@rxSubscriber_' + Math.random();
  })();
  exports.$$rxSubscriber = exports.rxSubscriber;

  });

  unwrapExports(rxSubscriber);
  rxSubscriber.rxSubscriber;
  rxSubscriber.$$rxSubscriber;

  var Observer_1 = Observer;

  var Subscription_1 = Subscription_1$1;

  var rxSubscriber_1 = rxSubscriber;

  var Subscriber_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });






  var Subscriber = (function (_super) {
      __extends(Subscriber, _super);
      function Subscriber(destinationOrNext, error, complete) {
          var _this = _super.call(this) || this;
          _this.syncErrorValue = null;
          _this.syncErrorThrown = false;
          _this.syncErrorThrowable = false;
          _this.isStopped = false;
          switch (arguments.length) {
              case 0:
                  _this.destination = Observer_1.empty;
                  break;
              case 1:
                  if (!destinationOrNext) {
                      _this.destination = Observer_1.empty;
                      break;
                  }
                  if (typeof destinationOrNext === 'object') {
                      if (destinationOrNext instanceof Subscriber) {
                          _this.syncErrorThrowable = destinationOrNext.syncErrorThrowable;
                          _this.destination = destinationOrNext;
                          destinationOrNext.add(_this);
                      }
                      else {
                          _this.syncErrorThrowable = true;
                          _this.destination = new SafeSubscriber(_this, destinationOrNext);
                      }
                      break;
                  }
              default:
                  _this.syncErrorThrowable = true;
                  _this.destination = new SafeSubscriber(_this, destinationOrNext, error, complete);
                  break;
          }
          return _this;
      }
      Subscriber.prototype[rxSubscriber_1.rxSubscriber] = function () { return this; };
      Subscriber.create = function (next, error, complete) {
          var subscriber = new Subscriber(next, error, complete);
          subscriber.syncErrorThrowable = false;
          return subscriber;
      };
      Subscriber.prototype.next = function (value) {
          if (!this.isStopped) {
              this._next(value);
          }
      };
      Subscriber.prototype.error = function (err) {
          if (!this.isStopped) {
              this.isStopped = true;
              this._error(err);
          }
      };
      Subscriber.prototype.complete = function () {
          if (!this.isStopped) {
              this.isStopped = true;
              this._complete();
          }
      };
      Subscriber.prototype.unsubscribe = function () {
          if (this.closed) {
              return;
          }
          this.isStopped = true;
          _super.prototype.unsubscribe.call(this);
      };
      Subscriber.prototype._next = function (value) {
          this.destination.next(value);
      };
      Subscriber.prototype._error = function (err) {
          this.destination.error(err);
          this.unsubscribe();
      };
      Subscriber.prototype._complete = function () {
          this.destination.complete();
          this.unsubscribe();
      };
      Subscriber.prototype._unsubscribeAndRecycle = function () {
          var _parentOrParents = this._parentOrParents;
          this._parentOrParents = null;
          this.unsubscribe();
          this.closed = false;
          this.isStopped = false;
          this._parentOrParents = _parentOrParents;
          return this;
      };
      return Subscriber;
  }(Subscription_1.Subscription));
  exports.Subscriber = Subscriber;
  var SafeSubscriber = (function (_super) {
      __extends(SafeSubscriber, _super);
      function SafeSubscriber(_parentSubscriber, observerOrNext, error, complete) {
          var _this = _super.call(this) || this;
          _this._parentSubscriber = _parentSubscriber;
          var next;
          var context = _this;
          if (isFunction_1.isFunction(observerOrNext)) {
              next = observerOrNext;
          }
          else if (observerOrNext) {
              next = observerOrNext.next;
              error = observerOrNext.error;
              complete = observerOrNext.complete;
              if (observerOrNext !== Observer_1.empty) {
                  context = Object.create(observerOrNext);
                  if (isFunction_1.isFunction(context.unsubscribe)) {
                      _this.add(context.unsubscribe.bind(context));
                  }
                  context.unsubscribe = _this.unsubscribe.bind(_this);
              }
          }
          _this._context = context;
          _this._next = next;
          _this._error = error;
          _this._complete = complete;
          return _this;
      }
      SafeSubscriber.prototype.next = function (value) {
          if (!this.isStopped && this._next) {
              var _parentSubscriber = this._parentSubscriber;
              if (!config_1.config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
                  this.__tryOrUnsub(this._next, value);
              }
              else if (this.__tryOrSetError(_parentSubscriber, this._next, value)) {
                  this.unsubscribe();
              }
          }
      };
      SafeSubscriber.prototype.error = function (err) {
          if (!this.isStopped) {
              var _parentSubscriber = this._parentSubscriber;
              var useDeprecatedSynchronousErrorHandling = config_1.config.useDeprecatedSynchronousErrorHandling;
              if (this._error) {
                  if (!useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
                      this.__tryOrUnsub(this._error, err);
                      this.unsubscribe();
                  }
                  else {
                      this.__tryOrSetError(_parentSubscriber, this._error, err);
                      this.unsubscribe();
                  }
              }
              else if (!_parentSubscriber.syncErrorThrowable) {
                  this.unsubscribe();
                  if (useDeprecatedSynchronousErrorHandling) {
                      throw err;
                  }
                  hostReportError_1.hostReportError(err);
              }
              else {
                  if (useDeprecatedSynchronousErrorHandling) {
                      _parentSubscriber.syncErrorValue = err;
                      _parentSubscriber.syncErrorThrown = true;
                  }
                  else {
                      hostReportError_1.hostReportError(err);
                  }
                  this.unsubscribe();
              }
          }
      };
      SafeSubscriber.prototype.complete = function () {
          var _this = this;
          if (!this.isStopped) {
              var _parentSubscriber = this._parentSubscriber;
              if (this._complete) {
                  var wrappedComplete = function () { return _this._complete.call(_this._context); };
                  if (!config_1.config.useDeprecatedSynchronousErrorHandling || !_parentSubscriber.syncErrorThrowable) {
                      this.__tryOrUnsub(wrappedComplete);
                      this.unsubscribe();
                  }
                  else {
                      this.__tryOrSetError(_parentSubscriber, wrappedComplete);
                      this.unsubscribe();
                  }
              }
              else {
                  this.unsubscribe();
              }
          }
      };
      SafeSubscriber.prototype.__tryOrUnsub = function (fn, value) {
          try {
              fn.call(this._context, value);
          }
          catch (err) {
              this.unsubscribe();
              if (config_1.config.useDeprecatedSynchronousErrorHandling) {
                  throw err;
              }
              else {
                  hostReportError_1.hostReportError(err);
              }
          }
      };
      SafeSubscriber.prototype.__tryOrSetError = function (parent, fn, value) {
          if (!config_1.config.useDeprecatedSynchronousErrorHandling) {
              throw new Error('bad call');
          }
          try {
              fn.call(this._context, value);
          }
          catch (err) {
              if (config_1.config.useDeprecatedSynchronousErrorHandling) {
                  parent.syncErrorValue = err;
                  parent.syncErrorThrown = true;
                  return true;
              }
              else {
                  hostReportError_1.hostReportError(err);
                  return true;
              }
          }
          return false;
      };
      SafeSubscriber.prototype._unsubscribe = function () {
          var _parentSubscriber = this._parentSubscriber;
          this._context = null;
          this._parentSubscriber = null;
          _parentSubscriber.unsubscribe();
      };
      return SafeSubscriber;
  }(Subscriber));
  exports.SafeSubscriber = SafeSubscriber;

  });

  unwrapExports(Subscriber_1$1);
  Subscriber_1$1.Subscriber;
  Subscriber_1$1.SafeSubscriber;

  var Subscriber_1 = Subscriber_1$1;

  var canReportError_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });

  function canReportError(observer) {
      while (observer) {
          var _a = observer, closed_1 = _a.closed, destination = _a.destination, isStopped = _a.isStopped;
          if (closed_1 || isStopped) {
              return false;
          }
          else if (destination && destination instanceof Subscriber_1.Subscriber) {
              observer = destination;
          }
          else {
              observer = null;
          }
      }
      return true;
  }
  exports.canReportError = canReportError;

  });

  unwrapExports(canReportError_1$1);
  canReportError_1$1.canReportError;

  var toSubscriber_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });



  function toSubscriber(nextOrObserver, error, complete) {
      if (nextOrObserver) {
          if (nextOrObserver instanceof Subscriber_1.Subscriber) {
              return nextOrObserver;
          }
          if (nextOrObserver[rxSubscriber_1.rxSubscriber]) {
              return nextOrObserver[rxSubscriber_1.rxSubscriber]();
          }
      }
      if (!nextOrObserver && !error && !complete) {
          return new Subscriber_1.Subscriber(Observer_1.empty);
      }
      return new Subscriber_1.Subscriber(nextOrObserver, error, complete);
  }
  exports.toSubscriber = toSubscriber;

  });

  unwrapExports(toSubscriber_1$1);
  toSubscriber_1$1.toSubscriber;

  var observable = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.observable = (function () { return typeof Symbol === 'function' && Symbol.observable || '@@observable'; })();

  });

  unwrapExports(observable);
  observable.observable;

  var identity_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });
  function identity(x) {
      return x;
  }
  exports.identity = identity;

  });

  unwrapExports(identity_1$1);
  identity_1$1.identity;

  var identity_1 = identity_1$1;

  var pipe_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });

  function pipe() {
      var fns = [];
      for (var _i = 0; _i < arguments.length; _i++) {
          fns[_i] = arguments[_i];
      }
      return pipeFromArray(fns);
  }
  exports.pipe = pipe;
  function pipeFromArray(fns) {
      if (fns.length === 0) {
          return identity_1.identity;
      }
      if (fns.length === 1) {
          return fns[0];
      }
      return function piped(input) {
          return fns.reduce(function (prev, fn) { return fn(prev); }, input);
      };
  }
  exports.pipeFromArray = pipeFromArray;

  });

  unwrapExports(pipe_1$1);
  pipe_1$1.pipe;
  pipe_1$1.pipeFromArray;

  var canReportError_1 = canReportError_1$1;

  var toSubscriber_1 = toSubscriber_1$1;

  var observable_1 = observable;

  var pipe_1 = pipe_1$1;

  var Observable_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });





  var Observable = (function () {
      function Observable(subscribe) {
          this._isScalar = false;
          if (subscribe) {
              this._subscribe = subscribe;
          }
      }
      Observable.prototype.lift = function (operator) {
          var observable = new Observable();
          observable.source = this;
          observable.operator = operator;
          return observable;
      };
      Observable.prototype.subscribe = function (observerOrNext, error, complete) {
          var operator = this.operator;
          var sink = toSubscriber_1.toSubscriber(observerOrNext, error, complete);
          if (operator) {
              sink.add(operator.call(sink, this.source));
          }
          else {
              sink.add(this.source || (config_1.config.useDeprecatedSynchronousErrorHandling && !sink.syncErrorThrowable) ?
                  this._subscribe(sink) :
                  this._trySubscribe(sink));
          }
          if (config_1.config.useDeprecatedSynchronousErrorHandling) {
              if (sink.syncErrorThrowable) {
                  sink.syncErrorThrowable = false;
                  if (sink.syncErrorThrown) {
                      throw sink.syncErrorValue;
                  }
              }
          }
          return sink;
      };
      Observable.prototype._trySubscribe = function (sink) {
          try {
              return this._subscribe(sink);
          }
          catch (err) {
              if (config_1.config.useDeprecatedSynchronousErrorHandling) {
                  sink.syncErrorThrown = true;
                  sink.syncErrorValue = err;
              }
              if (canReportError_1.canReportError(sink)) {
                  sink.error(err);
              }
              else {
                  console.warn(err);
              }
          }
      };
      Observable.prototype.forEach = function (next, promiseCtor) {
          var _this = this;
          promiseCtor = getPromiseCtor(promiseCtor);
          return new promiseCtor(function (resolve, reject) {
              var subscription;
              subscription = _this.subscribe(function (value) {
                  try {
                      next(value);
                  }
                  catch (err) {
                      reject(err);
                      if (subscription) {
                          subscription.unsubscribe();
                      }
                  }
              }, reject, resolve);
          });
      };
      Observable.prototype._subscribe = function (subscriber) {
          var source = this.source;
          return source && source.subscribe(subscriber);
      };
      Observable.prototype[observable_1.observable] = function () {
          return this;
      };
      Observable.prototype.pipe = function () {
          var operations = [];
          for (var _i = 0; _i < arguments.length; _i++) {
              operations[_i] = arguments[_i];
          }
          if (operations.length === 0) {
              return this;
          }
          return pipe_1.pipeFromArray(operations)(this);
      };
      Observable.prototype.toPromise = function (promiseCtor) {
          var _this = this;
          promiseCtor = getPromiseCtor(promiseCtor);
          return new promiseCtor(function (resolve, reject) {
              var value;
              _this.subscribe(function (x) { return value = x; }, function (err) { return reject(err); }, function () { return resolve(value); });
          });
      };
      Observable.create = function (subscribe) {
          return new Observable(subscribe);
      };
      return Observable;
  }());
  exports.Observable = Observable;
  function getPromiseCtor(promiseCtor) {
      if (!promiseCtor) {
          promiseCtor = config_1.config.Promise || Promise;
      }
      if (!promiseCtor) {
          throw new Error('no Promise impl found');
      }
      return promiseCtor;
  }

  });

  unwrapExports(Observable_1$1);
  Observable_1$1.Observable;

  var subscribeToArray = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.subscribeToArray = function (array) { return function (subscriber) {
      for (var i = 0, len = array.length; i < len && !subscriber.closed; i++) {
          subscriber.next(array[i]);
      }
      subscriber.complete();
  }; };

  });

  unwrapExports(subscribeToArray);
  subscribeToArray.subscribeToArray;

  var subscribeToPromise = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });

  exports.subscribeToPromise = function (promise) { return function (subscriber) {
      promise.then(function (value) {
          if (!subscriber.closed) {
              subscriber.next(value);
              subscriber.complete();
          }
      }, function (err) { return subscriber.error(err); })
          .then(null, hostReportError_1.hostReportError);
      return subscriber;
  }; };

  });

  unwrapExports(subscribeToPromise);
  subscribeToPromise.subscribeToPromise;

  var iterator = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });
  function getSymbolIterator() {
      if (typeof Symbol !== 'function' || !Symbol.iterator) {
          return '@@iterator';
      }
      return Symbol.iterator;
  }
  exports.getSymbolIterator = getSymbolIterator;
  exports.iterator = getSymbolIterator();
  exports.$$iterator = exports.iterator;

  });

  unwrapExports(iterator);
  iterator.getSymbolIterator;
  iterator.iterator;
  iterator.$$iterator;

  var iterator_1 = iterator;

  var subscribeToIterable = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });

  exports.subscribeToIterable = function (iterable) { return function (subscriber) {
      var iterator = iterable[iterator_1.iterator]();
      do {
          var item = void 0;
          try {
              item = iterator.next();
          }
          catch (err) {
              subscriber.error(err);
              return subscriber;
          }
          if (item.done) {
              subscriber.complete();
              break;
          }
          subscriber.next(item.value);
          if (subscriber.closed) {
              break;
          }
      } while (true);
      if (typeof iterator.return === 'function') {
          subscriber.add(function () {
              if (iterator.return) {
                  iterator.return();
              }
          });
      }
      return subscriber;
  }; };

  });

  unwrapExports(subscribeToIterable);
  subscribeToIterable.subscribeToIterable;

  var subscribeToObservable = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });

  exports.subscribeToObservable = function (obj) { return function (subscriber) {
      var obs = obj[observable_1.observable]();
      if (typeof obs.subscribe !== 'function') {
          throw new TypeError('Provided object does not correctly implement Symbol.observable');
      }
      else {
          return obs.subscribe(subscriber);
      }
  }; };

  });

  unwrapExports(subscribeToObservable);
  subscribeToObservable.subscribeToObservable;

  var isArrayLike = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });
  exports.isArrayLike = (function (x) { return x && typeof x.length === 'number' && typeof x !== 'function'; });

  });

  unwrapExports(isArrayLike);
  isArrayLike.isArrayLike;

  var isPromise_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });
  function isPromise(value) {
      return !!value && typeof value.subscribe !== 'function' && typeof value.then === 'function';
  }
  exports.isPromise = isPromise;

  });

  unwrapExports(isPromise_1$1);
  isPromise_1$1.isPromise;

  var subscribeToArray_1 = subscribeToArray;

  var subscribeToPromise_1 = subscribeToPromise;

  var subscribeToIterable_1 = subscribeToIterable;

  var subscribeToObservable_1 = subscribeToObservable;

  var isArrayLike_1 = isArrayLike;

  var isPromise_1 = isPromise_1$1;

  var subscribeTo = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });









  exports.subscribeTo = function (result) {
      if (!!result && typeof result[observable_1.observable] === 'function') {
          return subscribeToObservable_1.subscribeToObservable(result);
      }
      else if (isArrayLike_1.isArrayLike(result)) {
          return subscribeToArray_1.subscribeToArray(result);
      }
      else if (isPromise_1.isPromise(result)) {
          return subscribeToPromise_1.subscribeToPromise(result);
      }
      else if (!!result && typeof result[iterator_1.iterator] === 'function') {
          return subscribeToIterable_1.subscribeToIterable(result);
      }
      else {
          var value = isObject_1.isObject(result) ? 'an invalid object' : "'" + result + "'";
          var msg = "You provided " + value + " where a stream was expected."
              + ' You can provide an Observable, Promise, Array, or Iterable.';
          throw new TypeError(msg);
      }
  };

  });

  unwrapExports(subscribeTo);
  subscribeTo.subscribeTo;

  var Observable_1 = Observable_1$1;

  var subscribeTo_1 = subscribeTo;

  var innerSubscribe_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });



  var SimpleInnerSubscriber = (function (_super) {
      __extends(SimpleInnerSubscriber, _super);
      function SimpleInnerSubscriber(parent) {
          var _this = _super.call(this) || this;
          _this.parent = parent;
          return _this;
      }
      SimpleInnerSubscriber.prototype._next = function (value) {
          this.parent.notifyNext(value);
      };
      SimpleInnerSubscriber.prototype._error = function (error) {
          this.parent.notifyError(error);
          this.unsubscribe();
      };
      SimpleInnerSubscriber.prototype._complete = function () {
          this.parent.notifyComplete();
          this.unsubscribe();
      };
      return SimpleInnerSubscriber;
  }(Subscriber_1.Subscriber));
  exports.SimpleInnerSubscriber = SimpleInnerSubscriber;
  var ComplexInnerSubscriber = (function (_super) {
      __extends(ComplexInnerSubscriber, _super);
      function ComplexInnerSubscriber(parent, outerValue, outerIndex) {
          var _this = _super.call(this) || this;
          _this.parent = parent;
          _this.outerValue = outerValue;
          _this.outerIndex = outerIndex;
          return _this;
      }
      ComplexInnerSubscriber.prototype._next = function (value) {
          this.parent.notifyNext(this.outerValue, value, this.outerIndex, this);
      };
      ComplexInnerSubscriber.prototype._error = function (error) {
          this.parent.notifyError(error);
          this.unsubscribe();
      };
      ComplexInnerSubscriber.prototype._complete = function () {
          this.parent.notifyComplete(this);
          this.unsubscribe();
      };
      return ComplexInnerSubscriber;
  }(Subscriber_1.Subscriber));
  exports.ComplexInnerSubscriber = ComplexInnerSubscriber;
  var SimpleOuterSubscriber = (function (_super) {
      __extends(SimpleOuterSubscriber, _super);
      function SimpleOuterSubscriber() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      SimpleOuterSubscriber.prototype.notifyNext = function (innerValue) {
          this.destination.next(innerValue);
      };
      SimpleOuterSubscriber.prototype.notifyError = function (err) {
          this.destination.error(err);
      };
      SimpleOuterSubscriber.prototype.notifyComplete = function () {
          this.destination.complete();
      };
      return SimpleOuterSubscriber;
  }(Subscriber_1.Subscriber));
  exports.SimpleOuterSubscriber = SimpleOuterSubscriber;
  var ComplexOuterSubscriber = (function (_super) {
      __extends(ComplexOuterSubscriber, _super);
      function ComplexOuterSubscriber() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      ComplexOuterSubscriber.prototype.notifyNext = function (_outerValue, innerValue, _outerIndex, _innerSub) {
          this.destination.next(innerValue);
      };
      ComplexOuterSubscriber.prototype.notifyError = function (error) {
          this.destination.error(error);
      };
      ComplexOuterSubscriber.prototype.notifyComplete = function (_innerSub) {
          this.destination.complete();
      };
      return ComplexOuterSubscriber;
  }(Subscriber_1.Subscriber));
  exports.ComplexOuterSubscriber = ComplexOuterSubscriber;
  function innerSubscribe(result, innerSubscriber) {
      if (innerSubscriber.closed) {
          return undefined;
      }
      if (result instanceof Observable_1.Observable) {
          return result.subscribe(innerSubscriber);
      }
      var subscription;
      try {
          subscription = subscribeTo_1.subscribeTo(result)(innerSubscriber);
      }
      catch (error) {
          innerSubscriber.error(error);
      }
      return subscription;
  }
  exports.innerSubscribe = innerSubscribe;

  });

  unwrapExports(innerSubscribe_1$1);
  innerSubscribe_1$1.SimpleInnerSubscriber;
  innerSubscribe_1$1.ComplexInnerSubscriber;
  innerSubscribe_1$1.SimpleOuterSubscriber;
  innerSubscribe_1$1.ComplexOuterSubscriber;
  innerSubscribe_1$1.innerSubscribe;

  var innerSubscribe_1 = innerSubscribe_1$1;

  var audit_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });

  function audit(durationSelector) {
      return function auditOperatorFunction(source) {
          return source.lift(new AuditOperator(durationSelector));
      };
  }
  exports.audit = audit;
  var AuditOperator = (function () {
      function AuditOperator(durationSelector) {
          this.durationSelector = durationSelector;
      }
      AuditOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new AuditSubscriber(subscriber, this.durationSelector));
      };
      return AuditOperator;
  }());
  var AuditSubscriber = (function (_super) {
      __extends(AuditSubscriber, _super);
      function AuditSubscriber(destination, durationSelector) {
          var _this = _super.call(this, destination) || this;
          _this.durationSelector = durationSelector;
          _this.hasValue = false;
          return _this;
      }
      AuditSubscriber.prototype._next = function (value) {
          this.value = value;
          this.hasValue = true;
          if (!this.throttled) {
              var duration = void 0;
              try {
                  var durationSelector = this.durationSelector;
                  duration = durationSelector(value);
              }
              catch (err) {
                  return this.destination.error(err);
              }
              var innerSubscription = innerSubscribe_1.innerSubscribe(duration, new innerSubscribe_1.SimpleInnerSubscriber(this));
              if (!innerSubscription || innerSubscription.closed) {
                  this.clearThrottle();
              }
              else {
                  this.add(this.throttled = innerSubscription);
              }
          }
      };
      AuditSubscriber.prototype.clearThrottle = function () {
          var _a = this, value = _a.value, hasValue = _a.hasValue, throttled = _a.throttled;
          if (throttled) {
              this.remove(throttled);
              this.throttled = undefined;
              throttled.unsubscribe();
          }
          if (hasValue) {
              this.value = undefined;
              this.hasValue = false;
              this.destination.next(value);
          }
      };
      AuditSubscriber.prototype.notifyNext = function () {
          this.clearThrottle();
      };
      AuditSubscriber.prototype.notifyComplete = function () {
          this.clearThrottle();
      };
      return AuditSubscriber;
  }(innerSubscribe_1.SimpleOuterSubscriber));

  });

  unwrapExports(audit_1$1);
  audit_1$1.audit;

  var Action_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });

  var Action = (function (_super) {
      __extends(Action, _super);
      function Action(scheduler, work) {
          return _super.call(this) || this;
      }
      Action.prototype.schedule = function (state, delay) {
          return this;
      };
      return Action;
  }(Subscription_1.Subscription));
  exports.Action = Action;

  });

  unwrapExports(Action_1$1);
  Action_1$1.Action;

  var Action_1 = Action_1$1;

  var AsyncAction_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });

  var AsyncAction = (function (_super) {
      __extends(AsyncAction, _super);
      function AsyncAction(scheduler, work) {
          var _this = _super.call(this, scheduler, work) || this;
          _this.scheduler = scheduler;
          _this.work = work;
          _this.pending = false;
          return _this;
      }
      AsyncAction.prototype.schedule = function (state, delay) {
          if (delay === void 0) { delay = 0; }
          if (this.closed) {
              return this;
          }
          this.state = state;
          var id = this.id;
          var scheduler = this.scheduler;
          if (id != null) {
              this.id = this.recycleAsyncId(scheduler, id, delay);
          }
          this.pending = true;
          this.delay = delay;
          this.id = this.id || this.requestAsyncId(scheduler, this.id, delay);
          return this;
      };
      AsyncAction.prototype.requestAsyncId = function (scheduler, id, delay) {
          if (delay === void 0) { delay = 0; }
          return setInterval(scheduler.flush.bind(scheduler, this), delay);
      };
      AsyncAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
          if (delay === void 0) { delay = 0; }
          if (delay !== null && this.delay === delay && this.pending === false) {
              return id;
          }
          clearInterval(id);
          return undefined;
      };
      AsyncAction.prototype.execute = function (state, delay) {
          if (this.closed) {
              return new Error('executing a cancelled action');
          }
          this.pending = false;
          var error = this._execute(state, delay);
          if (error) {
              return error;
          }
          else if (this.pending === false && this.id != null) {
              this.id = this.recycleAsyncId(this.scheduler, this.id, null);
          }
      };
      AsyncAction.prototype._execute = function (state, delay) {
          var errored = false;
          var errorValue = undefined;
          try {
              this.work(state);
          }
          catch (e) {
              errored = true;
              errorValue = !!e && e || new Error(e);
          }
          if (errored) {
              this.unsubscribe();
              return errorValue;
          }
      };
      AsyncAction.prototype._unsubscribe = function () {
          var id = this.id;
          var scheduler = this.scheduler;
          var actions = scheduler.actions;
          var index = actions.indexOf(this);
          this.work = null;
          this.state = null;
          this.pending = false;
          this.scheduler = null;
          if (index !== -1) {
              actions.splice(index, 1);
          }
          if (id != null) {
              this.id = this.recycleAsyncId(scheduler, id, null);
          }
          this.delay = null;
      };
      return AsyncAction;
  }(Action_1.Action));
  exports.AsyncAction = AsyncAction;

  });

  unwrapExports(AsyncAction_1$1);
  AsyncAction_1$1.AsyncAction;

  var Scheduler_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });
  var Scheduler = (function () {
      function Scheduler(SchedulerAction, now) {
          if (now === void 0) { now = Scheduler.now; }
          this.SchedulerAction = SchedulerAction;
          this.now = now;
      }
      Scheduler.prototype.schedule = function (work, delay, state) {
          if (delay === void 0) { delay = 0; }
          return new this.SchedulerAction(this, work).schedule(state, delay);
      };
      Scheduler.now = function () { return Date.now(); };
      return Scheduler;
  }());
  exports.Scheduler = Scheduler;

  });

  unwrapExports(Scheduler_1$1);
  Scheduler_1$1.Scheduler;

  var Scheduler_1 = Scheduler_1$1;

  var AsyncScheduler_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });

  var AsyncScheduler = (function (_super) {
      __extends(AsyncScheduler, _super);
      function AsyncScheduler(SchedulerAction, now) {
          if (now === void 0) { now = Scheduler_1.Scheduler.now; }
          var _this = _super.call(this, SchedulerAction, function () {
              if (AsyncScheduler.delegate && AsyncScheduler.delegate !== _this) {
                  return AsyncScheduler.delegate.now();
              }
              else {
                  return now();
              }
          }) || this;
          _this.actions = [];
          _this.active = false;
          _this.scheduled = undefined;
          return _this;
      }
      AsyncScheduler.prototype.schedule = function (work, delay, state) {
          if (delay === void 0) { delay = 0; }
          if (AsyncScheduler.delegate && AsyncScheduler.delegate !== this) {
              return AsyncScheduler.delegate.schedule(work, delay, state);
          }
          else {
              return _super.prototype.schedule.call(this, work, delay, state);
          }
      };
      AsyncScheduler.prototype.flush = function (action) {
          var actions = this.actions;
          if (this.active) {
              actions.push(action);
              return;
          }
          var error;
          this.active = true;
          do {
              if (error = action.execute(action.state, action.delay)) {
                  break;
              }
          } while (action = actions.shift());
          this.active = false;
          if (error) {
              while (action = actions.shift()) {
                  action.unsubscribe();
              }
              throw error;
          }
      };
      return AsyncScheduler;
  }(Scheduler_1.Scheduler));
  exports.AsyncScheduler = AsyncScheduler;

  });

  unwrapExports(AsyncScheduler_1$1);
  AsyncScheduler_1$1.AsyncScheduler;

  var AsyncAction_1 = AsyncAction_1$1;

  var AsyncScheduler_1 = AsyncScheduler_1$1;

  var async = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });


  exports.asyncScheduler = new AsyncScheduler_1.AsyncScheduler(AsyncAction_1.AsyncAction);
  exports.async = exports.asyncScheduler;

  });

  unwrapExports(async);
  async.asyncScheduler;
  async.async;

  var isNumeric_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });

  function isNumeric(val) {
      return !isArray_1.isArray(val) && (val - parseFloat(val) + 1) >= 0;
  }
  exports.isNumeric = isNumeric;

  });

  unwrapExports(isNumeric_1$1);
  isNumeric_1$1.isNumeric;

  var isScheduler_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });
  function isScheduler(value) {
      return value && typeof value.schedule === 'function';
  }
  exports.isScheduler = isScheduler;

  });

  unwrapExports(isScheduler_1$1);
  isScheduler_1$1.isScheduler;

  var async_1 = async;

  var isNumeric_1 = isNumeric_1$1;

  var isScheduler_1 = isScheduler_1$1;

  var timer_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });




  function timer(dueTime, periodOrScheduler, scheduler) {
      if (dueTime === void 0) { dueTime = 0; }
      var period = -1;
      if (isNumeric_1.isNumeric(periodOrScheduler)) {
          period = Number(periodOrScheduler) < 1 && 1 || Number(periodOrScheduler);
      }
      else if (isScheduler_1.isScheduler(periodOrScheduler)) {
          scheduler = periodOrScheduler;
      }
      if (!isScheduler_1.isScheduler(scheduler)) {
          scheduler = async_1.async;
      }
      return new Observable_1.Observable(function (subscriber) {
          var due = isNumeric_1.isNumeric(dueTime)
              ? dueTime
              : (+dueTime - scheduler.now());
          return scheduler.schedule(dispatch, due, {
              index: 0, period: period, subscriber: subscriber
          });
      });
  }
  exports.timer = timer;
  function dispatch(state) {
      var index = state.index, period = state.period, subscriber = state.subscriber;
      subscriber.next(index);
      if (subscriber.closed) {
          return;
      }
      else if (period === -1) {
          return subscriber.complete();
      }
      state.index = index + 1;
      this.schedule(state, period);
  }

  });

  unwrapExports(timer_1$1);
  timer_1$1.timer;

  var audit_1 = audit_1$1;

  var timer_1 = timer_1$1;

  var auditTime_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });



  function auditTime(duration, scheduler) {
      if (scheduler === void 0) { scheduler = async_1.async; }
      return audit_1.audit(function () { return timer_1.timer(duration, scheduler); });
  }
  exports.auditTime = auditTime;

  });

  unwrapExports(auditTime_1$1);
  auditTime_1$1.auditTime;

  var buffer_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });

  function buffer(closingNotifier) {
      return function bufferOperatorFunction(source) {
          return source.lift(new BufferOperator(closingNotifier));
      };
  }
  exports.buffer = buffer;
  var BufferOperator = (function () {
      function BufferOperator(closingNotifier) {
          this.closingNotifier = closingNotifier;
      }
      BufferOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new BufferSubscriber(subscriber, this.closingNotifier));
      };
      return BufferOperator;
  }());
  var BufferSubscriber = (function (_super) {
      __extends(BufferSubscriber, _super);
      function BufferSubscriber(destination, closingNotifier) {
          var _this = _super.call(this, destination) || this;
          _this.buffer = [];
          _this.add(innerSubscribe_1.innerSubscribe(closingNotifier, new innerSubscribe_1.SimpleInnerSubscriber(_this)));
          return _this;
      }
      BufferSubscriber.prototype._next = function (value) {
          this.buffer.push(value);
      };
      BufferSubscriber.prototype.notifyNext = function () {
          var buffer = this.buffer;
          this.buffer = [];
          this.destination.next(buffer);
      };
      return BufferSubscriber;
  }(innerSubscribe_1.SimpleOuterSubscriber));

  });

  unwrapExports(buffer_1$1);
  buffer_1$1.buffer;

  var bufferCount_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });

  function bufferCount(bufferSize, startBufferEvery) {
      if (startBufferEvery === void 0) { startBufferEvery = null; }
      return function bufferCountOperatorFunction(source) {
          return source.lift(new BufferCountOperator(bufferSize, startBufferEvery));
      };
  }
  exports.bufferCount = bufferCount;
  var BufferCountOperator = (function () {
      function BufferCountOperator(bufferSize, startBufferEvery) {
          this.bufferSize = bufferSize;
          this.startBufferEvery = startBufferEvery;
          if (!startBufferEvery || bufferSize === startBufferEvery) {
              this.subscriberClass = BufferCountSubscriber;
          }
          else {
              this.subscriberClass = BufferSkipCountSubscriber;
          }
      }
      BufferCountOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new this.subscriberClass(subscriber, this.bufferSize, this.startBufferEvery));
      };
      return BufferCountOperator;
  }());
  var BufferCountSubscriber = (function (_super) {
      __extends(BufferCountSubscriber, _super);
      function BufferCountSubscriber(destination, bufferSize) {
          var _this = _super.call(this, destination) || this;
          _this.bufferSize = bufferSize;
          _this.buffer = [];
          return _this;
      }
      BufferCountSubscriber.prototype._next = function (value) {
          var buffer = this.buffer;
          buffer.push(value);
          if (buffer.length == this.bufferSize) {
              this.destination.next(buffer);
              this.buffer = [];
          }
      };
      BufferCountSubscriber.prototype._complete = function () {
          var buffer = this.buffer;
          if (buffer.length > 0) {
              this.destination.next(buffer);
          }
          _super.prototype._complete.call(this);
      };
      return BufferCountSubscriber;
  }(Subscriber_1.Subscriber));
  var BufferSkipCountSubscriber = (function (_super) {
      __extends(BufferSkipCountSubscriber, _super);
      function BufferSkipCountSubscriber(destination, bufferSize, startBufferEvery) {
          var _this = _super.call(this, destination) || this;
          _this.bufferSize = bufferSize;
          _this.startBufferEvery = startBufferEvery;
          _this.buffers = [];
          _this.count = 0;
          return _this;
      }
      BufferSkipCountSubscriber.prototype._next = function (value) {
          var _a = this, bufferSize = _a.bufferSize, startBufferEvery = _a.startBufferEvery, buffers = _a.buffers, count = _a.count;
          this.count++;
          if (count % startBufferEvery === 0) {
              buffers.push([]);
          }
          for (var i = buffers.length; i--;) {
              var buffer = buffers[i];
              buffer.push(value);
              if (buffer.length === bufferSize) {
                  buffers.splice(i, 1);
                  this.destination.next(buffer);
              }
          }
      };
      BufferSkipCountSubscriber.prototype._complete = function () {
          var _a = this, buffers = _a.buffers, destination = _a.destination;
          while (buffers.length > 0) {
              var buffer = buffers.shift();
              if (buffer.length > 0) {
                  destination.next(buffer);
              }
          }
          _super.prototype._complete.call(this);
      };
      return BufferSkipCountSubscriber;
  }(Subscriber_1.Subscriber));

  });

  unwrapExports(bufferCount_1$1);
  bufferCount_1$1.bufferCount;

  var bufferTime_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });



  function bufferTime(bufferTimeSpan) {
      var length = arguments.length;
      var scheduler = async_1.async;
      if (isScheduler_1.isScheduler(arguments[arguments.length - 1])) {
          scheduler = arguments[arguments.length - 1];
          length--;
      }
      var bufferCreationInterval = null;
      if (length >= 2) {
          bufferCreationInterval = arguments[1];
      }
      var maxBufferSize = Number.POSITIVE_INFINITY;
      if (length >= 3) {
          maxBufferSize = arguments[2];
      }
      return function bufferTimeOperatorFunction(source) {
          return source.lift(new BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler));
      };
  }
  exports.bufferTime = bufferTime;
  var BufferTimeOperator = (function () {
      function BufferTimeOperator(bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {
          this.bufferTimeSpan = bufferTimeSpan;
          this.bufferCreationInterval = bufferCreationInterval;
          this.maxBufferSize = maxBufferSize;
          this.scheduler = scheduler;
      }
      BufferTimeOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new BufferTimeSubscriber(subscriber, this.bufferTimeSpan, this.bufferCreationInterval, this.maxBufferSize, this.scheduler));
      };
      return BufferTimeOperator;
  }());
  var Context = (function () {
      function Context() {
          this.buffer = [];
      }
      return Context;
  }());
  var BufferTimeSubscriber = (function (_super) {
      __extends(BufferTimeSubscriber, _super);
      function BufferTimeSubscriber(destination, bufferTimeSpan, bufferCreationInterval, maxBufferSize, scheduler) {
          var _this = _super.call(this, destination) || this;
          _this.bufferTimeSpan = bufferTimeSpan;
          _this.bufferCreationInterval = bufferCreationInterval;
          _this.maxBufferSize = maxBufferSize;
          _this.scheduler = scheduler;
          _this.contexts = [];
          var context = _this.openContext();
          _this.timespanOnly = bufferCreationInterval == null || bufferCreationInterval < 0;
          if (_this.timespanOnly) {
              var timeSpanOnlyState = { subscriber: _this, context: context, bufferTimeSpan: bufferTimeSpan };
              _this.add(context.closeAction = scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));
          }
          else {
              var closeState = { subscriber: _this, context: context };
              var creationState = { bufferTimeSpan: bufferTimeSpan, bufferCreationInterval: bufferCreationInterval, subscriber: _this, scheduler: scheduler };
              _this.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, closeState));
              _this.add(scheduler.schedule(dispatchBufferCreation, bufferCreationInterval, creationState));
          }
          return _this;
      }
      BufferTimeSubscriber.prototype._next = function (value) {
          var contexts = this.contexts;
          var len = contexts.length;
          var filledBufferContext;
          for (var i = 0; i < len; i++) {
              var context_1 = contexts[i];
              var buffer = context_1.buffer;
              buffer.push(value);
              if (buffer.length == this.maxBufferSize) {
                  filledBufferContext = context_1;
              }
          }
          if (filledBufferContext) {
              this.onBufferFull(filledBufferContext);
          }
      };
      BufferTimeSubscriber.prototype._error = function (err) {
          this.contexts.length = 0;
          _super.prototype._error.call(this, err);
      };
      BufferTimeSubscriber.prototype._complete = function () {
          var _a = this, contexts = _a.contexts, destination = _a.destination;
          while (contexts.length > 0) {
              var context_2 = contexts.shift();
              destination.next(context_2.buffer);
          }
          _super.prototype._complete.call(this);
      };
      BufferTimeSubscriber.prototype._unsubscribe = function () {
          this.contexts = null;
      };
      BufferTimeSubscriber.prototype.onBufferFull = function (context) {
          this.closeContext(context);
          var closeAction = context.closeAction;
          closeAction.unsubscribe();
          this.remove(closeAction);
          if (!this.closed && this.timespanOnly) {
              context = this.openContext();
              var bufferTimeSpan = this.bufferTimeSpan;
              var timeSpanOnlyState = { subscriber: this, context: context, bufferTimeSpan: bufferTimeSpan };
              this.add(context.closeAction = this.scheduler.schedule(dispatchBufferTimeSpanOnly, bufferTimeSpan, timeSpanOnlyState));
          }
      };
      BufferTimeSubscriber.prototype.openContext = function () {
          var context = new Context();
          this.contexts.push(context);
          return context;
      };
      BufferTimeSubscriber.prototype.closeContext = function (context) {
          this.destination.next(context.buffer);
          var contexts = this.contexts;
          var spliceIndex = contexts ? contexts.indexOf(context) : -1;
          if (spliceIndex >= 0) {
              contexts.splice(contexts.indexOf(context), 1);
          }
      };
      return BufferTimeSubscriber;
  }(Subscriber_1.Subscriber));
  function dispatchBufferTimeSpanOnly(state) {
      var subscriber = state.subscriber;
      var prevContext = state.context;
      if (prevContext) {
          subscriber.closeContext(prevContext);
      }
      if (!subscriber.closed) {
          state.context = subscriber.openContext();
          state.context.closeAction = this.schedule(state, state.bufferTimeSpan);
      }
  }
  function dispatchBufferCreation(state) {
      var bufferCreationInterval = state.bufferCreationInterval, bufferTimeSpan = state.bufferTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler;
      var context = subscriber.openContext();
      var action = this;
      if (!subscriber.closed) {
          subscriber.add(context.closeAction = scheduler.schedule(dispatchBufferClose, bufferTimeSpan, { subscriber: subscriber, context: context }));
          action.schedule(state, bufferCreationInterval);
      }
  }
  function dispatchBufferClose(arg) {
      var subscriber = arg.subscriber, context = arg.context;
      subscriber.closeContext(context);
  }

  });

  unwrapExports(bufferTime_1$1);
  bufferTime_1$1.bufferTime;

  var InnerSubscriber_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });

  var InnerSubscriber = (function (_super) {
      __extends(InnerSubscriber, _super);
      function InnerSubscriber(parent, outerValue, outerIndex) {
          var _this = _super.call(this) || this;
          _this.parent = parent;
          _this.outerValue = outerValue;
          _this.outerIndex = outerIndex;
          _this.index = 0;
          return _this;
      }
      InnerSubscriber.prototype._next = function (value) {
          this.parent.notifyNext(this.outerValue, value, this.outerIndex, this.index++, this);
      };
      InnerSubscriber.prototype._error = function (error) {
          this.parent.notifyError(error, this);
          this.unsubscribe();
      };
      InnerSubscriber.prototype._complete = function () {
          this.parent.notifyComplete(this);
          this.unsubscribe();
      };
      return InnerSubscriber;
  }(Subscriber_1.Subscriber));
  exports.InnerSubscriber = InnerSubscriber;

  });

  unwrapExports(InnerSubscriber_1$1);
  InnerSubscriber_1$1.InnerSubscriber;

  var InnerSubscriber_1 = InnerSubscriber_1$1;

  var subscribeToResult_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });



  function subscribeToResult(outerSubscriber, result, outerValue, outerIndex, innerSubscriber) {
      if (innerSubscriber === void 0) { innerSubscriber = new InnerSubscriber_1.InnerSubscriber(outerSubscriber, outerValue, outerIndex); }
      if (innerSubscriber.closed) {
          return undefined;
      }
      if (result instanceof Observable_1.Observable) {
          return result.subscribe(innerSubscriber);
      }
      return subscribeTo_1.subscribeTo(result)(innerSubscriber);
  }
  exports.subscribeToResult = subscribeToResult;

  });

  unwrapExports(subscribeToResult_1$1);
  subscribeToResult_1$1.subscribeToResult;

  var OuterSubscriber_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });

  var OuterSubscriber = (function (_super) {
      __extends(OuterSubscriber, _super);
      function OuterSubscriber() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      OuterSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
          this.destination.next(innerValue);
      };
      OuterSubscriber.prototype.notifyError = function (error, innerSub) {
          this.destination.error(error);
      };
      OuterSubscriber.prototype.notifyComplete = function (innerSub) {
          this.destination.complete();
      };
      return OuterSubscriber;
  }(Subscriber_1.Subscriber));
  exports.OuterSubscriber = OuterSubscriber;

  });

  unwrapExports(OuterSubscriber_1$1);
  OuterSubscriber_1$1.OuterSubscriber;

  var subscribeToResult_1 = subscribeToResult_1$1;

  var OuterSubscriber_1 = OuterSubscriber_1$1;

  var bufferToggle_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });



  function bufferToggle(openings, closingSelector) {
      return function bufferToggleOperatorFunction(source) {
          return source.lift(new BufferToggleOperator(openings, closingSelector));
      };
  }
  exports.bufferToggle = bufferToggle;
  var BufferToggleOperator = (function () {
      function BufferToggleOperator(openings, closingSelector) {
          this.openings = openings;
          this.closingSelector = closingSelector;
      }
      BufferToggleOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new BufferToggleSubscriber(subscriber, this.openings, this.closingSelector));
      };
      return BufferToggleOperator;
  }());
  var BufferToggleSubscriber = (function (_super) {
      __extends(BufferToggleSubscriber, _super);
      function BufferToggleSubscriber(destination, openings, closingSelector) {
          var _this = _super.call(this, destination) || this;
          _this.closingSelector = closingSelector;
          _this.contexts = [];
          _this.add(subscribeToResult_1.subscribeToResult(_this, openings));
          return _this;
      }
      BufferToggleSubscriber.prototype._next = function (value) {
          var contexts = this.contexts;
          var len = contexts.length;
          for (var i = 0; i < len; i++) {
              contexts[i].buffer.push(value);
          }
      };
      BufferToggleSubscriber.prototype._error = function (err) {
          var contexts = this.contexts;
          while (contexts.length > 0) {
              var context_1 = contexts.shift();
              context_1.subscription.unsubscribe();
              context_1.buffer = null;
              context_1.subscription = null;
          }
          this.contexts = null;
          _super.prototype._error.call(this, err);
      };
      BufferToggleSubscriber.prototype._complete = function () {
          var contexts = this.contexts;
          while (contexts.length > 0) {
              var context_2 = contexts.shift();
              this.destination.next(context_2.buffer);
              context_2.subscription.unsubscribe();
              context_2.buffer = null;
              context_2.subscription = null;
          }
          this.contexts = null;
          _super.prototype._complete.call(this);
      };
      BufferToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue) {
          outerValue ? this.closeBuffer(outerValue) : this.openBuffer(innerValue);
      };
      BufferToggleSubscriber.prototype.notifyComplete = function (innerSub) {
          this.closeBuffer(innerSub.context);
      };
      BufferToggleSubscriber.prototype.openBuffer = function (value) {
          try {
              var closingSelector = this.closingSelector;
              var closingNotifier = closingSelector.call(this, value);
              if (closingNotifier) {
                  this.trySubscribe(closingNotifier);
              }
          }
          catch (err) {
              this._error(err);
          }
      };
      BufferToggleSubscriber.prototype.closeBuffer = function (context) {
          var contexts = this.contexts;
          if (contexts && context) {
              var buffer = context.buffer, subscription = context.subscription;
              this.destination.next(buffer);
              contexts.splice(contexts.indexOf(context), 1);
              this.remove(subscription);
              subscription.unsubscribe();
          }
      };
      BufferToggleSubscriber.prototype.trySubscribe = function (closingNotifier) {
          var contexts = this.contexts;
          var buffer = [];
          var subscription = new Subscription_1.Subscription();
          var context = { buffer: buffer, subscription: subscription };
          contexts.push(context);
          var innerSubscription = subscribeToResult_1.subscribeToResult(this, closingNotifier, context);
          if (!innerSubscription || innerSubscription.closed) {
              this.closeBuffer(context);
          }
          else {
              innerSubscription.context = context;
              this.add(innerSubscription);
              subscription.add(innerSubscription);
          }
      };
      return BufferToggleSubscriber;
  }(OuterSubscriber_1.OuterSubscriber));

  });

  unwrapExports(bufferToggle_1$1);
  bufferToggle_1$1.bufferToggle;

  var bufferWhen_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });


  function bufferWhen(closingSelector) {
      return function (source) {
          return source.lift(new BufferWhenOperator(closingSelector));
      };
  }
  exports.bufferWhen = bufferWhen;
  var BufferWhenOperator = (function () {
      function BufferWhenOperator(closingSelector) {
          this.closingSelector = closingSelector;
      }
      BufferWhenOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new BufferWhenSubscriber(subscriber, this.closingSelector));
      };
      return BufferWhenOperator;
  }());
  var BufferWhenSubscriber = (function (_super) {
      __extends(BufferWhenSubscriber, _super);
      function BufferWhenSubscriber(destination, closingSelector) {
          var _this = _super.call(this, destination) || this;
          _this.closingSelector = closingSelector;
          _this.subscribing = false;
          _this.openBuffer();
          return _this;
      }
      BufferWhenSubscriber.prototype._next = function (value) {
          this.buffer.push(value);
      };
      BufferWhenSubscriber.prototype._complete = function () {
          var buffer = this.buffer;
          if (buffer) {
              this.destination.next(buffer);
          }
          _super.prototype._complete.call(this);
      };
      BufferWhenSubscriber.prototype._unsubscribe = function () {
          this.buffer = undefined;
          this.subscribing = false;
      };
      BufferWhenSubscriber.prototype.notifyNext = function () {
          this.openBuffer();
      };
      BufferWhenSubscriber.prototype.notifyComplete = function () {
          if (this.subscribing) {
              this.complete();
          }
          else {
              this.openBuffer();
          }
      };
      BufferWhenSubscriber.prototype.openBuffer = function () {
          var closingSubscription = this.closingSubscription;
          if (closingSubscription) {
              this.remove(closingSubscription);
              closingSubscription.unsubscribe();
          }
          var buffer = this.buffer;
          if (this.buffer) {
              this.destination.next(buffer);
          }
          this.buffer = [];
          var closingNotifier;
          try {
              var closingSelector = this.closingSelector;
              closingNotifier = closingSelector();
          }
          catch (err) {
              return this.error(err);
          }
          closingSubscription = new Subscription_1.Subscription();
          this.closingSubscription = closingSubscription;
          this.add(closingSubscription);
          this.subscribing = true;
          closingSubscription.add(innerSubscribe_1.innerSubscribe(closingNotifier, new innerSubscribe_1.SimpleInnerSubscriber(this)));
          this.subscribing = false;
      };
      return BufferWhenSubscriber;
  }(innerSubscribe_1.SimpleOuterSubscriber));

  });

  unwrapExports(bufferWhen_1$1);
  bufferWhen_1$1.bufferWhen;

  var catchError_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });

  function catchError(selector) {
      return function catchErrorOperatorFunction(source) {
          var operator = new CatchOperator(selector);
          var caught = source.lift(operator);
          return (operator.caught = caught);
      };
  }
  exports.catchError = catchError;
  var CatchOperator = (function () {
      function CatchOperator(selector) {
          this.selector = selector;
      }
      CatchOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new CatchSubscriber(subscriber, this.selector, this.caught));
      };
      return CatchOperator;
  }());
  var CatchSubscriber = (function (_super) {
      __extends(CatchSubscriber, _super);
      function CatchSubscriber(destination, selector, caught) {
          var _this = _super.call(this, destination) || this;
          _this.selector = selector;
          _this.caught = caught;
          return _this;
      }
      CatchSubscriber.prototype.error = function (err) {
          if (!this.isStopped) {
              var result = void 0;
              try {
                  result = this.selector(err, this.caught);
              }
              catch (err2) {
                  _super.prototype.error.call(this, err2);
                  return;
              }
              this._unsubscribeAndRecycle();
              var innerSubscriber = new innerSubscribe_1.SimpleInnerSubscriber(this);
              this.add(innerSubscriber);
              var innerSubscription = innerSubscribe_1.innerSubscribe(result, innerSubscriber);
              if (innerSubscription !== innerSubscriber) {
                  this.add(innerSubscription);
              }
          }
      };
      return CatchSubscriber;
  }(innerSubscribe_1.SimpleOuterSubscriber));

  });

  unwrapExports(catchError_1$1);
  catchError_1$1.catchError;

  var scheduleArray_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });


  function scheduleArray(input, scheduler) {
      return new Observable_1.Observable(function (subscriber) {
          var sub = new Subscription_1.Subscription();
          var i = 0;
          sub.add(scheduler.schedule(function () {
              if (i === input.length) {
                  subscriber.complete();
                  return;
              }
              subscriber.next(input[i++]);
              if (!subscriber.closed) {
                  sub.add(this.schedule());
              }
          }));
          return sub;
      });
  }
  exports.scheduleArray = scheduleArray;

  });

  unwrapExports(scheduleArray_1$1);
  scheduleArray_1$1.scheduleArray;

  var scheduleArray_1 = scheduleArray_1$1;

  var fromArray_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });



  function fromArray(input, scheduler) {
      if (!scheduler) {
          return new Observable_1.Observable(subscribeToArray_1.subscribeToArray(input));
      }
      else {
          return scheduleArray_1.scheduleArray(input, scheduler);
      }
  }
  exports.fromArray = fromArray;

  });

  unwrapExports(fromArray_1$1);
  fromArray_1$1.fromArray;

  var fromArray_1 = fromArray_1$1;

  var combineLatest_1$2 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });





  var NONE = {};
  function combineLatest() {
      var observables = [];
      for (var _i = 0; _i < arguments.length; _i++) {
          observables[_i] = arguments[_i];
      }
      var resultSelector = undefined;
      var scheduler = undefined;
      if (isScheduler_1.isScheduler(observables[observables.length - 1])) {
          scheduler = observables.pop();
      }
      if (typeof observables[observables.length - 1] === 'function') {
          resultSelector = observables.pop();
      }
      if (observables.length === 1 && isArray_1.isArray(observables[0])) {
          observables = observables[0];
      }
      return fromArray_1.fromArray(observables, scheduler).lift(new CombineLatestOperator(resultSelector));
  }
  exports.combineLatest = combineLatest;
  var CombineLatestOperator = (function () {
      function CombineLatestOperator(resultSelector) {
          this.resultSelector = resultSelector;
      }
      CombineLatestOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new CombineLatestSubscriber(subscriber, this.resultSelector));
      };
      return CombineLatestOperator;
  }());
  exports.CombineLatestOperator = CombineLatestOperator;
  var CombineLatestSubscriber = (function (_super) {
      __extends(CombineLatestSubscriber, _super);
      function CombineLatestSubscriber(destination, resultSelector) {
          var _this = _super.call(this, destination) || this;
          _this.resultSelector = resultSelector;
          _this.active = 0;
          _this.values = [];
          _this.observables = [];
          return _this;
      }
      CombineLatestSubscriber.prototype._next = function (observable) {
          this.values.push(NONE);
          this.observables.push(observable);
      };
      CombineLatestSubscriber.prototype._complete = function () {
          var observables = this.observables;
          var len = observables.length;
          if (len === 0) {
              this.destination.complete();
          }
          else {
              this.active = len;
              this.toRespond = len;
              for (var i = 0; i < len; i++) {
                  var observable = observables[i];
                  this.add(subscribeToResult_1.subscribeToResult(this, observable, undefined, i));
              }
          }
      };
      CombineLatestSubscriber.prototype.notifyComplete = function (unused) {
          if ((this.active -= 1) === 0) {
              this.destination.complete();
          }
      };
      CombineLatestSubscriber.prototype.notifyNext = function (_outerValue, innerValue, outerIndex) {
          var values = this.values;
          var oldVal = values[outerIndex];
          var toRespond = !this.toRespond
              ? 0
              : oldVal === NONE ? --this.toRespond : this.toRespond;
          values[outerIndex] = innerValue;
          if (toRespond === 0) {
              if (this.resultSelector) {
                  this._tryResultSelector(values);
              }
              else {
                  this.destination.next(values.slice());
              }
          }
      };
      CombineLatestSubscriber.prototype._tryResultSelector = function (values) {
          var result;
          try {
              result = this.resultSelector.apply(this, values);
          }
          catch (err) {
              this.destination.error(err);
              return;
          }
          this.destination.next(result);
      };
      return CombineLatestSubscriber;
  }(OuterSubscriber_1.OuterSubscriber));
  exports.CombineLatestSubscriber = CombineLatestSubscriber;

  });

  unwrapExports(combineLatest_1$2);
  combineLatest_1$2.combineLatest;
  combineLatest_1$2.CombineLatestOperator;
  combineLatest_1$2.CombineLatestSubscriber;

  var combineLatest_1$1 = combineLatest_1$2;

  var combineAll_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });

  function combineAll(project) {
      return function (source) { return source.lift(new combineLatest_1$1.CombineLatestOperator(project)); };
  }
  exports.combineAll = combineAll;

  });

  unwrapExports(combineAll_1$1);
  combineAll_1$1.combineAll;

  var scheduleObservable_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });



  function scheduleObservable(input, scheduler) {
      return new Observable_1.Observable(function (subscriber) {
          var sub = new Subscription_1.Subscription();
          sub.add(scheduler.schedule(function () {
              var observable = input[observable_1.observable]();
              sub.add(observable.subscribe({
                  next: function (value) { sub.add(scheduler.schedule(function () { return subscriber.next(value); })); },
                  error: function (err) { sub.add(scheduler.schedule(function () { return subscriber.error(err); })); },
                  complete: function () { sub.add(scheduler.schedule(function () { return subscriber.complete(); })); },
              }));
          }));
          return sub;
      });
  }
  exports.scheduleObservable = scheduleObservable;

  });

  unwrapExports(scheduleObservable_1$1);
  scheduleObservable_1$1.scheduleObservable;

  var schedulePromise_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });


  function schedulePromise(input, scheduler) {
      return new Observable_1.Observable(function (subscriber) {
          var sub = new Subscription_1.Subscription();
          sub.add(scheduler.schedule(function () { return input.then(function (value) {
              sub.add(scheduler.schedule(function () {
                  subscriber.next(value);
                  sub.add(scheduler.schedule(function () { return subscriber.complete(); }));
              }));
          }, function (err) {
              sub.add(scheduler.schedule(function () { return subscriber.error(err); }));
          }); }));
          return sub;
      });
  }
  exports.schedulePromise = schedulePromise;

  });

  unwrapExports(schedulePromise_1$1);
  schedulePromise_1$1.schedulePromise;

  var scheduleIterable_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });



  function scheduleIterable(input, scheduler) {
      if (!input) {
          throw new Error('Iterable cannot be null');
      }
      return new Observable_1.Observable(function (subscriber) {
          var sub = new Subscription_1.Subscription();
          var iterator;
          sub.add(function () {
              if (iterator && typeof iterator.return === 'function') {
                  iterator.return();
              }
          });
          sub.add(scheduler.schedule(function () {
              iterator = input[iterator_1.iterator]();
              sub.add(scheduler.schedule(function () {
                  if (subscriber.closed) {
                      return;
                  }
                  var value;
                  var done;
                  try {
                      var result = iterator.next();
                      value = result.value;
                      done = result.done;
                  }
                  catch (err) {
                      subscriber.error(err);
                      return;
                  }
                  if (done) {
                      subscriber.complete();
                  }
                  else {
                      subscriber.next(value);
                      this.schedule();
                  }
              }));
          }));
          return sub;
      });
  }
  exports.scheduleIterable = scheduleIterable;

  });

  unwrapExports(scheduleIterable_1$1);
  scheduleIterable_1$1.scheduleIterable;

  var isInteropObservable_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });

  function isInteropObservable(input) {
      return input && typeof input[observable_1.observable] === 'function';
  }
  exports.isInteropObservable = isInteropObservable;

  });

  unwrapExports(isInteropObservable_1$1);
  isInteropObservable_1$1.isInteropObservable;

  var isIterable_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });

  function isIterable(input) {
      return input && typeof input[iterator_1.iterator] === 'function';
  }
  exports.isIterable = isIterable;

  });

  unwrapExports(isIterable_1$1);
  isIterable_1$1.isIterable;

  var scheduleObservable_1 = scheduleObservable_1$1;

  var schedulePromise_1 = schedulePromise_1$1;

  var scheduleIterable_1 = scheduleIterable_1$1;

  var isInteropObservable_1 = isInteropObservable_1$1;

  var isIterable_1 = isIterable_1$1;

  var scheduled_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });








  function scheduled(input, scheduler) {
      if (input != null) {
          if (isInteropObservable_1.isInteropObservable(input)) {
              return scheduleObservable_1.scheduleObservable(input, scheduler);
          }
          else if (isPromise_1.isPromise(input)) {
              return schedulePromise_1.schedulePromise(input, scheduler);
          }
          else if (isArrayLike_1.isArrayLike(input)) {
              return scheduleArray_1.scheduleArray(input, scheduler);
          }
          else if (isIterable_1.isIterable(input) || typeof input === 'string') {
              return scheduleIterable_1.scheduleIterable(input, scheduler);
          }
      }
      throw new TypeError((input !== null && typeof input || input) + ' is not observable');
  }
  exports.scheduled = scheduled;

  });

  unwrapExports(scheduled_1$1);
  scheduled_1$1.scheduled;

  var scheduled_1 = scheduled_1$1;

  var from_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });



  function from(input, scheduler) {
      if (!scheduler) {
          if (input instanceof Observable_1.Observable) {
              return input;
          }
          return new Observable_1.Observable(subscribeTo_1.subscribeTo(input));
      }
      else {
          return scheduled_1.scheduled(input, scheduler);
      }
  }
  exports.from = from;

  });

  unwrapExports(from_1$1);

  var from_1 = from_1$1;

  var combineLatest_2 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });
  function combineLatest() {
      var observables = [];
      for (var _i = 0; _i < arguments.length; _i++) {
          observables[_i] = arguments[_i];
      }
      var project = null;
      if (typeof observables[observables.length - 1] === 'function') {
          project = observables.pop();
      }
      if (observables.length === 1 && isArray_1.isArray(observables[0])) {
          observables = observables[0].slice();
      }
      return function (source) { return source.lift.call(from_1.from([source].concat(observables)), new combineLatest_1$1.CombineLatestOperator(project)); };
  }
  exports.combineLatest = combineLatest;

  });

  unwrapExports(combineLatest_2);
  combineLatest_2.combineLatest;

  var of_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });



  function of() {
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
          args[_i] = arguments[_i];
      }
      var scheduler = args[args.length - 1];
      if (isScheduler_1.isScheduler(scheduler)) {
          args.pop();
          return scheduleArray_1.scheduleArray(args, scheduler);
      }
      else {
          return fromArray_1.fromArray(args);
      }
  }
  exports.of = of;

  });

  unwrapExports(of_1$1);
  of_1$1.of;

  var map_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });

  function map(project, thisArg) {
      return function mapOperation(source) {
          if (typeof project !== 'function') {
              throw new TypeError('argument is not a function. Are you looking for `mapTo()`?');
          }
          return source.lift(new MapOperator(project, thisArg));
      };
  }
  exports.map = map;
  var MapOperator = (function () {
      function MapOperator(project, thisArg) {
          this.project = project;
          this.thisArg = thisArg;
      }
      MapOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new MapSubscriber(subscriber, this.project, this.thisArg));
      };
      return MapOperator;
  }());
  exports.MapOperator = MapOperator;
  var MapSubscriber = (function (_super) {
      __extends(MapSubscriber, _super);
      function MapSubscriber(destination, project, thisArg) {
          var _this = _super.call(this, destination) || this;
          _this.project = project;
          _this.count = 0;
          _this.thisArg = thisArg || _this;
          return _this;
      }
      MapSubscriber.prototype._next = function (value) {
          var result;
          try {
              result = this.project.call(this.thisArg, value, this.count++);
          }
          catch (err) {
              this.destination.error(err);
              return;
          }
          this.destination.next(result);
      };
      return MapSubscriber;
  }(Subscriber_1.Subscriber));

  });

  unwrapExports(map_1$1);
  map_1$1.map;
  map_1$1.MapOperator;

  var map_1 = map_1$1;

  var mergeMap_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });



  function mergeMap(project, resultSelector, concurrent) {
      if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
      if (typeof resultSelector === 'function') {
          return function (source) { return source.pipe(mergeMap(function (a, i) { return from_1.from(project(a, i)).pipe(map_1.map(function (b, ii) { return resultSelector(a, b, i, ii); })); }, concurrent)); };
      }
      else if (typeof resultSelector === 'number') {
          concurrent = resultSelector;
      }
      return function (source) { return source.lift(new MergeMapOperator(project, concurrent)); };
  }
  exports.mergeMap = mergeMap;
  var MergeMapOperator = (function () {
      function MergeMapOperator(project, concurrent) {
          if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
          this.project = project;
          this.concurrent = concurrent;
      }
      MergeMapOperator.prototype.call = function (observer, source) {
          return source.subscribe(new MergeMapSubscriber(observer, this.project, this.concurrent));
      };
      return MergeMapOperator;
  }());
  exports.MergeMapOperator = MergeMapOperator;
  var MergeMapSubscriber = (function (_super) {
      __extends(MergeMapSubscriber, _super);
      function MergeMapSubscriber(destination, project, concurrent) {
          if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
          var _this = _super.call(this, destination) || this;
          _this.project = project;
          _this.concurrent = concurrent;
          _this.hasCompleted = false;
          _this.buffer = [];
          _this.active = 0;
          _this.index = 0;
          return _this;
      }
      MergeMapSubscriber.prototype._next = function (value) {
          if (this.active < this.concurrent) {
              this._tryNext(value);
          }
          else {
              this.buffer.push(value);
          }
      };
      MergeMapSubscriber.prototype._tryNext = function (value) {
          var result;
          var index = this.index++;
          try {
              result = this.project(value, index);
          }
          catch (err) {
              this.destination.error(err);
              return;
          }
          this.active++;
          this._innerSub(result);
      };
      MergeMapSubscriber.prototype._innerSub = function (ish) {
          var innerSubscriber = new innerSubscribe_1.SimpleInnerSubscriber(this);
          var destination = this.destination;
          destination.add(innerSubscriber);
          var innerSubscription = innerSubscribe_1.innerSubscribe(ish, innerSubscriber);
          if (innerSubscription !== innerSubscriber) {
              destination.add(innerSubscription);
          }
      };
      MergeMapSubscriber.prototype._complete = function () {
          this.hasCompleted = true;
          if (this.active === 0 && this.buffer.length === 0) {
              this.destination.complete();
          }
          this.unsubscribe();
      };
      MergeMapSubscriber.prototype.notifyNext = function (innerValue) {
          this.destination.next(innerValue);
      };
      MergeMapSubscriber.prototype.notifyComplete = function () {
          var buffer = this.buffer;
          this.active--;
          if (buffer.length > 0) {
              this._next(buffer.shift());
          }
          else if (this.active === 0 && this.hasCompleted) {
              this.destination.complete();
          }
      };
      return MergeMapSubscriber;
  }(innerSubscribe_1.SimpleOuterSubscriber));
  exports.MergeMapSubscriber = MergeMapSubscriber;
  exports.flatMap = mergeMap;

  });

  unwrapExports(mergeMap_1$1);
  mergeMap_1$1.mergeMap;
  mergeMap_1$1.MergeMapOperator;
  mergeMap_1$1.MergeMapSubscriber;
  mergeMap_1$1.flatMap;

  var mergeMap_1 = mergeMap_1$1;

  var mergeAll_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });


  function mergeAll(concurrent) {
      if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
      return mergeMap_1.mergeMap(identity_1.identity, concurrent);
  }
  exports.mergeAll = mergeAll;

  });

  unwrapExports(mergeAll_1$1);
  mergeAll_1$1.mergeAll;

  var mergeAll_1 = mergeAll_1$1;

  var concatAll_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });

  function concatAll() {
      return mergeAll_1.mergeAll(1);
  }
  exports.concatAll = concatAll;

  });

  unwrapExports(concatAll_1$1);
  concatAll_1$1.concatAll;

  var of_1 = of_1$1;

  var concatAll_1 = concatAll_1$1;

  var concat_1$2 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });


  function concat() {
      var observables = [];
      for (var _i = 0; _i < arguments.length; _i++) {
          observables[_i] = arguments[_i];
      }
      return concatAll_1.concatAll()(of_1.of.apply(void 0, observables));
  }
  exports.concat = concat;

  });

  unwrapExports(concat_1$2);
  concat_1$2.concat;

  var concat_1$1 = concat_1$2;

  var concat_2 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });

  function concat() {
      var observables = [];
      for (var _i = 0; _i < arguments.length; _i++) {
          observables[_i] = arguments[_i];
      }
      return function (source) { return source.lift.call(concat_1$1.concat.apply(void 0, [source].concat(observables))); };
  }
  exports.concat = concat;

  });

  unwrapExports(concat_2);
  concat_2.concat;

  var concatMap_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });

  function concatMap(project, resultSelector) {
      return mergeMap_1.mergeMap(project, resultSelector, 1);
  }
  exports.concatMap = concatMap;

  });

  unwrapExports(concatMap_1$1);
  concatMap_1$1.concatMap;

  var concatMap_1 = concatMap_1$1;

  var concatMapTo_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });

  function concatMapTo(innerObservable, resultSelector) {
      return concatMap_1.concatMap(function () { return innerObservable; }, resultSelector);
  }
  exports.concatMapTo = concatMapTo;

  });

  unwrapExports(concatMapTo_1$1);
  concatMapTo_1$1.concatMapTo;

  var count_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });

  function count(predicate) {
      return function (source) { return source.lift(new CountOperator(predicate, source)); };
  }
  exports.count = count;
  var CountOperator = (function () {
      function CountOperator(predicate, source) {
          this.predicate = predicate;
          this.source = source;
      }
      CountOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new CountSubscriber(subscriber, this.predicate, this.source));
      };
      return CountOperator;
  }());
  var CountSubscriber = (function (_super) {
      __extends(CountSubscriber, _super);
      function CountSubscriber(destination, predicate, source) {
          var _this = _super.call(this, destination) || this;
          _this.predicate = predicate;
          _this.source = source;
          _this.count = 0;
          _this.index = 0;
          return _this;
      }
      CountSubscriber.prototype._next = function (value) {
          if (this.predicate) {
              this._tryPredicate(value);
          }
          else {
              this.count++;
          }
      };
      CountSubscriber.prototype._tryPredicate = function (value) {
          var result;
          try {
              result = this.predicate(value, this.index++, this.source);
          }
          catch (err) {
              this.destination.error(err);
              return;
          }
          if (result) {
              this.count++;
          }
      };
      CountSubscriber.prototype._complete = function () {
          this.destination.next(this.count);
          this.destination.complete();
      };
      return CountSubscriber;
  }(Subscriber_1.Subscriber));

  });

  unwrapExports(count_1$1);
  count_1$1.count;

  var debounce_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });

  function debounce(durationSelector) {
      return function (source) { return source.lift(new DebounceOperator(durationSelector)); };
  }
  exports.debounce = debounce;
  var DebounceOperator = (function () {
      function DebounceOperator(durationSelector) {
          this.durationSelector = durationSelector;
      }
      DebounceOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new DebounceSubscriber(subscriber, this.durationSelector));
      };
      return DebounceOperator;
  }());
  var DebounceSubscriber = (function (_super) {
      __extends(DebounceSubscriber, _super);
      function DebounceSubscriber(destination, durationSelector) {
          var _this = _super.call(this, destination) || this;
          _this.durationSelector = durationSelector;
          _this.hasValue = false;
          return _this;
      }
      DebounceSubscriber.prototype._next = function (value) {
          try {
              var result = this.durationSelector.call(this, value);
              if (result) {
                  this._tryNext(value, result);
              }
          }
          catch (err) {
              this.destination.error(err);
          }
      };
      DebounceSubscriber.prototype._complete = function () {
          this.emitValue();
          this.destination.complete();
      };
      DebounceSubscriber.prototype._tryNext = function (value, duration) {
          var subscription = this.durationSubscription;
          this.value = value;
          this.hasValue = true;
          if (subscription) {
              subscription.unsubscribe();
              this.remove(subscription);
          }
          subscription = innerSubscribe_1.innerSubscribe(duration, new innerSubscribe_1.SimpleInnerSubscriber(this));
          if (subscription && !subscription.closed) {
              this.add(this.durationSubscription = subscription);
          }
      };
      DebounceSubscriber.prototype.notifyNext = function () {
          this.emitValue();
      };
      DebounceSubscriber.prototype.notifyComplete = function () {
          this.emitValue();
      };
      DebounceSubscriber.prototype.emitValue = function () {
          if (this.hasValue) {
              var value = this.value;
              var subscription = this.durationSubscription;
              if (subscription) {
                  this.durationSubscription = undefined;
                  subscription.unsubscribe();
                  this.remove(subscription);
              }
              this.value = undefined;
              this.hasValue = false;
              _super.prototype._next.call(this, value);
          }
      };
      return DebounceSubscriber;
  }(innerSubscribe_1.SimpleOuterSubscriber));

  });

  unwrapExports(debounce_1$1);
  debounce_1$1.debounce;

  var debounceTime_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });


  function debounceTime(dueTime, scheduler) {
      if (scheduler === void 0) { scheduler = async_1.async; }
      return function (source) { return source.lift(new DebounceTimeOperator(dueTime, scheduler)); };
  }
  exports.debounceTime = debounceTime;
  var DebounceTimeOperator = (function () {
      function DebounceTimeOperator(dueTime, scheduler) {
          this.dueTime = dueTime;
          this.scheduler = scheduler;
      }
      DebounceTimeOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new DebounceTimeSubscriber(subscriber, this.dueTime, this.scheduler));
      };
      return DebounceTimeOperator;
  }());
  var DebounceTimeSubscriber = (function (_super) {
      __extends(DebounceTimeSubscriber, _super);
      function DebounceTimeSubscriber(destination, dueTime, scheduler) {
          var _this = _super.call(this, destination) || this;
          _this.dueTime = dueTime;
          _this.scheduler = scheduler;
          _this.debouncedSubscription = null;
          _this.lastValue = null;
          _this.hasValue = false;
          return _this;
      }
      DebounceTimeSubscriber.prototype._next = function (value) {
          this.clearDebounce();
          this.lastValue = value;
          this.hasValue = true;
          this.add(this.debouncedSubscription = this.scheduler.schedule(dispatchNext, this.dueTime, this));
      };
      DebounceTimeSubscriber.prototype._complete = function () {
          this.debouncedNext();
          this.destination.complete();
      };
      DebounceTimeSubscriber.prototype.debouncedNext = function () {
          this.clearDebounce();
          if (this.hasValue) {
              var lastValue = this.lastValue;
              this.lastValue = null;
              this.hasValue = false;
              this.destination.next(lastValue);
          }
      };
      DebounceTimeSubscriber.prototype.clearDebounce = function () {
          var debouncedSubscription = this.debouncedSubscription;
          if (debouncedSubscription !== null) {
              this.remove(debouncedSubscription);
              debouncedSubscription.unsubscribe();
              this.debouncedSubscription = null;
          }
      };
      return DebounceTimeSubscriber;
  }(Subscriber_1.Subscriber));
  function dispatchNext(subscriber) {
      subscriber.debouncedNext();
  }

  });

  unwrapExports(debounceTime_1$1);
  debounceTime_1$1.debounceTime;

  var defaultIfEmpty_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });

  function defaultIfEmpty(defaultValue) {
      if (defaultValue === void 0) { defaultValue = null; }
      return function (source) { return source.lift(new DefaultIfEmptyOperator(defaultValue)); };
  }
  exports.defaultIfEmpty = defaultIfEmpty;
  var DefaultIfEmptyOperator = (function () {
      function DefaultIfEmptyOperator(defaultValue) {
          this.defaultValue = defaultValue;
      }
      DefaultIfEmptyOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new DefaultIfEmptySubscriber(subscriber, this.defaultValue));
      };
      return DefaultIfEmptyOperator;
  }());
  var DefaultIfEmptySubscriber = (function (_super) {
      __extends(DefaultIfEmptySubscriber, _super);
      function DefaultIfEmptySubscriber(destination, defaultValue) {
          var _this = _super.call(this, destination) || this;
          _this.defaultValue = defaultValue;
          _this.isEmpty = true;
          return _this;
      }
      DefaultIfEmptySubscriber.prototype._next = function (value) {
          this.isEmpty = false;
          this.destination.next(value);
      };
      DefaultIfEmptySubscriber.prototype._complete = function () {
          if (this.isEmpty) {
              this.destination.next(this.defaultValue);
          }
          this.destination.complete();
      };
      return DefaultIfEmptySubscriber;
  }(Subscriber_1.Subscriber));

  });

  unwrapExports(defaultIfEmpty_1$1);
  defaultIfEmpty_1$1.defaultIfEmpty;

  var isDate_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });
  function isDate(value) {
      return value instanceof Date && !isNaN(+value);
  }
  exports.isDate = isDate;

  });

  unwrapExports(isDate_1$1);
  isDate_1$1.isDate;

  var empty_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });

  exports.EMPTY = new Observable_1.Observable(function (subscriber) { return subscriber.complete(); });
  function empty(scheduler) {
      return scheduler ? emptyScheduled(scheduler) : exports.EMPTY;
  }
  exports.empty = empty;
  function emptyScheduled(scheduler) {
      return new Observable_1.Observable(function (subscriber) { return scheduler.schedule(function () { return subscriber.complete(); }); });
  }

  });

  unwrapExports(empty_1$1);
  empty_1$1.EMPTY;
  empty_1$1.empty;

  var throwError_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });

  function throwError(error, scheduler) {
      if (!scheduler) {
          return new Observable_1.Observable(function (subscriber) { return subscriber.error(error); });
      }
      else {
          return new Observable_1.Observable(function (subscriber) { return scheduler.schedule(dispatch, 0, { error: error, subscriber: subscriber }); });
      }
  }
  exports.throwError = throwError;
  function dispatch(_a) {
      var error = _a.error, subscriber = _a.subscriber;
      subscriber.error(error);
  }

  });

  unwrapExports(throwError_1$1);
  throwError_1$1.throwError;

  var empty_1 = empty_1$1;

  var throwError_1 = throwError_1$1;

  var Notification_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });
  (function (NotificationKind) {
      NotificationKind["NEXT"] = "N";
      NotificationKind["ERROR"] = "E";
      NotificationKind["COMPLETE"] = "C";
  })(exports.NotificationKind || (exports.NotificationKind = {}));
  var Notification = (function () {
      function Notification(kind, value, error) {
          this.kind = kind;
          this.value = value;
          this.error = error;
          this.hasValue = kind === 'N';
      }
      Notification.prototype.observe = function (observer) {
          switch (this.kind) {
              case 'N':
                  return observer.next && observer.next(this.value);
              case 'E':
                  return observer.error && observer.error(this.error);
              case 'C':
                  return observer.complete && observer.complete();
          }
      };
      Notification.prototype.do = function (next, error, complete) {
          var kind = this.kind;
          switch (kind) {
              case 'N':
                  return next && next(this.value);
              case 'E':
                  return error && error(this.error);
              case 'C':
                  return complete && complete();
          }
      };
      Notification.prototype.accept = function (nextOrObserver, error, complete) {
          if (nextOrObserver && typeof nextOrObserver.next === 'function') {
              return this.observe(nextOrObserver);
          }
          else {
              return this.do(nextOrObserver, error, complete);
          }
      };
      Notification.prototype.toObservable = function () {
          var kind = this.kind;
          switch (kind) {
              case 'N':
                  return of_1.of(this.value);
              case 'E':
                  return throwError_1.throwError(this.error);
              case 'C':
                  return empty_1.empty();
          }
          throw new Error('unexpected notification kind value');
      };
      Notification.createNext = function (value) {
          if (typeof value !== 'undefined') {
              return new Notification('N', value);
          }
          return Notification.undefinedValueNotification;
      };
      Notification.createError = function (err) {
          return new Notification('E', undefined, err);
      };
      Notification.createComplete = function () {
          return Notification.completeNotification;
      };
      Notification.completeNotification = new Notification('C');
      Notification.undefinedValueNotification = new Notification('N', undefined);
      return Notification;
  }());
  exports.Notification = Notification;

  });

  unwrapExports(Notification_1$1);
  Notification_1$1.NotificationKind;
  Notification_1$1.Notification;

  var isDate_1 = isDate_1$1;

  var Notification_1 = Notification_1$1;

  var delay_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });




  function delay(delay, scheduler) {
      if (scheduler === void 0) { scheduler = async_1.async; }
      var absoluteDelay = isDate_1.isDate(delay);
      var delayFor = absoluteDelay ? (+delay - scheduler.now()) : Math.abs(delay);
      return function (source) { return source.lift(new DelayOperator(delayFor, scheduler)); };
  }
  exports.delay = delay;
  var DelayOperator = (function () {
      function DelayOperator(delay, scheduler) {
          this.delay = delay;
          this.scheduler = scheduler;
      }
      DelayOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new DelaySubscriber(subscriber, this.delay, this.scheduler));
      };
      return DelayOperator;
  }());
  var DelaySubscriber = (function (_super) {
      __extends(DelaySubscriber, _super);
      function DelaySubscriber(destination, delay, scheduler) {
          var _this = _super.call(this, destination) || this;
          _this.delay = delay;
          _this.scheduler = scheduler;
          _this.queue = [];
          _this.active = false;
          _this.errored = false;
          return _this;
      }
      DelaySubscriber.dispatch = function (state) {
          var source = state.source;
          var queue = source.queue;
          var scheduler = state.scheduler;
          var destination = state.destination;
          while (queue.length > 0 && (queue[0].time - scheduler.now()) <= 0) {
              queue.shift().notification.observe(destination);
          }
          if (queue.length > 0) {
              var delay_1 = Math.max(0, queue[0].time - scheduler.now());
              this.schedule(state, delay_1);
          }
          else {
              this.unsubscribe();
              source.active = false;
          }
      };
      DelaySubscriber.prototype._schedule = function (scheduler) {
          this.active = true;
          var destination = this.destination;
          destination.add(scheduler.schedule(DelaySubscriber.dispatch, this.delay, {
              source: this, destination: this.destination, scheduler: scheduler
          }));
      };
      DelaySubscriber.prototype.scheduleNotification = function (notification) {
          if (this.errored === true) {
              return;
          }
          var scheduler = this.scheduler;
          var message = new DelayMessage(scheduler.now() + this.delay, notification);
          this.queue.push(message);
          if (this.active === false) {
              this._schedule(scheduler);
          }
      };
      DelaySubscriber.prototype._next = function (value) {
          this.scheduleNotification(Notification_1.Notification.createNext(value));
      };
      DelaySubscriber.prototype._error = function (err) {
          this.errored = true;
          this.queue = [];
          this.destination.error(err);
          this.unsubscribe();
      };
      DelaySubscriber.prototype._complete = function () {
          this.scheduleNotification(Notification_1.Notification.createComplete());
          this.unsubscribe();
      };
      return DelaySubscriber;
  }(Subscriber_1.Subscriber));
  var DelayMessage = (function () {
      function DelayMessage(time, notification) {
          this.time = time;
          this.notification = notification;
      }
      return DelayMessage;
  }());

  });

  unwrapExports(delay_1$1);
  delay_1$1.delay;

  var delayWhen_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });




  function delayWhen(delayDurationSelector, subscriptionDelay) {
      if (subscriptionDelay) {
          return function (source) {
              return new SubscriptionDelayObservable(source, subscriptionDelay)
                  .lift(new DelayWhenOperator(delayDurationSelector));
          };
      }
      return function (source) { return source.lift(new DelayWhenOperator(delayDurationSelector)); };
  }
  exports.delayWhen = delayWhen;
  var DelayWhenOperator = (function () {
      function DelayWhenOperator(delayDurationSelector) {
          this.delayDurationSelector = delayDurationSelector;
      }
      DelayWhenOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new DelayWhenSubscriber(subscriber, this.delayDurationSelector));
      };
      return DelayWhenOperator;
  }());
  var DelayWhenSubscriber = (function (_super) {
      __extends(DelayWhenSubscriber, _super);
      function DelayWhenSubscriber(destination, delayDurationSelector) {
          var _this = _super.call(this, destination) || this;
          _this.delayDurationSelector = delayDurationSelector;
          _this.completed = false;
          _this.delayNotifierSubscriptions = [];
          _this.index = 0;
          return _this;
      }
      DelayWhenSubscriber.prototype.notifyNext = function (outerValue, _innerValue, _outerIndex, _innerIndex, innerSub) {
          this.destination.next(outerValue);
          this.removeSubscription(innerSub);
          this.tryComplete();
      };
      DelayWhenSubscriber.prototype.notifyError = function (error, innerSub) {
          this._error(error);
      };
      DelayWhenSubscriber.prototype.notifyComplete = function (innerSub) {
          var value = this.removeSubscription(innerSub);
          if (value) {
              this.destination.next(value);
          }
          this.tryComplete();
      };
      DelayWhenSubscriber.prototype._next = function (value) {
          var index = this.index++;
          try {
              var delayNotifier = this.delayDurationSelector(value, index);
              if (delayNotifier) {
                  this.tryDelay(delayNotifier, value);
              }
          }
          catch (err) {
              this.destination.error(err);
          }
      };
      DelayWhenSubscriber.prototype._complete = function () {
          this.completed = true;
          this.tryComplete();
          this.unsubscribe();
      };
      DelayWhenSubscriber.prototype.removeSubscription = function (subscription) {
          subscription.unsubscribe();
          var subscriptionIdx = this.delayNotifierSubscriptions.indexOf(subscription);
          if (subscriptionIdx !== -1) {
              this.delayNotifierSubscriptions.splice(subscriptionIdx, 1);
          }
          return subscription.outerValue;
      };
      DelayWhenSubscriber.prototype.tryDelay = function (delayNotifier, value) {
          var notifierSubscription = subscribeToResult_1.subscribeToResult(this, delayNotifier, value);
          if (notifierSubscription && !notifierSubscription.closed) {
              var destination = this.destination;
              destination.add(notifierSubscription);
              this.delayNotifierSubscriptions.push(notifierSubscription);
          }
      };
      DelayWhenSubscriber.prototype.tryComplete = function () {
          if (this.completed && this.delayNotifierSubscriptions.length === 0) {
              this.destination.complete();
          }
      };
      return DelayWhenSubscriber;
  }(OuterSubscriber_1.OuterSubscriber));
  var SubscriptionDelayObservable = (function (_super) {
      __extends(SubscriptionDelayObservable, _super);
      function SubscriptionDelayObservable(source, subscriptionDelay) {
          var _this = _super.call(this) || this;
          _this.source = source;
          _this.subscriptionDelay = subscriptionDelay;
          return _this;
      }
      SubscriptionDelayObservable.prototype._subscribe = function (subscriber) {
          this.subscriptionDelay.subscribe(new SubscriptionDelaySubscriber(subscriber, this.source));
      };
      return SubscriptionDelayObservable;
  }(Observable_1.Observable));
  var SubscriptionDelaySubscriber = (function (_super) {
      __extends(SubscriptionDelaySubscriber, _super);
      function SubscriptionDelaySubscriber(parent, source) {
          var _this = _super.call(this) || this;
          _this.parent = parent;
          _this.source = source;
          _this.sourceSubscribed = false;
          return _this;
      }
      SubscriptionDelaySubscriber.prototype._next = function (unused) {
          this.subscribeToSource();
      };
      SubscriptionDelaySubscriber.prototype._error = function (err) {
          this.unsubscribe();
          this.parent.error(err);
      };
      SubscriptionDelaySubscriber.prototype._complete = function () {
          this.unsubscribe();
          this.subscribeToSource();
      };
      SubscriptionDelaySubscriber.prototype.subscribeToSource = function () {
          if (!this.sourceSubscribed) {
              this.sourceSubscribed = true;
              this.unsubscribe();
              this.source.subscribe(this.parent);
          }
      };
      return SubscriptionDelaySubscriber;
  }(Subscriber_1.Subscriber));

  });

  unwrapExports(delayWhen_1$1);
  delayWhen_1$1.delayWhen;

  var dematerialize_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });

  function dematerialize() {
      return function dematerializeOperatorFunction(source) {
          return source.lift(new DeMaterializeOperator());
      };
  }
  exports.dematerialize = dematerialize;
  var DeMaterializeOperator = (function () {
      function DeMaterializeOperator() {
      }
      DeMaterializeOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new DeMaterializeSubscriber(subscriber));
      };
      return DeMaterializeOperator;
  }());
  var DeMaterializeSubscriber = (function (_super) {
      __extends(DeMaterializeSubscriber, _super);
      function DeMaterializeSubscriber(destination) {
          return _super.call(this, destination) || this;
      }
      DeMaterializeSubscriber.prototype._next = function (value) {
          value.observe(this.destination);
      };
      return DeMaterializeSubscriber;
  }(Subscriber_1.Subscriber));

  });

  unwrapExports(dematerialize_1$1);
  dematerialize_1$1.dematerialize;

  var distinct_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });

  function distinct(keySelector, flushes) {
      return function (source) { return source.lift(new DistinctOperator(keySelector, flushes)); };
  }
  exports.distinct = distinct;
  var DistinctOperator = (function () {
      function DistinctOperator(keySelector, flushes) {
          this.keySelector = keySelector;
          this.flushes = flushes;
      }
      DistinctOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new DistinctSubscriber(subscriber, this.keySelector, this.flushes));
      };
      return DistinctOperator;
  }());
  var DistinctSubscriber = (function (_super) {
      __extends(DistinctSubscriber, _super);
      function DistinctSubscriber(destination, keySelector, flushes) {
          var _this = _super.call(this, destination) || this;
          _this.keySelector = keySelector;
          _this.values = new Set();
          if (flushes) {
              _this.add(innerSubscribe_1.innerSubscribe(flushes, new innerSubscribe_1.SimpleInnerSubscriber(_this)));
          }
          return _this;
      }
      DistinctSubscriber.prototype.notifyNext = function () {
          this.values.clear();
      };
      DistinctSubscriber.prototype.notifyError = function (error) {
          this._error(error);
      };
      DistinctSubscriber.prototype._next = function (value) {
          if (this.keySelector) {
              this._useKeySelector(value);
          }
          else {
              this._finalizeNext(value, value);
          }
      };
      DistinctSubscriber.prototype._useKeySelector = function (value) {
          var key;
          var destination = this.destination;
          try {
              key = this.keySelector(value);
          }
          catch (err) {
              destination.error(err);
              return;
          }
          this._finalizeNext(key, value);
      };
      DistinctSubscriber.prototype._finalizeNext = function (key, value) {
          var values = this.values;
          if (!values.has(key)) {
              values.add(key);
              this.destination.next(value);
          }
      };
      return DistinctSubscriber;
  }(innerSubscribe_1.SimpleOuterSubscriber));
  exports.DistinctSubscriber = DistinctSubscriber;

  });

  unwrapExports(distinct_1$1);
  distinct_1$1.distinct;
  distinct_1$1.DistinctSubscriber;

  var distinctUntilChanged_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });

  function distinctUntilChanged(compare, keySelector) {
      return function (source) { return source.lift(new DistinctUntilChangedOperator(compare, keySelector)); };
  }
  exports.distinctUntilChanged = distinctUntilChanged;
  var DistinctUntilChangedOperator = (function () {
      function DistinctUntilChangedOperator(compare, keySelector) {
          this.compare = compare;
          this.keySelector = keySelector;
      }
      DistinctUntilChangedOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new DistinctUntilChangedSubscriber(subscriber, this.compare, this.keySelector));
      };
      return DistinctUntilChangedOperator;
  }());
  var DistinctUntilChangedSubscriber = (function (_super) {
      __extends(DistinctUntilChangedSubscriber, _super);
      function DistinctUntilChangedSubscriber(destination, compare, keySelector) {
          var _this = _super.call(this, destination) || this;
          _this.keySelector = keySelector;
          _this.hasKey = false;
          if (typeof compare === 'function') {
              _this.compare = compare;
          }
          return _this;
      }
      DistinctUntilChangedSubscriber.prototype.compare = function (x, y) {
          return x === y;
      };
      DistinctUntilChangedSubscriber.prototype._next = function (value) {
          var key;
          try {
              var keySelector = this.keySelector;
              key = keySelector ? keySelector(value) : value;
          }
          catch (err) {
              return this.destination.error(err);
          }
          var result = false;
          if (this.hasKey) {
              try {
                  var compare = this.compare;
                  result = compare(this.key, key);
              }
              catch (err) {
                  return this.destination.error(err);
              }
          }
          else {
              this.hasKey = true;
          }
          if (!result) {
              this.key = key;
              this.destination.next(value);
          }
      };
      return DistinctUntilChangedSubscriber;
  }(Subscriber_1.Subscriber));

  });

  unwrapExports(distinctUntilChanged_1$1);
  distinctUntilChanged_1$1.distinctUntilChanged;

  var distinctUntilChanged_1 = distinctUntilChanged_1$1;

  var distinctUntilKeyChanged_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });

  function distinctUntilKeyChanged(key, compare) {
      return distinctUntilChanged_1.distinctUntilChanged(function (x, y) { return compare ? compare(x[key], y[key]) : x[key] === y[key]; });
  }
  exports.distinctUntilKeyChanged = distinctUntilKeyChanged;

  });

  unwrapExports(distinctUntilKeyChanged_1$1);
  distinctUntilKeyChanged_1$1.distinctUntilKeyChanged;

  var ArgumentOutOfRangeError = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });
  var ArgumentOutOfRangeErrorImpl = (function () {
      function ArgumentOutOfRangeErrorImpl() {
          Error.call(this);
          this.message = 'argument out of range';
          this.name = 'ArgumentOutOfRangeError';
          return this;
      }
      ArgumentOutOfRangeErrorImpl.prototype = Object.create(Error.prototype);
      return ArgumentOutOfRangeErrorImpl;
  })();
  exports.ArgumentOutOfRangeError = ArgumentOutOfRangeErrorImpl;

  });

  unwrapExports(ArgumentOutOfRangeError);
  ArgumentOutOfRangeError.ArgumentOutOfRangeError;

  var filter_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });

  function filter(predicate, thisArg) {
      return function filterOperatorFunction(source) {
          return source.lift(new FilterOperator(predicate, thisArg));
      };
  }
  exports.filter = filter;
  var FilterOperator = (function () {
      function FilterOperator(predicate, thisArg) {
          this.predicate = predicate;
          this.thisArg = thisArg;
      }
      FilterOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new FilterSubscriber(subscriber, this.predicate, this.thisArg));
      };
      return FilterOperator;
  }());
  var FilterSubscriber = (function (_super) {
      __extends(FilterSubscriber, _super);
      function FilterSubscriber(destination, predicate, thisArg) {
          var _this = _super.call(this, destination) || this;
          _this.predicate = predicate;
          _this.thisArg = thisArg;
          _this.count = 0;
          return _this;
      }
      FilterSubscriber.prototype._next = function (value) {
          var result;
          try {
              result = this.predicate.call(this.thisArg, value, this.count++);
          }
          catch (err) {
              this.destination.error(err);
              return;
          }
          if (result) {
              this.destination.next(value);
          }
      };
      return FilterSubscriber;
  }(Subscriber_1.Subscriber));

  });

  unwrapExports(filter_1$1);
  filter_1$1.filter;

  var EmptyError = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });
  var EmptyErrorImpl = (function () {
      function EmptyErrorImpl() {
          Error.call(this);
          this.message = 'no elements in sequence';
          this.name = 'EmptyError';
          return this;
      }
      EmptyErrorImpl.prototype = Object.create(Error.prototype);
      return EmptyErrorImpl;
  })();
  exports.EmptyError = EmptyErrorImpl;

  });

  unwrapExports(EmptyError);
  EmptyError.EmptyError;

  var EmptyError_1 = EmptyError;

  var throwIfEmpty_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });


  function throwIfEmpty(errorFactory) {
      if (errorFactory === void 0) { errorFactory = defaultErrorFactory; }
      return function (source) {
          return source.lift(new ThrowIfEmptyOperator(errorFactory));
      };
  }
  exports.throwIfEmpty = throwIfEmpty;
  var ThrowIfEmptyOperator = (function () {
      function ThrowIfEmptyOperator(errorFactory) {
          this.errorFactory = errorFactory;
      }
      ThrowIfEmptyOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new ThrowIfEmptySubscriber(subscriber, this.errorFactory));
      };
      return ThrowIfEmptyOperator;
  }());
  var ThrowIfEmptySubscriber = (function (_super) {
      __extends(ThrowIfEmptySubscriber, _super);
      function ThrowIfEmptySubscriber(destination, errorFactory) {
          var _this = _super.call(this, destination) || this;
          _this.errorFactory = errorFactory;
          _this.hasValue = false;
          return _this;
      }
      ThrowIfEmptySubscriber.prototype._next = function (value) {
          this.hasValue = true;
          this.destination.next(value);
      };
      ThrowIfEmptySubscriber.prototype._complete = function () {
          if (!this.hasValue) {
              var err = void 0;
              try {
                  err = this.errorFactory();
              }
              catch (e) {
                  err = e;
              }
              this.destination.error(err);
          }
          else {
              return this.destination.complete();
          }
      };
      return ThrowIfEmptySubscriber;
  }(Subscriber_1.Subscriber));
  function defaultErrorFactory() {
      return new EmptyError_1.EmptyError();
  }

  });

  unwrapExports(throwIfEmpty_1$1);
  throwIfEmpty_1$1.throwIfEmpty;

  var ArgumentOutOfRangeError_1 = ArgumentOutOfRangeError;

  var take_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });



  function take(count) {
      return function (source) {
          if (count === 0) {
              return empty_1.empty();
          }
          else {
              return source.lift(new TakeOperator(count));
          }
      };
  }
  exports.take = take;
  var TakeOperator = (function () {
      function TakeOperator(total) {
          this.total = total;
          if (this.total < 0) {
              throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;
          }
      }
      TakeOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new TakeSubscriber(subscriber, this.total));
      };
      return TakeOperator;
  }());
  var TakeSubscriber = (function (_super) {
      __extends(TakeSubscriber, _super);
      function TakeSubscriber(destination, total) {
          var _this = _super.call(this, destination) || this;
          _this.total = total;
          _this.count = 0;
          return _this;
      }
      TakeSubscriber.prototype._next = function (value) {
          var total = this.total;
          var count = ++this.count;
          if (count <= total) {
              this.destination.next(value);
              if (count === total) {
                  this.destination.complete();
                  this.unsubscribe();
              }
          }
      };
      return TakeSubscriber;
  }(Subscriber_1.Subscriber));

  });

  unwrapExports(take_1$1);
  take_1$1.take;

  var filter_1 = filter_1$1;

  var throwIfEmpty_1 = throwIfEmpty_1$1;

  var defaultIfEmpty_1 = defaultIfEmpty_1$1;

  var take_1 = take_1$1;

  var elementAt_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });





  function elementAt(index, defaultValue) {
      if (index < 0) {
          throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError();
      }
      var hasDefaultValue = arguments.length >= 2;
      return function (source) { return source.pipe(filter_1.filter(function (v, i) { return i === index; }), take_1.take(1), hasDefaultValue
          ? defaultIfEmpty_1.defaultIfEmpty(defaultValue)
          : throwIfEmpty_1.throwIfEmpty(function () { return new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError(); })); };
  }
  exports.elementAt = elementAt;

  });

  unwrapExports(elementAt_1$1);
  elementAt_1$1.elementAt;

  var every_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });

  function every(predicate, thisArg) {
      return function (source) { return source.lift(new EveryOperator(predicate, thisArg, source)); };
  }
  exports.every = every;
  var EveryOperator = (function () {
      function EveryOperator(predicate, thisArg, source) {
          this.predicate = predicate;
          this.thisArg = thisArg;
          this.source = source;
      }
      EveryOperator.prototype.call = function (observer, source) {
          return source.subscribe(new EverySubscriber(observer, this.predicate, this.thisArg, this.source));
      };
      return EveryOperator;
  }());
  var EverySubscriber = (function (_super) {
      __extends(EverySubscriber, _super);
      function EverySubscriber(destination, predicate, thisArg, source) {
          var _this = _super.call(this, destination) || this;
          _this.predicate = predicate;
          _this.thisArg = thisArg;
          _this.source = source;
          _this.index = 0;
          _this.thisArg = thisArg || _this;
          return _this;
      }
      EverySubscriber.prototype.notifyComplete = function (everyValueMatch) {
          this.destination.next(everyValueMatch);
          this.destination.complete();
      };
      EverySubscriber.prototype._next = function (value) {
          var result = false;
          try {
              result = this.predicate.call(this.thisArg, value, this.index++, this.source);
          }
          catch (err) {
              this.destination.error(err);
              return;
          }
          if (!result) {
              this.notifyComplete(false);
          }
      };
      EverySubscriber.prototype._complete = function () {
          this.notifyComplete(true);
      };
      return EverySubscriber;
  }(Subscriber_1.Subscriber));

  });

  unwrapExports(every_1$1);
  every_1$1.every;

  var exhaust_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });

  function exhaust() {
      return function (source) { return source.lift(new SwitchFirstOperator()); };
  }
  exports.exhaust = exhaust;
  var SwitchFirstOperator = (function () {
      function SwitchFirstOperator() {
      }
      SwitchFirstOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new SwitchFirstSubscriber(subscriber));
      };
      return SwitchFirstOperator;
  }());
  var SwitchFirstSubscriber = (function (_super) {
      __extends(SwitchFirstSubscriber, _super);
      function SwitchFirstSubscriber(destination) {
          var _this = _super.call(this, destination) || this;
          _this.hasCompleted = false;
          _this.hasSubscription = false;
          return _this;
      }
      SwitchFirstSubscriber.prototype._next = function (value) {
          if (!this.hasSubscription) {
              this.hasSubscription = true;
              this.add(innerSubscribe_1.innerSubscribe(value, new innerSubscribe_1.SimpleInnerSubscriber(this)));
          }
      };
      SwitchFirstSubscriber.prototype._complete = function () {
          this.hasCompleted = true;
          if (!this.hasSubscription) {
              this.destination.complete();
          }
      };
      SwitchFirstSubscriber.prototype.notifyComplete = function () {
          this.hasSubscription = false;
          if (this.hasCompleted) {
              this.destination.complete();
          }
      };
      return SwitchFirstSubscriber;
  }(innerSubscribe_1.SimpleOuterSubscriber));

  });

  unwrapExports(exhaust_1$1);
  exhaust_1$1.exhaust;

  var exhaustMap_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });



  function exhaustMap(project, resultSelector) {
      if (resultSelector) {
          return function (source) { return source.pipe(exhaustMap(function (a, i) { return from_1.from(project(a, i)).pipe(map_1.map(function (b, ii) { return resultSelector(a, b, i, ii); })); })); };
      }
      return function (source) {
          return source.lift(new ExhaustMapOperator(project));
      };
  }
  exports.exhaustMap = exhaustMap;
  var ExhaustMapOperator = (function () {
      function ExhaustMapOperator(project) {
          this.project = project;
      }
      ExhaustMapOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new ExhaustMapSubscriber(subscriber, this.project));
      };
      return ExhaustMapOperator;
  }());
  var ExhaustMapSubscriber = (function (_super) {
      __extends(ExhaustMapSubscriber, _super);
      function ExhaustMapSubscriber(destination, project) {
          var _this = _super.call(this, destination) || this;
          _this.project = project;
          _this.hasSubscription = false;
          _this.hasCompleted = false;
          _this.index = 0;
          return _this;
      }
      ExhaustMapSubscriber.prototype._next = function (value) {
          if (!this.hasSubscription) {
              this.tryNext(value);
          }
      };
      ExhaustMapSubscriber.prototype.tryNext = function (value) {
          var result;
          var index = this.index++;
          try {
              result = this.project(value, index);
          }
          catch (err) {
              this.destination.error(err);
              return;
          }
          this.hasSubscription = true;
          this._innerSub(result);
      };
      ExhaustMapSubscriber.prototype._innerSub = function (result) {
          var innerSubscriber = new innerSubscribe_1.SimpleInnerSubscriber(this);
          var destination = this.destination;
          destination.add(innerSubscriber);
          var innerSubscription = innerSubscribe_1.innerSubscribe(result, innerSubscriber);
          if (innerSubscription !== innerSubscriber) {
              destination.add(innerSubscription);
          }
      };
      ExhaustMapSubscriber.prototype._complete = function () {
          this.hasCompleted = true;
          if (!this.hasSubscription) {
              this.destination.complete();
          }
          this.unsubscribe();
      };
      ExhaustMapSubscriber.prototype.notifyNext = function (innerValue) {
          this.destination.next(innerValue);
      };
      ExhaustMapSubscriber.prototype.notifyError = function (err) {
          this.destination.error(err);
      };
      ExhaustMapSubscriber.prototype.notifyComplete = function () {
          this.hasSubscription = false;
          if (this.hasCompleted) {
              this.destination.complete();
          }
      };
      return ExhaustMapSubscriber;
  }(innerSubscribe_1.SimpleOuterSubscriber));

  });

  unwrapExports(exhaustMap_1$1);
  exhaustMap_1$1.exhaustMap;

  var expand_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });

  function expand(project, concurrent, scheduler) {
      if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
      concurrent = (concurrent || 0) < 1 ? Number.POSITIVE_INFINITY : concurrent;
      return function (source) { return source.lift(new ExpandOperator(project, concurrent, scheduler)); };
  }
  exports.expand = expand;
  var ExpandOperator = (function () {
      function ExpandOperator(project, concurrent, scheduler) {
          this.project = project;
          this.concurrent = concurrent;
          this.scheduler = scheduler;
      }
      ExpandOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new ExpandSubscriber(subscriber, this.project, this.concurrent, this.scheduler));
      };
      return ExpandOperator;
  }());
  exports.ExpandOperator = ExpandOperator;
  var ExpandSubscriber = (function (_super) {
      __extends(ExpandSubscriber, _super);
      function ExpandSubscriber(destination, project, concurrent, scheduler) {
          var _this = _super.call(this, destination) || this;
          _this.project = project;
          _this.concurrent = concurrent;
          _this.scheduler = scheduler;
          _this.index = 0;
          _this.active = 0;
          _this.hasCompleted = false;
          if (concurrent < Number.POSITIVE_INFINITY) {
              _this.buffer = [];
          }
          return _this;
      }
      ExpandSubscriber.dispatch = function (arg) {
          var subscriber = arg.subscriber, result = arg.result, value = arg.value, index = arg.index;
          subscriber.subscribeToProjection(result, value, index);
      };
      ExpandSubscriber.prototype._next = function (value) {
          var destination = this.destination;
          if (destination.closed) {
              this._complete();
              return;
          }
          var index = this.index++;
          if (this.active < this.concurrent) {
              destination.next(value);
              try {
                  var project = this.project;
                  var result = project(value, index);
                  if (!this.scheduler) {
                      this.subscribeToProjection(result, value, index);
                  }
                  else {
                      var state = { subscriber: this, result: result, value: value, index: index };
                      var destination_1 = this.destination;
                      destination_1.add(this.scheduler.schedule(ExpandSubscriber.dispatch, 0, state));
                  }
              }
              catch (e) {
                  destination.error(e);
              }
          }
          else {
              this.buffer.push(value);
          }
      };
      ExpandSubscriber.prototype.subscribeToProjection = function (result, value, index) {
          this.active++;
          var destination = this.destination;
          destination.add(innerSubscribe_1.innerSubscribe(result, new innerSubscribe_1.SimpleInnerSubscriber(this)));
      };
      ExpandSubscriber.prototype._complete = function () {
          this.hasCompleted = true;
          if (this.hasCompleted && this.active === 0) {
              this.destination.complete();
          }
          this.unsubscribe();
      };
      ExpandSubscriber.prototype.notifyNext = function (innerValue) {
          this._next(innerValue);
      };
      ExpandSubscriber.prototype.notifyComplete = function () {
          var buffer = this.buffer;
          this.active--;
          if (buffer && buffer.length > 0) {
              this._next(buffer.shift());
          }
          if (this.hasCompleted && this.active === 0) {
              this.destination.complete();
          }
      };
      return ExpandSubscriber;
  }(innerSubscribe_1.SimpleOuterSubscriber));
  exports.ExpandSubscriber = ExpandSubscriber;

  });

  unwrapExports(expand_1$1);
  expand_1$1.expand;
  expand_1$1.ExpandOperator;
  expand_1$1.ExpandSubscriber;

  var finalize_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });


  function finalize(callback) {
      return function (source) { return source.lift(new FinallyOperator(callback)); };
  }
  exports.finalize = finalize;
  var FinallyOperator = (function () {
      function FinallyOperator(callback) {
          this.callback = callback;
      }
      FinallyOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new FinallySubscriber(subscriber, this.callback));
      };
      return FinallyOperator;
  }());
  var FinallySubscriber = (function (_super) {
      __extends(FinallySubscriber, _super);
      function FinallySubscriber(destination, callback) {
          var _this = _super.call(this, destination) || this;
          _this.add(new Subscription_1.Subscription(callback));
          return _this;
      }
      return FinallySubscriber;
  }(Subscriber_1.Subscriber));

  });

  unwrapExports(finalize_1$1);
  finalize_1$1.finalize;

  var find_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });

  function find(predicate, thisArg) {
      if (typeof predicate !== 'function') {
          throw new TypeError('predicate is not a function');
      }
      return function (source) { return source.lift(new FindValueOperator(predicate, source, false, thisArg)); };
  }
  exports.find = find;
  var FindValueOperator = (function () {
      function FindValueOperator(predicate, source, yieldIndex, thisArg) {
          this.predicate = predicate;
          this.source = source;
          this.yieldIndex = yieldIndex;
          this.thisArg = thisArg;
      }
      FindValueOperator.prototype.call = function (observer, source) {
          return source.subscribe(new FindValueSubscriber(observer, this.predicate, this.source, this.yieldIndex, this.thisArg));
      };
      return FindValueOperator;
  }());
  exports.FindValueOperator = FindValueOperator;
  var FindValueSubscriber = (function (_super) {
      __extends(FindValueSubscriber, _super);
      function FindValueSubscriber(destination, predicate, source, yieldIndex, thisArg) {
          var _this = _super.call(this, destination) || this;
          _this.predicate = predicate;
          _this.source = source;
          _this.yieldIndex = yieldIndex;
          _this.thisArg = thisArg;
          _this.index = 0;
          return _this;
      }
      FindValueSubscriber.prototype.notifyComplete = function (value) {
          var destination = this.destination;
          destination.next(value);
          destination.complete();
          this.unsubscribe();
      };
      FindValueSubscriber.prototype._next = function (value) {
          var _a = this, predicate = _a.predicate, thisArg = _a.thisArg;
          var index = this.index++;
          try {
              var result = predicate.call(thisArg || this, value, index, this.source);
              if (result) {
                  this.notifyComplete(this.yieldIndex ? index : value);
              }
          }
          catch (err) {
              this.destination.error(err);
          }
      };
      FindValueSubscriber.prototype._complete = function () {
          this.notifyComplete(this.yieldIndex ? -1 : undefined);
      };
      return FindValueSubscriber;
  }(Subscriber_1.Subscriber));
  exports.FindValueSubscriber = FindValueSubscriber;

  });

  unwrapExports(find_1$1);
  find_1$1.find;
  find_1$1.FindValueOperator;
  find_1$1.FindValueSubscriber;

  var find_1 = find_1$1;

  var findIndex_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });

  function findIndex(predicate, thisArg) {
      return function (source) { return source.lift(new find_1.FindValueOperator(predicate, source, true, thisArg)); };
  }
  exports.findIndex = findIndex;

  });

  unwrapExports(findIndex_1$1);
  findIndex_1$1.findIndex;

  var first_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });






  function first(predicate, defaultValue) {
      var hasDefaultValue = arguments.length >= 2;
      return function (source) { return source.pipe(predicate ? filter_1.filter(function (v, i) { return predicate(v, i, source); }) : identity_1.identity, take_1.take(1), hasDefaultValue ? defaultIfEmpty_1.defaultIfEmpty(defaultValue) : throwIfEmpty_1.throwIfEmpty(function () { return new EmptyError_1.EmptyError(); })); };
  }
  exports.first = first;

  });

  unwrapExports(first_1$1);
  first_1$1.first;

  var ObjectUnsubscribedError = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });
  var ObjectUnsubscribedErrorImpl = (function () {
      function ObjectUnsubscribedErrorImpl() {
          Error.call(this);
          this.message = 'object unsubscribed';
          this.name = 'ObjectUnsubscribedError';
          return this;
      }
      ObjectUnsubscribedErrorImpl.prototype = Object.create(Error.prototype);
      return ObjectUnsubscribedErrorImpl;
  })();
  exports.ObjectUnsubscribedError = ObjectUnsubscribedErrorImpl;

  });

  unwrapExports(ObjectUnsubscribedError);
  ObjectUnsubscribedError.ObjectUnsubscribedError;

  var SubjectSubscription_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });

  var SubjectSubscription = (function (_super) {
      __extends(SubjectSubscription, _super);
      function SubjectSubscription(subject, subscriber) {
          var _this = _super.call(this) || this;
          _this.subject = subject;
          _this.subscriber = subscriber;
          _this.closed = false;
          return _this;
      }
      SubjectSubscription.prototype.unsubscribe = function () {
          if (this.closed) {
              return;
          }
          this.closed = true;
          var subject = this.subject;
          var observers = subject.observers;
          this.subject = null;
          if (!observers || observers.length === 0 || subject.isStopped || subject.closed) {
              return;
          }
          var subscriberIndex = observers.indexOf(this.subscriber);
          if (subscriberIndex !== -1) {
              observers.splice(subscriberIndex, 1);
          }
      };
      return SubjectSubscription;
  }(Subscription_1.Subscription));
  exports.SubjectSubscription = SubjectSubscription;

  });

  unwrapExports(SubjectSubscription_1$1);
  SubjectSubscription_1$1.SubjectSubscription;

  var ObjectUnsubscribedError_1 = ObjectUnsubscribedError;

  var SubjectSubscription_1 = SubjectSubscription_1$1;

  var Subject_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });






  var SubjectSubscriber = (function (_super) {
      __extends(SubjectSubscriber, _super);
      function SubjectSubscriber(destination) {
          var _this = _super.call(this, destination) || this;
          _this.destination = destination;
          return _this;
      }
      return SubjectSubscriber;
  }(Subscriber_1.Subscriber));
  exports.SubjectSubscriber = SubjectSubscriber;
  var Subject = (function (_super) {
      __extends(Subject, _super);
      function Subject() {
          var _this = _super.call(this) || this;
          _this.observers = [];
          _this.closed = false;
          _this.isStopped = false;
          _this.hasError = false;
          _this.thrownError = null;
          return _this;
      }
      Subject.prototype[rxSubscriber_1.rxSubscriber] = function () {
          return new SubjectSubscriber(this);
      };
      Subject.prototype.lift = function (operator) {
          var subject = new AnonymousSubject(this, this);
          subject.operator = operator;
          return subject;
      };
      Subject.prototype.next = function (value) {
          if (this.closed) {
              throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
          }
          if (!this.isStopped) {
              var observers = this.observers;
              var len = observers.length;
              var copy = observers.slice();
              for (var i = 0; i < len; i++) {
                  copy[i].next(value);
              }
          }
      };
      Subject.prototype.error = function (err) {
          if (this.closed) {
              throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
          }
          this.hasError = true;
          this.thrownError = err;
          this.isStopped = true;
          var observers = this.observers;
          var len = observers.length;
          var copy = observers.slice();
          for (var i = 0; i < len; i++) {
              copy[i].error(err);
          }
          this.observers.length = 0;
      };
      Subject.prototype.complete = function () {
          if (this.closed) {
              throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
          }
          this.isStopped = true;
          var observers = this.observers;
          var len = observers.length;
          var copy = observers.slice();
          for (var i = 0; i < len; i++) {
              copy[i].complete();
          }
          this.observers.length = 0;
      };
      Subject.prototype.unsubscribe = function () {
          this.isStopped = true;
          this.closed = true;
          this.observers = null;
      };
      Subject.prototype._trySubscribe = function (subscriber) {
          if (this.closed) {
              throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
          }
          else {
              return _super.prototype._trySubscribe.call(this, subscriber);
          }
      };
      Subject.prototype._subscribe = function (subscriber) {
          if (this.closed) {
              throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
          }
          else if (this.hasError) {
              subscriber.error(this.thrownError);
              return Subscription_1.Subscription.EMPTY;
          }
          else if (this.isStopped) {
              subscriber.complete();
              return Subscription_1.Subscription.EMPTY;
          }
          else {
              this.observers.push(subscriber);
              return new SubjectSubscription_1.SubjectSubscription(this, subscriber);
          }
      };
      Subject.prototype.asObservable = function () {
          var observable = new Observable_1.Observable();
          observable.source = this;
          return observable;
      };
      Subject.create = function (destination, source) {
          return new AnonymousSubject(destination, source);
      };
      return Subject;
  }(Observable_1.Observable));
  exports.Subject = Subject;
  var AnonymousSubject = (function (_super) {
      __extends(AnonymousSubject, _super);
      function AnonymousSubject(destination, source) {
          var _this = _super.call(this) || this;
          _this.destination = destination;
          _this.source = source;
          return _this;
      }
      AnonymousSubject.prototype.next = function (value) {
          var destination = this.destination;
          if (destination && destination.next) {
              destination.next(value);
          }
      };
      AnonymousSubject.prototype.error = function (err) {
          var destination = this.destination;
          if (destination && destination.error) {
              this.destination.error(err);
          }
      };
      AnonymousSubject.prototype.complete = function () {
          var destination = this.destination;
          if (destination && destination.complete) {
              this.destination.complete();
          }
      };
      AnonymousSubject.prototype._subscribe = function (subscriber) {
          var source = this.source;
          if (source) {
              return this.source.subscribe(subscriber);
          }
          else {
              return Subscription_1.Subscription.EMPTY;
          }
      };
      return AnonymousSubject;
  }(Subject));
  exports.AnonymousSubject = AnonymousSubject;

  });

  unwrapExports(Subject_1$1);
  Subject_1$1.SubjectSubscriber;
  Subject_1$1.Subject;
  Subject_1$1.AnonymousSubject;

  var Subject_1 = Subject_1$1;

  var groupBy_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });




  function groupBy(keySelector, elementSelector, durationSelector, subjectSelector) {
      return function (source) {
          return source.lift(new GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector));
      };
  }
  exports.groupBy = groupBy;
  var GroupByOperator = (function () {
      function GroupByOperator(keySelector, elementSelector, durationSelector, subjectSelector) {
          this.keySelector = keySelector;
          this.elementSelector = elementSelector;
          this.durationSelector = durationSelector;
          this.subjectSelector = subjectSelector;
      }
      GroupByOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new GroupBySubscriber(subscriber, this.keySelector, this.elementSelector, this.durationSelector, this.subjectSelector));
      };
      return GroupByOperator;
  }());
  var GroupBySubscriber = (function (_super) {
      __extends(GroupBySubscriber, _super);
      function GroupBySubscriber(destination, keySelector, elementSelector, durationSelector, subjectSelector) {
          var _this = _super.call(this, destination) || this;
          _this.keySelector = keySelector;
          _this.elementSelector = elementSelector;
          _this.durationSelector = durationSelector;
          _this.subjectSelector = subjectSelector;
          _this.groups = null;
          _this.attemptedToUnsubscribe = false;
          _this.count = 0;
          return _this;
      }
      GroupBySubscriber.prototype._next = function (value) {
          var key;
          try {
              key = this.keySelector(value);
          }
          catch (err) {
              this.error(err);
              return;
          }
          this._group(value, key);
      };
      GroupBySubscriber.prototype._group = function (value, key) {
          var groups = this.groups;
          if (!groups) {
              groups = this.groups = new Map();
          }
          var group = groups.get(key);
          var element;
          if (this.elementSelector) {
              try {
                  element = this.elementSelector(value);
              }
              catch (err) {
                  this.error(err);
              }
          }
          else {
              element = value;
          }
          if (!group) {
              group = (this.subjectSelector ? this.subjectSelector() : new Subject_1.Subject());
              groups.set(key, group);
              var groupedObservable = new GroupedObservable(key, group, this);
              this.destination.next(groupedObservable);
              if (this.durationSelector) {
                  var duration = void 0;
                  try {
                      duration = this.durationSelector(new GroupedObservable(key, group));
                  }
                  catch (err) {
                      this.error(err);
                      return;
                  }
                  this.add(duration.subscribe(new GroupDurationSubscriber(key, group, this)));
              }
          }
          if (!group.closed) {
              group.next(element);
          }
      };
      GroupBySubscriber.prototype._error = function (err) {
          var groups = this.groups;
          if (groups) {
              groups.forEach(function (group, key) {
                  group.error(err);
              });
              groups.clear();
          }
          this.destination.error(err);
      };
      GroupBySubscriber.prototype._complete = function () {
          var groups = this.groups;
          if (groups) {
              groups.forEach(function (group, key) {
                  group.complete();
              });
              groups.clear();
          }
          this.destination.complete();
      };
      GroupBySubscriber.prototype.removeGroup = function (key) {
          this.groups.delete(key);
      };
      GroupBySubscriber.prototype.unsubscribe = function () {
          if (!this.closed) {
              this.attemptedToUnsubscribe = true;
              if (this.count === 0) {
                  _super.prototype.unsubscribe.call(this);
              }
          }
      };
      return GroupBySubscriber;
  }(Subscriber_1.Subscriber));
  var GroupDurationSubscriber = (function (_super) {
      __extends(GroupDurationSubscriber, _super);
      function GroupDurationSubscriber(key, group, parent) {
          var _this = _super.call(this, group) || this;
          _this.key = key;
          _this.group = group;
          _this.parent = parent;
          return _this;
      }
      GroupDurationSubscriber.prototype._next = function (value) {
          this.complete();
      };
      GroupDurationSubscriber.prototype._unsubscribe = function () {
          var _a = this, parent = _a.parent, key = _a.key;
          this.key = this.parent = null;
          if (parent) {
              parent.removeGroup(key);
          }
      };
      return GroupDurationSubscriber;
  }(Subscriber_1.Subscriber));
  var GroupedObservable = (function (_super) {
      __extends(GroupedObservable, _super);
      function GroupedObservable(key, groupSubject, refCountSubscription) {
          var _this = _super.call(this) || this;
          _this.key = key;
          _this.groupSubject = groupSubject;
          _this.refCountSubscription = refCountSubscription;
          return _this;
      }
      GroupedObservable.prototype._subscribe = function (subscriber) {
          var subscription = new Subscription_1.Subscription();
          var _a = this, refCountSubscription = _a.refCountSubscription, groupSubject = _a.groupSubject;
          if (refCountSubscription && !refCountSubscription.closed) {
              subscription.add(new InnerRefCountSubscription(refCountSubscription));
          }
          subscription.add(groupSubject.subscribe(subscriber));
          return subscription;
      };
      return GroupedObservable;
  }(Observable_1.Observable));
  exports.GroupedObservable = GroupedObservable;
  var InnerRefCountSubscription = (function (_super) {
      __extends(InnerRefCountSubscription, _super);
      function InnerRefCountSubscription(parent) {
          var _this = _super.call(this) || this;
          _this.parent = parent;
          parent.count++;
          return _this;
      }
      InnerRefCountSubscription.prototype.unsubscribe = function () {
          var parent = this.parent;
          if (!parent.closed && !this.closed) {
              _super.prototype.unsubscribe.call(this);
              parent.count -= 1;
              if (parent.count === 0 && parent.attemptedToUnsubscribe) {
                  parent.unsubscribe();
              }
          }
      };
      return InnerRefCountSubscription;
  }(Subscription_1.Subscription));

  });

  unwrapExports(groupBy_1$1);
  groupBy_1$1.groupBy;
  groupBy_1$1.GroupedObservable;

  var ignoreElements_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });

  function ignoreElements() {
      return function ignoreElementsOperatorFunction(source) {
          return source.lift(new IgnoreElementsOperator());
      };
  }
  exports.ignoreElements = ignoreElements;
  var IgnoreElementsOperator = (function () {
      function IgnoreElementsOperator() {
      }
      IgnoreElementsOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new IgnoreElementsSubscriber(subscriber));
      };
      return IgnoreElementsOperator;
  }());
  var IgnoreElementsSubscriber = (function (_super) {
      __extends(IgnoreElementsSubscriber, _super);
      function IgnoreElementsSubscriber() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      IgnoreElementsSubscriber.prototype._next = function (unused) {
      };
      return IgnoreElementsSubscriber;
  }(Subscriber_1.Subscriber));

  });

  unwrapExports(ignoreElements_1$1);
  ignoreElements_1$1.ignoreElements;

  var isEmpty_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });

  function isEmpty() {
      return function (source) { return source.lift(new IsEmptyOperator()); };
  }
  exports.isEmpty = isEmpty;
  var IsEmptyOperator = (function () {
      function IsEmptyOperator() {
      }
      IsEmptyOperator.prototype.call = function (observer, source) {
          return source.subscribe(new IsEmptySubscriber(observer));
      };
      return IsEmptyOperator;
  }());
  var IsEmptySubscriber = (function (_super) {
      __extends(IsEmptySubscriber, _super);
      function IsEmptySubscriber(destination) {
          return _super.call(this, destination) || this;
      }
      IsEmptySubscriber.prototype.notifyComplete = function (isEmpty) {
          var destination = this.destination;
          destination.next(isEmpty);
          destination.complete();
      };
      IsEmptySubscriber.prototype._next = function (value) {
          this.notifyComplete(false);
      };
      IsEmptySubscriber.prototype._complete = function () {
          this.notifyComplete(true);
      };
      return IsEmptySubscriber;
  }(Subscriber_1.Subscriber));

  });

  unwrapExports(isEmpty_1$1);
  isEmpty_1$1.isEmpty;

  var takeLast_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });



  function takeLast(count) {
      return function takeLastOperatorFunction(source) {
          if (count === 0) {
              return empty_1.empty();
          }
          else {
              return source.lift(new TakeLastOperator(count));
          }
      };
  }
  exports.takeLast = takeLast;
  var TakeLastOperator = (function () {
      function TakeLastOperator(total) {
          this.total = total;
          if (this.total < 0) {
              throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;
          }
      }
      TakeLastOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new TakeLastSubscriber(subscriber, this.total));
      };
      return TakeLastOperator;
  }());
  var TakeLastSubscriber = (function (_super) {
      __extends(TakeLastSubscriber, _super);
      function TakeLastSubscriber(destination, total) {
          var _this = _super.call(this, destination) || this;
          _this.total = total;
          _this.ring = new Array();
          _this.count = 0;
          return _this;
      }
      TakeLastSubscriber.prototype._next = function (value) {
          var ring = this.ring;
          var total = this.total;
          var count = this.count++;
          if (ring.length < total) {
              ring.push(value);
          }
          else {
              var index = count % total;
              ring[index] = value;
          }
      };
      TakeLastSubscriber.prototype._complete = function () {
          var destination = this.destination;
          var count = this.count;
          if (count > 0) {
              var total = this.count >= this.total ? this.total : this.count;
              var ring = this.ring;
              for (var i = 0; i < total; i++) {
                  var idx = (count++) % total;
                  destination.next(ring[idx]);
              }
          }
          destination.complete();
      };
      return TakeLastSubscriber;
  }(Subscriber_1.Subscriber));

  });

  unwrapExports(takeLast_1$1);
  takeLast_1$1.takeLast;

  var takeLast_1 = takeLast_1$1;

  var last_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });






  function last(predicate, defaultValue) {
      var hasDefaultValue = arguments.length >= 2;
      return function (source) { return source.pipe(predicate ? filter_1.filter(function (v, i) { return predicate(v, i, source); }) : identity_1.identity, takeLast_1.takeLast(1), hasDefaultValue ? defaultIfEmpty_1.defaultIfEmpty(defaultValue) : throwIfEmpty_1.throwIfEmpty(function () { return new EmptyError_1.EmptyError(); })); };
  }
  exports.last = last;

  });

  unwrapExports(last_1$1);
  last_1$1.last;

  var mapTo_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });

  function mapTo(value) {
      return function (source) { return source.lift(new MapToOperator(value)); };
  }
  exports.mapTo = mapTo;
  var MapToOperator = (function () {
      function MapToOperator(value) {
          this.value = value;
      }
      MapToOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new MapToSubscriber(subscriber, this.value));
      };
      return MapToOperator;
  }());
  var MapToSubscriber = (function (_super) {
      __extends(MapToSubscriber, _super);
      function MapToSubscriber(destination, value) {
          var _this = _super.call(this, destination) || this;
          _this.value = value;
          return _this;
      }
      MapToSubscriber.prototype._next = function (x) {
          this.destination.next(this.value);
      };
      return MapToSubscriber;
  }(Subscriber_1.Subscriber));

  });

  unwrapExports(mapTo_1$1);
  mapTo_1$1.mapTo;

  var materialize_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });


  function materialize() {
      return function materializeOperatorFunction(source) {
          return source.lift(new MaterializeOperator());
      };
  }
  exports.materialize = materialize;
  var MaterializeOperator = (function () {
      function MaterializeOperator() {
      }
      MaterializeOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new MaterializeSubscriber(subscriber));
      };
      return MaterializeOperator;
  }());
  var MaterializeSubscriber = (function (_super) {
      __extends(MaterializeSubscriber, _super);
      function MaterializeSubscriber(destination) {
          return _super.call(this, destination) || this;
      }
      MaterializeSubscriber.prototype._next = function (value) {
          this.destination.next(Notification_1.Notification.createNext(value));
      };
      MaterializeSubscriber.prototype._error = function (err) {
          var destination = this.destination;
          destination.next(Notification_1.Notification.createError(err));
          destination.complete();
      };
      MaterializeSubscriber.prototype._complete = function () {
          var destination = this.destination;
          destination.next(Notification_1.Notification.createComplete());
          destination.complete();
      };
      return MaterializeSubscriber;
  }(Subscriber_1.Subscriber));

  });

  unwrapExports(materialize_1$1);
  materialize_1$1.materialize;

  var scan_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });

  function scan(accumulator, seed) {
      var hasSeed = false;
      if (arguments.length >= 2) {
          hasSeed = true;
      }
      return function scanOperatorFunction(source) {
          return source.lift(new ScanOperator(accumulator, seed, hasSeed));
      };
  }
  exports.scan = scan;
  var ScanOperator = (function () {
      function ScanOperator(accumulator, seed, hasSeed) {
          if (hasSeed === void 0) { hasSeed = false; }
          this.accumulator = accumulator;
          this.seed = seed;
          this.hasSeed = hasSeed;
      }
      ScanOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new ScanSubscriber(subscriber, this.accumulator, this.seed, this.hasSeed));
      };
      return ScanOperator;
  }());
  var ScanSubscriber = (function (_super) {
      __extends(ScanSubscriber, _super);
      function ScanSubscriber(destination, accumulator, _seed, hasSeed) {
          var _this = _super.call(this, destination) || this;
          _this.accumulator = accumulator;
          _this._seed = _seed;
          _this.hasSeed = hasSeed;
          _this.index = 0;
          return _this;
      }
      Object.defineProperty(ScanSubscriber.prototype, "seed", {
          get: function () {
              return this._seed;
          },
          set: function (value) {
              this.hasSeed = true;
              this._seed = value;
          },
          enumerable: true,
          configurable: true
      });
      ScanSubscriber.prototype._next = function (value) {
          if (!this.hasSeed) {
              this.seed = value;
              this.destination.next(value);
          }
          else {
              return this._tryNext(value);
          }
      };
      ScanSubscriber.prototype._tryNext = function (value) {
          var index = this.index++;
          var result;
          try {
              result = this.accumulator(this.seed, value, index);
          }
          catch (err) {
              this.destination.error(err);
          }
          this.seed = result;
          this.destination.next(result);
      };
      return ScanSubscriber;
  }(Subscriber_1.Subscriber));

  });

  unwrapExports(scan_1$1);
  scan_1$1.scan;

  var scan_1 = scan_1$1;

  var reduce_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });




  function reduce(accumulator, seed) {
      if (arguments.length >= 2) {
          return function reduceOperatorFunctionWithSeed(source) {
              return pipe_1.pipe(scan_1.scan(accumulator, seed), takeLast_1.takeLast(1), defaultIfEmpty_1.defaultIfEmpty(seed))(source);
          };
      }
      return function reduceOperatorFunction(source) {
          return pipe_1.pipe(scan_1.scan(function (acc, value, index) { return accumulator(acc, value, index + 1); }), takeLast_1.takeLast(1))(source);
      };
  }
  exports.reduce = reduce;

  });

  unwrapExports(reduce_1$1);
  reduce_1$1.reduce;

  var reduce_1 = reduce_1$1;

  var max_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });

  function max(comparer) {
      var max = (typeof comparer === 'function')
          ? function (x, y) { return comparer(x, y) > 0 ? x : y; }
          : function (x, y) { return x > y ? x : y; };
      return reduce_1.reduce(max);
  }
  exports.max = max;

  });

  unwrapExports(max_1$1);
  max_1$1.max;

  var merge_1$2 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });




  function merge() {
      var observables = [];
      for (var _i = 0; _i < arguments.length; _i++) {
          observables[_i] = arguments[_i];
      }
      var concurrent = Number.POSITIVE_INFINITY;
      var scheduler = null;
      var last = observables[observables.length - 1];
      if (isScheduler_1.isScheduler(last)) {
          scheduler = observables.pop();
          if (observables.length > 1 && typeof observables[observables.length - 1] === 'number') {
              concurrent = observables.pop();
          }
      }
      else if (typeof last === 'number') {
          concurrent = observables.pop();
      }
      if (scheduler === null && observables.length === 1 && observables[0] instanceof Observable_1.Observable) {
          return observables[0];
      }
      return mergeAll_1.mergeAll(concurrent)(fromArray_1.fromArray(observables, scheduler));
  }
  exports.merge = merge;

  });

  unwrapExports(merge_1$2);
  merge_1$2.merge;

  var merge_1$1 = merge_1$2;

  var merge_2 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });

  function merge() {
      var observables = [];
      for (var _i = 0; _i < arguments.length; _i++) {
          observables[_i] = arguments[_i];
      }
      return function (source) { return source.lift.call(merge_1$1.merge.apply(void 0, [source].concat(observables))); };
  }
  exports.merge = merge;

  });

  unwrapExports(merge_2);
  merge_2.merge;

  var mergeMapTo_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });

  function mergeMapTo(innerObservable, resultSelector, concurrent) {
      if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
      if (typeof resultSelector === 'function') {
          return mergeMap_1.mergeMap(function () { return innerObservable; }, resultSelector, concurrent);
      }
      if (typeof resultSelector === 'number') {
          concurrent = resultSelector;
      }
      return mergeMap_1.mergeMap(function () { return innerObservable; }, concurrent);
  }
  exports.mergeMapTo = mergeMapTo;

  });

  unwrapExports(mergeMapTo_1$1);
  mergeMapTo_1$1.mergeMapTo;

  var mergeScan_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });

  function mergeScan(accumulator, seed, concurrent) {
      if (concurrent === void 0) { concurrent = Number.POSITIVE_INFINITY; }
      return function (source) { return source.lift(new MergeScanOperator(accumulator, seed, concurrent)); };
  }
  exports.mergeScan = mergeScan;
  var MergeScanOperator = (function () {
      function MergeScanOperator(accumulator, seed, concurrent) {
          this.accumulator = accumulator;
          this.seed = seed;
          this.concurrent = concurrent;
      }
      MergeScanOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new MergeScanSubscriber(subscriber, this.accumulator, this.seed, this.concurrent));
      };
      return MergeScanOperator;
  }());
  exports.MergeScanOperator = MergeScanOperator;
  var MergeScanSubscriber = (function (_super) {
      __extends(MergeScanSubscriber, _super);
      function MergeScanSubscriber(destination, accumulator, acc, concurrent) {
          var _this = _super.call(this, destination) || this;
          _this.accumulator = accumulator;
          _this.acc = acc;
          _this.concurrent = concurrent;
          _this.hasValue = false;
          _this.hasCompleted = false;
          _this.buffer = [];
          _this.active = 0;
          _this.index = 0;
          return _this;
      }
      MergeScanSubscriber.prototype._next = function (value) {
          if (this.active < this.concurrent) {
              var index = this.index++;
              var destination = this.destination;
              var ish = void 0;
              try {
                  var accumulator = this.accumulator;
                  ish = accumulator(this.acc, value, index);
              }
              catch (e) {
                  return destination.error(e);
              }
              this.active++;
              this._innerSub(ish);
          }
          else {
              this.buffer.push(value);
          }
      };
      MergeScanSubscriber.prototype._innerSub = function (ish) {
          var innerSubscriber = new innerSubscribe_1.SimpleInnerSubscriber(this);
          var destination = this.destination;
          destination.add(innerSubscriber);
          var innerSubscription = innerSubscribe_1.innerSubscribe(ish, innerSubscriber);
          if (innerSubscription !== innerSubscriber) {
              destination.add(innerSubscription);
          }
      };
      MergeScanSubscriber.prototype._complete = function () {
          this.hasCompleted = true;
          if (this.active === 0 && this.buffer.length === 0) {
              if (this.hasValue === false) {
                  this.destination.next(this.acc);
              }
              this.destination.complete();
          }
          this.unsubscribe();
      };
      MergeScanSubscriber.prototype.notifyNext = function (innerValue) {
          var destination = this.destination;
          this.acc = innerValue;
          this.hasValue = true;
          destination.next(innerValue);
      };
      MergeScanSubscriber.prototype.notifyComplete = function () {
          var buffer = this.buffer;
          this.active--;
          if (buffer.length > 0) {
              this._next(buffer.shift());
          }
          else if (this.active === 0 && this.hasCompleted) {
              if (this.hasValue === false) {
                  this.destination.next(this.acc);
              }
              this.destination.complete();
          }
      };
      return MergeScanSubscriber;
  }(innerSubscribe_1.SimpleOuterSubscriber));
  exports.MergeScanSubscriber = MergeScanSubscriber;

  });

  unwrapExports(mergeScan_1$1);
  mergeScan_1$1.mergeScan;
  mergeScan_1$1.MergeScanOperator;
  mergeScan_1$1.MergeScanSubscriber;

  var min_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });

  function min(comparer) {
      var min = (typeof comparer === 'function')
          ? function (x, y) { return comparer(x, y) < 0 ? x : y; }
          : function (x, y) { return x < y ? x : y; };
      return reduce_1.reduce(min);
  }
  exports.min = min;

  });

  unwrapExports(min_1$1);
  min_1$1.min;

  var refCount_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });

  function refCount() {
      return function refCountOperatorFunction(source) {
          return source.lift(new RefCountOperator(source));
      };
  }
  exports.refCount = refCount;
  var RefCountOperator = (function () {
      function RefCountOperator(connectable) {
          this.connectable = connectable;
      }
      RefCountOperator.prototype.call = function (subscriber, source) {
          var connectable = this.connectable;
          connectable._refCount++;
          var refCounter = new RefCountSubscriber(subscriber, connectable);
          var subscription = source.subscribe(refCounter);
          if (!refCounter.closed) {
              refCounter.connection = connectable.connect();
          }
          return subscription;
      };
      return RefCountOperator;
  }());
  var RefCountSubscriber = (function (_super) {
      __extends(RefCountSubscriber, _super);
      function RefCountSubscriber(destination, connectable) {
          var _this = _super.call(this, destination) || this;
          _this.connectable = connectable;
          return _this;
      }
      RefCountSubscriber.prototype._unsubscribe = function () {
          var connectable = this.connectable;
          if (!connectable) {
              this.connection = null;
              return;
          }
          this.connectable = null;
          var refCount = connectable._refCount;
          if (refCount <= 0) {
              this.connection = null;
              return;
          }
          connectable._refCount = refCount - 1;
          if (refCount > 1) {
              this.connection = null;
              return;
          }
          var connection = this.connection;
          var sharedConnection = connectable._connection;
          this.connection = null;
          if (sharedConnection && (!connection || sharedConnection === connection)) {
              sharedConnection.unsubscribe();
          }
      };
      return RefCountSubscriber;
  }(Subscriber_1.Subscriber));

  });

  unwrapExports(refCount_1$1);
  refCount_1$1.refCount;

  var refCount_1 = refCount_1$1;

  var ConnectableObservable_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });





  var ConnectableObservable = (function (_super) {
      __extends(ConnectableObservable, _super);
      function ConnectableObservable(source, subjectFactory) {
          var _this = _super.call(this) || this;
          _this.source = source;
          _this.subjectFactory = subjectFactory;
          _this._refCount = 0;
          _this._isComplete = false;
          return _this;
      }
      ConnectableObservable.prototype._subscribe = function (subscriber) {
          return this.getSubject().subscribe(subscriber);
      };
      ConnectableObservable.prototype.getSubject = function () {
          var subject = this._subject;
          if (!subject || subject.isStopped) {
              this._subject = this.subjectFactory();
          }
          return this._subject;
      };
      ConnectableObservable.prototype.connect = function () {
          var connection = this._connection;
          if (!connection) {
              this._isComplete = false;
              connection = this._connection = new Subscription_1.Subscription();
              connection.add(this.source
                  .subscribe(new ConnectableSubscriber(this.getSubject(), this)));
              if (connection.closed) {
                  this._connection = null;
                  connection = Subscription_1.Subscription.EMPTY;
              }
          }
          return connection;
      };
      ConnectableObservable.prototype.refCount = function () {
          return refCount_1.refCount()(this);
      };
      return ConnectableObservable;
  }(Observable_1.Observable));
  exports.ConnectableObservable = ConnectableObservable;
  exports.connectableObservableDescriptor = (function () {
      var connectableProto = ConnectableObservable.prototype;
      return {
          operator: { value: null },
          _refCount: { value: 0, writable: true },
          _subject: { value: null, writable: true },
          _connection: { value: null, writable: true },
          _subscribe: { value: connectableProto._subscribe },
          _isComplete: { value: connectableProto._isComplete, writable: true },
          getSubject: { value: connectableProto.getSubject },
          connect: { value: connectableProto.connect },
          refCount: { value: connectableProto.refCount }
      };
  })();
  var ConnectableSubscriber = (function (_super) {
      __extends(ConnectableSubscriber, _super);
      function ConnectableSubscriber(destination, connectable) {
          var _this = _super.call(this, destination) || this;
          _this.connectable = connectable;
          return _this;
      }
      ConnectableSubscriber.prototype._error = function (err) {
          this._unsubscribe();
          _super.prototype._error.call(this, err);
      };
      ConnectableSubscriber.prototype._complete = function () {
          this.connectable._isComplete = true;
          this._unsubscribe();
          _super.prototype._complete.call(this);
      };
      ConnectableSubscriber.prototype._unsubscribe = function () {
          var connectable = this.connectable;
          if (connectable) {
              this.connectable = null;
              var connection = connectable._connection;
              connectable._refCount = 0;
              connectable._subject = null;
              connectable._connection = null;
              if (connection) {
                  connection.unsubscribe();
              }
          }
      };
      return ConnectableSubscriber;
  }(Subject_1.SubjectSubscriber));
  ((function (_super) {
      __extends(RefCountSubscriber, _super);
      function RefCountSubscriber(destination, connectable) {
          var _this = _super.call(this, destination) || this;
          _this.connectable = connectable;
          return _this;
      }
      RefCountSubscriber.prototype._unsubscribe = function () {
          var connectable = this.connectable;
          if (!connectable) {
              this.connection = null;
              return;
          }
          this.connectable = null;
          var refCount = connectable._refCount;
          if (refCount <= 0) {
              this.connection = null;
              return;
          }
          connectable._refCount = refCount - 1;
          if (refCount > 1) {
              this.connection = null;
              return;
          }
          var connection = this.connection;
          var sharedConnection = connectable._connection;
          this.connection = null;
          if (sharedConnection && (!connection || sharedConnection === connection)) {
              sharedConnection.unsubscribe();
          }
      };
      return RefCountSubscriber;
  })(Subscriber_1.Subscriber));

  });

  unwrapExports(ConnectableObservable_1$1);
  ConnectableObservable_1$1.ConnectableObservable;
  ConnectableObservable_1$1.connectableObservableDescriptor;

  var ConnectableObservable_1 = ConnectableObservable_1$1;

  var multicast_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });

  function multicast(subjectOrSubjectFactory, selector) {
      return function multicastOperatorFunction(source) {
          var subjectFactory;
          if (typeof subjectOrSubjectFactory === 'function') {
              subjectFactory = subjectOrSubjectFactory;
          }
          else {
              subjectFactory = function subjectFactory() {
                  return subjectOrSubjectFactory;
              };
          }
          if (typeof selector === 'function') {
              return source.lift(new MulticastOperator(subjectFactory, selector));
          }
          var connectable = Object.create(source, ConnectableObservable_1.connectableObservableDescriptor);
          connectable.source = source;
          connectable.subjectFactory = subjectFactory;
          return connectable;
      };
  }
  exports.multicast = multicast;
  var MulticastOperator = (function () {
      function MulticastOperator(subjectFactory, selector) {
          this.subjectFactory = subjectFactory;
          this.selector = selector;
      }
      MulticastOperator.prototype.call = function (subscriber, source) {
          var selector = this.selector;
          var subject = this.subjectFactory();
          var subscription = selector(subject).subscribe(subscriber);
          subscription.add(source.subscribe(subject));
          return subscription;
      };
      return MulticastOperator;
  }());
  exports.MulticastOperator = MulticastOperator;

  });

  unwrapExports(multicast_1$1);
  multicast_1$1.multicast;
  multicast_1$1.MulticastOperator;

  var observeOn_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });


  function observeOn(scheduler, delay) {
      if (delay === void 0) { delay = 0; }
      return function observeOnOperatorFunction(source) {
          return source.lift(new ObserveOnOperator(scheduler, delay));
      };
  }
  exports.observeOn = observeOn;
  var ObserveOnOperator = (function () {
      function ObserveOnOperator(scheduler, delay) {
          if (delay === void 0) { delay = 0; }
          this.scheduler = scheduler;
          this.delay = delay;
      }
      ObserveOnOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new ObserveOnSubscriber(subscriber, this.scheduler, this.delay));
      };
      return ObserveOnOperator;
  }());
  exports.ObserveOnOperator = ObserveOnOperator;
  var ObserveOnSubscriber = (function (_super) {
      __extends(ObserveOnSubscriber, _super);
      function ObserveOnSubscriber(destination, scheduler, delay) {
          if (delay === void 0) { delay = 0; }
          var _this = _super.call(this, destination) || this;
          _this.scheduler = scheduler;
          _this.delay = delay;
          return _this;
      }
      ObserveOnSubscriber.dispatch = function (arg) {
          var notification = arg.notification, destination = arg.destination;
          notification.observe(destination);
          this.unsubscribe();
      };
      ObserveOnSubscriber.prototype.scheduleMessage = function (notification) {
          var destination = this.destination;
          destination.add(this.scheduler.schedule(ObserveOnSubscriber.dispatch, this.delay, new ObserveOnMessage(notification, this.destination)));
      };
      ObserveOnSubscriber.prototype._next = function (value) {
          this.scheduleMessage(Notification_1.Notification.createNext(value));
      };
      ObserveOnSubscriber.prototype._error = function (err) {
          this.scheduleMessage(Notification_1.Notification.createError(err));
          this.unsubscribe();
      };
      ObserveOnSubscriber.prototype._complete = function () {
          this.scheduleMessage(Notification_1.Notification.createComplete());
          this.unsubscribe();
      };
      return ObserveOnSubscriber;
  }(Subscriber_1.Subscriber));
  exports.ObserveOnSubscriber = ObserveOnSubscriber;
  var ObserveOnMessage = (function () {
      function ObserveOnMessage(notification, destination) {
          this.notification = notification;
          this.destination = destination;
      }
      return ObserveOnMessage;
  }());
  exports.ObserveOnMessage = ObserveOnMessage;

  });

  unwrapExports(observeOn_1$1);
  observeOn_1$1.observeOn;
  observeOn_1$1.ObserveOnOperator;
  observeOn_1$1.ObserveOnSubscriber;
  observeOn_1$1.ObserveOnMessage;

  var onErrorResumeNext_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });



  function onErrorResumeNext() {
      var nextSources = [];
      for (var _i = 0; _i < arguments.length; _i++) {
          nextSources[_i] = arguments[_i];
      }
      if (nextSources.length === 1 && isArray_1.isArray(nextSources[0])) {
          nextSources = nextSources[0];
      }
      return function (source) { return source.lift(new OnErrorResumeNextOperator(nextSources)); };
  }
  exports.onErrorResumeNext = onErrorResumeNext;
  function onErrorResumeNextStatic() {
      var nextSources = [];
      for (var _i = 0; _i < arguments.length; _i++) {
          nextSources[_i] = arguments[_i];
      }
      var source = undefined;
      if (nextSources.length === 1 && isArray_1.isArray(nextSources[0])) {
          nextSources = nextSources[0];
      }
      source = nextSources.shift();
      return from_1.from(source).lift(new OnErrorResumeNextOperator(nextSources));
  }
  exports.onErrorResumeNextStatic = onErrorResumeNextStatic;
  var OnErrorResumeNextOperator = (function () {
      function OnErrorResumeNextOperator(nextSources) {
          this.nextSources = nextSources;
      }
      OnErrorResumeNextOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new OnErrorResumeNextSubscriber(subscriber, this.nextSources));
      };
      return OnErrorResumeNextOperator;
  }());
  var OnErrorResumeNextSubscriber = (function (_super) {
      __extends(OnErrorResumeNextSubscriber, _super);
      function OnErrorResumeNextSubscriber(destination, nextSources) {
          var _this = _super.call(this, destination) || this;
          _this.destination = destination;
          _this.nextSources = nextSources;
          return _this;
      }
      OnErrorResumeNextSubscriber.prototype.notifyError = function () {
          this.subscribeToNextSource();
      };
      OnErrorResumeNextSubscriber.prototype.notifyComplete = function () {
          this.subscribeToNextSource();
      };
      OnErrorResumeNextSubscriber.prototype._error = function (err) {
          this.subscribeToNextSource();
          this.unsubscribe();
      };
      OnErrorResumeNextSubscriber.prototype._complete = function () {
          this.subscribeToNextSource();
          this.unsubscribe();
      };
      OnErrorResumeNextSubscriber.prototype.subscribeToNextSource = function () {
          var next = this.nextSources.shift();
          if (!!next) {
              var innerSubscriber = new innerSubscribe_1.SimpleInnerSubscriber(this);
              var destination = this.destination;
              destination.add(innerSubscriber);
              var innerSubscription = innerSubscribe_1.innerSubscribe(next, innerSubscriber);
              if (innerSubscription !== innerSubscriber) {
                  destination.add(innerSubscription);
              }
          }
          else {
              this.destination.complete();
          }
      };
      return OnErrorResumeNextSubscriber;
  }(innerSubscribe_1.SimpleOuterSubscriber));

  });

  unwrapExports(onErrorResumeNext_1$1);
  onErrorResumeNext_1$1.onErrorResumeNext;
  onErrorResumeNext_1$1.onErrorResumeNextStatic;

  var pairwise_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });

  function pairwise() {
      return function (source) { return source.lift(new PairwiseOperator()); };
  }
  exports.pairwise = pairwise;
  var PairwiseOperator = (function () {
      function PairwiseOperator() {
      }
      PairwiseOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new PairwiseSubscriber(subscriber));
      };
      return PairwiseOperator;
  }());
  var PairwiseSubscriber = (function (_super) {
      __extends(PairwiseSubscriber, _super);
      function PairwiseSubscriber(destination) {
          var _this = _super.call(this, destination) || this;
          _this.hasPrev = false;
          return _this;
      }
      PairwiseSubscriber.prototype._next = function (value) {
          var pair;
          if (this.hasPrev) {
              pair = [this.prev, value];
          }
          else {
              this.hasPrev = true;
          }
          this.prev = value;
          if (pair) {
              this.destination.next(pair);
          }
      };
      return PairwiseSubscriber;
  }(Subscriber_1.Subscriber));

  });

  unwrapExports(pairwise_1$1);
  pairwise_1$1.pairwise;

  var not_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });
  function not(pred, thisArg) {
      function notPred() {
          return !(notPred.pred.apply(notPred.thisArg, arguments));
      }
      notPred.pred = pred;
      notPred.thisArg = thisArg;
      return notPred;
  }
  exports.not = not;

  });

  unwrapExports(not_1$1);
  not_1$1.not;

  var not_1 = not_1$1;

  var partition_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });


  function partition(predicate, thisArg) {
      return function (source) { return [
          filter_1.filter(predicate, thisArg)(source),
          filter_1.filter(not_1.not(predicate, thisArg))(source)
      ]; };
  }
  exports.partition = partition;

  });

  unwrapExports(partition_1$1);
  partition_1$1.partition;

  var pluck_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });

  function pluck() {
      var properties = [];
      for (var _i = 0; _i < arguments.length; _i++) {
          properties[_i] = arguments[_i];
      }
      var length = properties.length;
      if (length === 0) {
          throw new Error('list of properties cannot be empty.');
      }
      return function (source) { return map_1.map(plucker(properties, length))(source); };
  }
  exports.pluck = pluck;
  function plucker(props, length) {
      var mapper = function (x) {
          var currentProp = x;
          for (var i = 0; i < length; i++) {
              var p = currentProp != null ? currentProp[props[i]] : undefined;
              if (p !== void 0) {
                  currentProp = p;
              }
              else {
                  return undefined;
              }
          }
          return currentProp;
      };
      return mapper;
  }

  });

  unwrapExports(pluck_1$1);
  pluck_1$1.pluck;

  var multicast_1 = multicast_1$1;

  var publish_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });


  function publish(selector) {
      return selector ?
          multicast_1.multicast(function () { return new Subject_1.Subject(); }, selector) :
          multicast_1.multicast(new Subject_1.Subject());
  }
  exports.publish = publish;

  });

  unwrapExports(publish_1$1);
  publish_1$1.publish;

  var BehaviorSubject_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });


  var BehaviorSubject = (function (_super) {
      __extends(BehaviorSubject, _super);
      function BehaviorSubject(_value) {
          var _this = _super.call(this) || this;
          _this._value = _value;
          return _this;
      }
      Object.defineProperty(BehaviorSubject.prototype, "value", {
          get: function () {
              return this.getValue();
          },
          enumerable: true,
          configurable: true
      });
      BehaviorSubject.prototype._subscribe = function (subscriber) {
          var subscription = _super.prototype._subscribe.call(this, subscriber);
          if (subscription && !subscription.closed) {
              subscriber.next(this._value);
          }
          return subscription;
      };
      BehaviorSubject.prototype.getValue = function () {
          if (this.hasError) {
              throw this.thrownError;
          }
          else if (this.closed) {
              throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
          }
          else {
              return this._value;
          }
      };
      BehaviorSubject.prototype.next = function (value) {
          _super.prototype.next.call(this, this._value = value);
      };
      return BehaviorSubject;
  }(Subject_1.Subject));
  exports.BehaviorSubject = BehaviorSubject;

  });

  unwrapExports(BehaviorSubject_1$1);
  BehaviorSubject_1$1.BehaviorSubject;

  var BehaviorSubject_1 = BehaviorSubject_1$1;

  var publishBehavior_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });


  function publishBehavior(value) {
      return function (source) { return multicast_1.multicast(new BehaviorSubject_1.BehaviorSubject(value))(source); };
  }
  exports.publishBehavior = publishBehavior;

  });

  unwrapExports(publishBehavior_1$1);
  publishBehavior_1$1.publishBehavior;

  var AsyncSubject_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });


  var AsyncSubject = (function (_super) {
      __extends(AsyncSubject, _super);
      function AsyncSubject() {
          var _this = _super !== null && _super.apply(this, arguments) || this;
          _this.value = null;
          _this.hasNext = false;
          _this.hasCompleted = false;
          return _this;
      }
      AsyncSubject.prototype._subscribe = function (subscriber) {
          if (this.hasError) {
              subscriber.error(this.thrownError);
              return Subscription_1.Subscription.EMPTY;
          }
          else if (this.hasCompleted && this.hasNext) {
              subscriber.next(this.value);
              subscriber.complete();
              return Subscription_1.Subscription.EMPTY;
          }
          return _super.prototype._subscribe.call(this, subscriber);
      };
      AsyncSubject.prototype.next = function (value) {
          if (!this.hasCompleted) {
              this.value = value;
              this.hasNext = true;
          }
      };
      AsyncSubject.prototype.error = function (error) {
          if (!this.hasCompleted) {
              _super.prototype.error.call(this, error);
          }
      };
      AsyncSubject.prototype.complete = function () {
          this.hasCompleted = true;
          if (this.hasNext) {
              _super.prototype.next.call(this, this.value);
          }
          _super.prototype.complete.call(this);
      };
      return AsyncSubject;
  }(Subject_1.Subject));
  exports.AsyncSubject = AsyncSubject;

  });

  unwrapExports(AsyncSubject_1$1);
  AsyncSubject_1$1.AsyncSubject;

  var AsyncSubject_1 = AsyncSubject_1$1;

  var publishLast_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });


  function publishLast() {
      return function (source) { return multicast_1.multicast(new AsyncSubject_1.AsyncSubject())(source); };
  }
  exports.publishLast = publishLast;

  });

  unwrapExports(publishLast_1$1);
  publishLast_1$1.publishLast;

  var QueueAction_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });

  var QueueAction = (function (_super) {
      __extends(QueueAction, _super);
      function QueueAction(scheduler, work) {
          var _this = _super.call(this, scheduler, work) || this;
          _this.scheduler = scheduler;
          _this.work = work;
          return _this;
      }
      QueueAction.prototype.schedule = function (state, delay) {
          if (delay === void 0) { delay = 0; }
          if (delay > 0) {
              return _super.prototype.schedule.call(this, state, delay);
          }
          this.delay = delay;
          this.state = state;
          this.scheduler.flush(this);
          return this;
      };
      QueueAction.prototype.execute = function (state, delay) {
          return (delay > 0 || this.closed) ?
              _super.prototype.execute.call(this, state, delay) :
              this._execute(state, delay);
      };
      QueueAction.prototype.requestAsyncId = function (scheduler, id, delay) {
          if (delay === void 0) { delay = 0; }
          if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {
              return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
          }
          return scheduler.flush(this);
      };
      return QueueAction;
  }(AsyncAction_1.AsyncAction));
  exports.QueueAction = QueueAction;

  });

  unwrapExports(QueueAction_1$1);
  QueueAction_1$1.QueueAction;

  var QueueScheduler_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });

  var QueueScheduler = (function (_super) {
      __extends(QueueScheduler, _super);
      function QueueScheduler() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      return QueueScheduler;
  }(AsyncScheduler_1.AsyncScheduler));
  exports.QueueScheduler = QueueScheduler;

  });

  unwrapExports(QueueScheduler_1$1);
  QueueScheduler_1$1.QueueScheduler;

  var QueueAction_1 = QueueAction_1$1;

  var QueueScheduler_1 = QueueScheduler_1$1;

  var queue$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });


  exports.queueScheduler = new QueueScheduler_1.QueueScheduler(QueueAction_1.QueueAction);
  exports.queue = exports.queueScheduler;

  });

  unwrapExports(queue$1);
  queue$1.queueScheduler;
  queue$1.queue;

  var queue_1 = queue$1;

  var observeOn_1 = observeOn_1$1;

  var ReplaySubject_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });






  var ReplaySubject = (function (_super) {
      __extends(ReplaySubject, _super);
      function ReplaySubject(bufferSize, windowTime, scheduler) {
          if (bufferSize === void 0) { bufferSize = Number.POSITIVE_INFINITY; }
          if (windowTime === void 0) { windowTime = Number.POSITIVE_INFINITY; }
          var _this = _super.call(this) || this;
          _this.scheduler = scheduler;
          _this._events = [];
          _this._infiniteTimeWindow = false;
          _this._bufferSize = bufferSize < 1 ? 1 : bufferSize;
          _this._windowTime = windowTime < 1 ? 1 : windowTime;
          if (windowTime === Number.POSITIVE_INFINITY) {
              _this._infiniteTimeWindow = true;
              _this.next = _this.nextInfiniteTimeWindow;
          }
          else {
              _this.next = _this.nextTimeWindow;
          }
          return _this;
      }
      ReplaySubject.prototype.nextInfiniteTimeWindow = function (value) {
          if (!this.isStopped) {
              var _events = this._events;
              _events.push(value);
              if (_events.length > this._bufferSize) {
                  _events.shift();
              }
          }
          _super.prototype.next.call(this, value);
      };
      ReplaySubject.prototype.nextTimeWindow = function (value) {
          if (!this.isStopped) {
              this._events.push(new ReplayEvent(this._getNow(), value));
              this._trimBufferThenGetEvents();
          }
          _super.prototype.next.call(this, value);
      };
      ReplaySubject.prototype._subscribe = function (subscriber) {
          var _infiniteTimeWindow = this._infiniteTimeWindow;
          var _events = _infiniteTimeWindow ? this._events : this._trimBufferThenGetEvents();
          var scheduler = this.scheduler;
          var len = _events.length;
          var subscription;
          if (this.closed) {
              throw new ObjectUnsubscribedError_1.ObjectUnsubscribedError();
          }
          else if (this.isStopped || this.hasError) {
              subscription = Subscription_1.Subscription.EMPTY;
          }
          else {
              this.observers.push(subscriber);
              subscription = new SubjectSubscription_1.SubjectSubscription(this, subscriber);
          }
          if (scheduler) {
              subscriber.add(subscriber = new observeOn_1.ObserveOnSubscriber(subscriber, scheduler));
          }
          if (_infiniteTimeWindow) {
              for (var i = 0; i < len && !subscriber.closed; i++) {
                  subscriber.next(_events[i]);
              }
          }
          else {
              for (var i = 0; i < len && !subscriber.closed; i++) {
                  subscriber.next(_events[i].value);
              }
          }
          if (this.hasError) {
              subscriber.error(this.thrownError);
          }
          else if (this.isStopped) {
              subscriber.complete();
          }
          return subscription;
      };
      ReplaySubject.prototype._getNow = function () {
          return (this.scheduler || queue_1.queue).now();
      };
      ReplaySubject.prototype._trimBufferThenGetEvents = function () {
          var now = this._getNow();
          var _bufferSize = this._bufferSize;
          var _windowTime = this._windowTime;
          var _events = this._events;
          var eventsCount = _events.length;
          var spliceCount = 0;
          while (spliceCount < eventsCount) {
              if ((now - _events[spliceCount].time) < _windowTime) {
                  break;
              }
              spliceCount++;
          }
          if (eventsCount > _bufferSize) {
              spliceCount = Math.max(spliceCount, eventsCount - _bufferSize);
          }
          if (spliceCount > 0) {
              _events.splice(0, spliceCount);
          }
          return _events;
      };
      return ReplaySubject;
  }(Subject_1.Subject));
  exports.ReplaySubject = ReplaySubject;
  var ReplayEvent = (function () {
      function ReplayEvent(time, value) {
          this.time = time;
          this.value = value;
      }
      return ReplayEvent;
  }());

  });

  unwrapExports(ReplaySubject_1$1);
  ReplaySubject_1$1.ReplaySubject;

  var ReplaySubject_1 = ReplaySubject_1$1;

  var publishReplay_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });


  function publishReplay(bufferSize, windowTime, selectorOrScheduler, scheduler) {
      if (selectorOrScheduler && typeof selectorOrScheduler !== 'function') {
          scheduler = selectorOrScheduler;
      }
      var selector = typeof selectorOrScheduler === 'function' ? selectorOrScheduler : undefined;
      var subject = new ReplaySubject_1.ReplaySubject(bufferSize, windowTime, scheduler);
      return function (source) { return multicast_1.multicast(function () { return subject; }, selector)(source); };
  }
  exports.publishReplay = publishReplay;

  });

  unwrapExports(publishReplay_1$1);
  publishReplay_1$1.publishReplay;

  var race_1$2 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });




  function race() {
      var observables = [];
      for (var _i = 0; _i < arguments.length; _i++) {
          observables[_i] = arguments[_i];
      }
      if (observables.length === 1) {
          if (isArray_1.isArray(observables[0])) {
              observables = observables[0];
          }
          else {
              return observables[0];
          }
      }
      return fromArray_1.fromArray(observables, undefined).lift(new RaceOperator());
  }
  exports.race = race;
  var RaceOperator = (function () {
      function RaceOperator() {
      }
      RaceOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new RaceSubscriber(subscriber));
      };
      return RaceOperator;
  }());
  exports.RaceOperator = RaceOperator;
  var RaceSubscriber = (function (_super) {
      __extends(RaceSubscriber, _super);
      function RaceSubscriber(destination) {
          var _this = _super.call(this, destination) || this;
          _this.hasFirst = false;
          _this.observables = [];
          _this.subscriptions = [];
          return _this;
      }
      RaceSubscriber.prototype._next = function (observable) {
          this.observables.push(observable);
      };
      RaceSubscriber.prototype._complete = function () {
          var observables = this.observables;
          var len = observables.length;
          if (len === 0) {
              this.destination.complete();
          }
          else {
              for (var i = 0; i < len && !this.hasFirst; i++) {
                  var observable = observables[i];
                  var subscription = subscribeToResult_1.subscribeToResult(this, observable, undefined, i);
                  if (this.subscriptions) {
                      this.subscriptions.push(subscription);
                  }
                  this.add(subscription);
              }
              this.observables = null;
          }
      };
      RaceSubscriber.prototype.notifyNext = function (_outerValue, innerValue, outerIndex) {
          if (!this.hasFirst) {
              this.hasFirst = true;
              for (var i = 0; i < this.subscriptions.length; i++) {
                  if (i !== outerIndex) {
                      var subscription = this.subscriptions[i];
                      subscription.unsubscribe();
                      this.remove(subscription);
                  }
              }
              this.subscriptions = null;
          }
          this.destination.next(innerValue);
      };
      return RaceSubscriber;
  }(OuterSubscriber_1.OuterSubscriber));
  exports.RaceSubscriber = RaceSubscriber;

  });

  unwrapExports(race_1$2);
  race_1$2.race;
  race_1$2.RaceOperator;
  race_1$2.RaceSubscriber;

  var race_1$1 = race_1$2;

  var race_2 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });


  function race() {
      var observables = [];
      for (var _i = 0; _i < arguments.length; _i++) {
          observables[_i] = arguments[_i];
      }
      return function raceOperatorFunction(source) {
          if (observables.length === 1 && isArray_1.isArray(observables[0])) {
              observables = observables[0];
          }
          return source.lift.call(race_1$1.race.apply(void 0, [source].concat(observables)));
      };
  }
  exports.race = race;

  });

  unwrapExports(race_2);
  race_2.race;

  var repeat_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });


  function repeat(count) {
      if (count === void 0) { count = -1; }
      return function (source) {
          if (count === 0) {
              return empty_1.empty();
          }
          else if (count < 0) {
              return source.lift(new RepeatOperator(-1, source));
          }
          else {
              return source.lift(new RepeatOperator(count - 1, source));
          }
      };
  }
  exports.repeat = repeat;
  var RepeatOperator = (function () {
      function RepeatOperator(count, source) {
          this.count = count;
          this.source = source;
      }
      RepeatOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new RepeatSubscriber(subscriber, this.count, this.source));
      };
      return RepeatOperator;
  }());
  var RepeatSubscriber = (function (_super) {
      __extends(RepeatSubscriber, _super);
      function RepeatSubscriber(destination, count, source) {
          var _this = _super.call(this, destination) || this;
          _this.count = count;
          _this.source = source;
          return _this;
      }
      RepeatSubscriber.prototype.complete = function () {
          if (!this.isStopped) {
              var _a = this, source = _a.source, count = _a.count;
              if (count === 0) {
                  return _super.prototype.complete.call(this);
              }
              else if (count > -1) {
                  this.count = count - 1;
              }
              source.subscribe(this._unsubscribeAndRecycle());
          }
      };
      return RepeatSubscriber;
  }(Subscriber_1.Subscriber));

  });

  unwrapExports(repeat_1$1);
  repeat_1$1.repeat;

  var repeatWhen_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });


  function repeatWhen(notifier) {
      return function (source) { return source.lift(new RepeatWhenOperator(notifier)); };
  }
  exports.repeatWhen = repeatWhen;
  var RepeatWhenOperator = (function () {
      function RepeatWhenOperator(notifier) {
          this.notifier = notifier;
      }
      RepeatWhenOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new RepeatWhenSubscriber(subscriber, this.notifier, source));
      };
      return RepeatWhenOperator;
  }());
  var RepeatWhenSubscriber = (function (_super) {
      __extends(RepeatWhenSubscriber, _super);
      function RepeatWhenSubscriber(destination, notifier, source) {
          var _this = _super.call(this, destination) || this;
          _this.notifier = notifier;
          _this.source = source;
          _this.sourceIsBeingSubscribedTo = true;
          return _this;
      }
      RepeatWhenSubscriber.prototype.notifyNext = function () {
          this.sourceIsBeingSubscribedTo = true;
          this.source.subscribe(this);
      };
      RepeatWhenSubscriber.prototype.notifyComplete = function () {
          if (this.sourceIsBeingSubscribedTo === false) {
              return _super.prototype.complete.call(this);
          }
      };
      RepeatWhenSubscriber.prototype.complete = function () {
          this.sourceIsBeingSubscribedTo = false;
          if (!this.isStopped) {
              if (!this.retries) {
                  this.subscribeToRetries();
              }
              if (!this.retriesSubscription || this.retriesSubscription.closed) {
                  return _super.prototype.complete.call(this);
              }
              this._unsubscribeAndRecycle();
              this.notifications.next(undefined);
          }
      };
      RepeatWhenSubscriber.prototype._unsubscribe = function () {
          var _a = this, notifications = _a.notifications, retriesSubscription = _a.retriesSubscription;
          if (notifications) {
              notifications.unsubscribe();
              this.notifications = undefined;
          }
          if (retriesSubscription) {
              retriesSubscription.unsubscribe();
              this.retriesSubscription = undefined;
          }
          this.retries = undefined;
      };
      RepeatWhenSubscriber.prototype._unsubscribeAndRecycle = function () {
          var _unsubscribe = this._unsubscribe;
          this._unsubscribe = null;
          _super.prototype._unsubscribeAndRecycle.call(this);
          this._unsubscribe = _unsubscribe;
          return this;
      };
      RepeatWhenSubscriber.prototype.subscribeToRetries = function () {
          this.notifications = new Subject_1.Subject();
          var retries;
          try {
              var notifier = this.notifier;
              retries = notifier(this.notifications);
          }
          catch (e) {
              return _super.prototype.complete.call(this);
          }
          this.retries = retries;
          this.retriesSubscription = innerSubscribe_1.innerSubscribe(retries, new innerSubscribe_1.SimpleInnerSubscriber(this));
      };
      return RepeatWhenSubscriber;
  }(innerSubscribe_1.SimpleOuterSubscriber));

  });

  unwrapExports(repeatWhen_1$1);
  repeatWhen_1$1.repeatWhen;

  var retry_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });

  function retry(count) {
      if (count === void 0) { count = -1; }
      return function (source) { return source.lift(new RetryOperator(count, source)); };
  }
  exports.retry = retry;
  var RetryOperator = (function () {
      function RetryOperator(count, source) {
          this.count = count;
          this.source = source;
      }
      RetryOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new RetrySubscriber(subscriber, this.count, this.source));
      };
      return RetryOperator;
  }());
  var RetrySubscriber = (function (_super) {
      __extends(RetrySubscriber, _super);
      function RetrySubscriber(destination, count, source) {
          var _this = _super.call(this, destination) || this;
          _this.count = count;
          _this.source = source;
          return _this;
      }
      RetrySubscriber.prototype.error = function (err) {
          if (!this.isStopped) {
              var _a = this, source = _a.source, count = _a.count;
              if (count === 0) {
                  return _super.prototype.error.call(this, err);
              }
              else if (count > -1) {
                  this.count = count - 1;
              }
              source.subscribe(this._unsubscribeAndRecycle());
          }
      };
      return RetrySubscriber;
  }(Subscriber_1.Subscriber));

  });

  unwrapExports(retry_1$1);
  retry_1$1.retry;

  var retryWhen_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });


  function retryWhen(notifier) {
      return function (source) { return source.lift(new RetryWhenOperator(notifier, source)); };
  }
  exports.retryWhen = retryWhen;
  var RetryWhenOperator = (function () {
      function RetryWhenOperator(notifier, source) {
          this.notifier = notifier;
          this.source = source;
      }
      RetryWhenOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new RetryWhenSubscriber(subscriber, this.notifier, this.source));
      };
      return RetryWhenOperator;
  }());
  var RetryWhenSubscriber = (function (_super) {
      __extends(RetryWhenSubscriber, _super);
      function RetryWhenSubscriber(destination, notifier, source) {
          var _this = _super.call(this, destination) || this;
          _this.notifier = notifier;
          _this.source = source;
          return _this;
      }
      RetryWhenSubscriber.prototype.error = function (err) {
          if (!this.isStopped) {
              var errors = this.errors;
              var retries = this.retries;
              var retriesSubscription = this.retriesSubscription;
              if (!retries) {
                  errors = new Subject_1.Subject();
                  try {
                      var notifier = this.notifier;
                      retries = notifier(errors);
                  }
                  catch (e) {
                      return _super.prototype.error.call(this, e);
                  }
                  retriesSubscription = innerSubscribe_1.innerSubscribe(retries, new innerSubscribe_1.SimpleInnerSubscriber(this));
              }
              else {
                  this.errors = undefined;
                  this.retriesSubscription = undefined;
              }
              this._unsubscribeAndRecycle();
              this.errors = errors;
              this.retries = retries;
              this.retriesSubscription = retriesSubscription;
              errors.next(err);
          }
      };
      RetryWhenSubscriber.prototype._unsubscribe = function () {
          var _a = this, errors = _a.errors, retriesSubscription = _a.retriesSubscription;
          if (errors) {
              errors.unsubscribe();
              this.errors = undefined;
          }
          if (retriesSubscription) {
              retriesSubscription.unsubscribe();
              this.retriesSubscription = undefined;
          }
          this.retries = undefined;
      };
      RetryWhenSubscriber.prototype.notifyNext = function () {
          var _unsubscribe = this._unsubscribe;
          this._unsubscribe = null;
          this._unsubscribeAndRecycle();
          this._unsubscribe = _unsubscribe;
          this.source.subscribe(this);
      };
      return RetryWhenSubscriber;
  }(innerSubscribe_1.SimpleOuterSubscriber));

  });

  unwrapExports(retryWhen_1$1);
  retryWhen_1$1.retryWhen;

  var sample_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });

  function sample(notifier) {
      return function (source) { return source.lift(new SampleOperator(notifier)); };
  }
  exports.sample = sample;
  var SampleOperator = (function () {
      function SampleOperator(notifier) {
          this.notifier = notifier;
      }
      SampleOperator.prototype.call = function (subscriber, source) {
          var sampleSubscriber = new SampleSubscriber(subscriber);
          var subscription = source.subscribe(sampleSubscriber);
          subscription.add(innerSubscribe_1.innerSubscribe(this.notifier, new innerSubscribe_1.SimpleInnerSubscriber(sampleSubscriber)));
          return subscription;
      };
      return SampleOperator;
  }());
  var SampleSubscriber = (function (_super) {
      __extends(SampleSubscriber, _super);
      function SampleSubscriber() {
          var _this = _super !== null && _super.apply(this, arguments) || this;
          _this.hasValue = false;
          return _this;
      }
      SampleSubscriber.prototype._next = function (value) {
          this.value = value;
          this.hasValue = true;
      };
      SampleSubscriber.prototype.notifyNext = function () {
          this.emitValue();
      };
      SampleSubscriber.prototype.notifyComplete = function () {
          this.emitValue();
      };
      SampleSubscriber.prototype.emitValue = function () {
          if (this.hasValue) {
              this.hasValue = false;
              this.destination.next(this.value);
          }
      };
      return SampleSubscriber;
  }(innerSubscribe_1.SimpleOuterSubscriber));

  });

  unwrapExports(sample_1$1);
  sample_1$1.sample;

  var sampleTime_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });


  function sampleTime(period, scheduler) {
      if (scheduler === void 0) { scheduler = async_1.async; }
      return function (source) { return source.lift(new SampleTimeOperator(period, scheduler)); };
  }
  exports.sampleTime = sampleTime;
  var SampleTimeOperator = (function () {
      function SampleTimeOperator(period, scheduler) {
          this.period = period;
          this.scheduler = scheduler;
      }
      SampleTimeOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new SampleTimeSubscriber(subscriber, this.period, this.scheduler));
      };
      return SampleTimeOperator;
  }());
  var SampleTimeSubscriber = (function (_super) {
      __extends(SampleTimeSubscriber, _super);
      function SampleTimeSubscriber(destination, period, scheduler) {
          var _this = _super.call(this, destination) || this;
          _this.period = period;
          _this.scheduler = scheduler;
          _this.hasValue = false;
          _this.add(scheduler.schedule(dispatchNotification, period, { subscriber: _this, period: period }));
          return _this;
      }
      SampleTimeSubscriber.prototype._next = function (value) {
          this.lastValue = value;
          this.hasValue = true;
      };
      SampleTimeSubscriber.prototype.notifyNext = function () {
          if (this.hasValue) {
              this.hasValue = false;
              this.destination.next(this.lastValue);
          }
      };
      return SampleTimeSubscriber;
  }(Subscriber_1.Subscriber));
  function dispatchNotification(state) {
      var subscriber = state.subscriber, period = state.period;
      subscriber.notifyNext();
      this.schedule(state, period);
  }

  });

  unwrapExports(sampleTime_1$1);
  sampleTime_1$1.sampleTime;

  var sequenceEqual_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });

  function sequenceEqual(compareTo, comparator) {
      return function (source) { return source.lift(new SequenceEqualOperator(compareTo, comparator)); };
  }
  exports.sequenceEqual = sequenceEqual;
  var SequenceEqualOperator = (function () {
      function SequenceEqualOperator(compareTo, comparator) {
          this.compareTo = compareTo;
          this.comparator = comparator;
      }
      SequenceEqualOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new SequenceEqualSubscriber(subscriber, this.compareTo, this.comparator));
      };
      return SequenceEqualOperator;
  }());
  exports.SequenceEqualOperator = SequenceEqualOperator;
  var SequenceEqualSubscriber = (function (_super) {
      __extends(SequenceEqualSubscriber, _super);
      function SequenceEqualSubscriber(destination, compareTo, comparator) {
          var _this = _super.call(this, destination) || this;
          _this.compareTo = compareTo;
          _this.comparator = comparator;
          _this._a = [];
          _this._b = [];
          _this._oneComplete = false;
          _this.destination.add(compareTo.subscribe(new SequenceEqualCompareToSubscriber(destination, _this)));
          return _this;
      }
      SequenceEqualSubscriber.prototype._next = function (value) {
          if (this._oneComplete && this._b.length === 0) {
              this.emit(false);
          }
          else {
              this._a.push(value);
              this.checkValues();
          }
      };
      SequenceEqualSubscriber.prototype._complete = function () {
          if (this._oneComplete) {
              this.emit(this._a.length === 0 && this._b.length === 0);
          }
          else {
              this._oneComplete = true;
          }
          this.unsubscribe();
      };
      SequenceEqualSubscriber.prototype.checkValues = function () {
          var _c = this, _a = _c._a, _b = _c._b, comparator = _c.comparator;
          while (_a.length > 0 && _b.length > 0) {
              var a = _a.shift();
              var b = _b.shift();
              var areEqual = false;
              try {
                  areEqual = comparator ? comparator(a, b) : a === b;
              }
              catch (e) {
                  this.destination.error(e);
              }
              if (!areEqual) {
                  this.emit(false);
              }
          }
      };
      SequenceEqualSubscriber.prototype.emit = function (value) {
          var destination = this.destination;
          destination.next(value);
          destination.complete();
      };
      SequenceEqualSubscriber.prototype.nextB = function (value) {
          if (this._oneComplete && this._a.length === 0) {
              this.emit(false);
          }
          else {
              this._b.push(value);
              this.checkValues();
          }
      };
      SequenceEqualSubscriber.prototype.completeB = function () {
          if (this._oneComplete) {
              this.emit(this._a.length === 0 && this._b.length === 0);
          }
          else {
              this._oneComplete = true;
          }
      };
      return SequenceEqualSubscriber;
  }(Subscriber_1.Subscriber));
  exports.SequenceEqualSubscriber = SequenceEqualSubscriber;
  var SequenceEqualCompareToSubscriber = (function (_super) {
      __extends(SequenceEqualCompareToSubscriber, _super);
      function SequenceEqualCompareToSubscriber(destination, parent) {
          var _this = _super.call(this, destination) || this;
          _this.parent = parent;
          return _this;
      }
      SequenceEqualCompareToSubscriber.prototype._next = function (value) {
          this.parent.nextB(value);
      };
      SequenceEqualCompareToSubscriber.prototype._error = function (err) {
          this.parent.error(err);
          this.unsubscribe();
      };
      SequenceEqualCompareToSubscriber.prototype._complete = function () {
          this.parent.completeB();
          this.unsubscribe();
      };
      return SequenceEqualCompareToSubscriber;
  }(Subscriber_1.Subscriber));

  });

  unwrapExports(sequenceEqual_1$1);
  sequenceEqual_1$1.sequenceEqual;
  sequenceEqual_1$1.SequenceEqualOperator;
  sequenceEqual_1$1.SequenceEqualSubscriber;

  var share_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });



  function shareSubjectFactory() {
      return new Subject_1.Subject();
  }
  function share() {
      return function (source) { return refCount_1.refCount()(multicast_1.multicast(shareSubjectFactory)(source)); };
  }
  exports.share = share;

  });

  unwrapExports(share_1$1);
  share_1$1.share;

  var shareReplay_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });

  function shareReplay(configOrBufferSize, windowTime, scheduler) {
      var config;
      if (configOrBufferSize && typeof configOrBufferSize === 'object') {
          config = configOrBufferSize;
      }
      else {
          config = {
              bufferSize: configOrBufferSize,
              windowTime: windowTime,
              refCount: false,
              scheduler: scheduler,
          };
      }
      return function (source) { return source.lift(shareReplayOperator(config)); };
  }
  exports.shareReplay = shareReplay;
  function shareReplayOperator(_a) {
      var _b = _a.bufferSize, bufferSize = _b === void 0 ? Number.POSITIVE_INFINITY : _b, _c = _a.windowTime, windowTime = _c === void 0 ? Number.POSITIVE_INFINITY : _c, useRefCount = _a.refCount, scheduler = _a.scheduler;
      var subject;
      var refCount = 0;
      var subscription;
      var hasError = false;
      var isComplete = false;
      return function shareReplayOperation(source) {
          refCount++;
          var innerSub;
          if (!subject || hasError) {
              hasError = false;
              subject = new ReplaySubject_1.ReplaySubject(bufferSize, windowTime, scheduler);
              innerSub = subject.subscribe(this);
              subscription = source.subscribe({
                  next: function (value) {
                      subject.next(value);
                  },
                  error: function (err) {
                      hasError = true;
                      subject.error(err);
                  },
                  complete: function () {
                      isComplete = true;
                      subscription = undefined;
                      subject.complete();
                  },
              });
              if (isComplete) {
                  subscription = undefined;
              }
          }
          else {
              innerSub = subject.subscribe(this);
          }
          this.add(function () {
              refCount--;
              innerSub.unsubscribe();
              innerSub = undefined;
              if (subscription && !isComplete && useRefCount && refCount === 0) {
                  subscription.unsubscribe();
                  subscription = undefined;
                  subject = undefined;
              }
          });
      };
  }

  });

  unwrapExports(shareReplay_1$1);
  shareReplay_1$1.shareReplay;

  var single_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });


  function single(predicate) {
      return function (source) { return source.lift(new SingleOperator(predicate, source)); };
  }
  exports.single = single;
  var SingleOperator = (function () {
      function SingleOperator(predicate, source) {
          this.predicate = predicate;
          this.source = source;
      }
      SingleOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new SingleSubscriber(subscriber, this.predicate, this.source));
      };
      return SingleOperator;
  }());
  var SingleSubscriber = (function (_super) {
      __extends(SingleSubscriber, _super);
      function SingleSubscriber(destination, predicate, source) {
          var _this = _super.call(this, destination) || this;
          _this.predicate = predicate;
          _this.source = source;
          _this.seenValue = false;
          _this.index = 0;
          return _this;
      }
      SingleSubscriber.prototype.applySingleValue = function (value) {
          if (this.seenValue) {
              this.destination.error('Sequence contains more than one element');
          }
          else {
              this.seenValue = true;
              this.singleValue = value;
          }
      };
      SingleSubscriber.prototype._next = function (value) {
          var index = this.index++;
          if (this.predicate) {
              this.tryNext(value, index);
          }
          else {
              this.applySingleValue(value);
          }
      };
      SingleSubscriber.prototype.tryNext = function (value, index) {
          try {
              if (this.predicate(value, index, this.source)) {
                  this.applySingleValue(value);
              }
          }
          catch (err) {
              this.destination.error(err);
          }
      };
      SingleSubscriber.prototype._complete = function () {
          var destination = this.destination;
          if (this.index > 0) {
              destination.next(this.seenValue ? this.singleValue : undefined);
              destination.complete();
          }
          else {
              destination.error(new EmptyError_1.EmptyError);
          }
      };
      return SingleSubscriber;
  }(Subscriber_1.Subscriber));

  });

  unwrapExports(single_1$1);
  single_1$1.single;

  var skip_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });

  function skip(count) {
      return function (source) { return source.lift(new SkipOperator(count)); };
  }
  exports.skip = skip;
  var SkipOperator = (function () {
      function SkipOperator(total) {
          this.total = total;
      }
      SkipOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new SkipSubscriber(subscriber, this.total));
      };
      return SkipOperator;
  }());
  var SkipSubscriber = (function (_super) {
      __extends(SkipSubscriber, _super);
      function SkipSubscriber(destination, total) {
          var _this = _super.call(this, destination) || this;
          _this.total = total;
          _this.count = 0;
          return _this;
      }
      SkipSubscriber.prototype._next = function (x) {
          if (++this.count > this.total) {
              this.destination.next(x);
          }
      };
      return SkipSubscriber;
  }(Subscriber_1.Subscriber));

  });

  unwrapExports(skip_1$1);
  skip_1$1.skip;

  var skipLast_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });


  function skipLast(count) {
      return function (source) { return source.lift(new SkipLastOperator(count)); };
  }
  exports.skipLast = skipLast;
  var SkipLastOperator = (function () {
      function SkipLastOperator(_skipCount) {
          this._skipCount = _skipCount;
          if (this._skipCount < 0) {
              throw new ArgumentOutOfRangeError_1.ArgumentOutOfRangeError;
          }
      }
      SkipLastOperator.prototype.call = function (subscriber, source) {
          if (this._skipCount === 0) {
              return source.subscribe(new Subscriber_1.Subscriber(subscriber));
          }
          else {
              return source.subscribe(new SkipLastSubscriber(subscriber, this._skipCount));
          }
      };
      return SkipLastOperator;
  }());
  var SkipLastSubscriber = (function (_super) {
      __extends(SkipLastSubscriber, _super);
      function SkipLastSubscriber(destination, _skipCount) {
          var _this = _super.call(this, destination) || this;
          _this._skipCount = _skipCount;
          _this._count = 0;
          _this._ring = new Array(_skipCount);
          return _this;
      }
      SkipLastSubscriber.prototype._next = function (value) {
          var skipCount = this._skipCount;
          var count = this._count++;
          if (count < skipCount) {
              this._ring[count] = value;
          }
          else {
              var currentIndex = count % skipCount;
              var ring = this._ring;
              var oldValue = ring[currentIndex];
              ring[currentIndex] = value;
              this.destination.next(oldValue);
          }
      };
      return SkipLastSubscriber;
  }(Subscriber_1.Subscriber));

  });

  unwrapExports(skipLast_1$1);
  skipLast_1$1.skipLast;

  var skipUntil_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });

  function skipUntil(notifier) {
      return function (source) { return source.lift(new SkipUntilOperator(notifier)); };
  }
  exports.skipUntil = skipUntil;
  var SkipUntilOperator = (function () {
      function SkipUntilOperator(notifier) {
          this.notifier = notifier;
      }
      SkipUntilOperator.prototype.call = function (destination, source) {
          return source.subscribe(new SkipUntilSubscriber(destination, this.notifier));
      };
      return SkipUntilOperator;
  }());
  var SkipUntilSubscriber = (function (_super) {
      __extends(SkipUntilSubscriber, _super);
      function SkipUntilSubscriber(destination, notifier) {
          var _this = _super.call(this, destination) || this;
          _this.hasValue = false;
          var innerSubscriber = new innerSubscribe_1.SimpleInnerSubscriber(_this);
          _this.add(innerSubscriber);
          _this.innerSubscription = innerSubscriber;
          var innerSubscription = innerSubscribe_1.innerSubscribe(notifier, innerSubscriber);
          if (innerSubscription !== innerSubscriber) {
              _this.add(innerSubscription);
              _this.innerSubscription = innerSubscription;
          }
          return _this;
      }
      SkipUntilSubscriber.prototype._next = function (value) {
          if (this.hasValue) {
              _super.prototype._next.call(this, value);
          }
      };
      SkipUntilSubscriber.prototype.notifyNext = function () {
          this.hasValue = true;
          if (this.innerSubscription) {
              this.innerSubscription.unsubscribe();
          }
      };
      SkipUntilSubscriber.prototype.notifyComplete = function () {
      };
      return SkipUntilSubscriber;
  }(innerSubscribe_1.SimpleOuterSubscriber));

  });

  unwrapExports(skipUntil_1$1);
  skipUntil_1$1.skipUntil;

  var skipWhile_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });

  function skipWhile(predicate) {
      return function (source) { return source.lift(new SkipWhileOperator(predicate)); };
  }
  exports.skipWhile = skipWhile;
  var SkipWhileOperator = (function () {
      function SkipWhileOperator(predicate) {
          this.predicate = predicate;
      }
      SkipWhileOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new SkipWhileSubscriber(subscriber, this.predicate));
      };
      return SkipWhileOperator;
  }());
  var SkipWhileSubscriber = (function (_super) {
      __extends(SkipWhileSubscriber, _super);
      function SkipWhileSubscriber(destination, predicate) {
          var _this = _super.call(this, destination) || this;
          _this.predicate = predicate;
          _this.skipping = true;
          _this.index = 0;
          return _this;
      }
      SkipWhileSubscriber.prototype._next = function (value) {
          var destination = this.destination;
          if (this.skipping) {
              this.tryCallPredicate(value);
          }
          if (!this.skipping) {
              destination.next(value);
          }
      };
      SkipWhileSubscriber.prototype.tryCallPredicate = function (value) {
          try {
              var result = this.predicate(value, this.index++);
              this.skipping = Boolean(result);
          }
          catch (err) {
              this.destination.error(err);
          }
      };
      return SkipWhileSubscriber;
  }(Subscriber_1.Subscriber));

  });

  unwrapExports(skipWhile_1$1);
  skipWhile_1$1.skipWhile;

  var startWith_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });


  function startWith() {
      var array = [];
      for (var _i = 0; _i < arguments.length; _i++) {
          array[_i] = arguments[_i];
      }
      var scheduler = array[array.length - 1];
      if (isScheduler_1.isScheduler(scheduler)) {
          array.pop();
          return function (source) { return concat_1$1.concat(array, source, scheduler); };
      }
      else {
          return function (source) { return concat_1$1.concat(array, source); };
      }
  }
  exports.startWith = startWith;

  });

  unwrapExports(startWith_1$1);
  startWith_1$1.startWith;

  var Immediate = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });
  var nextHandle = 1;
  var RESOLVED = (function () { return Promise.resolve(); })();
  var activeHandles = {};
  function findAndClearHandle(handle) {
      if (handle in activeHandles) {
          delete activeHandles[handle];
          return true;
      }
      return false;
  }
  exports.Immediate = {
      setImmediate: function (cb) {
          var handle = nextHandle++;
          activeHandles[handle] = true;
          RESOLVED.then(function () { return findAndClearHandle(handle) && cb(); });
          return handle;
      },
      clearImmediate: function (handle) {
          findAndClearHandle(handle);
      },
  };
  exports.TestTools = {
      pending: function () {
          return Object.keys(activeHandles).length;
      }
  };

  });

  unwrapExports(Immediate);
  Immediate.Immediate;
  Immediate.TestTools;

  var Immediate_1 = Immediate;

  var AsapAction_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });


  var AsapAction = (function (_super) {
      __extends(AsapAction, _super);
      function AsapAction(scheduler, work) {
          var _this = _super.call(this, scheduler, work) || this;
          _this.scheduler = scheduler;
          _this.work = work;
          return _this;
      }
      AsapAction.prototype.requestAsyncId = function (scheduler, id, delay) {
          if (delay === void 0) { delay = 0; }
          if (delay !== null && delay > 0) {
              return _super.prototype.requestAsyncId.call(this, scheduler, id, delay);
          }
          scheduler.actions.push(this);
          return scheduler.scheduled || (scheduler.scheduled = Immediate_1.Immediate.setImmediate(scheduler.flush.bind(scheduler, null)));
      };
      AsapAction.prototype.recycleAsyncId = function (scheduler, id, delay) {
          if (delay === void 0) { delay = 0; }
          if ((delay !== null && delay > 0) || (delay === null && this.delay > 0)) {
              return _super.prototype.recycleAsyncId.call(this, scheduler, id, delay);
          }
          if (scheduler.actions.length === 0) {
              Immediate_1.Immediate.clearImmediate(id);
              scheduler.scheduled = undefined;
          }
          return undefined;
      };
      return AsapAction;
  }(AsyncAction_1.AsyncAction));
  exports.AsapAction = AsapAction;

  });

  unwrapExports(AsapAction_1$1);
  AsapAction_1$1.AsapAction;

  var AsapScheduler_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });

  var AsapScheduler = (function (_super) {
      __extends(AsapScheduler, _super);
      function AsapScheduler() {
          return _super !== null && _super.apply(this, arguments) || this;
      }
      AsapScheduler.prototype.flush = function (action) {
          this.active = true;
          this.scheduled = undefined;
          var actions = this.actions;
          var error;
          var index = -1;
          var count = actions.length;
          action = action || actions.shift();
          do {
              if (error = action.execute(action.state, action.delay)) {
                  break;
              }
          } while (++index < count && (action = actions.shift()));
          this.active = false;
          if (error) {
              while (++index < count && (action = actions.shift())) {
                  action.unsubscribe();
              }
              throw error;
          }
      };
      return AsapScheduler;
  }(AsyncScheduler_1.AsyncScheduler));
  exports.AsapScheduler = AsapScheduler;

  });

  unwrapExports(AsapScheduler_1$1);
  AsapScheduler_1$1.AsapScheduler;

  var AsapAction_1 = AsapAction_1$1;

  var AsapScheduler_1 = AsapScheduler_1$1;

  var asap = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });


  exports.asapScheduler = new AsapScheduler_1.AsapScheduler(AsapAction_1.AsapAction);
  exports.asap = exports.asapScheduler;

  });

  unwrapExports(asap);
  asap.asapScheduler;
  asap.asap;

  var asap_1 = asap;

  var SubscribeOnObservable_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });



  var SubscribeOnObservable = (function (_super) {
      __extends(SubscribeOnObservable, _super);
      function SubscribeOnObservable(source, delayTime, scheduler) {
          if (delayTime === void 0) { delayTime = 0; }
          if (scheduler === void 0) { scheduler = asap_1.asap; }
          var _this = _super.call(this) || this;
          _this.source = source;
          _this.delayTime = delayTime;
          _this.scheduler = scheduler;
          if (!isNumeric_1.isNumeric(delayTime) || delayTime < 0) {
              _this.delayTime = 0;
          }
          if (!scheduler || typeof scheduler.schedule !== 'function') {
              _this.scheduler = asap_1.asap;
          }
          return _this;
      }
      SubscribeOnObservable.create = function (source, delay, scheduler) {
          if (delay === void 0) { delay = 0; }
          if (scheduler === void 0) { scheduler = asap_1.asap; }
          return new SubscribeOnObservable(source, delay, scheduler);
      };
      SubscribeOnObservable.dispatch = function (arg) {
          var source = arg.source, subscriber = arg.subscriber;
          return this.add(source.subscribe(subscriber));
      };
      SubscribeOnObservable.prototype._subscribe = function (subscriber) {
          var delay = this.delayTime;
          var source = this.source;
          var scheduler = this.scheduler;
          return scheduler.schedule(SubscribeOnObservable.dispatch, delay, {
              source: source, subscriber: subscriber
          });
      };
      return SubscribeOnObservable;
  }(Observable_1.Observable));
  exports.SubscribeOnObservable = SubscribeOnObservable;

  });

  unwrapExports(SubscribeOnObservable_1$1);
  SubscribeOnObservable_1$1.SubscribeOnObservable;

  var SubscribeOnObservable_1 = SubscribeOnObservable_1$1;

  var subscribeOn_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });

  function subscribeOn(scheduler, delay) {
      if (delay === void 0) { delay = 0; }
      return function subscribeOnOperatorFunction(source) {
          return source.lift(new SubscribeOnOperator(scheduler, delay));
      };
  }
  exports.subscribeOn = subscribeOn;
  var SubscribeOnOperator = (function () {
      function SubscribeOnOperator(scheduler, delay) {
          this.scheduler = scheduler;
          this.delay = delay;
      }
      SubscribeOnOperator.prototype.call = function (subscriber, source) {
          return new SubscribeOnObservable_1.SubscribeOnObservable(source, this.delay, this.scheduler).subscribe(subscriber);
      };
      return SubscribeOnOperator;
  }());

  });

  unwrapExports(subscribeOn_1$1);
  subscribeOn_1$1.subscribeOn;

  var switchMap_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });



  function switchMap(project, resultSelector) {
      if (typeof resultSelector === 'function') {
          return function (source) { return source.pipe(switchMap(function (a, i) { return from_1.from(project(a, i)).pipe(map_1.map(function (b, ii) { return resultSelector(a, b, i, ii); })); })); };
      }
      return function (source) { return source.lift(new SwitchMapOperator(project)); };
  }
  exports.switchMap = switchMap;
  var SwitchMapOperator = (function () {
      function SwitchMapOperator(project) {
          this.project = project;
      }
      SwitchMapOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new SwitchMapSubscriber(subscriber, this.project));
      };
      return SwitchMapOperator;
  }());
  var SwitchMapSubscriber = (function (_super) {
      __extends(SwitchMapSubscriber, _super);
      function SwitchMapSubscriber(destination, project) {
          var _this = _super.call(this, destination) || this;
          _this.project = project;
          _this.index = 0;
          return _this;
      }
      SwitchMapSubscriber.prototype._next = function (value) {
          var result;
          var index = this.index++;
          try {
              result = this.project(value, index);
          }
          catch (error) {
              this.destination.error(error);
              return;
          }
          this._innerSub(result);
      };
      SwitchMapSubscriber.prototype._innerSub = function (result) {
          var innerSubscription = this.innerSubscription;
          if (innerSubscription) {
              innerSubscription.unsubscribe();
          }
          var innerSubscriber = new innerSubscribe_1.SimpleInnerSubscriber(this);
          var destination = this.destination;
          destination.add(innerSubscriber);
          this.innerSubscription = innerSubscribe_1.innerSubscribe(result, innerSubscriber);
          if (this.innerSubscription !== innerSubscriber) {
              destination.add(this.innerSubscription);
          }
      };
      SwitchMapSubscriber.prototype._complete = function () {
          var innerSubscription = this.innerSubscription;
          if (!innerSubscription || innerSubscription.closed) {
              _super.prototype._complete.call(this);
          }
          this.unsubscribe();
      };
      SwitchMapSubscriber.prototype._unsubscribe = function () {
          this.innerSubscription = undefined;
      };
      SwitchMapSubscriber.prototype.notifyComplete = function () {
          this.innerSubscription = undefined;
          if (this.isStopped) {
              _super.prototype._complete.call(this);
          }
      };
      SwitchMapSubscriber.prototype.notifyNext = function (innerValue) {
          this.destination.next(innerValue);
      };
      return SwitchMapSubscriber;
  }(innerSubscribe_1.SimpleOuterSubscriber));

  });

  unwrapExports(switchMap_1$1);
  switchMap_1$1.switchMap;

  var switchMap_1 = switchMap_1$1;

  var switchAll_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });


  function switchAll() {
      return switchMap_1.switchMap(identity_1.identity);
  }
  exports.switchAll = switchAll;

  });

  unwrapExports(switchAll_1$1);
  switchAll_1$1.switchAll;

  var switchMapTo_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });

  function switchMapTo(innerObservable, resultSelector) {
      return resultSelector ? switchMap_1.switchMap(function () { return innerObservable; }, resultSelector) : switchMap_1.switchMap(function () { return innerObservable; });
  }
  exports.switchMapTo = switchMapTo;

  });

  unwrapExports(switchMapTo_1$1);
  switchMapTo_1$1.switchMapTo;

  var takeUntil_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });

  function takeUntil(notifier) {
      return function (source) { return source.lift(new TakeUntilOperator(notifier)); };
  }
  exports.takeUntil = takeUntil;
  var TakeUntilOperator = (function () {
      function TakeUntilOperator(notifier) {
          this.notifier = notifier;
      }
      TakeUntilOperator.prototype.call = function (subscriber, source) {
          var takeUntilSubscriber = new TakeUntilSubscriber(subscriber);
          var notifierSubscription = innerSubscribe_1.innerSubscribe(this.notifier, new innerSubscribe_1.SimpleInnerSubscriber(takeUntilSubscriber));
          if (notifierSubscription && !takeUntilSubscriber.seenValue) {
              takeUntilSubscriber.add(notifierSubscription);
              return source.subscribe(takeUntilSubscriber);
          }
          return takeUntilSubscriber;
      };
      return TakeUntilOperator;
  }());
  var TakeUntilSubscriber = (function (_super) {
      __extends(TakeUntilSubscriber, _super);
      function TakeUntilSubscriber(destination) {
          var _this = _super.call(this, destination) || this;
          _this.seenValue = false;
          return _this;
      }
      TakeUntilSubscriber.prototype.notifyNext = function () {
          this.seenValue = true;
          this.complete();
      };
      TakeUntilSubscriber.prototype.notifyComplete = function () {
      };
      return TakeUntilSubscriber;
  }(innerSubscribe_1.SimpleOuterSubscriber));

  });

  unwrapExports(takeUntil_1$1);
  takeUntil_1$1.takeUntil;

  var takeWhile_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });

  function takeWhile(predicate, inclusive) {
      if (inclusive === void 0) { inclusive = false; }
      return function (source) {
          return source.lift(new TakeWhileOperator(predicate, inclusive));
      };
  }
  exports.takeWhile = takeWhile;
  var TakeWhileOperator = (function () {
      function TakeWhileOperator(predicate, inclusive) {
          this.predicate = predicate;
          this.inclusive = inclusive;
      }
      TakeWhileOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new TakeWhileSubscriber(subscriber, this.predicate, this.inclusive));
      };
      return TakeWhileOperator;
  }());
  var TakeWhileSubscriber = (function (_super) {
      __extends(TakeWhileSubscriber, _super);
      function TakeWhileSubscriber(destination, predicate, inclusive) {
          var _this = _super.call(this, destination) || this;
          _this.predicate = predicate;
          _this.inclusive = inclusive;
          _this.index = 0;
          return _this;
      }
      TakeWhileSubscriber.prototype._next = function (value) {
          var destination = this.destination;
          var result;
          try {
              result = this.predicate(value, this.index++);
          }
          catch (err) {
              destination.error(err);
              return;
          }
          this.nextOrComplete(value, result);
      };
      TakeWhileSubscriber.prototype.nextOrComplete = function (value, predicateResult) {
          var destination = this.destination;
          if (Boolean(predicateResult)) {
              destination.next(value);
          }
          else {
              if (this.inclusive) {
                  destination.next(value);
              }
              destination.complete();
          }
      };
      return TakeWhileSubscriber;
  }(Subscriber_1.Subscriber));

  });

  unwrapExports(takeWhile_1$1);
  takeWhile_1$1.takeWhile;

  var noop_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });
  function noop() { }
  exports.noop = noop;

  });

  unwrapExports(noop_1$1);
  noop_1$1.noop;

  var noop_1 = noop_1$1;

  var tap_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });



  function tap(nextOrObserver, error, complete) {
      return function tapOperatorFunction(source) {
          return source.lift(new DoOperator(nextOrObserver, error, complete));
      };
  }
  exports.tap = tap;
  var DoOperator = (function () {
      function DoOperator(nextOrObserver, error, complete) {
          this.nextOrObserver = nextOrObserver;
          this.error = error;
          this.complete = complete;
      }
      DoOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new TapSubscriber(subscriber, this.nextOrObserver, this.error, this.complete));
      };
      return DoOperator;
  }());
  var TapSubscriber = (function (_super) {
      __extends(TapSubscriber, _super);
      function TapSubscriber(destination, observerOrNext, error, complete) {
          var _this = _super.call(this, destination) || this;
          _this._tapNext = noop_1.noop;
          _this._tapError = noop_1.noop;
          _this._tapComplete = noop_1.noop;
          _this._tapError = error || noop_1.noop;
          _this._tapComplete = complete || noop_1.noop;
          if (isFunction_1.isFunction(observerOrNext)) {
              _this._context = _this;
              _this._tapNext = observerOrNext;
          }
          else if (observerOrNext) {
              _this._context = observerOrNext;
              _this._tapNext = observerOrNext.next || noop_1.noop;
              _this._tapError = observerOrNext.error || noop_1.noop;
              _this._tapComplete = observerOrNext.complete || noop_1.noop;
          }
          return _this;
      }
      TapSubscriber.prototype._next = function (value) {
          try {
              this._tapNext.call(this._context, value);
          }
          catch (err) {
              this.destination.error(err);
              return;
          }
          this.destination.next(value);
      };
      TapSubscriber.prototype._error = function (err) {
          try {
              this._tapError.call(this._context, err);
          }
          catch (err) {
              this.destination.error(err);
              return;
          }
          this.destination.error(err);
      };
      TapSubscriber.prototype._complete = function () {
          try {
              this._tapComplete.call(this._context);
          }
          catch (err) {
              this.destination.error(err);
              return;
          }
          return this.destination.complete();
      };
      return TapSubscriber;
  }(Subscriber_1.Subscriber));

  });

  unwrapExports(tap_1$1);
  tap_1$1.tap;

  var throttle_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });

  exports.defaultThrottleConfig = {
      leading: true,
      trailing: false
  };
  function throttle(durationSelector, config) {
      if (config === void 0) { config = exports.defaultThrottleConfig; }
      return function (source) { return source.lift(new ThrottleOperator(durationSelector, !!config.leading, !!config.trailing)); };
  }
  exports.throttle = throttle;
  var ThrottleOperator = (function () {
      function ThrottleOperator(durationSelector, leading, trailing) {
          this.durationSelector = durationSelector;
          this.leading = leading;
          this.trailing = trailing;
      }
      ThrottleOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new ThrottleSubscriber(subscriber, this.durationSelector, this.leading, this.trailing));
      };
      return ThrottleOperator;
  }());
  var ThrottleSubscriber = (function (_super) {
      __extends(ThrottleSubscriber, _super);
      function ThrottleSubscriber(destination, durationSelector, _leading, _trailing) {
          var _this = _super.call(this, destination) || this;
          _this.destination = destination;
          _this.durationSelector = durationSelector;
          _this._leading = _leading;
          _this._trailing = _trailing;
          _this._hasValue = false;
          return _this;
      }
      ThrottleSubscriber.prototype._next = function (value) {
          this._hasValue = true;
          this._sendValue = value;
          if (!this._throttled) {
              if (this._leading) {
                  this.send();
              }
              else {
                  this.throttle(value);
              }
          }
      };
      ThrottleSubscriber.prototype.send = function () {
          var _a = this, _hasValue = _a._hasValue, _sendValue = _a._sendValue;
          if (_hasValue) {
              this.destination.next(_sendValue);
              this.throttle(_sendValue);
          }
          this._hasValue = false;
          this._sendValue = undefined;
      };
      ThrottleSubscriber.prototype.throttle = function (value) {
          var duration = this.tryDurationSelector(value);
          if (!!duration) {
              this.add(this._throttled = innerSubscribe_1.innerSubscribe(duration, new innerSubscribe_1.SimpleInnerSubscriber(this)));
          }
      };
      ThrottleSubscriber.prototype.tryDurationSelector = function (value) {
          try {
              return this.durationSelector(value);
          }
          catch (err) {
              this.destination.error(err);
              return null;
          }
      };
      ThrottleSubscriber.prototype.throttlingDone = function () {
          var _a = this, _throttled = _a._throttled, _trailing = _a._trailing;
          if (_throttled) {
              _throttled.unsubscribe();
          }
          this._throttled = undefined;
          if (_trailing) {
              this.send();
          }
      };
      ThrottleSubscriber.prototype.notifyNext = function () {
          this.throttlingDone();
      };
      ThrottleSubscriber.prototype.notifyComplete = function () {
          this.throttlingDone();
      };
      return ThrottleSubscriber;
  }(innerSubscribe_1.SimpleOuterSubscriber));

  });

  unwrapExports(throttle_1$1);
  throttle_1$1.defaultThrottleConfig;
  throttle_1$1.throttle;

  var throttle_1 = throttle_1$1;

  var throttleTime_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });



  function throttleTime(duration, scheduler, config) {
      if (scheduler === void 0) { scheduler = async_1.async; }
      if (config === void 0) { config = throttle_1.defaultThrottleConfig; }
      return function (source) { return source.lift(new ThrottleTimeOperator(duration, scheduler, config.leading, config.trailing)); };
  }
  exports.throttleTime = throttleTime;
  var ThrottleTimeOperator = (function () {
      function ThrottleTimeOperator(duration, scheduler, leading, trailing) {
          this.duration = duration;
          this.scheduler = scheduler;
          this.leading = leading;
          this.trailing = trailing;
      }
      ThrottleTimeOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new ThrottleTimeSubscriber(subscriber, this.duration, this.scheduler, this.leading, this.trailing));
      };
      return ThrottleTimeOperator;
  }());
  var ThrottleTimeSubscriber = (function (_super) {
      __extends(ThrottleTimeSubscriber, _super);
      function ThrottleTimeSubscriber(destination, duration, scheduler, leading, trailing) {
          var _this = _super.call(this, destination) || this;
          _this.duration = duration;
          _this.scheduler = scheduler;
          _this.leading = leading;
          _this.trailing = trailing;
          _this._hasTrailingValue = false;
          _this._trailingValue = null;
          return _this;
      }
      ThrottleTimeSubscriber.prototype._next = function (value) {
          if (this.throttled) {
              if (this.trailing) {
                  this._trailingValue = value;
                  this._hasTrailingValue = true;
              }
          }
          else {
              this.add(this.throttled = this.scheduler.schedule(dispatchNext, this.duration, { subscriber: this }));
              if (this.leading) {
                  this.destination.next(value);
              }
              else if (this.trailing) {
                  this._trailingValue = value;
                  this._hasTrailingValue = true;
              }
          }
      };
      ThrottleTimeSubscriber.prototype._complete = function () {
          if (this._hasTrailingValue) {
              this.destination.next(this._trailingValue);
              this.destination.complete();
          }
          else {
              this.destination.complete();
          }
      };
      ThrottleTimeSubscriber.prototype.clearThrottle = function () {
          var throttled = this.throttled;
          if (throttled) {
              if (this.trailing && this._hasTrailingValue) {
                  this.destination.next(this._trailingValue);
                  this._trailingValue = null;
                  this._hasTrailingValue = false;
              }
              throttled.unsubscribe();
              this.remove(throttled);
              this.throttled = null;
          }
      };
      return ThrottleTimeSubscriber;
  }(Subscriber_1.Subscriber));
  function dispatchNext(arg) {
      var subscriber = arg.subscriber;
      subscriber.clearThrottle();
  }

  });

  unwrapExports(throttleTime_1$1);
  throttleTime_1$1.throttleTime;

  var defer_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });



  function defer(observableFactory) {
      return new Observable_1.Observable(function (subscriber) {
          var input;
          try {
              input = observableFactory();
          }
          catch (err) {
              subscriber.error(err);
              return undefined;
          }
          var source = input ? from_1.from(input) : empty_1.empty();
          return source.subscribe(subscriber);
      });
  }
  exports.defer = defer;

  });

  unwrapExports(defer_1$1);
  defer_1$1.defer;

  var defer_1 = defer_1$1;

  var timeInterval_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });




  function timeInterval(scheduler) {
      if (scheduler === void 0) { scheduler = async_1.async; }
      return function (source) { return defer_1.defer(function () {
          return source.pipe(scan_1.scan(function (_a, value) {
              var current = _a.current;
              return ({ value: value, current: scheduler.now(), last: current });
          }, { current: scheduler.now(), value: undefined, last: undefined }), map_1.map(function (_a) {
              var current = _a.current, last = _a.last, value = _a.value;
              return new TimeInterval(value, current - last);
          }));
      }); };
  }
  exports.timeInterval = timeInterval;
  var TimeInterval = (function () {
      function TimeInterval(value, interval) {
          this.value = value;
          this.interval = interval;
      }
      return TimeInterval;
  }());
  exports.TimeInterval = TimeInterval;

  });

  unwrapExports(timeInterval_1$1);
  timeInterval_1$1.timeInterval;
  timeInterval_1$1.TimeInterval;

  var TimeoutError = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });
  var TimeoutErrorImpl = (function () {
      function TimeoutErrorImpl() {
          Error.call(this);
          this.message = 'Timeout has occurred';
          this.name = 'TimeoutError';
          return this;
      }
      TimeoutErrorImpl.prototype = Object.create(Error.prototype);
      return TimeoutErrorImpl;
  })();
  exports.TimeoutError = TimeoutErrorImpl;

  });

  unwrapExports(TimeoutError);
  TimeoutError.TimeoutError;

  var timeoutWith_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });



  function timeoutWith(due, withObservable, scheduler) {
      if (scheduler === void 0) { scheduler = async_1.async; }
      return function (source) {
          var absoluteTimeout = isDate_1.isDate(due);
          var waitFor = absoluteTimeout ? (+due - scheduler.now()) : Math.abs(due);
          return source.lift(new TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler));
      };
  }
  exports.timeoutWith = timeoutWith;
  var TimeoutWithOperator = (function () {
      function TimeoutWithOperator(waitFor, absoluteTimeout, withObservable, scheduler) {
          this.waitFor = waitFor;
          this.absoluteTimeout = absoluteTimeout;
          this.withObservable = withObservable;
          this.scheduler = scheduler;
      }
      TimeoutWithOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new TimeoutWithSubscriber(subscriber, this.absoluteTimeout, this.waitFor, this.withObservable, this.scheduler));
      };
      return TimeoutWithOperator;
  }());
  var TimeoutWithSubscriber = (function (_super) {
      __extends(TimeoutWithSubscriber, _super);
      function TimeoutWithSubscriber(destination, absoluteTimeout, waitFor, withObservable, scheduler) {
          var _this = _super.call(this, destination) || this;
          _this.absoluteTimeout = absoluteTimeout;
          _this.waitFor = waitFor;
          _this.withObservable = withObservable;
          _this.scheduler = scheduler;
          _this.scheduleTimeout();
          return _this;
      }
      TimeoutWithSubscriber.dispatchTimeout = function (subscriber) {
          var withObservable = subscriber.withObservable;
          subscriber._unsubscribeAndRecycle();
          subscriber.add(innerSubscribe_1.innerSubscribe(withObservable, new innerSubscribe_1.SimpleInnerSubscriber(subscriber)));
      };
      TimeoutWithSubscriber.prototype.scheduleTimeout = function () {
          var action = this.action;
          if (action) {
              this.action = action.schedule(this, this.waitFor);
          }
          else {
              this.add(this.action = this.scheduler.schedule(TimeoutWithSubscriber.dispatchTimeout, this.waitFor, this));
          }
      };
      TimeoutWithSubscriber.prototype._next = function (value) {
          if (!this.absoluteTimeout) {
              this.scheduleTimeout();
          }
          _super.prototype._next.call(this, value);
      };
      TimeoutWithSubscriber.prototype._unsubscribe = function () {
          this.action = undefined;
          this.scheduler = null;
          this.withObservable = null;
      };
      return TimeoutWithSubscriber;
  }(innerSubscribe_1.SimpleOuterSubscriber));

  });

  unwrapExports(timeoutWith_1$1);
  timeoutWith_1$1.timeoutWith;

  var TimeoutError_1 = TimeoutError;

  var timeoutWith_1 = timeoutWith_1$1;

  var timeout_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });




  function timeout(due, scheduler) {
      if (scheduler === void 0) { scheduler = async_1.async; }
      return timeoutWith_1.timeoutWith(due, throwError_1.throwError(new TimeoutError_1.TimeoutError()), scheduler);
  }
  exports.timeout = timeout;

  });

  unwrapExports(timeout_1$1);
  timeout_1$1.timeout;

  var timestamp_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });


  function timestamp(scheduler) {
      if (scheduler === void 0) { scheduler = async_1.async; }
      return map_1.map(function (value) { return new Timestamp(value, scheduler.now()); });
  }
  exports.timestamp = timestamp;
  var Timestamp = (function () {
      function Timestamp(value, timestamp) {
          this.value = value;
          this.timestamp = timestamp;
      }
      return Timestamp;
  }());
  exports.Timestamp = Timestamp;

  });

  unwrapExports(timestamp_1$1);
  timestamp_1$1.timestamp;
  timestamp_1$1.Timestamp;

  var toArray_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });

  function toArrayReducer(arr, item, index) {
      if (index === 0) {
          return [item];
      }
      arr.push(item);
      return arr;
  }
  function toArray() {
      return reduce_1.reduce(toArrayReducer, []);
  }
  exports.toArray = toArray;

  });

  unwrapExports(toArray_1$1);
  toArray_1$1.toArray;

  var window_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });


  function window(windowBoundaries) {
      return function windowOperatorFunction(source) {
          return source.lift(new WindowOperator(windowBoundaries));
      };
  }
  exports.window = window;
  var WindowOperator = (function () {
      function WindowOperator(windowBoundaries) {
          this.windowBoundaries = windowBoundaries;
      }
      WindowOperator.prototype.call = function (subscriber, source) {
          var windowSubscriber = new WindowSubscriber(subscriber);
          var sourceSubscription = source.subscribe(windowSubscriber);
          if (!sourceSubscription.closed) {
              windowSubscriber.add(innerSubscribe_1.innerSubscribe(this.windowBoundaries, new innerSubscribe_1.SimpleInnerSubscriber(windowSubscriber)));
          }
          return sourceSubscription;
      };
      return WindowOperator;
  }());
  var WindowSubscriber = (function (_super) {
      __extends(WindowSubscriber, _super);
      function WindowSubscriber(destination) {
          var _this = _super.call(this, destination) || this;
          _this.window = new Subject_1.Subject();
          destination.next(_this.window);
          return _this;
      }
      WindowSubscriber.prototype.notifyNext = function () {
          this.openWindow();
      };
      WindowSubscriber.prototype.notifyError = function (error) {
          this._error(error);
      };
      WindowSubscriber.prototype.notifyComplete = function () {
          this._complete();
      };
      WindowSubscriber.prototype._next = function (value) {
          this.window.next(value);
      };
      WindowSubscriber.prototype._error = function (err) {
          this.window.error(err);
          this.destination.error(err);
      };
      WindowSubscriber.prototype._complete = function () {
          this.window.complete();
          this.destination.complete();
      };
      WindowSubscriber.prototype._unsubscribe = function () {
          this.window = null;
      };
      WindowSubscriber.prototype.openWindow = function () {
          var prevWindow = this.window;
          if (prevWindow) {
              prevWindow.complete();
          }
          var destination = this.destination;
          var newWindow = this.window = new Subject_1.Subject();
          destination.next(newWindow);
      };
      return WindowSubscriber;
  }(innerSubscribe_1.SimpleOuterSubscriber));

  });

  unwrapExports(window_1$1);
  window_1$1.window;

  var windowCount_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });


  function windowCount(windowSize, startWindowEvery) {
      if (startWindowEvery === void 0) { startWindowEvery = 0; }
      return function windowCountOperatorFunction(source) {
          return source.lift(new WindowCountOperator(windowSize, startWindowEvery));
      };
  }
  exports.windowCount = windowCount;
  var WindowCountOperator = (function () {
      function WindowCountOperator(windowSize, startWindowEvery) {
          this.windowSize = windowSize;
          this.startWindowEvery = startWindowEvery;
      }
      WindowCountOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new WindowCountSubscriber(subscriber, this.windowSize, this.startWindowEvery));
      };
      return WindowCountOperator;
  }());
  var WindowCountSubscriber = (function (_super) {
      __extends(WindowCountSubscriber, _super);
      function WindowCountSubscriber(destination, windowSize, startWindowEvery) {
          var _this = _super.call(this, destination) || this;
          _this.destination = destination;
          _this.windowSize = windowSize;
          _this.startWindowEvery = startWindowEvery;
          _this.windows = [new Subject_1.Subject()];
          _this.count = 0;
          destination.next(_this.windows[0]);
          return _this;
      }
      WindowCountSubscriber.prototype._next = function (value) {
          var startWindowEvery = (this.startWindowEvery > 0) ? this.startWindowEvery : this.windowSize;
          var destination = this.destination;
          var windowSize = this.windowSize;
          var windows = this.windows;
          var len = windows.length;
          for (var i = 0; i < len && !this.closed; i++) {
              windows[i].next(value);
          }
          var c = this.count - windowSize + 1;
          if (c >= 0 && c % startWindowEvery === 0 && !this.closed) {
              windows.shift().complete();
          }
          if (++this.count % startWindowEvery === 0 && !this.closed) {
              var window_1 = new Subject_1.Subject();
              windows.push(window_1);
              destination.next(window_1);
          }
      };
      WindowCountSubscriber.prototype._error = function (err) {
          var windows = this.windows;
          if (windows) {
              while (windows.length > 0 && !this.closed) {
                  windows.shift().error(err);
              }
          }
          this.destination.error(err);
      };
      WindowCountSubscriber.prototype._complete = function () {
          var windows = this.windows;
          if (windows) {
              while (windows.length > 0 && !this.closed) {
                  windows.shift().complete();
              }
          }
          this.destination.complete();
      };
      WindowCountSubscriber.prototype._unsubscribe = function () {
          this.count = 0;
          this.windows = null;
      };
      return WindowCountSubscriber;
  }(Subscriber_1.Subscriber));

  });

  unwrapExports(windowCount_1$1);
  windowCount_1$1.windowCount;

  var windowTime_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });





  function windowTime(windowTimeSpan) {
      var scheduler = async_1.async;
      var windowCreationInterval = null;
      var maxWindowSize = Number.POSITIVE_INFINITY;
      if (isScheduler_1.isScheduler(arguments[3])) {
          scheduler = arguments[3];
      }
      if (isScheduler_1.isScheduler(arguments[2])) {
          scheduler = arguments[2];
      }
      else if (isNumeric_1.isNumeric(arguments[2])) {
          maxWindowSize = Number(arguments[2]);
      }
      if (isScheduler_1.isScheduler(arguments[1])) {
          scheduler = arguments[1];
      }
      else if (isNumeric_1.isNumeric(arguments[1])) {
          windowCreationInterval = Number(arguments[1]);
      }
      return function windowTimeOperatorFunction(source) {
          return source.lift(new WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler));
      };
  }
  exports.windowTime = windowTime;
  var WindowTimeOperator = (function () {
      function WindowTimeOperator(windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {
          this.windowTimeSpan = windowTimeSpan;
          this.windowCreationInterval = windowCreationInterval;
          this.maxWindowSize = maxWindowSize;
          this.scheduler = scheduler;
      }
      WindowTimeOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new WindowTimeSubscriber(subscriber, this.windowTimeSpan, this.windowCreationInterval, this.maxWindowSize, this.scheduler));
      };
      return WindowTimeOperator;
  }());
  var CountedSubject = (function (_super) {
      __extends(CountedSubject, _super);
      function CountedSubject() {
          var _this = _super !== null && _super.apply(this, arguments) || this;
          _this._numberOfNextedValues = 0;
          return _this;
      }
      CountedSubject.prototype.next = function (value) {
          this._numberOfNextedValues++;
          _super.prototype.next.call(this, value);
      };
      Object.defineProperty(CountedSubject.prototype, "numberOfNextedValues", {
          get: function () {
              return this._numberOfNextedValues;
          },
          enumerable: true,
          configurable: true
      });
      return CountedSubject;
  }(Subject_1.Subject));
  var WindowTimeSubscriber = (function (_super) {
      __extends(WindowTimeSubscriber, _super);
      function WindowTimeSubscriber(destination, windowTimeSpan, windowCreationInterval, maxWindowSize, scheduler) {
          var _this = _super.call(this, destination) || this;
          _this.destination = destination;
          _this.windowTimeSpan = windowTimeSpan;
          _this.windowCreationInterval = windowCreationInterval;
          _this.maxWindowSize = maxWindowSize;
          _this.scheduler = scheduler;
          _this.windows = [];
          var window = _this.openWindow();
          if (windowCreationInterval !== null && windowCreationInterval >= 0) {
              var closeState = { subscriber: _this, window: window, context: null };
              var creationState = { windowTimeSpan: windowTimeSpan, windowCreationInterval: windowCreationInterval, subscriber: _this, scheduler: scheduler };
              _this.add(scheduler.schedule(dispatchWindowClose, windowTimeSpan, closeState));
              _this.add(scheduler.schedule(dispatchWindowCreation, windowCreationInterval, creationState));
          }
          else {
              var timeSpanOnlyState = { subscriber: _this, window: window, windowTimeSpan: windowTimeSpan };
              _this.add(scheduler.schedule(dispatchWindowTimeSpanOnly, windowTimeSpan, timeSpanOnlyState));
          }
          return _this;
      }
      WindowTimeSubscriber.prototype._next = function (value) {
          var windows = this.windows;
          var len = windows.length;
          for (var i = 0; i < len; i++) {
              var window_1 = windows[i];
              if (!window_1.closed) {
                  window_1.next(value);
                  if (window_1.numberOfNextedValues >= this.maxWindowSize) {
                      this.closeWindow(window_1);
                  }
              }
          }
      };
      WindowTimeSubscriber.prototype._error = function (err) {
          var windows = this.windows;
          while (windows.length > 0) {
              windows.shift().error(err);
          }
          this.destination.error(err);
      };
      WindowTimeSubscriber.prototype._complete = function () {
          var windows = this.windows;
          while (windows.length > 0) {
              var window_2 = windows.shift();
              if (!window_2.closed) {
                  window_2.complete();
              }
          }
          this.destination.complete();
      };
      WindowTimeSubscriber.prototype.openWindow = function () {
          var window = new CountedSubject();
          this.windows.push(window);
          var destination = this.destination;
          destination.next(window);
          return window;
      };
      WindowTimeSubscriber.prototype.closeWindow = function (window) {
          window.complete();
          var windows = this.windows;
          windows.splice(windows.indexOf(window), 1);
      };
      return WindowTimeSubscriber;
  }(Subscriber_1.Subscriber));
  function dispatchWindowTimeSpanOnly(state) {
      var subscriber = state.subscriber, windowTimeSpan = state.windowTimeSpan, window = state.window;
      if (window) {
          subscriber.closeWindow(window);
      }
      state.window = subscriber.openWindow();
      this.schedule(state, windowTimeSpan);
  }
  function dispatchWindowCreation(state) {
      var windowTimeSpan = state.windowTimeSpan, subscriber = state.subscriber, scheduler = state.scheduler, windowCreationInterval = state.windowCreationInterval;
      var window = subscriber.openWindow();
      var action = this;
      var context = { action: action, subscription: null };
      var timeSpanState = { subscriber: subscriber, window: window, context: context };
      context.subscription = scheduler.schedule(dispatchWindowClose, windowTimeSpan, timeSpanState);
      action.add(context.subscription);
      action.schedule(state, windowCreationInterval);
  }
  function dispatchWindowClose(state) {
      var subscriber = state.subscriber, window = state.window, context = state.context;
      if (context && context.action && context.subscription) {
          context.action.remove(context.subscription);
      }
      subscriber.closeWindow(window);
  }

  });

  unwrapExports(windowTime_1$1);
  windowTime_1$1.windowTime;

  var windowToggle_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });




  function windowToggle(openings, closingSelector) {
      return function (source) { return source.lift(new WindowToggleOperator(openings, closingSelector)); };
  }
  exports.windowToggle = windowToggle;
  var WindowToggleOperator = (function () {
      function WindowToggleOperator(openings, closingSelector) {
          this.openings = openings;
          this.closingSelector = closingSelector;
      }
      WindowToggleOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new WindowToggleSubscriber(subscriber, this.openings, this.closingSelector));
      };
      return WindowToggleOperator;
  }());
  var WindowToggleSubscriber = (function (_super) {
      __extends(WindowToggleSubscriber, _super);
      function WindowToggleSubscriber(destination, openings, closingSelector) {
          var _this = _super.call(this, destination) || this;
          _this.openings = openings;
          _this.closingSelector = closingSelector;
          _this.contexts = [];
          _this.add(_this.openSubscription = subscribeToResult_1.subscribeToResult(_this, openings, openings));
          return _this;
      }
      WindowToggleSubscriber.prototype._next = function (value) {
          var contexts = this.contexts;
          if (contexts) {
              var len = contexts.length;
              for (var i = 0; i < len; i++) {
                  contexts[i].window.next(value);
              }
          }
      };
      WindowToggleSubscriber.prototype._error = function (err) {
          var contexts = this.contexts;
          this.contexts = null;
          if (contexts) {
              var len = contexts.length;
              var index = -1;
              while (++index < len) {
                  var context_1 = contexts[index];
                  context_1.window.error(err);
                  context_1.subscription.unsubscribe();
              }
          }
          _super.prototype._error.call(this, err);
      };
      WindowToggleSubscriber.prototype._complete = function () {
          var contexts = this.contexts;
          this.contexts = null;
          if (contexts) {
              var len = contexts.length;
              var index = -1;
              while (++index < len) {
                  var context_2 = contexts[index];
                  context_2.window.complete();
                  context_2.subscription.unsubscribe();
              }
          }
          _super.prototype._complete.call(this);
      };
      WindowToggleSubscriber.prototype._unsubscribe = function () {
          var contexts = this.contexts;
          this.contexts = null;
          if (contexts) {
              var len = contexts.length;
              var index = -1;
              while (++index < len) {
                  var context_3 = contexts[index];
                  context_3.window.unsubscribe();
                  context_3.subscription.unsubscribe();
              }
          }
      };
      WindowToggleSubscriber.prototype.notifyNext = function (outerValue, innerValue, outerIndex, innerIndex, innerSub) {
          if (outerValue === this.openings) {
              var closingNotifier = void 0;
              try {
                  var closingSelector = this.closingSelector;
                  closingNotifier = closingSelector(innerValue);
              }
              catch (e) {
                  return this.error(e);
              }
              var window_1 = new Subject_1.Subject();
              var subscription = new Subscription_1.Subscription();
              var context_4 = { window: window_1, subscription: subscription };
              this.contexts.push(context_4);
              var innerSubscription = subscribeToResult_1.subscribeToResult(this, closingNotifier, context_4);
              if (innerSubscription.closed) {
                  this.closeWindow(this.contexts.length - 1);
              }
              else {
                  innerSubscription.context = context_4;
                  subscription.add(innerSubscription);
              }
              this.destination.next(window_1);
          }
          else {
              this.closeWindow(this.contexts.indexOf(outerValue));
          }
      };
      WindowToggleSubscriber.prototype.notifyError = function (err) {
          this.error(err);
      };
      WindowToggleSubscriber.prototype.notifyComplete = function (inner) {
          if (inner !== this.openSubscription) {
              this.closeWindow(this.contexts.indexOf(inner.context));
          }
      };
      WindowToggleSubscriber.prototype.closeWindow = function (index) {
          if (index === -1) {
              return;
          }
          var contexts = this.contexts;
          var context = contexts[index];
          var window = context.window, subscription = context.subscription;
          contexts.splice(index, 1);
          window.complete();
          subscription.unsubscribe();
      };
      return WindowToggleSubscriber;
  }(OuterSubscriber_1.OuterSubscriber));

  });

  unwrapExports(windowToggle_1$1);
  windowToggle_1$1.windowToggle;

  var windowWhen_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });



  function windowWhen(closingSelector) {
      return function windowWhenOperatorFunction(source) {
          return source.lift(new WindowOperator(closingSelector));
      };
  }
  exports.windowWhen = windowWhen;
  var WindowOperator = (function () {
      function WindowOperator(closingSelector) {
          this.closingSelector = closingSelector;
      }
      WindowOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new WindowSubscriber(subscriber, this.closingSelector));
      };
      return WindowOperator;
  }());
  var WindowSubscriber = (function (_super) {
      __extends(WindowSubscriber, _super);
      function WindowSubscriber(destination, closingSelector) {
          var _this = _super.call(this, destination) || this;
          _this.destination = destination;
          _this.closingSelector = closingSelector;
          _this.openWindow();
          return _this;
      }
      WindowSubscriber.prototype.notifyNext = function (_outerValue, _innerValue, _outerIndex, _innerIndex, innerSub) {
          this.openWindow(innerSub);
      };
      WindowSubscriber.prototype.notifyError = function (error) {
          this._error(error);
      };
      WindowSubscriber.prototype.notifyComplete = function (innerSub) {
          this.openWindow(innerSub);
      };
      WindowSubscriber.prototype._next = function (value) {
          this.window.next(value);
      };
      WindowSubscriber.prototype._error = function (err) {
          this.window.error(err);
          this.destination.error(err);
          this.unsubscribeClosingNotification();
      };
      WindowSubscriber.prototype._complete = function () {
          this.window.complete();
          this.destination.complete();
          this.unsubscribeClosingNotification();
      };
      WindowSubscriber.prototype.unsubscribeClosingNotification = function () {
          if (this.closingNotification) {
              this.closingNotification.unsubscribe();
          }
      };
      WindowSubscriber.prototype.openWindow = function (innerSub) {
          if (innerSub === void 0) { innerSub = null; }
          if (innerSub) {
              this.remove(innerSub);
              innerSub.unsubscribe();
          }
          var prevWindow = this.window;
          if (prevWindow) {
              prevWindow.complete();
          }
          var window = this.window = new Subject_1.Subject();
          this.destination.next(window);
          var closingNotifier;
          try {
              var closingSelector = this.closingSelector;
              closingNotifier = closingSelector();
          }
          catch (e) {
              this.destination.error(e);
              this.window.error(e);
              return;
          }
          this.add(this.closingNotification = subscribeToResult_1.subscribeToResult(this, closingNotifier));
      };
      return WindowSubscriber;
  }(OuterSubscriber_1.OuterSubscriber));

  });

  unwrapExports(windowWhen_1$1);
  windowWhen_1$1.windowWhen;

  var withLatestFrom_1$1 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });


  function withLatestFrom() {
      var args = [];
      for (var _i = 0; _i < arguments.length; _i++) {
          args[_i] = arguments[_i];
      }
      return function (source) {
          var project;
          if (typeof args[args.length - 1] === 'function') {
              project = args.pop();
          }
          var observables = args;
          return source.lift(new WithLatestFromOperator(observables, project));
      };
  }
  exports.withLatestFrom = withLatestFrom;
  var WithLatestFromOperator = (function () {
      function WithLatestFromOperator(observables, project) {
          this.observables = observables;
          this.project = project;
      }
      WithLatestFromOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new WithLatestFromSubscriber(subscriber, this.observables, this.project));
      };
      return WithLatestFromOperator;
  }());
  var WithLatestFromSubscriber = (function (_super) {
      __extends(WithLatestFromSubscriber, _super);
      function WithLatestFromSubscriber(destination, observables, project) {
          var _this = _super.call(this, destination) || this;
          _this.observables = observables;
          _this.project = project;
          _this.toRespond = [];
          var len = observables.length;
          _this.values = new Array(len);
          for (var i = 0; i < len; i++) {
              _this.toRespond.push(i);
          }
          for (var i = 0; i < len; i++) {
              var observable = observables[i];
              _this.add(subscribeToResult_1.subscribeToResult(_this, observable, undefined, i));
          }
          return _this;
      }
      WithLatestFromSubscriber.prototype.notifyNext = function (_outerValue, innerValue, outerIndex) {
          this.values[outerIndex] = innerValue;
          var toRespond = this.toRespond;
          if (toRespond.length > 0) {
              var found = toRespond.indexOf(outerIndex);
              if (found !== -1) {
                  toRespond.splice(found, 1);
              }
          }
      };
      WithLatestFromSubscriber.prototype.notifyComplete = function () {
      };
      WithLatestFromSubscriber.prototype._next = function (value) {
          if (this.toRespond.length === 0) {
              var args = [value].concat(this.values);
              if (this.project) {
                  this._tryProject(args);
              }
              else {
                  this.destination.next(args);
              }
          }
      };
      WithLatestFromSubscriber.prototype._tryProject = function (args) {
          var result;
          try {
              result = this.project.apply(this, args);
          }
          catch (err) {
              this.destination.error(err);
              return;
          }
          this.destination.next(result);
      };
      return WithLatestFromSubscriber;
  }(OuterSubscriber_1.OuterSubscriber));

  });

  unwrapExports(withLatestFrom_1$1);
  withLatestFrom_1$1.withLatestFrom;

  var zip_1$2 = createCommonjsModule(function (module, exports) {
  var __extends = (commonjsGlobal && commonjsGlobal.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  Object.defineProperty(exports, "__esModule", { value: true });





  function zip() {
      var observables = [];
      for (var _i = 0; _i < arguments.length; _i++) {
          observables[_i] = arguments[_i];
      }
      var resultSelector = observables[observables.length - 1];
      if (typeof resultSelector === 'function') {
          observables.pop();
      }
      return fromArray_1.fromArray(observables, undefined).lift(new ZipOperator(resultSelector));
  }
  exports.zip = zip;
  var ZipOperator = (function () {
      function ZipOperator(resultSelector) {
          this.resultSelector = resultSelector;
      }
      ZipOperator.prototype.call = function (subscriber, source) {
          return source.subscribe(new ZipSubscriber(subscriber, this.resultSelector));
      };
      return ZipOperator;
  }());
  exports.ZipOperator = ZipOperator;
  var ZipSubscriber = (function (_super) {
      __extends(ZipSubscriber, _super);
      function ZipSubscriber(destination, resultSelector, values) {
          var _this = _super.call(this, destination) || this;
          _this.resultSelector = resultSelector;
          _this.iterators = [];
          _this.active = 0;
          _this.resultSelector = (typeof resultSelector === 'function') ? resultSelector : undefined;
          return _this;
      }
      ZipSubscriber.prototype._next = function (value) {
          var iterators = this.iterators;
          if (isArray_1.isArray(value)) {
              iterators.push(new StaticArrayIterator(value));
          }
          else if (typeof value[iterator_1.iterator] === 'function') {
              iterators.push(new StaticIterator(value[iterator_1.iterator]()));
          }
          else {
              iterators.push(new ZipBufferIterator(this.destination, this, value));
          }
      };
      ZipSubscriber.prototype._complete = function () {
          var iterators = this.iterators;
          var len = iterators.length;
          this.unsubscribe();
          if (len === 0) {
              this.destination.complete();
              return;
          }
          this.active = len;
          for (var i = 0; i < len; i++) {
              var iterator = iterators[i];
              if (iterator.stillUnsubscribed) {
                  var destination = this.destination;
                  destination.add(iterator.subscribe());
              }
              else {
                  this.active--;
              }
          }
      };
      ZipSubscriber.prototype.notifyInactive = function () {
          this.active--;
          if (this.active === 0) {
              this.destination.complete();
          }
      };
      ZipSubscriber.prototype.checkIterators = function () {
          var iterators = this.iterators;
          var len = iterators.length;
          var destination = this.destination;
          for (var i = 0; i < len; i++) {
              var iterator = iterators[i];
              if (typeof iterator.hasValue === 'function' && !iterator.hasValue()) {
                  return;
              }
          }
          var shouldComplete = false;
          var args = [];
          for (var i = 0; i < len; i++) {
              var iterator = iterators[i];
              var result = iterator.next();
              if (iterator.hasCompleted()) {
                  shouldComplete = true;
              }
              if (result.done) {
                  destination.complete();
                  return;
              }
              args.push(result.value);
          }
          if (this.resultSelector) {
              this._tryresultSelector(args);
          }
          else {
              destination.next(args);
          }
          if (shouldComplete) {
              destination.complete();
          }
      };
      ZipSubscriber.prototype._tryresultSelector = function (args) {
          var result;
          try {
              result = this.resultSelector.apply(this, args);
          }
          catch (err) {
              this.destination.error(err);
              return;
          }
          this.destination.next(result);
      };
      return ZipSubscriber;
  }(Subscriber_1.Subscriber));
  exports.ZipSubscriber = ZipSubscriber;
  var StaticIterator = (function () {
      function StaticIterator(iterator) {
          this.iterator = iterator;
          this.nextResult = iterator.next();
      }
      StaticIterator.prototype.hasValue = function () {
          return true;
      };
      StaticIterator.prototype.next = function () {
          var result = this.nextResult;
          this.nextResult = this.iterator.next();
          return result;
      };
      StaticIterator.prototype.hasCompleted = function () {
          var nextResult = this.nextResult;
          return Boolean(nextResult && nextResult.done);
      };
      return StaticIterator;
  }());
  var StaticArrayIterator = (function () {
      function StaticArrayIterator(array) {
          this.array = array;
          this.index = 0;
          this.length = 0;
          this.length = array.length;
      }
      StaticArrayIterator.prototype[iterator_1.iterator] = function () {
          return this;
      };
      StaticArrayIterator.prototype.next = function (value) {
          var i = this.index++;
          var array = this.array;
          return i < this.length ? { value: array[i], done: false } : { value: null, done: true };
      };
      StaticArrayIterator.prototype.hasValue = function () {
          return this.array.length > this.index;
      };
      StaticArrayIterator.prototype.hasCompleted = function () {
          return this.array.length === this.index;
      };
      return StaticArrayIterator;
  }());
  var ZipBufferIterator = (function (_super) {
      __extends(ZipBufferIterator, _super);
      function ZipBufferIterator(destination, parent, observable) {
          var _this = _super.call(this, destination) || this;
          _this.parent = parent;
          _this.observable = observable;
          _this.stillUnsubscribed = true;
          _this.buffer = [];
          _this.isComplete = false;
          return _this;
      }
      ZipBufferIterator.prototype[iterator_1.iterator] = function () {
          return this;
      };
      ZipBufferIterator.prototype.next = function () {
          var buffer = this.buffer;
          if (buffer.length === 0 && this.isComplete) {
              return { value: null, done: true };
          }
          else {
              return { value: buffer.shift(), done: false };
          }
      };
      ZipBufferIterator.prototype.hasValue = function () {
          return this.buffer.length > 0;
      };
      ZipBufferIterator.prototype.hasCompleted = function () {
          return this.buffer.length === 0 && this.isComplete;
      };
      ZipBufferIterator.prototype.notifyComplete = function () {
          if (this.buffer.length > 0) {
              this.isComplete = true;
              this.parent.notifyInactive();
          }
          else {
              this.destination.complete();
          }
      };
      ZipBufferIterator.prototype.notifyNext = function (innerValue) {
          this.buffer.push(innerValue);
          this.parent.checkIterators();
      };
      ZipBufferIterator.prototype.subscribe = function () {
          return innerSubscribe_1.innerSubscribe(this.observable, new innerSubscribe_1.SimpleInnerSubscriber(this));
      };
      return ZipBufferIterator;
  }(innerSubscribe_1.SimpleOuterSubscriber));

  });

  unwrapExports(zip_1$2);
  zip_1$2.zip;
  zip_1$2.ZipOperator;
  zip_1$2.ZipSubscriber;

  var zip_1$1 = zip_1$2;

  var zip_2 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });

  function zip() {
      var observables = [];
      for (var _i = 0; _i < arguments.length; _i++) {
          observables[_i] = arguments[_i];
      }
      return function zipOperatorFunction(source) {
          return source.lift.call(zip_1$1.zip.apply(void 0, [source].concat(observables)));
      };
  }
  exports.zip = zip;

  });

  unwrapExports(zip_2);
  zip_2.zip;

  var zipAll_1$1 = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });

  function zipAll(project) {
      return function (source) { return source.lift(new zip_1$1.ZipOperator(project)); };
  }
  exports.zipAll = zipAll;

  });

  unwrapExports(zipAll_1$1);
  zipAll_1$1.zipAll;

  var auditTime_1 = auditTime_1$1;

  var buffer_1 = buffer_1$1;

  var bufferCount_1 = bufferCount_1$1;

  var bufferTime_1 = bufferTime_1$1;

  var bufferToggle_1 = bufferToggle_1$1;

  var bufferWhen_1 = bufferWhen_1$1;

  var catchError_1 = catchError_1$1;

  var combineAll_1 = combineAll_1$1;

  var combineLatest_1 = combineLatest_2;

  var concat_1 = concat_2;

  var concatMapTo_1 = concatMapTo_1$1;

  var count_1 = count_1$1;

  var debounce_1 = debounce_1$1;

  var debounceTime_1 = debounceTime_1$1;

  var delay_1 = delay_1$1;

  var delayWhen_1 = delayWhen_1$1;

  var dematerialize_1 = dematerialize_1$1;

  var distinct_1 = distinct_1$1;

  var distinctUntilKeyChanged_1 = distinctUntilKeyChanged_1$1;

  var elementAt_1 = elementAt_1$1;

  var every_1 = every_1$1;

  var exhaust_1 = exhaust_1$1;

  var exhaustMap_1 = exhaustMap_1$1;

  var expand_1 = expand_1$1;

  var finalize_1 = finalize_1$1;

  var findIndex_1 = findIndex_1$1;

  var first_1 = first_1$1;

  var groupBy_1 = groupBy_1$1;

  var ignoreElements_1 = ignoreElements_1$1;

  var isEmpty_1 = isEmpty_1$1;

  var last_1 = last_1$1;

  var mapTo_1 = mapTo_1$1;

  var materialize_1 = materialize_1$1;

  var max_1 = max_1$1;

  var merge_1 = merge_2;

  var mergeMapTo_1 = mergeMapTo_1$1;

  var mergeScan_1 = mergeScan_1$1;

  var min_1 = min_1$1;

  var onErrorResumeNext_1 = onErrorResumeNext_1$1;

  var pairwise_1 = pairwise_1$1;

  var partition_1 = partition_1$1;

  var pluck_1 = pluck_1$1;

  var publish_1 = publish_1$1;

  var publishBehavior_1 = publishBehavior_1$1;

  var publishLast_1 = publishLast_1$1;

  var publishReplay_1 = publishReplay_1$1;

  var race_1 = race_2;

  var repeat_1 = repeat_1$1;

  var repeatWhen_1 = repeatWhen_1$1;

  var retry_1 = retry_1$1;

  var retryWhen_1 = retryWhen_1$1;

  var sample_1 = sample_1$1;

  var sampleTime_1 = sampleTime_1$1;

  var sequenceEqual_1 = sequenceEqual_1$1;

  var share_1 = share_1$1;

  var shareReplay_1 = shareReplay_1$1;

  var single_1 = single_1$1;

  var skip_1 = skip_1$1;

  var skipLast_1 = skipLast_1$1;

  var skipUntil_1 = skipUntil_1$1;

  var skipWhile_1 = skipWhile_1$1;

  var startWith_1 = startWith_1$1;

  var subscribeOn_1 = subscribeOn_1$1;

  var switchAll_1 = switchAll_1$1;

  var switchMapTo_1 = switchMapTo_1$1;

  var takeUntil_1 = takeUntil_1$1;

  var takeWhile_1 = takeWhile_1$1;

  var tap_1 = tap_1$1;

  var throttleTime_1 = throttleTime_1$1;

  var timeInterval_1 = timeInterval_1$1;

  var timeout_1 = timeout_1$1;

  var timestamp_1 = timestamp_1$1;

  var toArray_1 = toArray_1$1;

  var window_1 = window_1$1;

  var windowCount_1 = windowCount_1$1;

  var windowTime_1 = windowTime_1$1;

  var windowToggle_1 = windowToggle_1$1;

  var windowWhen_1 = windowWhen_1$1;

  var withLatestFrom_1 = withLatestFrom_1$1;

  var zip_1 = zip_2;

  var zipAll_1 = zipAll_1$1;

  var operators = createCommonjsModule(function (module, exports) {
  Object.defineProperty(exports, "__esModule", { value: true });

  exports.audit = audit_1.audit;

  exports.auditTime = auditTime_1.auditTime;

  exports.buffer = buffer_1.buffer;

  exports.bufferCount = bufferCount_1.bufferCount;

  exports.bufferTime = bufferTime_1.bufferTime;

  exports.bufferToggle = bufferToggle_1.bufferToggle;

  exports.bufferWhen = bufferWhen_1.bufferWhen;

  exports.catchError = catchError_1.catchError;

  exports.combineAll = combineAll_1.combineAll;

  exports.combineLatest = combineLatest_1.combineLatest;

  exports.concat = concat_1.concat;

  exports.concatAll = concatAll_1.concatAll;

  exports.concatMap = concatMap_1.concatMap;

  exports.concatMapTo = concatMapTo_1.concatMapTo;

  exports.count = count_1.count;

  exports.debounce = debounce_1.debounce;

  exports.debounceTime = debounceTime_1.debounceTime;

  exports.defaultIfEmpty = defaultIfEmpty_1.defaultIfEmpty;

  exports.delay = delay_1.delay;

  exports.delayWhen = delayWhen_1.delayWhen;

  exports.dematerialize = dematerialize_1.dematerialize;

  exports.distinct = distinct_1.distinct;

  exports.distinctUntilChanged = distinctUntilChanged_1.distinctUntilChanged;

  exports.distinctUntilKeyChanged = distinctUntilKeyChanged_1.distinctUntilKeyChanged;

  exports.elementAt = elementAt_1.elementAt;

  exports.every = every_1.every;

  exports.exhaust = exhaust_1.exhaust;

  exports.exhaustMap = exhaustMap_1.exhaustMap;

  exports.expand = expand_1.expand;

  exports.filter = filter_1.filter;

  exports.finalize = finalize_1.finalize;

  exports.find = find_1.find;

  exports.findIndex = findIndex_1.findIndex;

  exports.first = first_1.first;

  exports.groupBy = groupBy_1.groupBy;

  exports.ignoreElements = ignoreElements_1.ignoreElements;

  exports.isEmpty = isEmpty_1.isEmpty;

  exports.last = last_1.last;

  exports.map = map_1.map;

  exports.mapTo = mapTo_1.mapTo;

  exports.materialize = materialize_1.materialize;

  exports.max = max_1.max;

  exports.merge = merge_1.merge;

  exports.mergeAll = mergeAll_1.mergeAll;

  exports.mergeMap = mergeMap_1.mergeMap;
  var mergeMap_2 = mergeMap_1;
  exports.flatMap = mergeMap_2.mergeMap;

  exports.mergeMapTo = mergeMapTo_1.mergeMapTo;

  exports.mergeScan = mergeScan_1.mergeScan;

  exports.min = min_1.min;

  exports.multicast = multicast_1.multicast;

  exports.observeOn = observeOn_1.observeOn;

  exports.onErrorResumeNext = onErrorResumeNext_1.onErrorResumeNext;

  exports.pairwise = pairwise_1.pairwise;

  exports.partition = partition_1.partition;

  exports.pluck = pluck_1.pluck;

  exports.publish = publish_1.publish;

  exports.publishBehavior = publishBehavior_1.publishBehavior;

  exports.publishLast = publishLast_1.publishLast;

  exports.publishReplay = publishReplay_1.publishReplay;

  exports.race = race_1.race;

  exports.reduce = reduce_1.reduce;

  exports.repeat = repeat_1.repeat;

  exports.repeatWhen = repeatWhen_1.repeatWhen;

  exports.retry = retry_1.retry;

  exports.retryWhen = retryWhen_1.retryWhen;

  exports.refCount = refCount_1.refCount;

  exports.sample = sample_1.sample;

  exports.sampleTime = sampleTime_1.sampleTime;

  exports.scan = scan_1.scan;

  exports.sequenceEqual = sequenceEqual_1.sequenceEqual;

  exports.share = share_1.share;

  exports.shareReplay = shareReplay_1.shareReplay;

  exports.single = single_1.single;

  exports.skip = skip_1.skip;

  exports.skipLast = skipLast_1.skipLast;

  exports.skipUntil = skipUntil_1.skipUntil;

  exports.skipWhile = skipWhile_1.skipWhile;

  exports.startWith = startWith_1.startWith;

  exports.subscribeOn = subscribeOn_1.subscribeOn;

  exports.switchAll = switchAll_1.switchAll;

  exports.switchMap = switchMap_1.switchMap;

  exports.switchMapTo = switchMapTo_1.switchMapTo;

  exports.take = take_1.take;

  exports.takeLast = takeLast_1.takeLast;

  exports.takeUntil = takeUntil_1.takeUntil;

  exports.takeWhile = takeWhile_1.takeWhile;

  exports.tap = tap_1.tap;

  exports.throttle = throttle_1.throttle;

  exports.throttleTime = throttleTime_1.throttleTime;

  exports.timeInterval = timeInterval_1.timeInterval;

  exports.timeout = timeout_1.timeout;

  exports.timeoutWith = timeoutWith_1.timeoutWith;

  exports.timestamp = timestamp_1.timestamp;

  exports.toArray = toArray_1.toArray;

  exports.window = window_1.window;

  exports.windowCount = windowCount_1.windowCount;

  exports.windowTime = windowTime_1.windowTime;

  exports.windowToggle = windowToggle_1.windowToggle;

  exports.windowWhen = windowWhen_1.windowWhen;

  exports.withLatestFrom = withLatestFrom_1.withLatestFrom;

  exports.zip = zip_1.zip;

  exports.zipAll = zipAll_1.zipAll;

  });

  unwrapExports(operators);
  operators.audit;
  operators.auditTime;
  operators.buffer;
  operators.bufferCount;
  operators.bufferTime;
  operators.bufferToggle;
  operators.bufferWhen;
  var operators_8 = operators.catchError;
  operators.combineAll;
  operators.combineLatest;
  operators.concat;
  operators.concatAll;
  operators.concatMap;
  operators.concatMapTo;
  operators.count;
  operators.debounce;
  operators.debounceTime;
  operators.defaultIfEmpty;
  operators.delay;
  operators.delayWhen;
  operators.dematerialize;
  operators.distinct;
  operators.distinctUntilChanged;
  operators.distinctUntilKeyChanged;
  operators.elementAt;
  operators.every;
  operators.exhaust;
  operators.exhaustMap;
  operators.expand;
  operators.filter;
  operators.finalize;
  operators.find;
  operators.findIndex;
  operators.first;
  operators.groupBy;
  operators.ignoreElements;
  operators.isEmpty;
  operators.last;
  var operators_39 = operators.map;
  operators.mapTo;
  operators.materialize;
  operators.max;
  operators.merge;
  operators.mergeAll;
  operators.mergeMap;
  operators.flatMap;
  operators.mergeMapTo;
  operators.mergeScan;
  operators.min;
  operators.multicast;
  operators.observeOn;
  operators.onErrorResumeNext;
  operators.pairwise;
  operators.partition;
  operators.pluck;
  operators.publish;
  operators.publishBehavior;
  operators.publishLast;
  operators.publishReplay;
  operators.race;
  operators.reduce;
  operators.repeat;
  operators.repeatWhen;
  operators.retry;
  operators.retryWhen;
  operators.refCount;
  operators.sample;
  operators.sampleTime;
  operators.scan;
  operators.sequenceEqual;
  operators.share;
  operators.shareReplay;
  operators.single;
  operators.skip;
  operators.skipLast;
  operators.skipUntil;
  operators.skipWhile;
  operators.startWith;
  operators.subscribeOn;
  operators.switchAll;
  operators.switchMap;
  operators.switchMapTo;
  operators.take;
  operators.takeLast;
  operators.takeUntil;
  operators.takeWhile;
  operators.tap;
  operators.throttle;
  operators.throttleTime;
  operators.timeInterval;
  operators.timeout;
  operators.timeoutWith;
  operators.timestamp;
  operators.toArray;
  operators.window;
  operators.windowCount;
  operators.windowTime;
  operators.windowToggle;
  operators.windowWhen;
  operators.withLatestFrom;
  operators.zip;
  operators.zipAll;

  var HttpRequestService = /** @class */ (function () {
      function HttpRequestService() {
      }
      /**
       * Make get request with ajax
       * */
      HttpRequestService.getAjax = function (url, success, error, headers) {
          var _this = this;
          var request = new XMLHttpRequest();
          request.open('GET', url, true);
          if (typeof headers !== 'undefined') {
              for (var _i = 0, headers_1 = headers; _i < headers_1.length; _i++) {
                  var element = headers_1[_i];
                  request.setRequestHeader(element.name, element.value);
              }
          }
          request.onload = function () {
              if (request.status >= 200 && request.status < 400) {
                  _this.setXSRFToken(request.getResponseHeader('set-xsrf'));
                  if (request && request.getResponseHeader('set-geens-xcs')) {
                      _this.setGeensXcsToken(request.getResponseHeader('set-geens-xcs'));
                  }
                  success(request.responseText);
              }
              else {
                  return throwError(error);
              }
          };
          request.onerror = function () {
              error(request.responseText);
          };
          request.send();
          return request;
      };
      /**
       * Make post request with ajax
       * */
      HttpRequestService.postAjax = function (url, success, error, headers) {
          var _this = this;
          var request = new XMLHttpRequest();
          request.open('POST', url, true);
          var xsrfToken = this.getXSRFToken();
          if (headers) {
              headers.push(xsrfToken);
              headers.push(this.getGeensXcsToken());
          }
          if (typeof headers !== 'undefined') {
              for (var _i = 0, headers_2 = headers; _i < headers_2.length; _i++) {
                  var element = headers_2[_i];
                  request.setRequestHeader(element.name, element.value);
              }
          }
          request.onload = function () {
              if (request.status >= 200 && request.status < 400) {
                  _this.setXSRFToken(request.getResponseHeader('set-xsrf'));
                  if (request && request.getResponseHeader('set-geens-xcs')) {
                      _this.setGeensXcsToken(request.getResponseHeader('set-geens-xcs'));
                  }
                  success(request.responseText);
              }
              else {
                  return throwError(error);
                  // this.onError(error);
                  // error(request.responseText);
              }
          };
          request.onerror = function () {
              error(request.responseText);
          };
          request.send();
          return request;
      };
      /**
       * Make rxjs ajax get request
       * */
      HttpRequestService.getRequest = function (url, params, headers) {
          var _this = this;
          if (params === void 0) { params = null; }
          var options = {};
          var accessToken = localStorage.getItem('geens_access_token');
          if (typeof accessToken !== 'string' && params.search('&url_token=') == -1) {
              return throwError('access_token_missing');
          }
          if (headers) {
              for (var i = 0; i < headers.length; i++) {
                  for (var key in headers[i]) {
                      options[key] = headers[i][key];
                  }
              }
          }
          if (!params || params.search('&url_token=') === -1) {
              options['Authorization'] = 'Bearer' + ' ' + accessToken;
          }
          else {
              // when making a request through sharable link set Authorization to null, otherwise when user session ends
              // (geens_access_token is revoked) Geens doesn't return rsa_public key for item password encryption
              options['Authorization'] = 'Bearer' + ' ' + null;
              if (params.search('&client_id=') === -1) {
                  params += '&client_id=' + localStorage.getItem('client_id');
              }
          }
          if (params !== null) {
              url = url + '?' + params;
          }
          return ajax({
              url: url,
              method: 'GET',
              headers: options,
              crossDomain: true,
              withCredentials: true,
          }).pipe(operators_39(function (response) {
              _this.setXSRFToken(response.xhr.getResponseHeader('set-xsrf'));
              _this.setGeensXcsToken(response.xhr.getResponseHeader('set-geens-xcs'));
              if ((params === null || params === void 0 ? void 0 : params.search('&url_token=')) > -1 &&
                  response.xhr.getResponseHeader('server-status') &&
                  response.xhr.getResponseHeader('server-status') === 'suspended') {
                  // if shared item owner group is suspended show error
                  _this.showErrorPopup();
              }
              return response.response;
          }), operators_8(function (error) {
              if (error.status == 401 &&
                  error.response.error == 'Unauthenticated.' &&
                  (!params || params.search('&url_token=') === -1)) {
                  _this.clearLocalStorage();
                  return throwError('unauthenticated');
              }
              else if (error.status == 404 && error.response.item == 'Item not found') {
                  return throwError('item_not_found');
              }
              else if (error.response.unauthorized) {
                  if (error.response.unauthorized[0] == 'This action is unauthorized2') {
                      return throwError('missing_url_token');
                  }
                  else {
                      return throwError(error);
                  }
              }
              else {
                  return throwError(error);
              }
          }));
      };
      HttpRequestService.showErrorPopup = function () {
          var modal = document.createElement('div');
          modal.classList.add('sdk-error-modal');
          var style = document.createElement('style');
          style.textContent = "\n            .sdk-error-modal {\n            background: rgba(0, 0, 0, 0.32);\n            width: 100%;\n            height: 100%;\n            position: fixed;\n            top: 0;\n            left: 0;\n            z-index: 10000;\n            color: #5e5e5e;\n            display: flex;\n            font-size: 14px;\n            }\n            .sdk-error-modal .inner-container {\n            width: 350px;\n            background: white;\n            padding: 25px;\n            margin: auto;\n            }\n            .sdk-error-modal .inner-container .header {\n            margin-bottom: 15px;\n            font-weight: 700;\n            }\n            .sdk-error-modal .inner-container .button {\n            margin-top: 25px;\n            padding: 11px 21px;\n            background: white;\n            color: #5e5e5e;\n            border: 1px solid #5e5e5e;\n            float: right;\n            }";
          var innerContainer = document.createElement('div');
          innerContainer.classList.add('inner-container');
          modal.appendChild(innerContainer);
          var header = document.createElement('div');
          header.textContent = 'You are accessing suspended account';
          header.classList.add('header');
          innerContainer.appendChild(header);
          var content = document.createElement('div');
          content.textContent =
              'Ups... The Service account is suspended, please contact service owner...';
          content.classList.add('content');
          innerContainer.appendChild(content);
          // const button = document.createElement('button');
          // button.textContent = 'OK';
          // button.classList.add('button');
          // innerContainer.appendChild(button);
          // button.addEventListener('click', event => {
          //     modal.remove();
          // })
          document.body.appendChild(modal);
          document.body.appendChild(style);
      };
      /**
       * Make rxjs ajax post request
       * */
      HttpRequestService.postRequest = function (url, body, headers, url_token) {
          var _this = this;
          var options = {};
          var accessToken = localStorage.getItem('geens_access_token');
          if (typeof accessToken !== 'string' && !body.url_token && !url_token) {
              return throwError('access_token_missing');
          }
          if (headers) {
              for (var i = 0; i < headers.length; i++) {
                  for (var key in headers[i]) {
                      options[key] = headers[i][key];
                  }
              }
          }
          options['Authorization'] = 'Bearer' + ' ' + accessToken;
          options['X-XSRF-TOKEN'] = this.getXSRFToken();
          options['geens-xcs'] = this.getGeensXcsToken();
          return ajax({
              url: url,
              method: 'POST',
              body: body,
              headers: options,
              crossDomain: true,
              withCredentials: true,
          }).pipe(operators_39(function (response) {
              _this.setXSRFToken(response.xhr.getResponseHeader('set-xsrf'));
              _this.setGeensXcsToken(response.xhr.getResponseHeader('set-geens-xcs'));
              return response.response;
          }),
          // map(response => response.response),
          operators_8(function (error) {
              if (error.status == 401 && error.response.error == 'Unauthenticated.') {
                  _this.clearLocalStorage();
                  return throwError('unauthenticated');
              }
              else {
                  return throwError(error);
              }
          }));
      };
      HttpRequestService.getXSRFToken = function () {
          var xsrfToken = localStorage.getItem('xsrf_token');
          return xsrfToken;
      };
      HttpRequestService.getGeensXcsToken = function () {
          return localStorage.getItem('geens_xcs');
      };
      HttpRequestService.setXSRFToken = function (xsrfToken) {
          localStorage.removeItem('xsrf_token');
          localStorage.setItem('xsrf_token', xsrfToken);
      };
      HttpRequestService.setGeensXcsToken = function (xsrfToken) {
          localStorage.removeItem('geens_xcs');
          localStorage.setItem('geens_xcs', xsrfToken);
      };
      HttpRequestService.checkStatus = function (xsrfToken) {
          localStorage.setItem('checkStatussss', xsrfToken);
      };
      HttpRequestService.clearLocalStorage = function () {
          localStorage.removeItem('code');
          localStorage.removeItem('private_key');
          localStorage.removeItem('geens_access_token');
          localStorage.removeItem('user_data');
      };
      return HttpRequestService;
  }());

  var Group = /** @class */ (function () {
      function Group(data) {
          this.id = 0;
          this.name = '';
          this.roles = [];
          this.updated_at = '';
          this.search_hash = '';
          this.max_users = 0;
          this.users_count = 0;
          this.subscription_plans = [];
          this.subscriptions = [];
          this.vat_id = '';
          this.country = '';
          if (!data) {
              return;
          }
          Object.assign(this, data);
      }
      return Group;
  }());

  var User = /** @class */ (function () {
      function User(data) {
          this.id = 0;
          this.nickname = '';
          this.email = '';
          this.password = '';
          this.remember = false;
          this.old_password = '';
          this.enc_password = '';
          this.group_admin_keys = [];
          this.rsa_public_main = '';
          this.rsa_private = '';
          this.rsa_public = '';
          this.gee_pass = '';
          this.referral_token = '';
          this.search_hash = '';
          this.role = 0;
          this.roles = [];
          this.npo_member = false;
          this.group_id = 0;
          this.associated_users = [];
          this.state = 0;
          if (!data) {
              return;
          }
          Object.assign(this, data);
          if (data.group) {
              this.group = new Group(data.group);
          }
          if (data.npo_form) {
              this.npo_form = new NPO_form(data.npo_form);
          }
      }
      User.$TYPE_ADMIN = 1;
      User.$TYPE_ADD_USERS = 2;
      User.$TYPE_MANAGE_ROLES = 3;
      User.$TYPE_LIMITED_STORAGE = 4;
      User.$TYPE_LIMITED_TIMESTAMPS = 5;
      return User;
  }());
  var NPO_form = /** @class */ (function () {
      function NPO_form(data) {
          this.npo_member = '';
          this.first_name = '';
          this.last_name = '';
          this.email = '';
          this.country = '';
          this.city = '';
          this.postal_code = '';
          this.address_street = '';
          this.address_number = '';
          this.address_box_number = '';
          this.over_18_y_old = '';
          this.agree_with_agreement = '';
          if (!data) {
              return;
          }
          Object.assign(this, data);
      }
      return NPO_form;
  }());

  var GlobalVars = /** @class */ (function () {
      function GlobalVars() {
      }
      return GlobalVars;
  }());

  var GeensGetUserPublicKeys = geensGetUserPublicKeys;
  var GeensGetUserByUid = geensGetUserByUid;
  var UserService = /** @class */ (function () {
      // private settingsService: SettingsService;
      function UserService() {
          this.user = new User();
          // @LocalStorage()
          // private users: User[];
          // @LocalStorage()
          // private lastActiveUserId: number;
          // @SessionStorage()
          // private activeUserId: number;
          this.userStorage = new BehaviorSubject(null);
          this.userUpdateEvent = new Subject();
      }
      UserService.prototype.getOptions = function () {
          return [
              {
                  Accept: 'application/json',
              },
          ];
      };
      UserService.getPermittedRoles = function (roles) {
          var rolesList = [];
          roles.forEach(function (role) {
              rolesList.push({
                  name: role.name,
                  id: role.id,
              });
          });
          return rolesList;
      };
      UserService.prototype.getUser = function () {
          var user_data = localStorage.getItem('user_data');
          var private_key = localStorage.getItem('private_key');
          if (user_data !== null &&
              typeof user_data !== 'undefined' &&
              private_key !== null &&
              typeof private_key !== 'undefined') {
              var user = JSON.parse(user_data);
              user['rsa_private'] = private_key;
              return user;
          }
          return null;
      };
      /*getUser(): User | null {
          if(!this.user && this.lastActiveUserId){
              let user = this.users && this.users.find((oldUser) => {
                  return oldUser.id == this.lastActiveUserId;
              });
              this.user = user;
              return (user === null) ? null : (new User(user));
          }

          return (this.user === null) ? null : (new User(this.user));
      }*/
      /*updateUserStorageStats() {
          if(this.getUser() === null) return;
          let settings = this.settingsService.getSettings();
          let params: HttpParams = new HttpParams();
          if (settings.environment.group_id){
              params = params.append('group_id', String(settings.environment.group_id));
          }
          return HttpRequestService.getRequest(GeensUrl + GeensGetUserStorageStatsUrl,'group_id=' + settings.environment.group_id).subscribe((response: any) => {
                  this.userStorage.next(response);
              }
          );
      }*/
      /*downloadUserData(env:number|string = null): Observable<User> {
          let headers = new HttpHeaders(); // env is group_id environment which indicates which user session should be used
          if (env) {
              headers = headers.append('Active-Environment', String(env));
          }

          return this.http.get('/api/user/get-user',{headers: headers}).pipe(map((response: User) => {
                  if (response.group) {

                      // adjust local storage if old session is active without new fields
                      let payment_type = response.group.main_subscription.stripe_plan.split('_')[1];
                      response.group.main_subscription.payment_type = payment_type;
                      if (this.user.group) {
                          // set up payment_type field
                          this.user.group.main_subscription.payment_type = payment_type;

                          // set up users_count field
                          if (!isNullOrUndefined(this.user.group.users_count)) {
                              this.user.group.users_count = response.group.users_count;
                          }

                          // set up storage_space field
                          if (!this.user.group.main_subscription.subscription_plan.storage_plan) {
                              this.user.group.main_subscription.subscription_plan.storage_plan = response.group.main_subscription.subscription_plan.storage_plan;
                          }
                      }
                  }

                  this.setCurrentUser(new User(response as User));
                  return this.getUser() as User;
              })
          );
      }*/
      /*updateUserData(user:User): Observable<User> {
          return this.http.post('/api/user/update', user).pipe(map(response => {
                  this.setCurrentUser(response as User, user.old_password);
                  return response as User;
              }
          ));
      }*/
      /*updateUserPassword(passwordForm: JSON, user): Observable<User> {
          let encPassword = this.getUser().enc_password; // Encrypted master password.
          let oldPassword = passwordForm['old_password']; // Password to decrypt master password.
          let newPassword = passwordForm['password']; // New password
          let newPasswordConfirmation = passwordForm['password_confirmation']; // New password confirmation

          try {
              let decryptPassword = CryptoService.symDecryptText(encPassword, oldPassword);               // Decrypt master password
              passwordForm['enc_password'] = CryptoService.symEncryptText(decryptPassword, newPassword, 800000);  // Save password into model.
          } catch (e) {
              return observableThrowError(new Error());
          }

          return <Observable<User>>AuthService.postWithPassAndToken(this.http, '/api/user/update-password',
              {enc_password: passwordForm['enc_password']}, user, null, null,
              {
                  new_password: newPassword,
                  new_password_confirmation: newPasswordConfirmation,
              });
      }*/
      /*updateUserNickname(user: User): Observable<any> {
          return AuthService.postWithPassAndToken(this.http, '/api/user/change-nickname', {nickname: user.nickname}, user, this.setCurrentUser.bind(this));
      }*/
      /*updateUserEmail(emailForm, group_id: number = null): Observable<User> {
          if (group_id !== null){
              emailForm['group_id'] = group_id;
          }
          return <Observable<User>>AuthService.postWithPassAndToken(this.http, '/api/user/change-email', {email: emailForm.new_email}, emailForm);
      }*/
      /*deleteAccount(passwordForm:JSON): Observable<any> {
          return this.http.post('/api/user/delete-account', passwordForm);
      }*/
      /*setCurrentUser(user: User, decrypt_pass?:string) {
          if (user == null) {
              this.user = null;
              this.activeUserId = null;
              return;
          }
          let oldUser = this.getUser();


          if (!isUndefined(decrypt_pass)) {
              let decryptedPassword = CryptoService.symDecryptText(user.enc_password, decrypt_pass);
              let encryptedPrivateKey = user.rsa_private;
              user.rsa_private = CryptoService.symDecryptText(encryptedPrivateKey, decryptedPassword);
              user.gee_pass = CryptoService.rsaDecrypt(user.gee_pass, user.rsa_private);
          } else if (oldUser.id == user.id) {
              user.rsa_private = oldUser.rsa_private;
              user.gee_pass = oldUser.gee_pass;
              user.remember = oldUser.remember;
              user.associated_users = oldUser.associated_users;
              // user. = oldUser.remember;
          } else {
              let tempNewUser = this.user.associated_users.find((newUser) => {
                  return newUser.id == user.id;
              });
              user.rsa_private = tempNewUser.rsa_private;
              user.remember = tempNewUser.remember;
          }


          if (this.user !== undefined && this.user !== null) {
              user.associated_users.forEach((assocUser) => {
                  if(this.user.id == assocUser.id && this.user.remember) {
                      assocUser.remember = this.user.remember;
                      assocUser.rsa_private = this.user.rsa_private;
                  }

                  this.user.associated_users.forEach((oldAssocUser) => {
                      if (oldAssocUser.id == assocUser.id && oldAssocUser.remember) {
                          assocUser.remember = oldAssocUser.remember;
                          assocUser.rsa_private = oldAssocUser.rsa_private;
                      }
                  });

              });

          }


          //find settable user in localStorage users array
          let localStorageUserIndex = this.users ? this.users.findIndex(oldUser => oldUser.id == user.id) : null;
          //if found, update it. If not - add
          if(localStorageUserIndex !== null && localStorageUserIndex >= 0) {
              let tempUsers = this.users; //temp users array is needed, because ngx-webstorage library can't manipulate record as array directly
              tempUsers[localStorageUserIndex] = user;
              this.users = [];
              this.users = tempUsers;
          } else {
              if(this.users === null) {
                  this.users = [];
              }

              let tempUsers = this.users;
              tempUsers.push(user);
              this.users = tempUsers;
          }


          this.lastActiveUserId = user.id;
          this.user = new User(user);

          this.settingsService.setActiveEnvironment({
              type: user.group === null ? Settings.USER_ENVIRONMENT : Settings.GROUP_ENVIRONMENT,
              group_id: user.group === null ? null : user.group.id
          });

          if (user.group) {
              Subscription.setSubscriptionStatuses(user.group.main_subscription)
          }

          this.initUserUpdateEvent(user);
      }*/
      /*public initUserUpdateEvent(user) {
          this.userUpdateEvent.next({user})
      }*/
      /*public getUserChanges() : Subject<any> {
          return this.userUpdateEvent;
      }*/
      /*public isUserSubscriptionActive() {
          if (this.getUser() && this.getUser().group) {
              return this.getUser().group.main_subscription.isValid && this.getUser().group.main_subscription.isActive;
          }
          return true;
      }*/
      /*hasRole(role : number) {
          return this.getUser() && this.getUser().role & role;
      }*/
      /*isAdmin() {
          return this.hasRole(UserRole.ROLE_ADMIN);
      }*/
      /*isClaimList() {
          return this.hasRole(UserRole.ROLE_ADMIN) || this.hasRole(UserRole.ROLE_CLAIMLIST);
      }*/
      /*getPublicKey(email: string): Observable<string> {
          let params: HttpParams = new HttpParams();
          params = params.append('email', String(email));

          return this.http.get('/api/user/public-key', {
              params
          }).pipe(map(response => {
                  return response['rsa_public'] as string;
              }
          ));
      }*/
      UserService.prototype.getPublicKeys = function (user_identifiers) {
          var params = 'identifiers=' + encodeURIComponent(JSON.stringify(user_identifiers));
          params += '&client_id=' + localStorage.getItem('client_id');
          return HttpRequestService.getRequest(GlobalVars.GeensUrl + GeensGetUserPublicKeys, params, this.getOptions());
      };
      UserService.prototype.getUIds = function (UIDs) {
          var params = 'uids=' + encodeURIComponent(JSON.stringify(UIDs));
          params += '&client_id=' + localStorage.getItem('client_id');
          return HttpRequestService.getRequest(GlobalVars.GeensUrl + GeensGetUserByUid, params, this.getOptions());
      };
      return UserService;
  }());

  var Item$1 = /** @class */ (function () {
      function Item(id) {
          if (id === void 0) { id = null; }
          this.id = null;
          this.meta_data = '';
          this.parent_id = null;
          this.accesses = [];
          this.shared_accesses = [];
          this.received_accesses = [];
          this.task_id = null;
          this.id = id;
      }
      Item.chunkSize = 1500 * 1024; // bytes
      Item.$ITEM_FOLDER = 'FOLDER';
      Item.$ITEM_FILE = 'FILE';
      Item.$ITEM_STATE_LOCKED = 0;
      Item.$ITEM_STATE_UNLOCKED = 1;
      Item.$ITEM_SOFT_DELETE = 1;
      Item.$ITEM_HARD_DELETE = 2;
      Item.$ITEM_STATE_DELETED = 2;
      Item.$ITEM_COLOR_DEFAULT = { id: 0, class: '' };
      Item.$ITEM_COLOR_RED = { id: 1, class: 'red-item' };
      Item.$ITEM_COLOR_GREEN = { id: 2, class: 'green-item' };
      Item.$ITEM_COLOR_BLUE = { id: 3, class: 'blue-item' };
      Item.$ITEM_COLOR_YELLOW = { id: 4, class: 'yellow-item' };
      Item.$ITEM_COLOR_PURPLE = { id: 5, class: 'purple-item' };
      Item.$ROOT_ITEM_ID = -1;
      return Item;
  }());
  var ItemAccess = /** @class */ (function () {
      function ItemAccess() {
          this.group_id = null;
      }
      ItemAccess.$TYPE_MASTER = 1;
      ItemAccess.$TYPE_READ_WRITE = 3;
      ItemAccess.$TYPE_READ = 4;
      ItemAccess.$IDENTITY_TYPE_EMAIL = 0; // info@geens.com
      ItemAccess.$IDENTITY_TYPE_NICKNAME = 1; // info
      ItemAccess.$IDENTITY_TYPE_EMAIL_GROUP = 2; // info@geens.com#strategeens
      ItemAccess.$IDENTITY_TYPE_NICKNAME_GROUP = 3; // info#strategeens
      ItemAccess.$IDENTITY_TYPE_GROUP = 4; // #strategeens
      return ItemAccess;
  }());
  var ItemAccessPermissionType;
  (function (ItemAccessPermissionType) {
      ItemAccessPermissionType[ItemAccessPermissionType["NOT_USED"] = 0] = "NOT_USED";
      ItemAccessPermissionType[ItemAccessPermissionType["MASTER"] = 1] = "MASTER";
      ItemAccessPermissionType[ItemAccessPermissionType["NOT_USED2"] = 2] = "NOT_USED2";
      ItemAccessPermissionType[ItemAccessPermissionType["READ_WRITE"] = 3] = "READ_WRITE";
      ItemAccessPermissionType[ItemAccessPermissionType["SHARING_DOWNLOAD"] = 4] = "SHARING_DOWNLOAD";
      ItemAccessPermissionType[ItemAccessPermissionType["SHARING_VIEW"] = 5] = "SHARING_VIEW";
      ItemAccessPermissionType[ItemAccessPermissionType["SHARING_UPLOAD"] = 6] = "SHARING_UPLOAD";
      ItemAccessPermissionType[ItemAccessPermissionType["SHARING_EDIT"] = 7] = "SHARING_EDIT";
      ItemAccessPermissionType[ItemAccessPermissionType["SHARING_DOWNLOAD_VIEW_UPLOAD"] = 8] = "SHARING_DOWNLOAD_VIEW_UPLOAD";
      ItemAccessPermissionType[ItemAccessPermissionType["SHARING_DOWNLOAD_VIEW_EDIT"] = 9] = "SHARING_DOWNLOAD_VIEW_EDIT";
      ItemAccessPermissionType[ItemAccessPermissionType["SHARING_UPLOAD_VIEW"] = 10] = "SHARING_UPLOAD_VIEW";
      ItemAccessPermissionType[ItemAccessPermissionType["SHARING_UPLOAD_EDIT_VIEW"] = 11] = "SHARING_UPLOAD_EDIT_VIEW";
      ItemAccessPermissionType[ItemAccessPermissionType["SHARING_DOWNLOAD_VIEW_UPLOAD_EDIT"] = 12] = "SHARING_DOWNLOAD_VIEW_UPLOAD_EDIT";
  })(ItemAccessPermissionType || (ItemAccessPermissionType = {}));
  var ItemAccessIdentityType;
  (function (ItemAccessIdentityType) {
      ItemAccessIdentityType[ItemAccessIdentityType["EMAIL"] = 0] = "EMAIL";
      ItemAccessIdentityType[ItemAccessIdentityType["NICKNAME"] = 1] = "NICKNAME";
      ItemAccessIdentityType[ItemAccessIdentityType["EMAIL_GROUP"] = 2] = "EMAIL_GROUP";
      ItemAccessIdentityType[ItemAccessIdentityType["NICKNAME_GROUP"] = 3] = "NICKNAME_GROUP";
      ItemAccessIdentityType[ItemAccessIdentityType["GROUP"] = 4] = "GROUP";
      ItemAccessIdentityType[ItemAccessIdentityType["GEENSID"] = 5] = "GEENSID";
      ItemAccessIdentityType[ItemAccessIdentityType["SURNAME"] = 6] = "SURNAME";
  })(ItemAccessIdentityType || (ItemAccessIdentityType = {}));

  var require$$0 = {};

  var lookup = [];
  var revLookup = [];
  var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;
  var inited = false;
  function init () {
    inited = true;
    var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
    for (var i = 0, len = code.length; i < len; ++i) {
      lookup[i] = code[i];
      revLookup[code.charCodeAt(i)] = i;
    }

    revLookup['-'.charCodeAt(0)] = 62;
    revLookup['_'.charCodeAt(0)] = 63;
  }

  function toByteArray (b64) {
    if (!inited) {
      init();
    }
    var i, j, l, tmp, placeHolders, arr;
    var len = b64.length;

    if (len % 4 > 0) {
      throw new Error('Invalid string. Length must be a multiple of 4')
    }

    // the number of equal signs (place holders)
    // if there are two placeholders, than the two characters before it
    // represent one byte
    // if there is only one, then the three characters before it represent 2 bytes
    // this is just a cheap hack to not do indexOf twice
    placeHolders = b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0;

    // base64 is 4/3 + up to two characters of the original data
    arr = new Arr(len * 3 / 4 - placeHolders);

    // if there are placeholders, only get up to the last complete 4 chars
    l = placeHolders > 0 ? len - 4 : len;

    var L = 0;

    for (i = 0, j = 0; i < l; i += 4, j += 3) {
      tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)];
      arr[L++] = (tmp >> 16) & 0xFF;
      arr[L++] = (tmp >> 8) & 0xFF;
      arr[L++] = tmp & 0xFF;
    }

    if (placeHolders === 2) {
      tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4);
      arr[L++] = tmp & 0xFF;
    } else if (placeHolders === 1) {
      tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2);
      arr[L++] = (tmp >> 8) & 0xFF;
      arr[L++] = tmp & 0xFF;
    }

    return arr
  }

  function tripletToBase64 (num) {
    return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]
  }

  function encodeChunk (uint8, start, end) {
    var tmp;
    var output = [];
    for (var i = start; i < end; i += 3) {
      tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2]);
      output.push(tripletToBase64(tmp));
    }
    return output.join('')
  }

  function fromByteArray (uint8) {
    if (!inited) {
      init();
    }
    var tmp;
    var len = uint8.length;
    var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes
    var output = '';
    var parts = [];
    var maxChunkLength = 16383; // must be multiple of 3

    // go through the array every three bytes, we'll deal with trailing stuff later
    for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
      parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)));
    }

    // pad the end with zeros, but make sure to not forget the extra bytes
    if (extraBytes === 1) {
      tmp = uint8[len - 1];
      output += lookup[tmp >> 2];
      output += lookup[(tmp << 4) & 0x3F];
      output += '==';
    } else if (extraBytes === 2) {
      tmp = (uint8[len - 2] << 8) + (uint8[len - 1]);
      output += lookup[tmp >> 10];
      output += lookup[(tmp >> 4) & 0x3F];
      output += lookup[(tmp << 2) & 0x3F];
      output += '=';
    }

    parts.push(output);

    return parts.join('')
  }

  function read (buffer, offset, isLE, mLen, nBytes) {
    var e, m;
    var eLen = nBytes * 8 - mLen - 1;
    var eMax = (1 << eLen) - 1;
    var eBias = eMax >> 1;
    var nBits = -7;
    var i = isLE ? (nBytes - 1) : 0;
    var d = isLE ? -1 : 1;
    var s = buffer[offset + i];

    i += d;

    e = s & ((1 << (-nBits)) - 1);
    s >>= (-nBits);
    nBits += eLen;
    for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}

    m = e & ((1 << (-nBits)) - 1);
    e >>= (-nBits);
    nBits += mLen;
    for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}

    if (e === 0) {
      e = 1 - eBias;
    } else if (e === eMax) {
      return m ? NaN : ((s ? -1 : 1) * Infinity)
    } else {
      m = m + Math.pow(2, mLen);
      e = e - eBias;
    }
    return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
  }

  function write (buffer, value, offset, isLE, mLen, nBytes) {
    var e, m, c;
    var eLen = nBytes * 8 - mLen - 1;
    var eMax = (1 << eLen) - 1;
    var eBias = eMax >> 1;
    var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0);
    var i = isLE ? 0 : (nBytes - 1);
    var d = isLE ? 1 : -1;
    var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0;

    value = Math.abs(value);

    if (isNaN(value) || value === Infinity) {
      m = isNaN(value) ? 1 : 0;
      e = eMax;
    } else {
      e = Math.floor(Math.log(value) / Math.LN2);
      if (value * (c = Math.pow(2, -e)) < 1) {
        e--;
        c *= 2;
      }
      if (e + eBias >= 1) {
        value += rt / c;
      } else {
        value += rt * Math.pow(2, 1 - eBias);
      }
      if (value * c >= 2) {
        e++;
        c /= 2;
      }

      if (e + eBias >= eMax) {
        m = 0;
        e = eMax;
      } else if (e + eBias >= 1) {
        m = (value * c - 1) * Math.pow(2, mLen);
        e = e + eBias;
      } else {
        m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
        e = 0;
      }
    }

    for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

    e = (e << mLen) | m;
    eLen += mLen;
    for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

    buffer[offset + i - d] |= s * 128;
  }

  var toString = {}.toString;

  var isArray = Array.isArray || function (arr) {
    return toString.call(arr) == '[object Array]';
  };

  /*!
   * The buffer module from node.js, for the browser.
   *
   * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
   * @license  MIT
   */

  var INSPECT_MAX_BYTES = 50;

  /**
   * If `Buffer.TYPED_ARRAY_SUPPORT`:
   *   === true    Use Uint8Array implementation (fastest)
   *   === false   Use Object implementation (most compatible, even IE6)
   *
   * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
   * Opera 11.6+, iOS 4.2+.
   *
   * Due to various browser bugs, sometimes the Object implementation will be used even
   * when the browser supports typed arrays.
   *
   * Note:
   *
   *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
   *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
   *
   *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
   *
   *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
   *     incorrect length in some situations.

   * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
   * get the Object implementation, which is slower but behaves correctly.
   */
  Buffer.TYPED_ARRAY_SUPPORT = global$1.TYPED_ARRAY_SUPPORT !== undefined
    ? global$1.TYPED_ARRAY_SUPPORT
    : true;

  /*
   * Export kMaxLength after typed array support is determined.
   */
  kMaxLength();

  function kMaxLength () {
    return Buffer.TYPED_ARRAY_SUPPORT
      ? 0x7fffffff
      : 0x3fffffff
  }

  function createBuffer (that, length) {
    if (kMaxLength() < length) {
      throw new RangeError('Invalid typed array length')
    }
    if (Buffer.TYPED_ARRAY_SUPPORT) {
      // Return an augmented `Uint8Array` instance, for best performance
      that = new Uint8Array(length);
      that.__proto__ = Buffer.prototype;
    } else {
      // Fallback: Return an object instance of the Buffer class
      if (that === null) {
        that = new Buffer(length);
      }
      that.length = length;
    }

    return that
  }

  /**
   * The Buffer constructor returns instances of `Uint8Array` that have their
   * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
   * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
   * and the `Uint8Array` methods. Square bracket notation works as expected -- it
   * returns a single octet.
   *
   * The `Uint8Array` prototype remains unmodified.
   */

  function Buffer (arg, encodingOrOffset, length) {
    if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
      return new Buffer(arg, encodingOrOffset, length)
    }

    // Common case.
    if (typeof arg === 'number') {
      if (typeof encodingOrOffset === 'string') {
        throw new Error(
          'If encoding is specified then the first argument must be a string'
        )
      }
      return allocUnsafe(this, arg)
    }
    return from(this, arg, encodingOrOffset, length)
  }

  Buffer.poolSize = 8192; // not used by this implementation

  // TODO: Legacy, not needed anymore. Remove in next major version.
  Buffer._augment = function (arr) {
    arr.__proto__ = Buffer.prototype;
    return arr
  };

  function from (that, value, encodingOrOffset, length) {
    if (typeof value === 'number') {
      throw new TypeError('"value" argument must not be a number')
    }

    if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
      return fromArrayBuffer(that, value, encodingOrOffset, length)
    }

    if (typeof value === 'string') {
      return fromString(that, value, encodingOrOffset)
    }

    return fromObject(that, value)
  }

  /**
   * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
   * if value is a number.
   * Buffer.from(str[, encoding])
   * Buffer.from(array)
   * Buffer.from(buffer)
   * Buffer.from(arrayBuffer[, byteOffset[, length]])
   **/
  Buffer.from = function (value, encodingOrOffset, length) {
    return from(null, value, encodingOrOffset, length)
  };

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    Buffer.prototype.__proto__ = Uint8Array.prototype;
    Buffer.__proto__ = Uint8Array;
    if (typeof Symbol !== 'undefined' && Symbol.species &&
        Buffer[Symbol.species] === Buffer) ;
  }

  function assertSize (size) {
    if (typeof size !== 'number') {
      throw new TypeError('"size" argument must be a number')
    } else if (size < 0) {
      throw new RangeError('"size" argument must not be negative')
    }
  }

  function alloc (that, size, fill, encoding) {
    assertSize(size);
    if (size <= 0) {
      return createBuffer(that, size)
    }
    if (fill !== undefined) {
      // Only pay attention to encoding if it's a string. This
      // prevents accidentally sending in a number that would
      // be interpretted as a start offset.
      return typeof encoding === 'string'
        ? createBuffer(that, size).fill(fill, encoding)
        : createBuffer(that, size).fill(fill)
    }
    return createBuffer(that, size)
  }

  /**
   * Creates a new filled Buffer instance.
   * alloc(size[, fill[, encoding]])
   **/
  Buffer.alloc = function (size, fill, encoding) {
    return alloc(null, size, fill, encoding)
  };

  function allocUnsafe (that, size) {
    assertSize(size);
    that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);
    if (!Buffer.TYPED_ARRAY_SUPPORT) {
      for (var i = 0; i < size; ++i) {
        that[i] = 0;
      }
    }
    return that
  }

  /**
   * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
   * */
  Buffer.allocUnsafe = function (size) {
    return allocUnsafe(null, size)
  };
  /**
   * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
   */
  Buffer.allocUnsafeSlow = function (size) {
    return allocUnsafe(null, size)
  };

  function fromString (that, string, encoding) {
    if (typeof encoding !== 'string' || encoding === '') {
      encoding = 'utf8';
    }

    if (!Buffer.isEncoding(encoding)) {
      throw new TypeError('"encoding" must be a valid string encoding')
    }

    var length = byteLength(string, encoding) | 0;
    that = createBuffer(that, length);

    var actual = that.write(string, encoding);

    if (actual !== length) {
      // Writing a hex string, for example, that contains invalid characters will
      // cause everything after the first invalid character to be ignored. (e.g.
      // 'abxxcd' will be treated as 'ab')
      that = that.slice(0, actual);
    }

    return that
  }

  function fromArrayLike (that, array) {
    var length = array.length < 0 ? 0 : checked(array.length) | 0;
    that = createBuffer(that, length);
    for (var i = 0; i < length; i += 1) {
      that[i] = array[i] & 255;
    }
    return that
  }

  function fromArrayBuffer (that, array, byteOffset, length) {
    array.byteLength; // this throws if `array` is not a valid ArrayBuffer

    if (byteOffset < 0 || array.byteLength < byteOffset) {
      throw new RangeError('\'offset\' is out of bounds')
    }

    if (array.byteLength < byteOffset + (length || 0)) {
      throw new RangeError('\'length\' is out of bounds')
    }

    if (byteOffset === undefined && length === undefined) {
      array = new Uint8Array(array);
    } else if (length === undefined) {
      array = new Uint8Array(array, byteOffset);
    } else {
      array = new Uint8Array(array, byteOffset, length);
    }

    if (Buffer.TYPED_ARRAY_SUPPORT) {
      // Return an augmented `Uint8Array` instance, for best performance
      that = array;
      that.__proto__ = Buffer.prototype;
    } else {
      // Fallback: Return an object instance of the Buffer class
      that = fromArrayLike(that, array);
    }
    return that
  }

  function fromObject (that, obj) {
    if (internalIsBuffer(obj)) {
      var len = checked(obj.length) | 0;
      that = createBuffer(that, len);

      if (that.length === 0) {
        return that
      }

      obj.copy(that, 0, 0, len);
      return that
    }

    if (obj) {
      if ((typeof ArrayBuffer !== 'undefined' &&
          obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
        if (typeof obj.length !== 'number' || isnan(obj.length)) {
          return createBuffer(that, 0)
        }
        return fromArrayLike(that, obj)
      }

      if (obj.type === 'Buffer' && isArray(obj.data)) {
        return fromArrayLike(that, obj.data)
      }
    }

    throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
  }

  function checked (length) {
    // Note: cannot use `length < kMaxLength()` here because that fails when
    // length is NaN (which is otherwise coerced to zero.)
    if (length >= kMaxLength()) {
      throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                           'size: 0x' + kMaxLength().toString(16) + ' bytes')
    }
    return length | 0
  }
  Buffer.isBuffer = isBuffer;
  function internalIsBuffer (b) {
    return !!(b != null && b._isBuffer)
  }

  Buffer.compare = function compare (a, b) {
    if (!internalIsBuffer(a) || !internalIsBuffer(b)) {
      throw new TypeError('Arguments must be Buffers')
    }

    if (a === b) return 0

    var x = a.length;
    var y = b.length;

    for (var i = 0, len = Math.min(x, y); i < len; ++i) {
      if (a[i] !== b[i]) {
        x = a[i];
        y = b[i];
        break
      }
    }

    if (x < y) return -1
    if (y < x) return 1
    return 0
  };

  Buffer.isEncoding = function isEncoding (encoding) {
    switch (String(encoding).toLowerCase()) {
      case 'hex':
      case 'utf8':
      case 'utf-8':
      case 'ascii':
      case 'latin1':
      case 'binary':
      case 'base64':
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return true
      default:
        return false
    }
  };

  Buffer.concat = function concat (list, length) {
    if (!isArray(list)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }

    if (list.length === 0) {
      return Buffer.alloc(0)
    }

    var i;
    if (length === undefined) {
      length = 0;
      for (i = 0; i < list.length; ++i) {
        length += list[i].length;
      }
    }

    var buffer = Buffer.allocUnsafe(length);
    var pos = 0;
    for (i = 0; i < list.length; ++i) {
      var buf = list[i];
      if (!internalIsBuffer(buf)) {
        throw new TypeError('"list" argument must be an Array of Buffers')
      }
      buf.copy(buffer, pos);
      pos += buf.length;
    }
    return buffer
  };

  function byteLength (string, encoding) {
    if (internalIsBuffer(string)) {
      return string.length
    }
    if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
        (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
      return string.byteLength
    }
    if (typeof string !== 'string') {
      string = '' + string;
    }

    var len = string.length;
    if (len === 0) return 0

    // Use a for loop to avoid recursion
    var loweredCase = false;
    for (;;) {
      switch (encoding) {
        case 'ascii':
        case 'latin1':
        case 'binary':
          return len
        case 'utf8':
        case 'utf-8':
        case undefined:
          return utf8ToBytes(string).length
        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
          return len * 2
        case 'hex':
          return len >>> 1
        case 'base64':
          return base64ToBytes(string).length
        default:
          if (loweredCase) return utf8ToBytes(string).length // assume utf8
          encoding = ('' + encoding).toLowerCase();
          loweredCase = true;
      }
    }
  }
  Buffer.byteLength = byteLength;

  function slowToString (encoding, start, end) {
    var loweredCase = false;

    // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
    // property of a typed array.

    // This behaves neither like String nor Uint8Array in that we set start/end
    // to their upper/lower bounds if the value passed is out of range.
    // undefined is handled specially as per ECMA-262 6th Edition,
    // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
    if (start === undefined || start < 0) {
      start = 0;
    }
    // Return early if start > this.length. Done here to prevent potential uint32
    // coercion fail below.
    if (start > this.length) {
      return ''
    }

    if (end === undefined || end > this.length) {
      end = this.length;
    }

    if (end <= 0) {
      return ''
    }

    // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
    end >>>= 0;
    start >>>= 0;

    if (end <= start) {
      return ''
    }

    if (!encoding) encoding = 'utf8';

    while (true) {
      switch (encoding) {
        case 'hex':
          return hexSlice(this, start, end)

        case 'utf8':
        case 'utf-8':
          return utf8Slice(this, start, end)

        case 'ascii':
          return asciiSlice(this, start, end)

        case 'latin1':
        case 'binary':
          return latin1Slice(this, start, end)

        case 'base64':
          return base64Slice(this, start, end)

        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
          return utf16leSlice(this, start, end)

        default:
          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
          encoding = (encoding + '').toLowerCase();
          loweredCase = true;
      }
    }
  }

  // The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
  // Buffer instances.
  Buffer.prototype._isBuffer = true;

  function swap (b, n, m) {
    var i = b[n];
    b[n] = b[m];
    b[m] = i;
  }

  Buffer.prototype.swap16 = function swap16 () {
    var len = this.length;
    if (len % 2 !== 0) {
      throw new RangeError('Buffer size must be a multiple of 16-bits')
    }
    for (var i = 0; i < len; i += 2) {
      swap(this, i, i + 1);
    }
    return this
  };

  Buffer.prototype.swap32 = function swap32 () {
    var len = this.length;
    if (len % 4 !== 0) {
      throw new RangeError('Buffer size must be a multiple of 32-bits')
    }
    for (var i = 0; i < len; i += 4) {
      swap(this, i, i + 3);
      swap(this, i + 1, i + 2);
    }
    return this
  };

  Buffer.prototype.swap64 = function swap64 () {
    var len = this.length;
    if (len % 8 !== 0) {
      throw new RangeError('Buffer size must be a multiple of 64-bits')
    }
    for (var i = 0; i < len; i += 8) {
      swap(this, i, i + 7);
      swap(this, i + 1, i + 6);
      swap(this, i + 2, i + 5);
      swap(this, i + 3, i + 4);
    }
    return this
  };

  Buffer.prototype.toString = function toString () {
    var length = this.length | 0;
    if (length === 0) return ''
    if (arguments.length === 0) return utf8Slice(this, 0, length)
    return slowToString.apply(this, arguments)
  };

  Buffer.prototype.equals = function equals (b) {
    if (!internalIsBuffer(b)) throw new TypeError('Argument must be a Buffer')
    if (this === b) return true
    return Buffer.compare(this, b) === 0
  };

  Buffer.prototype.inspect = function inspect () {
    var str = '';
    var max = INSPECT_MAX_BYTES;
    if (this.length > 0) {
      str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');
      if (this.length > max) str += ' ... ';
    }
    return '<Buffer ' + str + '>'
  };

  Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
    if (!internalIsBuffer(target)) {
      throw new TypeError('Argument must be a Buffer')
    }

    if (start === undefined) {
      start = 0;
    }
    if (end === undefined) {
      end = target ? target.length : 0;
    }
    if (thisStart === undefined) {
      thisStart = 0;
    }
    if (thisEnd === undefined) {
      thisEnd = this.length;
    }

    if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
      throw new RangeError('out of range index')
    }

    if (thisStart >= thisEnd && start >= end) {
      return 0
    }
    if (thisStart >= thisEnd) {
      return -1
    }
    if (start >= end) {
      return 1
    }

    start >>>= 0;
    end >>>= 0;
    thisStart >>>= 0;
    thisEnd >>>= 0;

    if (this === target) return 0

    var x = thisEnd - thisStart;
    var y = end - start;
    var len = Math.min(x, y);

    var thisCopy = this.slice(thisStart, thisEnd);
    var targetCopy = target.slice(start, end);

    for (var i = 0; i < len; ++i) {
      if (thisCopy[i] !== targetCopy[i]) {
        x = thisCopy[i];
        y = targetCopy[i];
        break
      }
    }

    if (x < y) return -1
    if (y < x) return 1
    return 0
  };

  // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
  // OR the last index of `val` in `buffer` at offset <= `byteOffset`.
  //
  // Arguments:
  // - buffer - a Buffer to search
  // - val - a string, Buffer, or number
  // - byteOffset - an index into `buffer`; will be clamped to an int32
  // - encoding - an optional encoding, relevant is val is a string
  // - dir - true for indexOf, false for lastIndexOf
  function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
    // Empty buffer means no match
    if (buffer.length === 0) return -1

    // Normalize byteOffset
    if (typeof byteOffset === 'string') {
      encoding = byteOffset;
      byteOffset = 0;
    } else if (byteOffset > 0x7fffffff) {
      byteOffset = 0x7fffffff;
    } else if (byteOffset < -0x80000000) {
      byteOffset = -0x80000000;
    }
    byteOffset = +byteOffset;  // Coerce to Number.
    if (isNaN(byteOffset)) {
      // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
      byteOffset = dir ? 0 : (buffer.length - 1);
    }

    // Normalize byteOffset: negative offsets start from the end of the buffer
    if (byteOffset < 0) byteOffset = buffer.length + byteOffset;
    if (byteOffset >= buffer.length) {
      if (dir) return -1
      else byteOffset = buffer.length - 1;
    } else if (byteOffset < 0) {
      if (dir) byteOffset = 0;
      else return -1
    }

    // Normalize val
    if (typeof val === 'string') {
      val = Buffer.from(val, encoding);
    }

    // Finally, search either indexOf (if dir is true) or lastIndexOf
    if (internalIsBuffer(val)) {
      // Special case: looking for empty string/buffer always fails
      if (val.length === 0) {
        return -1
      }
      return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
    } else if (typeof val === 'number') {
      val = val & 0xFF; // Search for a byte value [0-255]
      if (Buffer.TYPED_ARRAY_SUPPORT &&
          typeof Uint8Array.prototype.indexOf === 'function') {
        if (dir) {
          return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
        } else {
          return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
        }
      }
      return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
    }

    throw new TypeError('val must be string, number or Buffer')
  }

  function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
    var indexSize = 1;
    var arrLength = arr.length;
    var valLength = val.length;

    if (encoding !== undefined) {
      encoding = String(encoding).toLowerCase();
      if (encoding === 'ucs2' || encoding === 'ucs-2' ||
          encoding === 'utf16le' || encoding === 'utf-16le') {
        if (arr.length < 2 || val.length < 2) {
          return -1
        }
        indexSize = 2;
        arrLength /= 2;
        valLength /= 2;
        byteOffset /= 2;
      }
    }

    function read (buf, i) {
      if (indexSize === 1) {
        return buf[i]
      } else {
        return buf.readUInt16BE(i * indexSize)
      }
    }

    var i;
    if (dir) {
      var foundIndex = -1;
      for (i = byteOffset; i < arrLength; i++) {
        if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
          if (foundIndex === -1) foundIndex = i;
          if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
        } else {
          if (foundIndex !== -1) i -= i - foundIndex;
          foundIndex = -1;
        }
      }
    } else {
      if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;
      for (i = byteOffset; i >= 0; i--) {
        var found = true;
        for (var j = 0; j < valLength; j++) {
          if (read(arr, i + j) !== read(val, j)) {
            found = false;
            break
          }
        }
        if (found) return i
      }
    }

    return -1
  }

  Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
    return this.indexOf(val, byteOffset, encoding) !== -1
  };

  Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
    return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
  };

  Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
    return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
  };

  function hexWrite (buf, string, offset, length) {
    offset = Number(offset) || 0;
    var remaining = buf.length - offset;
    if (!length) {
      length = remaining;
    } else {
      length = Number(length);
      if (length > remaining) {
        length = remaining;
      }
    }

    // must be an even number of digits
    var strLen = string.length;
    if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

    if (length > strLen / 2) {
      length = strLen / 2;
    }
    for (var i = 0; i < length; ++i) {
      var parsed = parseInt(string.substr(i * 2, 2), 16);
      if (isNaN(parsed)) return i
      buf[offset + i] = parsed;
    }
    return i
  }

  function utf8Write (buf, string, offset, length) {
    return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
  }

  function asciiWrite (buf, string, offset, length) {
    return blitBuffer(asciiToBytes(string), buf, offset, length)
  }

  function latin1Write (buf, string, offset, length) {
    return asciiWrite(buf, string, offset, length)
  }

  function base64Write (buf, string, offset, length) {
    return blitBuffer(base64ToBytes(string), buf, offset, length)
  }

  function ucs2Write (buf, string, offset, length) {
    return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
  }

  Buffer.prototype.write = function write (string, offset, length, encoding) {
    // Buffer#write(string)
    if (offset === undefined) {
      encoding = 'utf8';
      length = this.length;
      offset = 0;
    // Buffer#write(string, encoding)
    } else if (length === undefined && typeof offset === 'string') {
      encoding = offset;
      length = this.length;
      offset = 0;
    // Buffer#write(string, offset[, length][, encoding])
    } else if (isFinite(offset)) {
      offset = offset | 0;
      if (isFinite(length)) {
        length = length | 0;
        if (encoding === undefined) encoding = 'utf8';
      } else {
        encoding = length;
        length = undefined;
      }
    // legacy write(string, encoding, offset, length) - remove in v0.13
    } else {
      throw new Error(
        'Buffer.write(string, encoding, offset[, length]) is no longer supported'
      )
    }

    var remaining = this.length - offset;
    if (length === undefined || length > remaining) length = remaining;

    if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
      throw new RangeError('Attempt to write outside buffer bounds')
    }

    if (!encoding) encoding = 'utf8';

    var loweredCase = false;
    for (;;) {
      switch (encoding) {
        case 'hex':
          return hexWrite(this, string, offset, length)

        case 'utf8':
        case 'utf-8':
          return utf8Write(this, string, offset, length)

        case 'ascii':
          return asciiWrite(this, string, offset, length)

        case 'latin1':
        case 'binary':
          return latin1Write(this, string, offset, length)

        case 'base64':
          // Warning: maxLength not taken into account in base64Write
          return base64Write(this, string, offset, length)

        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
          return ucs2Write(this, string, offset, length)

        default:
          if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
          encoding = ('' + encoding).toLowerCase();
          loweredCase = true;
      }
    }
  };

  Buffer.prototype.toJSON = function toJSON () {
    return {
      type: 'Buffer',
      data: Array.prototype.slice.call(this._arr || this, 0)
    }
  };

  function base64Slice (buf, start, end) {
    if (start === 0 && end === buf.length) {
      return fromByteArray(buf)
    } else {
      return fromByteArray(buf.slice(start, end))
    }
  }

  function utf8Slice (buf, start, end) {
    end = Math.min(buf.length, end);
    var res = [];

    var i = start;
    while (i < end) {
      var firstByte = buf[i];
      var codePoint = null;
      var bytesPerSequence = (firstByte > 0xEF) ? 4
        : (firstByte > 0xDF) ? 3
        : (firstByte > 0xBF) ? 2
        : 1;

      if (i + bytesPerSequence <= end) {
        var secondByte, thirdByte, fourthByte, tempCodePoint;

        switch (bytesPerSequence) {
          case 1:
            if (firstByte < 0x80) {
              codePoint = firstByte;
            }
            break
          case 2:
            secondByte = buf[i + 1];
            if ((secondByte & 0xC0) === 0x80) {
              tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F);
              if (tempCodePoint > 0x7F) {
                codePoint = tempCodePoint;
              }
            }
            break
          case 3:
            secondByte = buf[i + 1];
            thirdByte = buf[i + 2];
            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
              tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F);
              if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
                codePoint = tempCodePoint;
              }
            }
            break
          case 4:
            secondByte = buf[i + 1];
            thirdByte = buf[i + 2];
            fourthByte = buf[i + 3];
            if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
              tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F);
              if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
                codePoint = tempCodePoint;
              }
            }
        }
      }

      if (codePoint === null) {
        // we did not generate a valid codePoint so insert a
        // replacement char (U+FFFD) and advance only 1 byte
        codePoint = 0xFFFD;
        bytesPerSequence = 1;
      } else if (codePoint > 0xFFFF) {
        // encode to utf16 (surrogate pair dance)
        codePoint -= 0x10000;
        res.push(codePoint >>> 10 & 0x3FF | 0xD800);
        codePoint = 0xDC00 | codePoint & 0x3FF;
      }

      res.push(codePoint);
      i += bytesPerSequence;
    }

    return decodeCodePointsArray(res)
  }

  // Based on http://stackoverflow.com/a/22747272/680742, the browser with
  // the lowest limit is Chrome, with 0x10000 args.
  // We go 1 magnitude less, for safety
  var MAX_ARGUMENTS_LENGTH = 0x1000;

  function decodeCodePointsArray (codePoints) {
    var len = codePoints.length;
    if (len <= MAX_ARGUMENTS_LENGTH) {
      return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
    }

    // Decode in chunks to avoid "call stack size exceeded".
    var res = '';
    var i = 0;
    while (i < len) {
      res += String.fromCharCode.apply(
        String,
        codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
      );
    }
    return res
  }

  function asciiSlice (buf, start, end) {
    var ret = '';
    end = Math.min(buf.length, end);

    for (var i = start; i < end; ++i) {
      ret += String.fromCharCode(buf[i] & 0x7F);
    }
    return ret
  }

  function latin1Slice (buf, start, end) {
    var ret = '';
    end = Math.min(buf.length, end);

    for (var i = start; i < end; ++i) {
      ret += String.fromCharCode(buf[i]);
    }
    return ret
  }

  function hexSlice (buf, start, end) {
    var len = buf.length;

    if (!start || start < 0) start = 0;
    if (!end || end < 0 || end > len) end = len;

    var out = '';
    for (var i = start; i < end; ++i) {
      out += toHex(buf[i]);
    }
    return out
  }

  function utf16leSlice (buf, start, end) {
    var bytes = buf.slice(start, end);
    var res = '';
    for (var i = 0; i < bytes.length; i += 2) {
      res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
    }
    return res
  }

  Buffer.prototype.slice = function slice (start, end) {
    var len = this.length;
    start = ~~start;
    end = end === undefined ? len : ~~end;

    if (start < 0) {
      start += len;
      if (start < 0) start = 0;
    } else if (start > len) {
      start = len;
    }

    if (end < 0) {
      end += len;
      if (end < 0) end = 0;
    } else if (end > len) {
      end = len;
    }

    if (end < start) end = start;

    var newBuf;
    if (Buffer.TYPED_ARRAY_SUPPORT) {
      newBuf = this.subarray(start, end);
      newBuf.__proto__ = Buffer.prototype;
    } else {
      var sliceLen = end - start;
      newBuf = new Buffer(sliceLen, undefined);
      for (var i = 0; i < sliceLen; ++i) {
        newBuf[i] = this[i + start];
      }
    }

    return newBuf
  };

  /*
   * Need to make sure that buffer isn't trying to write out of bounds.
   */
  function checkOffset (offset, ext, length) {
    if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
    if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
  }

  Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
    offset = offset | 0;
    byteLength = byteLength | 0;
    if (!noAssert) checkOffset(offset, byteLength, this.length);

    var val = this[offset];
    var mul = 1;
    var i = 0;
    while (++i < byteLength && (mul *= 0x100)) {
      val += this[offset + i] * mul;
    }

    return val
  };

  Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
    offset = offset | 0;
    byteLength = byteLength | 0;
    if (!noAssert) {
      checkOffset(offset, byteLength, this.length);
    }

    var val = this[offset + --byteLength];
    var mul = 1;
    while (byteLength > 0 && (mul *= 0x100)) {
      val += this[offset + --byteLength] * mul;
    }

    return val
  };

  Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
    if (!noAssert) checkOffset(offset, 1, this.length);
    return this[offset]
  };

  Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
    if (!noAssert) checkOffset(offset, 2, this.length);
    return this[offset] | (this[offset + 1] << 8)
  };

  Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
    if (!noAssert) checkOffset(offset, 2, this.length);
    return (this[offset] << 8) | this[offset + 1]
  };

  Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
    if (!noAssert) checkOffset(offset, 4, this.length);

    return ((this[offset]) |
        (this[offset + 1] << 8) |
        (this[offset + 2] << 16)) +
        (this[offset + 3] * 0x1000000)
  };

  Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
    if (!noAssert) checkOffset(offset, 4, this.length);

    return (this[offset] * 0x1000000) +
      ((this[offset + 1] << 16) |
      (this[offset + 2] << 8) |
      this[offset + 3])
  };

  Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
    offset = offset | 0;
    byteLength = byteLength | 0;
    if (!noAssert) checkOffset(offset, byteLength, this.length);

    var val = this[offset];
    var mul = 1;
    var i = 0;
    while (++i < byteLength && (mul *= 0x100)) {
      val += this[offset + i] * mul;
    }
    mul *= 0x80;

    if (val >= mul) val -= Math.pow(2, 8 * byteLength);

    return val
  };

  Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
    offset = offset | 0;
    byteLength = byteLength | 0;
    if (!noAssert) checkOffset(offset, byteLength, this.length);

    var i = byteLength;
    var mul = 1;
    var val = this[offset + --i];
    while (i > 0 && (mul *= 0x100)) {
      val += this[offset + --i] * mul;
    }
    mul *= 0x80;

    if (val >= mul) val -= Math.pow(2, 8 * byteLength);

    return val
  };

  Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
    if (!noAssert) checkOffset(offset, 1, this.length);
    if (!(this[offset] & 0x80)) return (this[offset])
    return ((0xff - this[offset] + 1) * -1)
  };

  Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
    if (!noAssert) checkOffset(offset, 2, this.length);
    var val = this[offset] | (this[offset + 1] << 8);
    return (val & 0x8000) ? val | 0xFFFF0000 : val
  };

  Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
    if (!noAssert) checkOffset(offset, 2, this.length);
    var val = this[offset + 1] | (this[offset] << 8);
    return (val & 0x8000) ? val | 0xFFFF0000 : val
  };

  Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
    if (!noAssert) checkOffset(offset, 4, this.length);

    return (this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16) |
      (this[offset + 3] << 24)
  };

  Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
    if (!noAssert) checkOffset(offset, 4, this.length);

    return (this[offset] << 24) |
      (this[offset + 1] << 16) |
      (this[offset + 2] << 8) |
      (this[offset + 3])
  };

  Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
    if (!noAssert) checkOffset(offset, 4, this.length);
    return read(this, offset, true, 23, 4)
  };

  Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
    if (!noAssert) checkOffset(offset, 4, this.length);
    return read(this, offset, false, 23, 4)
  };

  Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
    if (!noAssert) checkOffset(offset, 8, this.length);
    return read(this, offset, true, 52, 8)
  };

  Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
    if (!noAssert) checkOffset(offset, 8, this.length);
    return read(this, offset, false, 52, 8)
  };

  function checkInt (buf, value, offset, ext, max, min) {
    if (!internalIsBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
    if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
    if (offset + ext > buf.length) throw new RangeError('Index out of range')
  }

  Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset | 0;
    byteLength = byteLength | 0;
    if (!noAssert) {
      var maxBytes = Math.pow(2, 8 * byteLength) - 1;
      checkInt(this, value, offset, byteLength, maxBytes, 0);
    }

    var mul = 1;
    var i = 0;
    this[offset] = value & 0xFF;
    while (++i < byteLength && (mul *= 0x100)) {
      this[offset + i] = (value / mul) & 0xFF;
    }

    return offset + byteLength
  };

  Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset | 0;
    byteLength = byteLength | 0;
    if (!noAssert) {
      var maxBytes = Math.pow(2, 8 * byteLength) - 1;
      checkInt(this, value, offset, byteLength, maxBytes, 0);
    }

    var i = byteLength - 1;
    var mul = 1;
    this[offset + i] = value & 0xFF;
    while (--i >= 0 && (mul *= 0x100)) {
      this[offset + i] = (value / mul) & 0xFF;
    }

    return offset + byteLength
  };

  Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
    value = +value;
    offset = offset | 0;
    if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);
    if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);
    this[offset] = (value & 0xff);
    return offset + 1
  };

  function objectWriteUInt16 (buf, value, offset, littleEndian) {
    if (value < 0) value = 0xffff + value + 1;
    for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
      buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
        (littleEndian ? i : 1 - i) * 8;
    }
  }

  Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
    value = +value;
    offset = offset | 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
    if (Buffer.TYPED_ARRAY_SUPPORT) {
      this[offset] = (value & 0xff);
      this[offset + 1] = (value >>> 8);
    } else {
      objectWriteUInt16(this, value, offset, true);
    }
    return offset + 2
  };

  Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
    value = +value;
    offset = offset | 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
    if (Buffer.TYPED_ARRAY_SUPPORT) {
      this[offset] = (value >>> 8);
      this[offset + 1] = (value & 0xff);
    } else {
      objectWriteUInt16(this, value, offset, false);
    }
    return offset + 2
  };

  function objectWriteUInt32 (buf, value, offset, littleEndian) {
    if (value < 0) value = 0xffffffff + value + 1;
    for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
      buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff;
    }
  }

  Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
    value = +value;
    offset = offset | 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
    if (Buffer.TYPED_ARRAY_SUPPORT) {
      this[offset + 3] = (value >>> 24);
      this[offset + 2] = (value >>> 16);
      this[offset + 1] = (value >>> 8);
      this[offset] = (value & 0xff);
    } else {
      objectWriteUInt32(this, value, offset, true);
    }
    return offset + 4
  };

  Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
    value = +value;
    offset = offset | 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
    if (Buffer.TYPED_ARRAY_SUPPORT) {
      this[offset] = (value >>> 24);
      this[offset + 1] = (value >>> 16);
      this[offset + 2] = (value >>> 8);
      this[offset + 3] = (value & 0xff);
    } else {
      objectWriteUInt32(this, value, offset, false);
    }
    return offset + 4
  };

  Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset | 0;
    if (!noAssert) {
      var limit = Math.pow(2, 8 * byteLength - 1);

      checkInt(this, value, offset, byteLength, limit - 1, -limit);
    }

    var i = 0;
    var mul = 1;
    var sub = 0;
    this[offset] = value & 0xFF;
    while (++i < byteLength && (mul *= 0x100)) {
      if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
        sub = 1;
      }
      this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;
    }

    return offset + byteLength
  };

  Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset | 0;
    if (!noAssert) {
      var limit = Math.pow(2, 8 * byteLength - 1);

      checkInt(this, value, offset, byteLength, limit - 1, -limit);
    }

    var i = byteLength - 1;
    var mul = 1;
    var sub = 0;
    this[offset + i] = value & 0xFF;
    while (--i >= 0 && (mul *= 0x100)) {
      if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
        sub = 1;
      }
      this[offset + i] = ((value / mul) >> 0) - sub & 0xFF;
    }

    return offset + byteLength
  };

  Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
    value = +value;
    offset = offset | 0;
    if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);
    if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);
    if (value < 0) value = 0xff + value + 1;
    this[offset] = (value & 0xff);
    return offset + 1
  };

  Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
    value = +value;
    offset = offset | 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);
    if (Buffer.TYPED_ARRAY_SUPPORT) {
      this[offset] = (value & 0xff);
      this[offset + 1] = (value >>> 8);
    } else {
      objectWriteUInt16(this, value, offset, true);
    }
    return offset + 2
  };

  Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
    value = +value;
    offset = offset | 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);
    if (Buffer.TYPED_ARRAY_SUPPORT) {
      this[offset] = (value >>> 8);
      this[offset + 1] = (value & 0xff);
    } else {
      objectWriteUInt16(this, value, offset, false);
    }
    return offset + 2
  };

  Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
    value = +value;
    offset = offset | 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
    if (Buffer.TYPED_ARRAY_SUPPORT) {
      this[offset] = (value & 0xff);
      this[offset + 1] = (value >>> 8);
      this[offset + 2] = (value >>> 16);
      this[offset + 3] = (value >>> 24);
    } else {
      objectWriteUInt32(this, value, offset, true);
    }
    return offset + 4
  };

  Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
    value = +value;
    offset = offset | 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
    if (value < 0) value = 0xffffffff + value + 1;
    if (Buffer.TYPED_ARRAY_SUPPORT) {
      this[offset] = (value >>> 24);
      this[offset + 1] = (value >>> 16);
      this[offset + 2] = (value >>> 8);
      this[offset + 3] = (value & 0xff);
    } else {
      objectWriteUInt32(this, value, offset, false);
    }
    return offset + 4
  };

  function checkIEEE754 (buf, value, offset, ext, max, min) {
    if (offset + ext > buf.length) throw new RangeError('Index out of range')
    if (offset < 0) throw new RangeError('Index out of range')
  }

  function writeFloat (buf, value, offset, littleEndian, noAssert) {
    if (!noAssert) {
      checkIEEE754(buf, value, offset, 4);
    }
    write(buf, value, offset, littleEndian, 23, 4);
    return offset + 4
  }

  Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
    return writeFloat(this, value, offset, true, noAssert)
  };

  Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
    return writeFloat(this, value, offset, false, noAssert)
  };

  function writeDouble (buf, value, offset, littleEndian, noAssert) {
    if (!noAssert) {
      checkIEEE754(buf, value, offset, 8);
    }
    write(buf, value, offset, littleEndian, 52, 8);
    return offset + 8
  }

  Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
    return writeDouble(this, value, offset, true, noAssert)
  };

  Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
    return writeDouble(this, value, offset, false, noAssert)
  };

  // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
  Buffer.prototype.copy = function copy (target, targetStart, start, end) {
    if (!start) start = 0;
    if (!end && end !== 0) end = this.length;
    if (targetStart >= target.length) targetStart = target.length;
    if (!targetStart) targetStart = 0;
    if (end > 0 && end < start) end = start;

    // Copy 0 bytes; we're done
    if (end === start) return 0
    if (target.length === 0 || this.length === 0) return 0

    // Fatal error conditions
    if (targetStart < 0) {
      throw new RangeError('targetStart out of bounds')
    }
    if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
    if (end < 0) throw new RangeError('sourceEnd out of bounds')

    // Are we oob?
    if (end > this.length) end = this.length;
    if (target.length - targetStart < end - start) {
      end = target.length - targetStart + start;
    }

    var len = end - start;
    var i;

    if (this === target && start < targetStart && targetStart < end) {
      // descending copy from end
      for (i = len - 1; i >= 0; --i) {
        target[i + targetStart] = this[i + start];
      }
    } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
      // ascending copy from start
      for (i = 0; i < len; ++i) {
        target[i + targetStart] = this[i + start];
      }
    } else {
      Uint8Array.prototype.set.call(
        target,
        this.subarray(start, start + len),
        targetStart
      );
    }

    return len
  };

  // Usage:
  //    buffer.fill(number[, offset[, end]])
  //    buffer.fill(buffer[, offset[, end]])
  //    buffer.fill(string[, offset[, end]][, encoding])
  Buffer.prototype.fill = function fill (val, start, end, encoding) {
    // Handle string cases:
    if (typeof val === 'string') {
      if (typeof start === 'string') {
        encoding = start;
        start = 0;
        end = this.length;
      } else if (typeof end === 'string') {
        encoding = end;
        end = this.length;
      }
      if (val.length === 1) {
        var code = val.charCodeAt(0);
        if (code < 256) {
          val = code;
        }
      }
      if (encoding !== undefined && typeof encoding !== 'string') {
        throw new TypeError('encoding must be a string')
      }
      if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
        throw new TypeError('Unknown encoding: ' + encoding)
      }
    } else if (typeof val === 'number') {
      val = val & 255;
    }

    // Invalid ranges are not set to a default, so can range check early.
    if (start < 0 || this.length < start || this.length < end) {
      throw new RangeError('Out of range index')
    }

    if (end <= start) {
      return this
    }

    start = start >>> 0;
    end = end === undefined ? this.length : end >>> 0;

    if (!val) val = 0;

    var i;
    if (typeof val === 'number') {
      for (i = start; i < end; ++i) {
        this[i] = val;
      }
    } else {
      var bytes = internalIsBuffer(val)
        ? val
        : utf8ToBytes(new Buffer(val, encoding).toString());
      var len = bytes.length;
      for (i = 0; i < end - start; ++i) {
        this[i + start] = bytes[i % len];
      }
    }

    return this
  };

  // HELPER FUNCTIONS
  // ================

  var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g;

  function base64clean (str) {
    // Node strips out invalid characters like \n and \t from the string, base64-js does not
    str = stringtrim(str).replace(INVALID_BASE64_RE, '');
    // Node converts strings with length < 2 to ''
    if (str.length < 2) return ''
    // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
    while (str.length % 4 !== 0) {
      str = str + '=';
    }
    return str
  }

  function stringtrim (str) {
    if (str.trim) return str.trim()
    return str.replace(/^\s+|\s+$/g, '')
  }

  function toHex (n) {
    if (n < 16) return '0' + n.toString(16)
    return n.toString(16)
  }

  function utf8ToBytes (string, units) {
    units = units || Infinity;
    var codePoint;
    var length = string.length;
    var leadSurrogate = null;
    var bytes = [];

    for (var i = 0; i < length; ++i) {
      codePoint = string.charCodeAt(i);

      // is surrogate component
      if (codePoint > 0xD7FF && codePoint < 0xE000) {
        // last char was a lead
        if (!leadSurrogate) {
          // no lead yet
          if (codePoint > 0xDBFF) {
            // unexpected trail
            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
            continue
          } else if (i + 1 === length) {
            // unpaired lead
            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
            continue
          }

          // valid lead
          leadSurrogate = codePoint;

          continue
        }

        // 2 leads in a row
        if (codePoint < 0xDC00) {
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
          leadSurrogate = codePoint;
          continue
        }

        // valid surrogate pair
        codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;
      } else if (leadSurrogate) {
        // valid bmp char, but last char was a lead
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
      }

      leadSurrogate = null;

      // encode utf8
      if (codePoint < 0x80) {
        if ((units -= 1) < 0) break
        bytes.push(codePoint);
      } else if (codePoint < 0x800) {
        if ((units -= 2) < 0) break
        bytes.push(
          codePoint >> 0x6 | 0xC0,
          codePoint & 0x3F | 0x80
        );
      } else if (codePoint < 0x10000) {
        if ((units -= 3) < 0) break
        bytes.push(
          codePoint >> 0xC | 0xE0,
          codePoint >> 0x6 & 0x3F | 0x80,
          codePoint & 0x3F | 0x80
        );
      } else if (codePoint < 0x110000) {
        if ((units -= 4) < 0) break
        bytes.push(
          codePoint >> 0x12 | 0xF0,
          codePoint >> 0xC & 0x3F | 0x80,
          codePoint >> 0x6 & 0x3F | 0x80,
          codePoint & 0x3F | 0x80
        );
      } else {
        throw new Error('Invalid code point')
      }
    }

    return bytes
  }

  function asciiToBytes (str) {
    var byteArray = [];
    for (var i = 0; i < str.length; ++i) {
      // Node's code seems to be doing this and not & 0x7F..
      byteArray.push(str.charCodeAt(i) & 0xFF);
    }
    return byteArray
  }

  function utf16leToBytes (str, units) {
    var c, hi, lo;
    var byteArray = [];
    for (var i = 0; i < str.length; ++i) {
      if ((units -= 2) < 0) break

      c = str.charCodeAt(i);
      hi = c >> 8;
      lo = c % 256;
      byteArray.push(lo);
      byteArray.push(hi);
    }

    return byteArray
  }


  function base64ToBytes (str) {
    return toByteArray(base64clean(str))
  }

  function blitBuffer (src, dst, offset, length) {
    for (var i = 0; i < length; ++i) {
      if ((i + offset >= dst.length) || (i >= src.length)) break
      dst[i + offset] = src[i];
    }
    return i
  }

  function isnan (val) {
    return val !== val // eslint-disable-line no-self-compare
  }


  // the following is from is-buffer, also by Feross Aboukhadijeh and with same lisence
  // The _isBuffer check is for Safari 5-7 support, because it's missing
  // Object.prototype.constructor. Remove this eventually
  function isBuffer(obj) {
    return obj != null && (!!obj._isBuffer || isFastBuffer(obj) || isSlowBuffer(obj))
  }

  function isFastBuffer (obj) {
    return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)
  }

  // For Node v0.10 support. Remove this eventually.
  function isSlowBuffer (obj) {
    return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isFastBuffer(obj.slice(0, 0))
  }

  // shim for using process in browser
  // based off https://github.com/defunctzombie/node-process/blob/master/browser.js

  function defaultSetTimout() {
      throw new Error('setTimeout has not been defined');
  }
  function defaultClearTimeout () {
      throw new Error('clearTimeout has not been defined');
  }
  var cachedSetTimeout = defaultSetTimout;
  var cachedClearTimeout = defaultClearTimeout;
  if (typeof global$1.setTimeout === 'function') {
      cachedSetTimeout = setTimeout;
  }
  if (typeof global$1.clearTimeout === 'function') {
      cachedClearTimeout = clearTimeout;
  }

  function runTimeout(fun) {
      if (cachedSetTimeout === setTimeout) {
          //normal enviroments in sane situations
          return setTimeout(fun, 0);
      }
      // if setTimeout wasn't available but was latter defined
      if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
          cachedSetTimeout = setTimeout;
          return setTimeout(fun, 0);
      }
      try {
          // when when somebody has screwed with setTimeout but no I.E. maddness
          return cachedSetTimeout(fun, 0);
      } catch(e){
          try {
              // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
              return cachedSetTimeout.call(null, fun, 0);
          } catch(e){
              // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
              return cachedSetTimeout.call(this, fun, 0);
          }
      }


  }
  function runClearTimeout(marker) {
      if (cachedClearTimeout === clearTimeout) {
          //normal enviroments in sane situations
          return clearTimeout(marker);
      }
      // if clearTimeout wasn't available but was latter defined
      if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
          cachedClearTimeout = clearTimeout;
          return clearTimeout(marker);
      }
      try {
          // when when somebody has screwed with setTimeout but no I.E. maddness
          return cachedClearTimeout(marker);
      } catch (e){
          try {
              // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
              return cachedClearTimeout.call(null, marker);
          } catch (e){
              // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
              // Some versions of I.E. have different rules for clearTimeout vs setTimeout
              return cachedClearTimeout.call(this, marker);
          }
      }



  }
  var queue = [];
  var draining = false;
  var currentQueue;
  var queueIndex = -1;

  function cleanUpNextTick() {
      if (!draining || !currentQueue) {
          return;
      }
      draining = false;
      if (currentQueue.length) {
          queue = currentQueue.concat(queue);
      } else {
          queueIndex = -1;
      }
      if (queue.length) {
          drainQueue();
      }
  }

  function drainQueue() {
      if (draining) {
          return;
      }
      var timeout = runTimeout(cleanUpNextTick);
      draining = true;

      var len = queue.length;
      while(len) {
          currentQueue = queue;
          queue = [];
          while (++queueIndex < len) {
              if (currentQueue) {
                  currentQueue[queueIndex].run();
              }
          }
          queueIndex = -1;
          len = queue.length;
      }
      currentQueue = null;
      draining = false;
      runClearTimeout(timeout);
  }
  function nextTick(fun) {
      var args = new Array(arguments.length - 1);
      if (arguments.length > 1) {
          for (var i = 1; i < arguments.length; i++) {
              args[i - 1] = arguments[i];
          }
      }
      queue.push(new Item(fun, args));
      if (queue.length === 1 && !draining) {
          runTimeout(drainQueue);
      }
  }
  // v8 likes predictible objects
  function Item(fun, array) {
      this.fun = fun;
      this.array = array;
  }
  Item.prototype.run = function () {
      this.fun.apply(null, this.array);
  };
  var title = 'browser';
  var platform = 'browser';
  var browser = true;
  var env = {};
  var argv = [];
  var version$1 = ''; // empty string to avoid regexp issues
  var versions = {};
  var release = {};
  var config = {};

  function noop() {}

  var on = noop;
  var addListener = noop;
  var once = noop;
  var off = noop;
  var removeListener = noop;
  var removeAllListeners = noop;
  var emit = noop;

  function binding(name) {
      throw new Error('process.binding is not supported');
  }

  function cwd () { return '/' }
  function chdir (dir) {
      throw new Error('process.chdir is not supported');
  }function umask() { return 0; }

  // from https://github.com/kumavis/browser-process-hrtime/blob/master/index.js
  var performance = global$1.performance || {};
  var performanceNow =
    performance.now        ||
    performance.mozNow     ||
    performance.msNow      ||
    performance.oNow       ||
    performance.webkitNow  ||
    function(){ return (new Date()).getTime() };

  // generate timestamp or delta
  // see http://nodejs.org/api/process.html#process_process_hrtime
  function hrtime(previousTimestamp){
    var clocktime = performanceNow.call(performance)*1e-3;
    var seconds = Math.floor(clocktime);
    var nanoseconds = Math.floor((clocktime%1)*1e9);
    if (previousTimestamp) {
      seconds = seconds - previousTimestamp[0];
      nanoseconds = nanoseconds - previousTimestamp[1];
      if (nanoseconds<0) {
        seconds--;
        nanoseconds += 1e9;
      }
    }
    return [seconds,nanoseconds]
  }

  var startTime = new Date();
  function uptime() {
    var currentTime = new Date();
    var dif = currentTime - startTime;
    return dif / 1000;
  }

  var browser$1 = {
    nextTick: nextTick,
    title: title,
    browser: browser,
    env: env,
    argv: argv,
    version: version$1,
    versions: versions,
    on: on,
    addListener: addListener,
    once: once,
    off: off,
    removeListener: removeListener,
    removeAllListeners: removeAllListeners,
    emit: emit,
    binding: binding,
    cwd: cwd,
    chdir: chdir,
    umask: umask,
    hrtime: hrtime,
    platform: platform,
    release: release,
    config: config,
    uptime: uptime
  };

  const local_atob = typeof atob === 'undefined' ? (str) => Buffer.from(str, 'base64').toString('binary') : atob;
  const local_btoa = typeof btoa === 'undefined' ? (str) => Buffer.from(str, 'binary').toString('base64') : btoa;
  function string_to_bytes(str, utf8 = false) {
      var len = str.length, bytes = new Uint8Array(utf8 ? 4 * len : len);
      for (var i = 0, j = 0; i < len; i++) {
          var c = str.charCodeAt(i);
          if (utf8 && 0xd800 <= c && c <= 0xdbff) {
              if (++i >= len)
                  throw new Error('Malformed string, low surrogate expected at position ' + i);
              c = ((c ^ 0xd800) << 10) | 0x10000 | (str.charCodeAt(i) ^ 0xdc00);
          }
          else if (!utf8 && c >>> 8) {
              throw new Error('Wide characters are not allowed.');
          }
          if (!utf8 || c <= 0x7f) {
              bytes[j++] = c;
          }
          else if (c <= 0x7ff) {
              bytes[j++] = 0xc0 | (c >> 6);
              bytes[j++] = 0x80 | (c & 0x3f);
          }
          else if (c <= 0xffff) {
              bytes[j++] = 0xe0 | (c >> 12);
              bytes[j++] = 0x80 | ((c >> 6) & 0x3f);
              bytes[j++] = 0x80 | (c & 0x3f);
          }
          else {
              bytes[j++] = 0xf0 | (c >> 18);
              bytes[j++] = 0x80 | ((c >> 12) & 0x3f);
              bytes[j++] = 0x80 | ((c >> 6) & 0x3f);
              bytes[j++] = 0x80 | (c & 0x3f);
          }
      }
      return bytes.subarray(0, j);
  }
  function hex_to_bytes(str) {
      var len = str.length;
      if (len & 1) {
          str = '0' + str;
          len++;
      }
      var bytes = new Uint8Array(len >> 1);
      for (var i = 0; i < len; i += 2) {
          bytes[i >> 1] = parseInt(str.substr(i, 2), 16);
      }
      return bytes;
  }
  function base64_to_bytes(str) {
      return string_to_bytes(local_atob(str));
  }
  function bytes_to_string(bytes, utf8 = false) {
      var len = bytes.length, chars = new Array(len);
      for (var i = 0, j = 0; i < len; i++) {
          var b = bytes[i];
          if (!utf8 || b < 128) {
              chars[j++] = b;
          }
          else if (b >= 192 && b < 224 && i + 1 < len) {
              chars[j++] = ((b & 0x1f) << 6) | (bytes[++i] & 0x3f);
          }
          else if (b >= 224 && b < 240 && i + 2 < len) {
              chars[j++] = ((b & 0xf) << 12) | ((bytes[++i] & 0x3f) << 6) | (bytes[++i] & 0x3f);
          }
          else if (b >= 240 && b < 248 && i + 3 < len) {
              var c = ((b & 7) << 18) | ((bytes[++i] & 0x3f) << 12) | ((bytes[++i] & 0x3f) << 6) | (bytes[++i] & 0x3f);
              if (c <= 0xffff) {
                  chars[j++] = c;
              }
              else {
                  c ^= 0x10000;
                  chars[j++] = 0xd800 | (c >> 10);
                  chars[j++] = 0xdc00 | (c & 0x3ff);
              }
          }
          else {
              throw new Error('Malformed UTF8 character at byte offset ' + i);
          }
      }
      var str = '', bs = 16384;
      for (var i = 0; i < j; i += bs) {
          str += String.fromCharCode.apply(String, chars.slice(i, i + bs <= j ? i + bs : j));
      }
      return str;
  }
  function bytes_to_hex(arr) {
      var str = '';
      for (var i = 0; i < arr.length; i++) {
          var h = (arr[i] & 0xff).toString(16);
          if (h.length < 2)
              str += '0';
          str += h;
      }
      return str;
  }
  function bytes_to_base64(arr) {
      return local_btoa(bytes_to_string(arr));
  }
  function is_bytes(a) {
      return a instanceof Uint8Array;
  }
  function _heap_init(heap, heapSize) {
      const size = heap ? heap.byteLength : heapSize || 65536;
      if (size & 0xfff || size <= 0)
          throw new Error('heap size must be a positive integer and a multiple of 4096');
      heap = heap || new Uint8Array(new ArrayBuffer(size));
      return heap;
  }
  function _heap_write(heap, hpos, data, dpos, dlen) {
      const hlen = heap.length - hpos;
      const wlen = hlen < dlen ? hlen : dlen;
      heap.set(data.subarray(dpos, dpos + wlen), hpos);
      return wlen;
  }

  /**
   * Util exports
   */

  class IllegalStateError extends Error {
      constructor(...args) {
          super(...args);
      }
  }
  class IllegalArgumentError extends Error {
      constructor(...args) {
          super(...args);
      }
  }
  class SecurityError extends Error {
      constructor(...args) {
          super(...args);
      }
  }

  /**
   * @file {@link http://asmjs.org Asm.js} implementation of the {@link https://en.wikipedia.org/wiki/Advanced_Encryption_Standard Advanced Encryption Standard}.
   * @author Artem S Vybornov <vybornov@gmail.com>
   * @license MIT
   */
  var AES_asm = function () {

    /**
     * Galois Field stuff init flag
     */
    var ginit_done = false;

    /**
     * Galois Field exponentiation and logarithm tables for 3 (the generator)
     */
    var gexp3, glog3;

    /**
     * Init Galois Field tables
     */
    function ginit() {
      gexp3 = [],
        glog3 = [];

      var a = 1, c, d;
      for (c = 0; c < 255; c++) {
        gexp3[c] = a;

        // Multiply by three
        d = a & 0x80, a <<= 1, a &= 255;
        if (d === 0x80) a ^= 0x1b;
        a ^= gexp3[c];

        // Set the log table value
        glog3[gexp3[c]] = c;
      }
      gexp3[255] = gexp3[0];
      glog3[0] = 0;

      ginit_done = true;
    }

    /**
     * Galois Field multiplication
     * @param {number} a
     * @param {number} b
     * @return {number}
     */
    function gmul(a, b) {
      var c = gexp3[(glog3[a] + glog3[b]) % 255];
      if (a === 0 || b === 0) c = 0;
      return c;
    }

    /**
     * Galois Field reciprocal
     * @param {number} a
     * @return {number}
     */
    function ginv(a) {
      var i = gexp3[255 - glog3[a]];
      if (a === 0) i = 0;
      return i;
    }

    /**
     * AES stuff init flag
     */
    var aes_init_done = false;

    /**
     * Encryption, Decryption, S-Box and KeyTransform tables
     *
     * @type {number[]}
     */
    var aes_sbox;

    /**
     * @type {number[]}
     */
    var aes_sinv;

    /**
     * @type {number[][]}
     */
    var aes_enc;

    /**
     * @type {number[][]}
     */
    var aes_dec;

    /**
     * Init AES tables
     */
    function aes_init() {
      if (!ginit_done) ginit();

      // Calculates AES S-Box value
      function _s(a) {
        var c, s, x;
        s = x = ginv(a);
        for (c = 0; c < 4; c++) {
          s = ((s << 1) | (s >>> 7)) & 255;
          x ^= s;
        }
        x ^= 99;
        return x;
      }

      // Tables
      aes_sbox = [],
        aes_sinv = [],
        aes_enc = [[], [], [], []],
        aes_dec = [[], [], [], []];

      for (var i = 0; i < 256; i++) {
        var s = _s(i);

        // S-Box and its inverse
        aes_sbox[i] = s;
        aes_sinv[s] = i;

        // Ecryption and Decryption tables
        aes_enc[0][i] = (gmul(2, s) << 24) | (s << 16) | (s << 8) | gmul(3, s);
        aes_dec[0][s] = (gmul(14, i) << 24) | (gmul(9, i) << 16) | (gmul(13, i) << 8) | gmul(11, i);
        // Rotate tables
        for (var t = 1; t < 4; t++) {
          aes_enc[t][i] = (aes_enc[t - 1][i] >>> 8) | (aes_enc[t - 1][i] << 24);
          aes_dec[t][s] = (aes_dec[t - 1][s] >>> 8) | (aes_dec[t - 1][s] << 24);
        }
      }

      aes_init_done = true;
    }

    /**
     * Asm.js module constructor.
     *
     * <p>
     * Heap buffer layout by offset:
     * <pre>
     * 0x0000   encryption key schedule
     * 0x0400   decryption key schedule
     * 0x0800   sbox
     * 0x0c00   inv sbox
     * 0x1000   encryption tables
     * 0x2000   decryption tables
     * 0x3000   reserved (future GCM multiplication lookup table)
     * 0x4000   data
     * </pre>
     * Don't touch anything before <code>0x400</code>.
     * </p>
     *
     * @alias AES_asm
     * @class
     * @param foreign - <i>ignored</i>
     * @param buffer - heap buffer to link with
     */
    var wrapper = function (foreign, buffer) {
      // Init AES stuff for the first time
      if (!aes_init_done) aes_init();

      // Fill up AES tables
      var heap = new Uint32Array(buffer);
      heap.set(aes_sbox, 0x0800 >> 2);
      heap.set(aes_sinv, 0x0c00 >> 2);
      for (var i = 0; i < 4; i++) {
        heap.set(aes_enc[i], (0x1000 + 0x400 * i) >> 2);
        heap.set(aes_dec[i], (0x2000 + 0x400 * i) >> 2);
      }

      /**
       * Calculate AES key schedules.
       * @instance
       * @memberof AES_asm
       * @param {number} ks - key size, 4/6/8 (for 128/192/256-bit key correspondingly)
       * @param {number} k0 - key vector components
       * @param {number} k1 - key vector components
       * @param {number} k2 - key vector components
       * @param {number} k3 - key vector components
       * @param {number} k4 - key vector components
       * @param {number} k5 - key vector components
       * @param {number} k6 - key vector components
       * @param {number} k7 - key vector components
       */
      function set_key(ks, k0, k1, k2, k3, k4, k5, k6, k7) {
        var ekeys = heap.subarray(0x000, 60),
          dkeys = heap.subarray(0x100, 0x100 + 60);

        // Encryption key schedule
        ekeys.set([k0, k1, k2, k3, k4, k5, k6, k7]);
        for (var i = ks, rcon = 1; i < 4 * ks + 28; i++) {
          var k = ekeys[i - 1];
          if ((i % ks === 0) || (ks === 8 && i % ks === 4)) {
            k = aes_sbox[k >>> 24] << 24 ^ aes_sbox[k >>> 16 & 255] << 16 ^ aes_sbox[k >>> 8 & 255] << 8 ^ aes_sbox[k & 255];
          }
          if (i % ks === 0) {
            k = (k << 8) ^ (k >>> 24) ^ (rcon << 24);
            rcon = (rcon << 1) ^ ((rcon & 0x80) ? 0x1b : 0);
          }
          ekeys[i] = ekeys[i - ks] ^ k;
        }

        // Decryption key schedule
        for (var j = 0; j < i; j += 4) {
          for (var jj = 0; jj < 4; jj++) {
            var k = ekeys[i - (4 + j) + (4 - jj) % 4];
            if (j < 4 || j >= i - 4) {
              dkeys[j + jj] = k;
            } else {
              dkeys[j + jj] = aes_dec[0][aes_sbox[k >>> 24]]
                ^ aes_dec[1][aes_sbox[k >>> 16 & 255]]
                ^ aes_dec[2][aes_sbox[k >>> 8 & 255]]
                ^ aes_dec[3][aes_sbox[k & 255]];
            }
          }
        }

        // Set rounds number
        asm.set_rounds(ks + 5);
      }

      // create library object with necessary properties
      var stdlib = {Uint8Array: Uint8Array, Uint32Array: Uint32Array};

      var asm = function (stdlib, foreign, buffer) {
        "use asm";

        var S0 = 0, S1 = 0, S2 = 0, S3 = 0,
          I0 = 0, I1 = 0, I2 = 0, I3 = 0,
          N0 = 0, N1 = 0, N2 = 0, N3 = 0,
          M0 = 0, M1 = 0, M2 = 0, M3 = 0,
          H0 = 0, H1 = 0, H2 = 0, H3 = 0,
          R = 0;

        var HEAP = new stdlib.Uint32Array(buffer),
          DATA = new stdlib.Uint8Array(buffer);

        /**
         * AES core
         * @param {number} k - precomputed key schedule offset
         * @param {number} s - precomputed sbox table offset
         * @param {number} t - precomputed round table offset
         * @param {number} r - number of inner rounds to perform
         * @param {number} x0 - 128-bit input block vector
         * @param {number} x1 - 128-bit input block vector
         * @param {number} x2 - 128-bit input block vector
         * @param {number} x3 - 128-bit input block vector
         */
        function _core(k, s, t, r, x0, x1, x2, x3) {
          k = k | 0;
          s = s | 0;
          t = t | 0;
          r = r | 0;
          x0 = x0 | 0;
          x1 = x1 | 0;
          x2 = x2 | 0;
          x3 = x3 | 0;

          var t1 = 0, t2 = 0, t3 = 0,
            y0 = 0, y1 = 0, y2 = 0, y3 = 0,
            i = 0;

          t1 = t | 0x400, t2 = t | 0x800, t3 = t | 0xc00;

          // round 0
          x0 = x0 ^ HEAP[(k | 0) >> 2],
            x1 = x1 ^ HEAP[(k | 4) >> 2],
            x2 = x2 ^ HEAP[(k | 8) >> 2],
            x3 = x3 ^ HEAP[(k | 12) >> 2];

          // round 1..r
          for (i = 16; (i | 0) <= (r << 4); i = (i + 16) | 0) {
            y0 = HEAP[(t | x0 >> 22 & 1020) >> 2] ^ HEAP[(t1 | x1 >> 14 & 1020) >> 2] ^ HEAP[(t2 | x2 >> 6 & 1020) >> 2] ^ HEAP[(t3 | x3 << 2 & 1020) >> 2] ^ HEAP[(k | i | 0) >> 2],
              y1 = HEAP[(t | x1 >> 22 & 1020) >> 2] ^ HEAP[(t1 | x2 >> 14 & 1020) >> 2] ^ HEAP[(t2 | x3 >> 6 & 1020) >> 2] ^ HEAP[(t3 | x0 << 2 & 1020) >> 2] ^ HEAP[(k | i | 4) >> 2],
              y2 = HEAP[(t | x2 >> 22 & 1020) >> 2] ^ HEAP[(t1 | x3 >> 14 & 1020) >> 2] ^ HEAP[(t2 | x0 >> 6 & 1020) >> 2] ^ HEAP[(t3 | x1 << 2 & 1020) >> 2] ^ HEAP[(k | i | 8) >> 2],
              y3 = HEAP[(t | x3 >> 22 & 1020) >> 2] ^ HEAP[(t1 | x0 >> 14 & 1020) >> 2] ^ HEAP[(t2 | x1 >> 6 & 1020) >> 2] ^ HEAP[(t3 | x2 << 2 & 1020) >> 2] ^ HEAP[(k | i | 12) >> 2];
            x0 = y0, x1 = y1, x2 = y2, x3 = y3;
          }

          // final round
          S0 = HEAP[(s | x0 >> 22 & 1020) >> 2] << 24 ^ HEAP[(s | x1 >> 14 & 1020) >> 2] << 16 ^ HEAP[(s | x2 >> 6 & 1020) >> 2] << 8 ^ HEAP[(s | x3 << 2 & 1020) >> 2] ^ HEAP[(k | i | 0) >> 2],
            S1 = HEAP[(s | x1 >> 22 & 1020) >> 2] << 24 ^ HEAP[(s | x2 >> 14 & 1020) >> 2] << 16 ^ HEAP[(s | x3 >> 6 & 1020) >> 2] << 8 ^ HEAP[(s | x0 << 2 & 1020) >> 2] ^ HEAP[(k | i | 4) >> 2],
            S2 = HEAP[(s | x2 >> 22 & 1020) >> 2] << 24 ^ HEAP[(s | x3 >> 14 & 1020) >> 2] << 16 ^ HEAP[(s | x0 >> 6 & 1020) >> 2] << 8 ^ HEAP[(s | x1 << 2 & 1020) >> 2] ^ HEAP[(k | i | 8) >> 2],
            S3 = HEAP[(s | x3 >> 22 & 1020) >> 2] << 24 ^ HEAP[(s | x0 >> 14 & 1020) >> 2] << 16 ^ HEAP[(s | x1 >> 6 & 1020) >> 2] << 8 ^ HEAP[(s | x2 << 2 & 1020) >> 2] ^ HEAP[(k | i | 12) >> 2];
        }

        /**
         * ECB mode encryption
         * @param {number} x0 - 128-bit input block vector
         * @param {number} x1 - 128-bit input block vector
         * @param {number} x2 - 128-bit input block vector
         * @param {number} x3 - 128-bit input block vector
         */
        function _ecb_enc(x0, x1, x2, x3) {
          x0 = x0 | 0;
          x1 = x1 | 0;
          x2 = x2 | 0;
          x3 = x3 | 0;

          _core(
            0x0000, 0x0800, 0x1000,
            R,
            x0,
            x1,
            x2,
            x3
          );
        }

        /**
         * ECB mode decryption
         * @param {number} x0 - 128-bit input block vector
         * @param {number} x1 - 128-bit input block vector
         * @param {number} x2 - 128-bit input block vector
         * @param {number} x3 - 128-bit input block vector
         */
        function _ecb_dec(x0, x1, x2, x3) {
          x0 = x0 | 0;
          x1 = x1 | 0;
          x2 = x2 | 0;
          x3 = x3 | 0;

          var t = 0;

          _core(
            0x0400, 0x0c00, 0x2000,
            R,
            x0,
            x3,
            x2,
            x1
          );

          t = S1, S1 = S3, S3 = t;
        }


        /**
         * CBC mode encryption
         * @param {number} x0 - 128-bit input block vector
         * @param {number} x1 - 128-bit input block vector
         * @param {number} x2 - 128-bit input block vector
         * @param {number} x3 - 128-bit input block vector
         */
        function _cbc_enc(x0, x1, x2, x3) {
          x0 = x0 | 0;
          x1 = x1 | 0;
          x2 = x2 | 0;
          x3 = x3 | 0;

          _core(
            0x0000, 0x0800, 0x1000,
            R,
            I0 ^ x0,
            I1 ^ x1,
            I2 ^ x2,
            I3 ^ x3
          );

          I0 = S0,
            I1 = S1,
            I2 = S2,
            I3 = S3;
        }

        /**
         * CBC mode decryption
         * @param {number} x0 - 128-bit input block vector
         * @param {number} x1 - 128-bit input block vector
         * @param {number} x2 - 128-bit input block vector
         * @param {number} x3 - 128-bit input block vector
         */
        function _cbc_dec(x0, x1, x2, x3) {
          x0 = x0 | 0;
          x1 = x1 | 0;
          x2 = x2 | 0;
          x3 = x3 | 0;

          var t = 0;

          _core(
            0x0400, 0x0c00, 0x2000,
            R,
            x0,
            x3,
            x2,
            x1
          );

          t = S1, S1 = S3, S3 = t;

          S0 = S0 ^ I0,
            S1 = S1 ^ I1,
            S2 = S2 ^ I2,
            S3 = S3 ^ I3;

          I0 = x0,
            I1 = x1,
            I2 = x2,
            I3 = x3;
        }

        /**
         * CFB mode encryption
         * @param {number} x0 - 128-bit input block vector
         * @param {number} x1 - 128-bit input block vector
         * @param {number} x2 - 128-bit input block vector
         * @param {number} x3 - 128-bit input block vector
         */
        function _cfb_enc(x0, x1, x2, x3) {
          x0 = x0 | 0;
          x1 = x1 | 0;
          x2 = x2 | 0;
          x3 = x3 | 0;

          _core(
            0x0000, 0x0800, 0x1000,
            R,
            I0,
            I1,
            I2,
            I3
          );

          I0 = S0 = S0 ^ x0,
            I1 = S1 = S1 ^ x1,
            I2 = S2 = S2 ^ x2,
            I3 = S3 = S3 ^ x3;
        }


        /**
         * CFB mode decryption
         * @param {number} x0 - 128-bit input block vector
         * @param {number} x1 - 128-bit input block vector
         * @param {number} x2 - 128-bit input block vector
         * @param {number} x3 - 128-bit input block vector
         */
        function _cfb_dec(x0, x1, x2, x3) {
          x0 = x0 | 0;
          x1 = x1 | 0;
          x2 = x2 | 0;
          x3 = x3 | 0;

          _core(
            0x0000, 0x0800, 0x1000,
            R,
            I0,
            I1,
            I2,
            I3
          );

          S0 = S0 ^ x0,
            S1 = S1 ^ x1,
            S2 = S2 ^ x2,
            S3 = S3 ^ x3;

          I0 = x0,
            I1 = x1,
            I2 = x2,
            I3 = x3;
        }

        /**
         * OFB mode encryption / decryption
         * @param {number} x0 - 128-bit input block vector
         * @param {number} x1 - 128-bit input block vector
         * @param {number} x2 - 128-bit input block vector
         * @param {number} x3 - 128-bit input block vector
         */
        function _ofb(x0, x1, x2, x3) {
          x0 = x0 | 0;
          x1 = x1 | 0;
          x2 = x2 | 0;
          x3 = x3 | 0;

          _core(
            0x0000, 0x0800, 0x1000,
            R,
            I0,
            I1,
            I2,
            I3
          );

          I0 = S0,
            I1 = S1,
            I2 = S2,
            I3 = S3;

          S0 = S0 ^ x0,
            S1 = S1 ^ x1,
            S2 = S2 ^ x2,
            S3 = S3 ^ x3;
        }

        /**
         * CTR mode encryption / decryption
         * @param {number} x0 - 128-bit input block vector
         * @param {number} x1 - 128-bit input block vector
         * @param {number} x2 - 128-bit input block vector
         * @param {number} x3 - 128-bit input block vector
         */
        function _ctr(x0, x1, x2, x3) {
          x0 = x0 | 0;
          x1 = x1 | 0;
          x2 = x2 | 0;
          x3 = x3 | 0;

          _core(
            0x0000, 0x0800, 0x1000,
            R,
            N0,
            N1,
            N2,
            N3
          );

          N3 = (~M3 & N3) | M3 & (N3 + 1);
            N2 = (~M2 & N2) | M2 & (N2 + ((N3 | 0) == 0));
            N1 = (~M1 & N1) | M1 & (N1 + ((N2 | 0) == 0));
            N0 = (~M0 & N0) | M0 & (N0 + ((N1 | 0) == 0));

          S0 = S0 ^ x0;
            S1 = S1 ^ x1;
            S2 = S2 ^ x2;
            S3 = S3 ^ x3;
        }

        /**
         * GCM mode MAC calculation
         * @param {number} x0 - 128-bit input block vector
         * @param {number} x1 - 128-bit input block vector
         * @param {number} x2 - 128-bit input block vector
         * @param {number} x3 - 128-bit input block vector
         */
        function _gcm_mac(x0, x1, x2, x3) {
          x0 = x0 | 0;
          x1 = x1 | 0;
          x2 = x2 | 0;
          x3 = x3 | 0;

          var y0 = 0, y1 = 0, y2 = 0, y3 = 0,
            z0 = 0, z1 = 0, z2 = 0, z3 = 0,
            i = 0, c = 0;

          x0 = x0 ^ I0,
            x1 = x1 ^ I1,
            x2 = x2 ^ I2,
            x3 = x3 ^ I3;

          y0 = H0 | 0,
            y1 = H1 | 0,
            y2 = H2 | 0,
            y3 = H3 | 0;

          for (; (i | 0) < 128; i = (i + 1) | 0) {
            if (y0 >>> 31) {
              z0 = z0 ^ x0,
                z1 = z1 ^ x1,
                z2 = z2 ^ x2,
                z3 = z3 ^ x3;
            }

            y0 = (y0 << 1) | (y1 >>> 31),
              y1 = (y1 << 1) | (y2 >>> 31),
              y2 = (y2 << 1) | (y3 >>> 31),
              y3 = (y3 << 1);

            c = x3 & 1;

            x3 = (x3 >>> 1) | (x2 << 31),
              x2 = (x2 >>> 1) | (x1 << 31),
              x1 = (x1 >>> 1) | (x0 << 31),
              x0 = (x0 >>> 1);

            if (c) x0 = x0 ^ 0xe1000000;
          }

          I0 = z0,
            I1 = z1,
            I2 = z2,
            I3 = z3;
        }

        /**
         * Set the internal rounds number.
         * @instance
         * @memberof AES_asm
         * @param {number} r - number if inner AES rounds
         */
        function set_rounds(r) {
          r = r | 0;
          R = r;
        }

        /**
         * Populate the internal state of the module.
         * @instance
         * @memberof AES_asm
         * @param {number} s0 - state vector
         * @param {number} s1 - state vector
         * @param {number} s2 - state vector
         * @param {number} s3 - state vector
         */
        function set_state(s0, s1, s2, s3) {
          s0 = s0 | 0;
          s1 = s1 | 0;
          s2 = s2 | 0;
          s3 = s3 | 0;

          S0 = s0,
            S1 = s1,
            S2 = s2,
            S3 = s3;
        }

        /**
         * Populate the internal iv of the module.
         * @instance
         * @memberof AES_asm
         * @param {number} i0 - iv vector
         * @param {number} i1 - iv vector
         * @param {number} i2 - iv vector
         * @param {number} i3 - iv vector
         */
        function set_iv(i0, i1, i2, i3) {
          i0 = i0 | 0;
          i1 = i1 | 0;
          i2 = i2 | 0;
          i3 = i3 | 0;

          I0 = i0,
            I1 = i1,
            I2 = i2,
            I3 = i3;
        }

        /**
         * Set nonce for CTR-family modes.
         * @instance
         * @memberof AES_asm
         * @param {number} n0 - nonce vector
         * @param {number} n1 - nonce vector
         * @param {number} n2 - nonce vector
         * @param {number} n3 - nonce vector
         */
        function set_nonce(n0, n1, n2, n3) {
          n0 = n0 | 0;
          n1 = n1 | 0;
          n2 = n2 | 0;
          n3 = n3 | 0;

          N0 = n0,
            N1 = n1,
            N2 = n2,
            N3 = n3;
        }

        /**
         * Set counter mask for CTR-family modes.
         * @instance
         * @memberof AES_asm
         * @param {number} m0 - counter mask vector
         * @param {number} m1 - counter mask vector
         * @param {number} m2 - counter mask vector
         * @param {number} m3 - counter mask vector
         */
        function set_mask(m0, m1, m2, m3) {
          m0 = m0 | 0;
          m1 = m1 | 0;
          m2 = m2 | 0;
          m3 = m3 | 0;

          M0 = m0,
            M1 = m1,
            M2 = m2,
            M3 = m3;
        }

        /**
         * Set counter for CTR-family modes.
         * @instance
         * @memberof AES_asm
         * @param {number} c0 - counter vector
         * @param {number} c1 - counter vector
         * @param {number} c2 - counter vector
         * @param {number} c3 - counter vector
         */
        function set_counter(c0, c1, c2, c3) {
          c0 = c0 | 0;
          c1 = c1 | 0;
          c2 = c2 | 0;
          c3 = c3 | 0;

          N3 = (~M3 & N3) | M3 & c3,
            N2 = (~M2 & N2) | M2 & c2,
            N1 = (~M1 & N1) | M1 & c1,
            N0 = (~M0 & N0) | M0 & c0;
        }

        /**
         * Store the internal state vector into the heap.
         * @instance
         * @memberof AES_asm
         * @param {number} pos - offset where to put the data
         * @return {number} The number of bytes have been written into the heap, always 16.
         */
        function get_state(pos) {
          pos = pos | 0;

          if (pos & 15) return -1;

          DATA[pos | 0] = S0 >>> 24,
            DATA[pos | 1] = S0 >>> 16 & 255,
            DATA[pos | 2] = S0 >>> 8 & 255,
            DATA[pos | 3] = S0 & 255,
            DATA[pos | 4] = S1 >>> 24,
            DATA[pos | 5] = S1 >>> 16 & 255,
            DATA[pos | 6] = S1 >>> 8 & 255,
            DATA[pos | 7] = S1 & 255,
            DATA[pos | 8] = S2 >>> 24,
            DATA[pos | 9] = S2 >>> 16 & 255,
            DATA[pos | 10] = S2 >>> 8 & 255,
            DATA[pos | 11] = S2 & 255,
            DATA[pos | 12] = S3 >>> 24,
            DATA[pos | 13] = S3 >>> 16 & 255,
            DATA[pos | 14] = S3 >>> 8 & 255,
            DATA[pos | 15] = S3 & 255;

          return 16;
        }

        /**
         * Store the internal iv vector into the heap.
         * @instance
         * @memberof AES_asm
         * @param {number} pos - offset where to put the data
         * @return {number} The number of bytes have been written into the heap, always 16.
         */
        function get_iv(pos) {
          pos = pos | 0;

          if (pos & 15) return -1;

          DATA[pos | 0] = I0 >>> 24,
            DATA[pos | 1] = I0 >>> 16 & 255,
            DATA[pos | 2] = I0 >>> 8 & 255,
            DATA[pos | 3] = I0 & 255,
            DATA[pos | 4] = I1 >>> 24,
            DATA[pos | 5] = I1 >>> 16 & 255,
            DATA[pos | 6] = I1 >>> 8 & 255,
            DATA[pos | 7] = I1 & 255,
            DATA[pos | 8] = I2 >>> 24,
            DATA[pos | 9] = I2 >>> 16 & 255,
            DATA[pos | 10] = I2 >>> 8 & 255,
            DATA[pos | 11] = I2 & 255,
            DATA[pos | 12] = I3 >>> 24,
            DATA[pos | 13] = I3 >>> 16 & 255,
            DATA[pos | 14] = I3 >>> 8 & 255,
            DATA[pos | 15] = I3 & 255;

          return 16;
        }

        /**
         * GCM initialization.
         * @instance
         * @memberof AES_asm
         */
        function gcm_init() {
          _ecb_enc(0, 0, 0, 0);
          H0 = S0,
            H1 = S1,
            H2 = S2,
            H3 = S3;
        }

        /**
         * Perform ciphering operation on the supplied data.
         * @instance
         * @memberof AES_asm
         * @param {number} mode - block cipher mode (see {@link AES_asm} mode constants)
         * @param {number} pos - offset of the data being processed
         * @param {number} len - length of the data being processed
         * @return {number} Actual amount of data have been processed.
         */
        function cipher(mode, pos, len) {
          mode = mode | 0;
          pos = pos | 0;
          len = len | 0;

          var ret = 0;

          if (pos & 15) return -1;

          while ((len | 0) >= 16) {
            _cipher_modes[mode & 7](
              DATA[pos | 0] << 24 | DATA[pos | 1] << 16 | DATA[pos | 2] << 8 | DATA[pos | 3],
              DATA[pos | 4] << 24 | DATA[pos | 5] << 16 | DATA[pos | 6] << 8 | DATA[pos | 7],
              DATA[pos | 8] << 24 | DATA[pos | 9] << 16 | DATA[pos | 10] << 8 | DATA[pos | 11],
              DATA[pos | 12] << 24 | DATA[pos | 13] << 16 | DATA[pos | 14] << 8 | DATA[pos | 15]
            );

            DATA[pos | 0] = S0 >>> 24,
              DATA[pos | 1] = S0 >>> 16 & 255,
              DATA[pos | 2] = S0 >>> 8 & 255,
              DATA[pos | 3] = S0 & 255,
              DATA[pos | 4] = S1 >>> 24,
              DATA[pos | 5] = S1 >>> 16 & 255,
              DATA[pos | 6] = S1 >>> 8 & 255,
              DATA[pos | 7] = S1 & 255,
              DATA[pos | 8] = S2 >>> 24,
              DATA[pos | 9] = S2 >>> 16 & 255,
              DATA[pos | 10] = S2 >>> 8 & 255,
              DATA[pos | 11] = S2 & 255,
              DATA[pos | 12] = S3 >>> 24,
              DATA[pos | 13] = S3 >>> 16 & 255,
              DATA[pos | 14] = S3 >>> 8 & 255,
              DATA[pos | 15] = S3 & 255;

            ret = (ret + 16) | 0,
              pos = (pos + 16) | 0,
              len = (len - 16) | 0;
          }

          return ret | 0;
        }

        /**
         * Calculates MAC of the supplied data.
         * @instance
         * @memberof AES_asm
         * @param {number} mode - block cipher mode (see {@link AES_asm} mode constants)
         * @param {number} pos - offset of the data being processed
         * @param {number} len - length of the data being processed
         * @return {number} Actual amount of data have been processed.
         */
        function mac(mode, pos, len) {
          mode = mode | 0;
          pos = pos | 0;
          len = len | 0;

          var ret = 0;

          if (pos & 15) return -1;

          while ((len | 0) >= 16) {
            _mac_modes[mode & 1](
              DATA[pos | 0] << 24 | DATA[pos | 1] << 16 | DATA[pos | 2] << 8 | DATA[pos | 3],
              DATA[pos | 4] << 24 | DATA[pos | 5] << 16 | DATA[pos | 6] << 8 | DATA[pos | 7],
              DATA[pos | 8] << 24 | DATA[pos | 9] << 16 | DATA[pos | 10] << 8 | DATA[pos | 11],
              DATA[pos | 12] << 24 | DATA[pos | 13] << 16 | DATA[pos | 14] << 8 | DATA[pos | 15]
            );

            ret = (ret + 16) | 0,
              pos = (pos + 16) | 0,
              len = (len - 16) | 0;
          }

          return ret | 0;
        }

        /**
         * AES cipher modes table (virual methods)
         */
        var _cipher_modes = [_ecb_enc, _ecb_dec, _cbc_enc, _cbc_dec, _cfb_enc, _cfb_dec, _ofb, _ctr];

        /**
         * AES MAC modes table (virual methods)
         */
        var _mac_modes = [_cbc_enc, _gcm_mac];

        /**
         * Asm.js module exports
         */
        return {
          set_rounds: set_rounds,
          set_state: set_state,
          set_iv: set_iv,
          set_nonce: set_nonce,
          set_mask: set_mask,
          set_counter: set_counter,
          get_state: get_state,
          get_iv: get_iv,
          gcm_init: gcm_init,
          cipher: cipher,
          mac: mac,
        };
      }(stdlib, foreign, buffer);

      asm.set_key = set_key;

      return asm;
    };

    /**
     * AES enciphering mode constants
     * @enum {number}
     * @const
     */
    wrapper.ENC = {
      ECB: 0,
      CBC: 2,
      CFB: 4,
      OFB: 6,
      CTR: 7,
    },

      /**
       * AES deciphering mode constants
       * @enum {number}
       * @const
       */
      wrapper.DEC = {
        ECB: 1,
        CBC: 3,
        CFB: 5,
        OFB: 6,
        CTR: 7,
      },

      /**
       * AES MAC mode constants
       * @enum {number}
       * @const
       */
      wrapper.MAC = {
        CBC: 0,
        GCM: 1,
      };

    /**
     * Heap data offset
     * @type {number}
     * @const
     */
    wrapper.HEAP_DATA = 0x4000;

    return wrapper;
  }();

  class AES {
      constructor(key, iv, padding = true, mode) {
          this.pos = 0;
          this.len = 0;
          this.mode = mode;
          // The AES "worker"
          this.heap = _heap_init().subarray(AES_asm.HEAP_DATA);
          this.asm = new AES_asm(null, this.heap.buffer);
          // The AES object state
          this.pos = 0;
          this.len = 0;
          // Key
          const keylen = key.length;
          if (keylen !== 16 && keylen !== 24 && keylen !== 32)
              throw new IllegalArgumentError('illegal key size');
          const keyview = new DataView(key.buffer, key.byteOffset, key.byteLength);
          this.asm.set_key(keylen >> 2, keyview.getUint32(0), keyview.getUint32(4), keyview.getUint32(8), keyview.getUint32(12), keylen > 16 ? keyview.getUint32(16) : 0, keylen > 16 ? keyview.getUint32(20) : 0, keylen > 24 ? keyview.getUint32(24) : 0, keylen > 24 ? keyview.getUint32(28) : 0);
          // IV
          if (iv !== undefined) {
              if (iv.length !== 16)
                  throw new IllegalArgumentError('illegal iv size');
              let ivview = new DataView(iv.buffer, iv.byteOffset, iv.byteLength);
              this.asm.set_iv(ivview.getUint32(0), ivview.getUint32(4), ivview.getUint32(8), ivview.getUint32(12));
          }
          else {
              this.asm.set_iv(0, 0, 0, 0);
          }
          this.padding = padding;
      }
      AES_Encrypt_process(data) {
          if (!is_bytes(data))
              throw new TypeError("data isn't of expected type");
          let asm = this.asm;
          let heap = this.heap;
          let amode = AES_asm.ENC[this.mode];
          let hpos = AES_asm.HEAP_DATA;
          let pos = this.pos;
          let len = this.len;
          let dpos = 0;
          let dlen = data.length || 0;
          let rpos = 0;
          let rlen = (len + dlen) & -16;
          let wlen = 0;
          let result = new Uint8Array(rlen);
          while (dlen > 0) {
              wlen = _heap_write(heap, pos + len, data, dpos, dlen);
              len += wlen;
              dpos += wlen;
              dlen -= wlen;
              wlen = asm.cipher(amode, hpos + pos, len);
              if (wlen)
                  result.set(heap.subarray(pos, pos + wlen), rpos);
              rpos += wlen;
              if (wlen < len) {
                  pos += wlen;
                  len -= wlen;
              }
              else {
                  pos = 0;
                  len = 0;
              }
          }
          this.pos = pos;
          this.len = len;
          return result;
      }
      AES_Encrypt_finish() {
          let asm = this.asm;
          let heap = this.heap;
          let amode = AES_asm.ENC[this.mode];
          let hpos = AES_asm.HEAP_DATA;
          let pos = this.pos;
          let len = this.len;
          let plen = 16 - (len % 16);
          let rlen = len;
          if (this.hasOwnProperty('padding')) {
              if (this.padding) {
                  for (let p = 0; p < plen; ++p) {
                      heap[pos + len + p] = plen;
                  }
                  len += plen;
                  rlen = len;
              }
              else if (len % 16) {
                  throw new IllegalArgumentError('data length must be a multiple of the block size');
              }
          }
          else {
              len += plen;
          }
          const result = new Uint8Array(rlen);
          if (len)
              asm.cipher(amode, hpos + pos, len);
          if (rlen)
              result.set(heap.subarray(pos, pos + rlen));
          this.pos = 0;
          this.len = 0;
          return result;
      }
      AES_Decrypt_process(data) {
          if (!is_bytes(data))
              throw new TypeError("data isn't of expected type");
          let asm = this.asm;
          let heap = this.heap;
          let amode = AES_asm.DEC[this.mode];
          let hpos = AES_asm.HEAP_DATA;
          let pos = this.pos;
          let len = this.len;
          let dpos = 0;
          let dlen = data.length || 0;
          let rpos = 0;
          let rlen = (len + dlen) & -16;
          let plen = 0;
          let wlen = 0;
          if (this.padding) {
              plen = len + dlen - rlen || 16;
              rlen -= plen;
          }
          const result = new Uint8Array(rlen);
          while (dlen > 0) {
              wlen = _heap_write(heap, pos + len, data, dpos, dlen);
              len += wlen;
              dpos += wlen;
              dlen -= wlen;
              wlen = asm.cipher(amode, hpos + pos, len - (!dlen ? plen : 0));
              if (wlen)
                  result.set(heap.subarray(pos, pos + wlen), rpos);
              rpos += wlen;
              if (wlen < len) {
                  pos += wlen;
                  len -= wlen;
              }
              else {
                  pos = 0;
                  len = 0;
              }
          }
          this.pos = pos;
          this.len = len;
          return result;
      }
      AES_Decrypt_finish() {
          let asm = this.asm;
          let heap = this.heap;
          let amode = AES_asm.DEC[this.mode];
          let hpos = AES_asm.HEAP_DATA;
          let pos = this.pos;
          let len = this.len;
          let rlen = len;
          if (len > 0) {
              if (len % 16) {
                  if (this.hasOwnProperty('padding')) {
                      throw new IllegalArgumentError('data length must be a multiple of the block size');
                  }
                  else {
                      len += 16 - (len % 16);
                  }
              }
              asm.cipher(amode, hpos + pos, len);
              if (this.hasOwnProperty('padding') && this.padding) {
                  let pad = heap[pos + rlen - 1];
                  if (pad < 1 || pad > 16 || pad > rlen)
                      throw new SecurityError('bad padding');
                  let pcheck = 0;
                  for (let i = pad; i > 1; i--)
                      pcheck |= pad ^ heap[pos + rlen - i];
                  if (pcheck)
                      throw new SecurityError('bad padding');
                  rlen -= pad;
              }
          }
          const result = new Uint8Array(rlen);
          if (rlen > 0) {
              result.set(heap.subarray(pos, pos + rlen));
          }
          this.pos = 0;
          this.len = 0;
          return result;
      }
  }

  const _AES_GCM_data_maxLength = 68719476704; // 2^36 - 2^5
  class AES_GCM extends AES {
      constructor(key, nonce, adata, tagSize = 16) {
          super(key, undefined, false, 'CTR');
          this.tagSize = tagSize;
          this.gamma0 = 0;
          this.counter = 1;
          // Init GCM
          this.asm.gcm_init();
          // Tag size
          if (this.tagSize < 4 || this.tagSize > 16)
              throw new IllegalArgumentError('illegal tagSize value');
          // Nonce
          const noncelen = nonce.length || 0;
          const noncebuf = new Uint8Array(16);
          if (noncelen !== 12) {
              this._gcm_mac_process(nonce);
              this.heap[0] = 0;
              this.heap[1] = 0;
              this.heap[2] = 0;
              this.heap[3] = 0;
              this.heap[4] = 0;
              this.heap[5] = 0;
              this.heap[6] = 0;
              this.heap[7] = 0;
              this.heap[8] = 0;
              this.heap[9] = 0;
              this.heap[10] = 0;
              this.heap[11] = noncelen >>> 29;
              this.heap[12] = (noncelen >>> 21) & 255;
              this.heap[13] = (noncelen >>> 13) & 255;
              this.heap[14] = (noncelen >>> 5) & 255;
              this.heap[15] = (noncelen << 3) & 255;
              this.asm.mac(AES_asm.MAC.GCM, AES_asm.HEAP_DATA, 16);
              this.asm.get_iv(AES_asm.HEAP_DATA);
              this.asm.set_iv(0, 0, 0, 0);
              noncebuf.set(this.heap.subarray(0, 16));
          }
          else {
              noncebuf.set(nonce);
              noncebuf[15] = 1;
          }
          const nonceview = new DataView(noncebuf.buffer);
          this.gamma0 = nonceview.getUint32(12);
          this.asm.set_nonce(nonceview.getUint32(0), nonceview.getUint32(4), nonceview.getUint32(8), 0);
          this.asm.set_mask(0, 0, 0, 0xffffffff);
          // Associated data
          if (adata !== undefined) {
              if (adata.length > _AES_GCM_data_maxLength)
                  throw new IllegalArgumentError('illegal adata length');
              if (adata.length) {
                  this.adata = adata;
                  this._gcm_mac_process(adata);
              }
              else {
                  this.adata = undefined;
              }
          }
          else {
              this.adata = undefined;
          }
          // Counter
          if (this.counter < 1 || this.counter > 0xffffffff)
              throw new RangeError('counter must be a positive 32-bit integer');
          this.asm.set_counter(0, 0, 0, (this.gamma0 + this.counter) | 0);
      }
      static encrypt(cleartext, key, nonce, adata, tagsize) {
          return new AES_GCM(key, nonce, adata, tagsize).encrypt(cleartext);
      }
      static decrypt(ciphertext, key, nonce, adata, tagsize) {
          return new AES_GCM(key, nonce, adata, tagsize).decrypt(ciphertext);
      }
      encrypt(data) {
          return this.AES_GCM_encrypt(data);
      }
      decrypt(data) {
          return this.AES_GCM_decrypt(data);
      }
      AES_GCM_Encrypt_process(data) {
          let dpos = 0;
          let dlen = data.length || 0;
          let asm = this.asm;
          let heap = this.heap;
          let counter = this.counter;
          let pos = this.pos;
          let len = this.len;
          let rpos = 0;
          let rlen = (len + dlen) & -16;
          let wlen = 0;
          if (((counter - 1) << 4) + len + dlen > _AES_GCM_data_maxLength)
              throw new RangeError('counter overflow');
          const result = new Uint8Array(rlen);
          while (dlen > 0) {
              wlen = _heap_write(heap, pos + len, data, dpos, dlen);
              len += wlen;
              dpos += wlen;
              dlen -= wlen;
              wlen = asm.cipher(AES_asm.ENC.CTR, AES_asm.HEAP_DATA + pos, len);
              wlen = asm.mac(AES_asm.MAC.GCM, AES_asm.HEAP_DATA + pos, wlen);
              if (wlen)
                  result.set(heap.subarray(pos, pos + wlen), rpos);
              counter += wlen >>> 4;
              rpos += wlen;
              if (wlen < len) {
                  pos += wlen;
                  len -= wlen;
              }
              else {
                  pos = 0;
                  len = 0;
              }
          }
          this.counter = counter;
          this.pos = pos;
          this.len = len;
          return result;
      }
      AES_GCM_Encrypt_finish() {
          let asm = this.asm;
          let heap = this.heap;
          let counter = this.counter;
          let tagSize = this.tagSize;
          let adata = this.adata;
          let pos = this.pos;
          let len = this.len;
          const result = new Uint8Array(len + tagSize);
          asm.cipher(AES_asm.ENC.CTR, AES_asm.HEAP_DATA + pos, (len + 15) & -16);
          if (len)
              result.set(heap.subarray(pos, pos + len));
          let i = len;
          for (; i & 15; i++)
              heap[pos + i] = 0;
          asm.mac(AES_asm.MAC.GCM, AES_asm.HEAP_DATA + pos, i);
          const alen = adata !== undefined ? adata.length : 0;
          const clen = ((counter - 1) << 4) + len;
          heap[0] = 0;
          heap[1] = 0;
          heap[2] = 0;
          heap[3] = alen >>> 29;
          heap[4] = alen >>> 21;
          heap[5] = (alen >>> 13) & 255;
          heap[6] = (alen >>> 5) & 255;
          heap[7] = (alen << 3) & 255;
          heap[8] = heap[9] = heap[10] = 0;
          heap[11] = clen >>> 29;
          heap[12] = (clen >>> 21) & 255;
          heap[13] = (clen >>> 13) & 255;
          heap[14] = (clen >>> 5) & 255;
          heap[15] = (clen << 3) & 255;
          asm.mac(AES_asm.MAC.GCM, AES_asm.HEAP_DATA, 16);
          asm.get_iv(AES_asm.HEAP_DATA);
          asm.set_counter(0, 0, 0, this.gamma0);
          asm.cipher(AES_asm.ENC.CTR, AES_asm.HEAP_DATA, 16);
          result.set(heap.subarray(0, tagSize), len);
          this.counter = 1;
          this.pos = 0;
          this.len = 0;
          return result;
      }
      AES_GCM_Decrypt_process(data) {
          let dpos = 0;
          let dlen = data.length || 0;
          let asm = this.asm;
          let heap = this.heap;
          let counter = this.counter;
          let tagSize = this.tagSize;
          let pos = this.pos;
          let len = this.len;
          let rpos = 0;
          let rlen = len + dlen > tagSize ? (len + dlen - tagSize) & -16 : 0;
          let tlen = len + dlen - rlen;
          let wlen = 0;
          if (((counter - 1) << 4) + len + dlen > _AES_GCM_data_maxLength)
              throw new RangeError('counter overflow');
          const result = new Uint8Array(rlen);
          while (dlen > tlen) {
              wlen = _heap_write(heap, pos + len, data, dpos, dlen - tlen);
              len += wlen;
              dpos += wlen;
              dlen -= wlen;
              wlen = asm.mac(AES_asm.MAC.GCM, AES_asm.HEAP_DATA + pos, wlen);
              wlen = asm.cipher(AES_asm.DEC.CTR, AES_asm.HEAP_DATA + pos, wlen);
              if (wlen)
                  result.set(heap.subarray(pos, pos + wlen), rpos);
              counter += wlen >>> 4;
              rpos += wlen;
              pos = 0;
              len = 0;
          }
          if (dlen > 0) {
              len += _heap_write(heap, 0, data, dpos, dlen);
          }
          this.counter = counter;
          this.pos = pos;
          this.len = len;
          return result;
      }
      AES_GCM_Decrypt_finish() {
          let asm = this.asm;
          let heap = this.heap;
          let tagSize = this.tagSize;
          let adata = this.adata;
          let counter = this.counter;
          let pos = this.pos;
          let len = this.len;
          let rlen = len - tagSize;
          if (len < tagSize)
              throw new IllegalStateError('authentication tag not found');
          const result = new Uint8Array(rlen);
          const atag = new Uint8Array(heap.subarray(pos + rlen, pos + len));
          let i = rlen;
          for (; i & 15; i++)
              heap[pos + i] = 0;
          asm.mac(AES_asm.MAC.GCM, AES_asm.HEAP_DATA + pos, i);
          asm.cipher(AES_asm.DEC.CTR, AES_asm.HEAP_DATA + pos, i);
          if (rlen)
              result.set(heap.subarray(pos, pos + rlen));
          const alen = adata !== undefined ? adata.length : 0;
          const clen = ((counter - 1) << 4) + len - tagSize;
          heap[0] = 0;
          heap[1] = 0;
          heap[2] = 0;
          heap[3] = alen >>> 29;
          heap[4] = alen >>> 21;
          heap[5] = (alen >>> 13) & 255;
          heap[6] = (alen >>> 5) & 255;
          heap[7] = (alen << 3) & 255;
          heap[8] = heap[9] = heap[10] = 0;
          heap[11] = clen >>> 29;
          heap[12] = (clen >>> 21) & 255;
          heap[13] = (clen >>> 13) & 255;
          heap[14] = (clen >>> 5) & 255;
          heap[15] = (clen << 3) & 255;
          asm.mac(AES_asm.MAC.GCM, AES_asm.HEAP_DATA, 16);
          asm.get_iv(AES_asm.HEAP_DATA);
          asm.set_counter(0, 0, 0, this.gamma0);
          asm.cipher(AES_asm.ENC.CTR, AES_asm.HEAP_DATA, 16);
          let acheck = 0;
          for (let i = 0; i < tagSize; ++i)
              acheck |= atag[i] ^ heap[i];
          if (acheck)
              throw new SecurityError('data integrity check failed');
          this.counter = 1;
          this.pos = 0;
          this.len = 0;
          return result;
      }
      AES_GCM_decrypt(data) {
          const result1 = this.AES_GCM_Decrypt_process(data);
          const result2 = this.AES_GCM_Decrypt_finish();
          const result = new Uint8Array(result1.length + result2.length);
          if (result1.length)
              result.set(result1);
          if (result2.length)
              result.set(result2, result1.length);
          return result;
      }
      AES_GCM_encrypt(data) {
          const result1 = this.AES_GCM_Encrypt_process(data);
          const result2 = this.AES_GCM_Encrypt_finish();
          const result = new Uint8Array(result1.length + result2.length);
          if (result1.length)
              result.set(result1);
          if (result2.length)
              result.set(result2, result1.length);
          return result;
      }
      _gcm_mac_process(data) {
          const heap = this.heap;
          const asm = this.asm;
          let dpos = 0;
          let dlen = data.length || 0;
          let wlen = 0;
          while (dlen > 0) {
              wlen = _heap_write(heap, 0, data, dpos, dlen);
              dpos += wlen;
              dlen -= wlen;
              while (wlen & 15)
                  heap[wlen++] = 0;
              asm.mac(AES_asm.MAC.GCM, AES_asm.HEAP_DATA, wlen);
          }
      }
  }

  /**
   * Integers are represented as little endian array of 32-bit limbs.
   * Limbs number is a power of 2 and a multiple of 8 (256 bits).
   * Negative values use two's complement representation.
   */
  var bigint_asm = function ( stdlib, foreign, buffer ) {
      "use asm";

      var SP = 0;

      var HEAP32 = new stdlib.Uint32Array(buffer);

      var imul = stdlib.Math.imul;

      /**
       * Simple stack memory allocator
       *
       * Methods:
       *  sreset
       *  salloc
       *  sfree
       */

      function sreset ( p ) {
          p = p|0;
          SP = p = (p + 31) & -32;
          return p|0;
      }

      function salloc ( l ) {
          l = l|0;
          var p = 0; p = SP;
          SP = p + ((l + 31) & -32)|0;
          return p|0;
      }

      function sfree ( l ) {
          l = l|0;
          SP = SP - ((l + 31) & -32)|0;
      }

      /**
       * Utility functions:
       *  cp
       *  z
       */

      function cp ( l, A, B ) {
          l = l|0;
          A = A|0;
          B = B|0;

          var i = 0;

          if ( (A|0) > (B|0) ) {
              for ( ; (i|0) < (l|0); i = (i+4)|0 ) {
                  HEAP32[(B+i)>>2] = HEAP32[(A+i)>>2];
              }
          }
          else {
              for ( i = (l-4)|0; (i|0) >= 0; i = (i-4)|0 ) {
                  HEAP32[(B+i)>>2] = HEAP32[(A+i)>>2];
              }
          }
      }

      function z ( l, z, A ) {
          l = l|0;
          z = z|0;
          A = A|0;

          var i = 0;

          for ( ; (i|0) < (l|0); i = (i+4)|0 ) {
              HEAP32[(A+i)>>2] = z;
          }
      }

      /**
       * Negate the argument
       *
       * Perform two's complement transformation:
       *
       *  -A = ~A + 1
       *
       * @param A offset of the argment being negated, 32-byte aligned
       * @param lA length of the argument, multiple of 32
       *
       * @param R offset where to place the result to, 32-byte aligned
       * @param lR length to truncate the result to, multiple of 32
       */
      function neg ( A, lA, R, lR ) {
          A  =  A|0;
          lA = lA|0;
          R  =  R|0;
          lR = lR|0;

          var a = 0, c = 0, t = 0, r = 0, i = 0;

          if ( (lR|0) <= 0 )
              lR = lA;

          if ( (lR|0) < (lA|0) )
              lA = lR;

          c = 1;
          for ( ; (i|0) < (lA|0); i = (i+4)|0 ) {
              a = ~HEAP32[(A+i)>>2];
              t = (a & 0xffff) + c|0;
              r = (a >>> 16) + (t >>> 16)|0;
              HEAP32[(R+i)>>2] = (r << 16) | (t & 0xffff);
              c = r >>> 16;
          }

          for ( ; (i|0) < (lR|0); i = (i+4)|0 ) {
              HEAP32[(R+i)>>2] = (c-1)|0;
          }

          return c|0;
      }

      function cmp ( A, lA, B, lB ) {
          A  =  A|0;
          lA = lA|0;
          B  =  B|0;
          lB = lB|0;

          var a = 0, b = 0, i = 0;

          if ( (lA|0) > (lB|0) ) {
              for ( i = (lA-4)|0; (i|0) >= (lB|0); i = (i-4)|0 ) {
                  if ( HEAP32[(A+i)>>2]|0 ) return 1;
              }
          }
          else {
              for ( i = (lB-4)|0; (i|0) >= (lA|0); i = (i-4)|0 ) {
                  if ( HEAP32[(B+i)>>2]|0 ) return -1;
              }
          }

          for ( ; (i|0) >= 0; i = (i-4)|0 ) {
              a = HEAP32[(A+i)>>2]|0, b = HEAP32[(B+i)>>2]|0;
              if ( (a>>>0) < (b>>>0) ) return -1;
              if ( (a>>>0) > (b>>>0) ) return 1;
          }

          return 0;
      }

      /**
       * Test the argument
       *
       * Same as `cmp` with zero.
       */
      function tst ( A, lA ) {
          A  =  A|0;
          lA = lA|0;

          var i = 0;

          for ( i = (lA-4)|0; (i|0) >= 0; i = (i-4)|0 ) {
              if ( HEAP32[(A+i)>>2]|0 ) return (i+4)|0;
          }

          return 0;
      }

      /**
       * Conventional addition
       *
       * @param A offset of the first argument, 32-byte aligned
       * @param lA length of the first argument, multiple of 32
       *
       * @param B offset of the second argument, 32-bit aligned
       * @param lB length of the second argument, multiple of 32
       *
       * @param R offset where to place the result to, 32-byte aligned
       * @param lR length to truncate the result to, multiple of 32
       */
      function add ( A, lA, B, lB, R, lR ) {
          A  =  A|0;
          lA = lA|0;
          B  =  B|0;
          lB = lB|0;
          R  =  R|0;
          lR = lR|0;

          var a = 0, b = 0, c = 0, t = 0, r = 0, i = 0;

          if ( (lA|0) < (lB|0) ) {
              t = A, A = B, B = t;
              t = lA, lA = lB, lB = t;
          }

          if ( (lR|0) <= 0 )
              lR = lA+4|0;

          if ( (lR|0) < (lB|0) )
              lA = lB = lR;

          for ( ; (i|0) < (lB|0); i = (i+4)|0 ) {
              a = HEAP32[(A+i)>>2]|0;
              b = HEAP32[(B+i)>>2]|0;
              t = ( (a & 0xffff) + (b & 0xffff)|0 ) + c|0;
              r = ( (a >>> 16) + (b >>> 16)|0 ) + (t >>> 16)|0;
              HEAP32[(R+i)>>2] = (t & 0xffff) | (r << 16);
              c = r >>> 16;
          }

          for ( ; (i|0) < (lA|0); i = (i+4)|0 ) {
              a = HEAP32[(A+i)>>2]|0;
              t = (a & 0xffff) + c|0;
              r = (a >>> 16) + (t >>> 16)|0;
              HEAP32[(R+i)>>2] = (t & 0xffff) | (r << 16);
              c = r >>> 16;
          }

          for ( ; (i|0) < (lR|0); i = (i+4)|0 ) {
              HEAP32[(R+i)>>2] = c|0;
              c = 0;
          }

          return c|0;
      }

     /**
       * Conventional subtraction
       *
       * @param A offset of the first argument, 32-byte aligned
       * @param lA length of the first argument, multiple of 32
       *
       * @param B offset of the second argument, 32-bit aligned
       * @param lB length of the second argument, multiple of 32
       *
       * @param R offset where to place the result to, 32-byte aligned
       * @param lR length to truncate the result to, multiple of 32
       */
      function sub ( A, lA, B, lB, R, lR ) {
          A  =  A|0;
          lA = lA|0;
          B  =  B|0;
          lB = lB|0;
          R  =  R|0;
          lR = lR|0;

          var a = 0, b = 0, c = 0, t = 0, r = 0, i = 0;

          if ( (lR|0) <= 0 )
              lR = (lA|0) > (lB|0) ? lA+4|0 : lB+4|0;

          if ( (lR|0) < (lA|0) )
              lA = lR;

          if ( (lR|0) < (lB|0) )
              lB = lR;

          if ( (lA|0) < (lB|0) ) {
              for ( ; (i|0) < (lA|0); i = (i+4)|0 ) {
                  a = HEAP32[(A+i)>>2]|0;
                  b = HEAP32[(B+i)>>2]|0;
                  t = ( (a & 0xffff) - (b & 0xffff)|0 ) + c|0;
                  r = ( (a >>> 16) - (b >>> 16)|0 ) + (t >> 16)|0;
                  HEAP32[(R+i)>>2] = (t & 0xffff) | (r << 16);
                  c = r >> 16;
              }

              for ( ; (i|0) < (lB|0); i = (i+4)|0 ) {
                  b = HEAP32[(B+i)>>2]|0;
                  t = c - (b & 0xffff)|0;
                  r = (t >> 16) - (b >>> 16)|0;
                  HEAP32[(R+i)>>2] = (t & 0xffff) | (r << 16);
                  c = r >> 16;
              }
          }
          else {
              for ( ; (i|0) < (lB|0); i = (i+4)|0 ) {
                  a = HEAP32[(A+i)>>2]|0;
                  b = HEAP32[(B+i)>>2]|0;
                  t = ( (a & 0xffff) - (b & 0xffff)|0 ) + c|0;
                  r = ( (a >>> 16) - (b >>> 16)|0 ) + (t >> 16)|0;
                  HEAP32[(R+i)>>2] = (t & 0xffff) | (r << 16);
                  c = r >> 16;
              }

              for ( ; (i|0) < (lA|0); i = (i+4)|0 ) {
                  a = HEAP32[(A+i)>>2]|0;
                  t = (a & 0xffff) + c|0;
                  r = (a >>> 16) + (t >> 16)|0;
                  HEAP32[(R+i)>>2] = (t & 0xffff) | (r << 16);
                  c = r >> 16;
              }
          }

          for ( ; (i|0) < (lR|0); i = (i+4)|0 ) {
              HEAP32[(R+i)>>2] = c|0;
          }

          return c|0;
      }

      /**
       * Conventional multiplication
       *
       * TODO implement Karatsuba algorithm for large multiplicands
       *
       * @param A offset of the first argument, 32-byte aligned
       * @param lA length of the first argument, multiple of 32
       *
       * @param B offset of the second argument, 32-byte aligned
       * @param lB length of the second argument, multiple of 32
       *
       * @param R offset where to place the result to, 32-byte aligned
       * @param lR length to truncate the result to, multiple of 32
       */
      function mul ( A, lA, B, lB, R, lR ) {
          A  =  A|0;
          lA = lA|0;
          B  =  B|0;
          lB = lB|0;
          R  =  R|0;
          lR = lR|0;

          var al0 = 0, al1 = 0, al2 = 0, al3 = 0, al4 = 0, al5 = 0, al6 = 0, al7 = 0, ah0 = 0, ah1 = 0, ah2 = 0, ah3 = 0, ah4 = 0, ah5 = 0, ah6 = 0, ah7 = 0,
              bl0 = 0, bl1 = 0, bl2 = 0, bl3 = 0, bl4 = 0, bl5 = 0, bl6 = 0, bl7 = 0, bh0 = 0, bh1 = 0, bh2 = 0, bh3 = 0, bh4 = 0, bh5 = 0, bh6 = 0, bh7 = 0,
              r0 = 0, r1 = 0, r2 = 0, r3 = 0, r4 = 0, r5 = 0, r6 = 0, r7 = 0, r8 = 0, r9 = 0, r10 = 0, r11 = 0, r12 = 0, r13 = 0, r14 = 0, r15 = 0,
              u = 0, v = 0, w = 0, m = 0,
              i = 0, Ai = 0, j = 0, Bj = 0, Rk = 0;

          if ( (lA|0) > (lB|0) ) {
              u = A, v = lA;
              A = B, lA = lB;
              B = u, lB = v;
          }

          m = (lA+lB)|0;
          if ( ( (lR|0) > (m|0) ) | ( (lR|0) <= 0 ) )
              lR = m;

          if ( (lR|0) < (lA|0) )
              lA = lR;

          if ( (lR|0) < (lB|0) )
              lB = lR;

          for ( ; (i|0) < (lA|0); i = (i+32)|0 ) {
              Ai = (A+i)|0;

              ah0 = HEAP32[(Ai|0)>>2]|0,
              ah1 = HEAP32[(Ai|4)>>2]|0,
              ah2 = HEAP32[(Ai|8)>>2]|0,
              ah3 = HEAP32[(Ai|12)>>2]|0,
              ah4 = HEAP32[(Ai|16)>>2]|0,
              ah5 = HEAP32[(Ai|20)>>2]|0,
              ah6 = HEAP32[(Ai|24)>>2]|0,
              ah7 = HEAP32[(Ai|28)>>2]|0,
              al0 = ah0 & 0xffff,
              al1 = ah1 & 0xffff,
              al2 = ah2 & 0xffff,
              al3 = ah3 & 0xffff,
              al4 = ah4 & 0xffff,
              al5 = ah5 & 0xffff,
              al6 = ah6 & 0xffff,
              al7 = ah7 & 0xffff,
              ah0 = ah0 >>> 16,
              ah1 = ah1 >>> 16,
              ah2 = ah2 >>> 16,
              ah3 = ah3 >>> 16,
              ah4 = ah4 >>> 16,
              ah5 = ah5 >>> 16,
              ah6 = ah6 >>> 16,
              ah7 = ah7 >>> 16;

              r8 = r9 = r10 = r11 = r12 = r13 = r14 = r15 = 0;

              for ( j = 0; (j|0) < (lB|0); j = (j+32)|0 ) {
                  Bj = (B+j)|0;
                  Rk = (R+(i+j|0))|0;

                  bh0 = HEAP32[(Bj|0)>>2]|0,
                  bh1 = HEAP32[(Bj|4)>>2]|0,
                  bh2 = HEAP32[(Bj|8)>>2]|0,
                  bh3 = HEAP32[(Bj|12)>>2]|0,
                  bh4 = HEAP32[(Bj|16)>>2]|0,
                  bh5 = HEAP32[(Bj|20)>>2]|0,
                  bh6 = HEAP32[(Bj|24)>>2]|0,
                  bh7 = HEAP32[(Bj|28)>>2]|0,
                  bl0 = bh0 & 0xffff,
                  bl1 = bh1 & 0xffff,
                  bl2 = bh2 & 0xffff,
                  bl3 = bh3 & 0xffff,
                  bl4 = bh4 & 0xffff,
                  bl5 = bh5 & 0xffff,
                  bl6 = bh6 & 0xffff,
                  bl7 = bh7 & 0xffff,
                  bh0 = bh0 >>> 16,
                  bh1 = bh1 >>> 16,
                  bh2 = bh2 >>> 16,
                  bh3 = bh3 >>> 16,
                  bh4 = bh4 >>> 16,
                  bh5 = bh5 >>> 16,
                  bh6 = bh6 >>> 16,
                  bh7 = bh7 >>> 16;

                  r0 = HEAP32[(Rk|0)>>2]|0,
                  r1 = HEAP32[(Rk|4)>>2]|0,
                  r2 = HEAP32[(Rk|8)>>2]|0,
                  r3 = HEAP32[(Rk|12)>>2]|0,
                  r4 = HEAP32[(Rk|16)>>2]|0,
                  r5 = HEAP32[(Rk|20)>>2]|0,
                  r6 = HEAP32[(Rk|24)>>2]|0,
                  r7 = HEAP32[(Rk|28)>>2]|0;

                  u = ((imul(al0, bl0)|0) + (r8 & 0xffff)|0) + (r0 & 0xffff)|0;
                  v = ((imul(ah0, bl0)|0) + (r8 >>> 16)|0) + (r0 >>> 16)|0;
                  w = ((imul(al0, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah0, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r0 = (w << 16) | (u & 0xffff);

                  u = ((imul(al0, bl1)|0) + (m & 0xffff)|0) + (r1 & 0xffff)|0;
                  v = ((imul(ah0, bl1)|0) + (m >>> 16)|0) + (r1 >>> 16)|0;
                  w = ((imul(al0, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah0, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r1 = (w << 16) | (u & 0xffff);

                  u = ((imul(al0, bl2)|0) + (m & 0xffff)|0) + (r2 & 0xffff)|0;
                  v = ((imul(ah0, bl2)|0) + (m >>> 16)|0) + (r2 >>> 16)|0;
                  w = ((imul(al0, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah0, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r2 = (w << 16) | (u & 0xffff);

                  u = ((imul(al0, bl3)|0) + (m & 0xffff)|0) + (r3 & 0xffff)|0;
                  v = ((imul(ah0, bl3)|0) + (m >>> 16)|0) + (r3 >>> 16)|0;
                  w = ((imul(al0, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah0, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r3 = (w << 16) | (u & 0xffff);

                  u = ((imul(al0, bl4)|0) + (m & 0xffff)|0) + (r4 & 0xffff)|0;
                  v = ((imul(ah0, bl4)|0) + (m >>> 16)|0) + (r4 >>> 16)|0;
                  w = ((imul(al0, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah0, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r4 = (w << 16) | (u & 0xffff);

                  u = ((imul(al0, bl5)|0) + (m & 0xffff)|0) + (r5 & 0xffff)|0;
                  v = ((imul(ah0, bl5)|0) + (m >>> 16)|0) + (r5 >>> 16)|0;
                  w = ((imul(al0, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah0, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r5 = (w << 16) | (u & 0xffff);

                  u = ((imul(al0, bl6)|0) + (m & 0xffff)|0) + (r6 & 0xffff)|0;
                  v = ((imul(ah0, bl6)|0) + (m >>> 16)|0) + (r6 >>> 16)|0;
                  w = ((imul(al0, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah0, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r6 = (w << 16) | (u & 0xffff);

                  u = ((imul(al0, bl7)|0) + (m & 0xffff)|0) + (r7 & 0xffff)|0;
                  v = ((imul(ah0, bl7)|0) + (m >>> 16)|0) + (r7 >>> 16)|0;
                  w = ((imul(al0, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah0, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r7 = (w << 16) | (u & 0xffff);

                  r8 = m;

                  u = ((imul(al1, bl0)|0) + (r9 & 0xffff)|0) + (r1 & 0xffff)|0;
                  v = ((imul(ah1, bl0)|0) + (r9 >>> 16)|0) + (r1 >>> 16)|0;
                  w = ((imul(al1, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah1, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r1 = (w << 16) | (u & 0xffff);

                  u = ((imul(al1, bl1)|0) + (m & 0xffff)|0) + (r2 & 0xffff)|0;
                  v = ((imul(ah1, bl1)|0) + (m >>> 16)|0) + (r2 >>> 16)|0;
                  w = ((imul(al1, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah1, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r2 = (w << 16) | (u & 0xffff);

                  u = ((imul(al1, bl2)|0) + (m & 0xffff)|0) + (r3 & 0xffff)|0;
                  v = ((imul(ah1, bl2)|0) + (m >>> 16)|0) + (r3 >>> 16)|0;
                  w = ((imul(al1, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah1, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r3 = (w << 16) | (u & 0xffff);

                  u = ((imul(al1, bl3)|0) + (m & 0xffff)|0) + (r4 & 0xffff)|0;
                  v = ((imul(ah1, bl3)|0) + (m >>> 16)|0) + (r4 >>> 16)|0;
                  w = ((imul(al1, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah1, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r4 = (w << 16) | (u & 0xffff);

                  u = ((imul(al1, bl4)|0) + (m & 0xffff)|0) + (r5 & 0xffff)|0;
                  v = ((imul(ah1, bl4)|0) + (m >>> 16)|0) + (r5 >>> 16)|0;
                  w = ((imul(al1, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah1, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r5 = (w << 16) | (u & 0xffff);

                  u = ((imul(al1, bl5)|0) + (m & 0xffff)|0) + (r6 & 0xffff)|0;
                  v = ((imul(ah1, bl5)|0) + (m >>> 16)|0) + (r6 >>> 16)|0;
                  w = ((imul(al1, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah1, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r6 = (w << 16) | (u & 0xffff);

                  u = ((imul(al1, bl6)|0) + (m & 0xffff)|0) + (r7 & 0xffff)|0;
                  v = ((imul(ah1, bl6)|0) + (m >>> 16)|0) + (r7 >>> 16)|0;
                  w = ((imul(al1, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah1, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r7 = (w << 16) | (u & 0xffff);

                  u = ((imul(al1, bl7)|0) + (m & 0xffff)|0) + (r8 & 0xffff)|0;
                  v = ((imul(ah1, bl7)|0) + (m >>> 16)|0) + (r8 >>> 16)|0;
                  w = ((imul(al1, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah1, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r8 = (w << 16) | (u & 0xffff);

                  r9 = m;

                  u = ((imul(al2, bl0)|0) + (r10 & 0xffff)|0) + (r2 & 0xffff)|0;
                  v = ((imul(ah2, bl0)|0) + (r10 >>> 16)|0) + (r2 >>> 16)|0;
                  w = ((imul(al2, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah2, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r2 = (w << 16) | (u & 0xffff);

                  u = ((imul(al2, bl1)|0) + (m & 0xffff)|0) + (r3 & 0xffff)|0;
                  v = ((imul(ah2, bl1)|0) + (m >>> 16)|0) + (r3 >>> 16)|0;
                  w = ((imul(al2, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah2, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r3 = (w << 16) | (u & 0xffff);

                  u = ((imul(al2, bl2)|0) + (m & 0xffff)|0) + (r4 & 0xffff)|0;
                  v = ((imul(ah2, bl2)|0) + (m >>> 16)|0) + (r4 >>> 16)|0;
                  w = ((imul(al2, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah2, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r4 = (w << 16) | (u & 0xffff);

                  u = ((imul(al2, bl3)|0) + (m & 0xffff)|0) + (r5 & 0xffff)|0;
                  v = ((imul(ah2, bl3)|0) + (m >>> 16)|0) + (r5 >>> 16)|0;
                  w = ((imul(al2, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah2, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r5 = (w << 16) | (u & 0xffff);

                  u = ((imul(al2, bl4)|0) + (m & 0xffff)|0) + (r6 & 0xffff)|0;
                  v = ((imul(ah2, bl4)|0) + (m >>> 16)|0) + (r6 >>> 16)|0;
                  w = ((imul(al2, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah2, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r6 = (w << 16) | (u & 0xffff);

                  u = ((imul(al2, bl5)|0) + (m & 0xffff)|0) + (r7 & 0xffff)|0;
                  v = ((imul(ah2, bl5)|0) + (m >>> 16)|0) + (r7 >>> 16)|0;
                  w = ((imul(al2, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah2, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r7 = (w << 16) | (u & 0xffff);

                  u = ((imul(al2, bl6)|0) + (m & 0xffff)|0) + (r8 & 0xffff)|0;
                  v = ((imul(ah2, bl6)|0) + (m >>> 16)|0) + (r8 >>> 16)|0;
                  w = ((imul(al2, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah2, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r8 = (w << 16) | (u & 0xffff);

                  u = ((imul(al2, bl7)|0) + (m & 0xffff)|0) + (r9 & 0xffff)|0;
                  v = ((imul(ah2, bl7)|0) + (m >>> 16)|0) + (r9 >>> 16)|0;
                  w = ((imul(al2, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah2, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r9 = (w << 16) | (u & 0xffff);

                  r10 = m;

                  u = ((imul(al3, bl0)|0) + (r11 & 0xffff)|0) + (r3 & 0xffff)|0;
                  v = ((imul(ah3, bl0)|0) + (r11 >>> 16)|0) + (r3 >>> 16)|0;
                  w = ((imul(al3, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah3, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r3 = (w << 16) | (u & 0xffff);

                  u = ((imul(al3, bl1)|0) + (m & 0xffff)|0) + (r4 & 0xffff)|0;
                  v = ((imul(ah3, bl1)|0) + (m >>> 16)|0) + (r4 >>> 16)|0;
                  w = ((imul(al3, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah3, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r4 = (w << 16) | (u & 0xffff);

                  u = ((imul(al3, bl2)|0) + (m & 0xffff)|0) + (r5 & 0xffff)|0;
                  v = ((imul(ah3, bl2)|0) + (m >>> 16)|0) + (r5 >>> 16)|0;
                  w = ((imul(al3, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah3, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r5 = (w << 16) | (u & 0xffff);

                  u = ((imul(al3, bl3)|0) + (m & 0xffff)|0) + (r6 & 0xffff)|0;
                  v = ((imul(ah3, bl3)|0) + (m >>> 16)|0) + (r6 >>> 16)|0;
                  w = ((imul(al3, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah3, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r6 = (w << 16) | (u & 0xffff);

                  u = ((imul(al3, bl4)|0) + (m & 0xffff)|0) + (r7 & 0xffff)|0;
                  v = ((imul(ah3, bl4)|0) + (m >>> 16)|0) + (r7 >>> 16)|0;
                  w = ((imul(al3, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah3, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r7 = (w << 16) | (u & 0xffff);

                  u = ((imul(al3, bl5)|0) + (m & 0xffff)|0) + (r8 & 0xffff)|0;
                  v = ((imul(ah3, bl5)|0) + (m >>> 16)|0) + (r8 >>> 16)|0;
                  w = ((imul(al3, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah3, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r8 = (w << 16) | (u & 0xffff);

                  u = ((imul(al3, bl6)|0) + (m & 0xffff)|0) + (r9 & 0xffff)|0;
                  v = ((imul(ah3, bl6)|0) + (m >>> 16)|0) + (r9 >>> 16)|0;
                  w = ((imul(al3, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah3, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r9 = (w << 16) | (u & 0xffff);

                  u = ((imul(al3, bl7)|0) + (m & 0xffff)|0) + (r10 & 0xffff)|0;
                  v = ((imul(ah3, bl7)|0) + (m >>> 16)|0) + (r10 >>> 16)|0;
                  w = ((imul(al3, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah3, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r10 = (w << 16) | (u & 0xffff);

                  r11 = m;

                  u = ((imul(al4, bl0)|0) + (r12 & 0xffff)|0) + (r4 & 0xffff)|0;
                  v = ((imul(ah4, bl0)|0) + (r12 >>> 16)|0) + (r4 >>> 16)|0;
                  w = ((imul(al4, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah4, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r4 = (w << 16) | (u & 0xffff);

                  u = ((imul(al4, bl1)|0) + (m & 0xffff)|0) + (r5 & 0xffff)|0;
                  v = ((imul(ah4, bl1)|0) + (m >>> 16)|0) + (r5 >>> 16)|0;
                  w = ((imul(al4, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah4, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r5 = (w << 16) | (u & 0xffff);

                  u = ((imul(al4, bl2)|0) + (m & 0xffff)|0) + (r6 & 0xffff)|0;
                  v = ((imul(ah4, bl2)|0) + (m >>> 16)|0) + (r6 >>> 16)|0;
                  w = ((imul(al4, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah4, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r6 = (w << 16) | (u & 0xffff);

                  u = ((imul(al4, bl3)|0) + (m & 0xffff)|0) + (r7 & 0xffff)|0;
                  v = ((imul(ah4, bl3)|0) + (m >>> 16)|0) + (r7 >>> 16)|0;
                  w = ((imul(al4, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah4, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r7 = (w << 16) | (u & 0xffff);

                  u = ((imul(al4, bl4)|0) + (m & 0xffff)|0) + (r8 & 0xffff)|0;
                  v = ((imul(ah4, bl4)|0) + (m >>> 16)|0) + (r8 >>> 16)|0;
                  w = ((imul(al4, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah4, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r8 = (w << 16) | (u & 0xffff);

                  u = ((imul(al4, bl5)|0) + (m & 0xffff)|0) + (r9 & 0xffff)|0;
                  v = ((imul(ah4, bl5)|0) + (m >>> 16)|0) + (r9 >>> 16)|0;
                  w = ((imul(al4, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah4, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r9 = (w << 16) | (u & 0xffff);

                  u = ((imul(al4, bl6)|0) + (m & 0xffff)|0) + (r10 & 0xffff)|0;
                  v = ((imul(ah4, bl6)|0) + (m >>> 16)|0) + (r10 >>> 16)|0;
                  w = ((imul(al4, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah4, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r10 = (w << 16) | (u & 0xffff);

                  u = ((imul(al4, bl7)|0) + (m & 0xffff)|0) + (r11 & 0xffff)|0;
                  v = ((imul(ah4, bl7)|0) + (m >>> 16)|0) + (r11 >>> 16)|0;
                  w = ((imul(al4, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah4, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r11 = (w << 16) | (u & 0xffff);

                  r12 = m;

                  u = ((imul(al5, bl0)|0) + (r13 & 0xffff)|0) + (r5 & 0xffff)|0;
                  v = ((imul(ah5, bl0)|0) + (r13 >>> 16)|0) + (r5 >>> 16)|0;
                  w = ((imul(al5, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah5, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r5 = (w << 16) | (u & 0xffff);

                  u = ((imul(al5, bl1)|0) + (m & 0xffff)|0) + (r6 & 0xffff)|0;
                  v = ((imul(ah5, bl1)|0) + (m >>> 16)|0) + (r6 >>> 16)|0;
                  w = ((imul(al5, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah5, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r6 = (w << 16) | (u & 0xffff);

                  u = ((imul(al5, bl2)|0) + (m & 0xffff)|0) + (r7 & 0xffff)|0;
                  v = ((imul(ah5, bl2)|0) + (m >>> 16)|0) + (r7 >>> 16)|0;
                  w = ((imul(al5, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah5, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r7 = (w << 16) | (u & 0xffff);

                  u = ((imul(al5, bl3)|0) + (m & 0xffff)|0) + (r8 & 0xffff)|0;
                  v = ((imul(ah5, bl3)|0) + (m >>> 16)|0) + (r8 >>> 16)|0;
                  w = ((imul(al5, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah5, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r8 = (w << 16) | (u & 0xffff);

                  u = ((imul(al5, bl4)|0) + (m & 0xffff)|0) + (r9 & 0xffff)|0;
                  v = ((imul(ah5, bl4)|0) + (m >>> 16)|0) + (r9 >>> 16)|0;
                  w = ((imul(al5, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah5, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r9 = (w << 16) | (u & 0xffff);

                  u = ((imul(al5, bl5)|0) + (m & 0xffff)|0) + (r10 & 0xffff)|0;
                  v = ((imul(ah5, bl5)|0) + (m >>> 16)|0) + (r10 >>> 16)|0;
                  w = ((imul(al5, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah5, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r10 = (w << 16) | (u & 0xffff);

                  u = ((imul(al5, bl6)|0) + (m & 0xffff)|0) + (r11 & 0xffff)|0;
                  v = ((imul(ah5, bl6)|0) + (m >>> 16)|0) + (r11 >>> 16)|0;
                  w = ((imul(al5, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah5, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r11 = (w << 16) | (u & 0xffff);

                  u = ((imul(al5, bl7)|0) + (m & 0xffff)|0) + (r12 & 0xffff)|0;
                  v = ((imul(ah5, bl7)|0) + (m >>> 16)|0) + (r12 >>> 16)|0;
                  w = ((imul(al5, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah5, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r12 = (w << 16) | (u & 0xffff);

                  r13 = m;

                  u = ((imul(al6, bl0)|0) + (r14 & 0xffff)|0) + (r6 & 0xffff)|0;
                  v = ((imul(ah6, bl0)|0) + (r14 >>> 16)|0) + (r6 >>> 16)|0;
                  w = ((imul(al6, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah6, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r6 = (w << 16) | (u & 0xffff);

                  u = ((imul(al6, bl1)|0) + (m & 0xffff)|0) + (r7 & 0xffff)|0;
                  v = ((imul(ah6, bl1)|0) + (m >>> 16)|0) + (r7 >>> 16)|0;
                  w = ((imul(al6, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah6, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r7 = (w << 16) | (u & 0xffff);

                  u = ((imul(al6, bl2)|0) + (m & 0xffff)|0) + (r8 & 0xffff)|0;
                  v = ((imul(ah6, bl2)|0) + (m >>> 16)|0) + (r8 >>> 16)|0;
                  w = ((imul(al6, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah6, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r8 = (w << 16) | (u & 0xffff);

                  u = ((imul(al6, bl3)|0) + (m & 0xffff)|0) + (r9 & 0xffff)|0;
                  v = ((imul(ah6, bl3)|0) + (m >>> 16)|0) + (r9 >>> 16)|0;
                  w = ((imul(al6, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah6, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r9 = (w << 16) | (u & 0xffff);

                  u = ((imul(al6, bl4)|0) + (m & 0xffff)|0) + (r10 & 0xffff)|0;
                  v = ((imul(ah6, bl4)|0) + (m >>> 16)|0) + (r10 >>> 16)|0;
                  w = ((imul(al6, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah6, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r10 = (w << 16) | (u & 0xffff);

                  u = ((imul(al6, bl5)|0) + (m & 0xffff)|0) + (r11 & 0xffff)|0;
                  v = ((imul(ah6, bl5)|0) + (m >>> 16)|0) + (r11 >>> 16)|0;
                  w = ((imul(al6, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah6, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r11 = (w << 16) | (u & 0xffff);

                  u = ((imul(al6, bl6)|0) + (m & 0xffff)|0) + (r12 & 0xffff)|0;
                  v = ((imul(ah6, bl6)|0) + (m >>> 16)|0) + (r12 >>> 16)|0;
                  w = ((imul(al6, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah6, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r12 = (w << 16) | (u & 0xffff);

                  u = ((imul(al6, bl7)|0) + (m & 0xffff)|0) + (r13 & 0xffff)|0;
                  v = ((imul(ah6, bl7)|0) + (m >>> 16)|0) + (r13 >>> 16)|0;
                  w = ((imul(al6, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah6, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r13 = (w << 16) | (u & 0xffff);

                  r14 = m;

                  u = ((imul(al7, bl0)|0) + (r15 & 0xffff)|0) + (r7 & 0xffff)|0;
                  v = ((imul(ah7, bl0)|0) + (r15 >>> 16)|0) + (r7 >>> 16)|0;
                  w = ((imul(al7, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah7, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r7 = (w << 16) | (u & 0xffff);

                  u = ((imul(al7, bl1)|0) + (m & 0xffff)|0) + (r8 & 0xffff)|0;
                  v = ((imul(ah7, bl1)|0) + (m >>> 16)|0) + (r8 >>> 16)|0;
                  w = ((imul(al7, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah7, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r8 = (w << 16) | (u & 0xffff);

                  u = ((imul(al7, bl2)|0) + (m & 0xffff)|0) + (r9 & 0xffff)|0;
                  v = ((imul(ah7, bl2)|0) + (m >>> 16)|0) + (r9 >>> 16)|0;
                  w = ((imul(al7, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah7, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r9 = (w << 16) | (u & 0xffff);

                  u = ((imul(al7, bl3)|0) + (m & 0xffff)|0) + (r10 & 0xffff)|0;
                  v = ((imul(ah7, bl3)|0) + (m >>> 16)|0) + (r10 >>> 16)|0;
                  w = ((imul(al7, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah7, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r10 = (w << 16) | (u & 0xffff);

                  u = ((imul(al7, bl4)|0) + (m & 0xffff)|0) + (r11 & 0xffff)|0;
                  v = ((imul(ah7, bl4)|0) + (m >>> 16)|0) + (r11 >>> 16)|0;
                  w = ((imul(al7, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah7, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r11 = (w << 16) | (u & 0xffff);

                  u = ((imul(al7, bl5)|0) + (m & 0xffff)|0) + (r12 & 0xffff)|0;
                  v = ((imul(ah7, bl5)|0) + (m >>> 16)|0) + (r12 >>> 16)|0;
                  w = ((imul(al7, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah7, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r12 = (w << 16) | (u & 0xffff);

                  u = ((imul(al7, bl6)|0) + (m & 0xffff)|0) + (r13 & 0xffff)|0;
                  v = ((imul(ah7, bl6)|0) + (m >>> 16)|0) + (r13 >>> 16)|0;
                  w = ((imul(al7, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah7, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r13 = (w << 16) | (u & 0xffff);

                  u = ((imul(al7, bl7)|0) + (m & 0xffff)|0) + (r14 & 0xffff)|0;
                  v = ((imul(ah7, bl7)|0) + (m >>> 16)|0) + (r14 >>> 16)|0;
                  w = ((imul(al7, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah7, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r14 = (w << 16) | (u & 0xffff);

                  r15 = m;

                  HEAP32[(Rk|0)>>2] = r0,
                  HEAP32[(Rk|4)>>2] = r1,
                  HEAP32[(Rk|8)>>2] = r2,
                  HEAP32[(Rk|12)>>2] = r3,
                  HEAP32[(Rk|16)>>2] = r4,
                  HEAP32[(Rk|20)>>2] = r5,
                  HEAP32[(Rk|24)>>2] = r6,
                  HEAP32[(Rk|28)>>2] = r7;
              }

              Rk = (R+(i+j|0))|0;
              HEAP32[(Rk|0)>>2] = r8,
              HEAP32[(Rk|4)>>2] = r9,
              HEAP32[(Rk|8)>>2] = r10,
              HEAP32[(Rk|12)>>2] = r11,
              HEAP32[(Rk|16)>>2] = r12,
              HEAP32[(Rk|20)>>2] = r13,
              HEAP32[(Rk|24)>>2] = r14,
              HEAP32[(Rk|28)>>2] = r15;
          }
  /*
          for ( i = lA & -32; (i|0) < (lA|0); i = (i+4)|0 ) {
              Ai = (A+i)|0;

              ah0 = HEAP32[Ai>>2]|0,
              al0 = ah0 & 0xffff,
              ah0 = ah0 >>> 16;

              r1 = 0;

              for ( j = 0; (j|0) < (lB|0); j = (j+4)|0 ) {
                  Bj = (B+j)|0;
                  Rk = (R+(i+j|0))|0;

                  bh0 = HEAP32[Bj>>2]|0,
                  bl0 = bh0 & 0xffff,
                  bh0 = bh0 >>> 16;

                  r0 = HEAP32[Rk>>2]|0;

                  u = ((imul(al0, bl0)|0) + (r1 & 0xffff)|0) + (r0 & 0xffff)|0;
                  v = ((imul(ah0, bl0)|0) + (r1 >>> 16)|0) + (r0 >>> 16)|0;
                  w = ((imul(al0, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                  m = ((imul(ah0, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                  r0 = (w << 16) | (u & 0xffff);

                  r1 = m;

                  HEAP32[Rk>>2] = r0;
              }

              Rk = (R+(i+j|0))|0;
              HEAP32[Rk>>2] = r1;
          }
  */
      }

      /**
       * Fast squaring
       *
       * Exploits the fact:
       *
       *  X² = ( X0 + X1*B )² = X0² + 2*X0*X1*B + X1²*B²,
       *
       * where B is a power of 2, so:
       *
       *  2*X0*X1*B = (X0*X1 << 1)*B
       *
       * @param A offset of the argument being squared, 32-byte aligned
       * @param lA length of the argument, multiple of 32
       *
       * @param R offset where to place the result to, 32-byte aligned
       */
      function sqr ( A, lA, R ) {
          A  =  A|0;
          lA = lA|0;
          R  =  R|0;

          var al0 = 0, al1 = 0, al2 = 0, al3 = 0, al4 = 0, al5 = 0, al6 = 0, al7 = 0, ah0 = 0, ah1 = 0, ah2 = 0, ah3 = 0, ah4 = 0, ah5 = 0, ah6 = 0, ah7 = 0,
              bl0 = 0, bl1 = 0, bl2 = 0, bl3 = 0, bl4 = 0, bl5 = 0, bl6 = 0, bl7 = 0, bh0 = 0, bh1 = 0, bh2 = 0, bh3 = 0, bh4 = 0, bh5 = 0, bh6 = 0, bh7 = 0,
              r0 = 0, r1 = 0, r2 = 0, r3 = 0, r4 = 0, r5 = 0, r6 = 0, r7 = 0, r8 = 0, r9 = 0, r10 = 0, r11 = 0, r12 = 0, r13 = 0, r14 = 0, r15 = 0,
              u = 0, v = 0, w = 0, c = 0, h = 0, m = 0, r = 0,
              d = 0, dd = 0, p = 0, i = 0, j = 0, k = 0, Ai = 0, Aj = 0, Rk = 0;

          // prepare for iterations
          for ( ; (i|0) < (lA|0); i = (i+4)|0 ) {
              Rk = R+(i<<1)|0;
              ah0 = HEAP32[(A+i)>>2]|0, al0 = ah0 & 0xffff, ah0 = ah0 >>> 16;
              u = imul(al0,al0)|0;
              v = (imul(al0,ah0)|0) + (u >>> 17)|0;
              w = (imul(ah0,ah0)|0) + (v >>> 15)|0;
              HEAP32[(Rk)>>2] = (v << 17) | (u & 0x1ffff);
              HEAP32[(Rk|4)>>2] = w;
          }

          // unrolled 1st iteration
          for ( p = 0; (p|0) < (lA|0); p = (p+8)|0 ) {
              Ai = A+p|0, Rk = R+(p<<1)|0;

              ah0 = HEAP32[(Ai)>>2]|0, al0 = ah0 & 0xffff, ah0 = ah0 >>> 16;

              bh0 = HEAP32[(Ai|4)>>2]|0, bl0 = bh0 & 0xffff, bh0 = bh0 >>> 16;

              u = imul(al0,bl0)|0;
              v = (imul(al0,bh0)|0) + (u >>> 16)|0;
              w = (imul(ah0,bl0)|0) + (v & 0xffff)|0;
              m = ((imul(ah0,bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;

              r = HEAP32[(Rk|4)>>2]|0;
              u = (r & 0xffff) + ((u & 0xffff) << 1)|0;
              w = ((r >>> 16) + ((w & 0xffff) << 1)|0) + (u >>> 16)|0;
              HEAP32[(Rk|4)>>2] = (w << 16) | (u & 0xffff);
              c = w >>> 16;

              r = HEAP32[(Rk|8)>>2]|0;
              u = ((r & 0xffff) + ((m & 0xffff) << 1)|0) + c|0;
              w = ((r >>> 16) + ((m >>> 16) << 1)|0) + (u >>> 16)|0;
              HEAP32[(Rk|8)>>2] = (w << 16) | (u & 0xffff);
              c = w >>> 16;

              if ( c ) {
                  r = HEAP32[(Rk|12)>>2]|0;
                  u = (r & 0xffff) + c|0;
                  w = (r >>> 16) + (u >>> 16)|0;
                  HEAP32[(Rk|12)>>2] = (w << 16) | (u & 0xffff);
              }
          }

          // unrolled 2nd iteration
          for ( p = 0; (p|0) < (lA|0); p = (p+16)|0 ) {
              Ai = A+p|0, Rk = R+(p<<1)|0;

              ah0 = HEAP32[(Ai)>>2]|0, al0 = ah0 & 0xffff, ah0 = ah0 >>> 16,
              ah1 = HEAP32[(Ai|4)>>2]|0, al1 = ah1 & 0xffff, ah1 = ah1 >>> 16;

              bh0 = HEAP32[(Ai|8)>>2]|0, bl0 = bh0 & 0xffff, bh0 = bh0 >>> 16,
              bh1 = HEAP32[(Ai|12)>>2]|0, bl1 = bh1 & 0xffff, bh1 = bh1 >>> 16;

              u = imul(al0, bl0)|0;
              v = imul(ah0, bl0)|0;
              w = ((imul(al0, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
              m = ((imul(ah0, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
              r0 = (w << 16) | (u & 0xffff);

              u = (imul(al0, bl1)|0) + (m & 0xffff)|0;
              v = (imul(ah0, bl1)|0) + (m >>> 16)|0;
              w = ((imul(al0, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
              m = ((imul(ah0, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
              r1 = (w << 16) | (u & 0xffff);

              r2 = m;

              u = (imul(al1, bl0)|0) + (r1 & 0xffff)|0;
              v = (imul(ah1, bl0)|0) + (r1 >>> 16)|0;
              w = ((imul(al1, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
              m = ((imul(ah1, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
              r1 = (w << 16) | (u & 0xffff);

              u = ((imul(al1, bl1)|0) + (r2 & 0xffff)|0) + (m & 0xffff)|0;
              v = ((imul(ah1, bl1)|0) + (r2 >>> 16)|0) + (m >>> 16)|0;
              w = ((imul(al1, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
              m = ((imul(ah1, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
              r2 = (w << 16) | (u & 0xffff);

              r3 = m;

              r = HEAP32[(Rk|8)>>2]|0;
              u = (r & 0xffff) + ((r0 & 0xffff) << 1)|0;
              w = ((r >>> 16) + ((r0 >>> 16) << 1)|0) + (u >>> 16)|0;
              HEAP32[(Rk|8)>>2] = (w << 16) | (u & 0xffff);
              c = w >>> 16;

              r = HEAP32[(Rk|12)>>2]|0;
              u = ((r & 0xffff) + ((r1 & 0xffff) << 1)|0)  + c|0;
              w = ((r >>> 16) + ((r1 >>> 16) << 1)|0) + (u >>> 16)|0;
              HEAP32[(Rk|12)>>2] = (w << 16) | (u & 0xffff);
              c = w >>> 16;

              r = HEAP32[(Rk|16)>>2]|0;
              u = ((r & 0xffff) + ((r2 & 0xffff) << 1)|0) + c|0;
              w = ((r >>> 16) + ((r2 >>> 16) << 1)|0) + (u >>> 16)|0;
              HEAP32[(Rk|16)>>2] = (w << 16) | (u & 0xffff);
              c = w >>> 16;

              r = HEAP32[(Rk|20)>>2]|0;
              u = ((r & 0xffff) + ((r3 & 0xffff) << 1)|0) + c|0;
              w = ((r >>> 16) + ((r3 >>> 16) << 1)|0) + (u >>> 16)|0;
              HEAP32[(Rk|20)>>2] = (w << 16) | (u & 0xffff);
              c = w >>> 16;

              for ( k = 24; !!c & ( (k|0) < 32 ); k = (k+4)|0 ) {
                  r = HEAP32[(Rk|k)>>2]|0;
                  u = (r & 0xffff) + c|0;
                  w = (r >>> 16) + (u >>> 16)|0;
                  HEAP32[(Rk|k)>>2] = (w << 16) | (u & 0xffff);
                  c = w >>> 16;
              }
          }

          // unrolled 3rd iteration
          for ( p = 0; (p|0) < (lA|0); p = (p+32)|0 ) {
              Ai = A+p|0, Rk = R+(p<<1)|0;

              ah0 = HEAP32[(Ai)>>2]|0, al0 = ah0 & 0xffff, ah0 = ah0 >>> 16,
              ah1 = HEAP32[(Ai|4)>>2]|0, al1 = ah1 & 0xffff, ah1 = ah1 >>> 16,
              ah2 = HEAP32[(Ai|8)>>2]|0, al2 = ah2 & 0xffff, ah2 = ah2 >>> 16,
              ah3 = HEAP32[(Ai|12)>>2]|0, al3 = ah3 & 0xffff, ah3 = ah3 >>> 16;

              bh0 = HEAP32[(Ai|16)>>2]|0, bl0 = bh0 & 0xffff, bh0 = bh0 >>> 16,
              bh1 = HEAP32[(Ai|20)>>2]|0, bl1 = bh1 & 0xffff, bh1 = bh1 >>> 16,
              bh2 = HEAP32[(Ai|24)>>2]|0, bl2 = bh2 & 0xffff, bh2 = bh2 >>> 16,
              bh3 = HEAP32[(Ai|28)>>2]|0, bl3 = bh3 & 0xffff, bh3 = bh3 >>> 16;

              u = imul(al0, bl0)|0;
              v = imul(ah0, bl0)|0;
              w = ((imul(al0, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
              m = ((imul(ah0, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
              r0 = (w << 16) | (u & 0xffff);

              u = (imul(al0, bl1)|0) + (m & 0xffff)|0;
              v = (imul(ah0, bl1)|0) + (m >>> 16)|0;
              w = ((imul(al0, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
              m = ((imul(ah0, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
              r1 = (w << 16) | (u & 0xffff);

              u = (imul(al0, bl2)|0) + (m & 0xffff)|0;
              v = (imul(ah0, bl2)|0) + (m >>> 16)|0;
              w = ((imul(al0, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
              m = ((imul(ah0, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;
              r2 = (w << 16) | (u & 0xffff);

              u = (imul(al0, bl3)|0) + (m & 0xffff)|0;
              v = (imul(ah0, bl3)|0) + (m >>> 16)|0;
              w = ((imul(al0, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
              m = ((imul(ah0, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;
              r3 = (w << 16) | (u & 0xffff);

              r4 = m;

              u = (imul(al1, bl0)|0) + (r1 & 0xffff)|0;
              v = (imul(ah1, bl0)|0) + (r1 >>> 16)|0;
              w = ((imul(al1, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
              m = ((imul(ah1, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
              r1 = (w << 16) | (u & 0xffff);

              u = ((imul(al1, bl1)|0) + (r2 & 0xffff)|0) + (m & 0xffff)|0;
              v = ((imul(ah1, bl1)|0) + (r2 >>> 16)|0) + (m >>> 16)|0;
              w = ((imul(al1, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
              m = ((imul(ah1, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
              r2 = (w << 16) | (u & 0xffff);

              u = ((imul(al1, bl2)|0) + (r3 & 0xffff)|0) + (m & 0xffff)|0;
              v = ((imul(ah1, bl2)|0) + (r3 >>> 16)|0) + (m >>> 16)|0;
              w = ((imul(al1, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
              m = ((imul(ah1, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;
              r3 = (w << 16) | (u & 0xffff);

              u = ((imul(al1, bl3)|0) + (r4 & 0xffff)|0) + (m & 0xffff)|0;
              v = ((imul(ah1, bl3)|0) + (r4 >>> 16)|0) + (m >>> 16)|0;
              w = ((imul(al1, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
              m = ((imul(ah1, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;
              r4 = (w << 16) | (u & 0xffff);

              r5 = m;

              u = (imul(al2, bl0)|0) + (r2 & 0xffff)|0;
              v = (imul(ah2, bl0)|0) + (r2 >>> 16)|0;
              w = ((imul(al2, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
              m = ((imul(ah2, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
              r2 = (w << 16) | (u & 0xffff);

              u = ((imul(al2, bl1)|0) + (r3 & 0xffff)|0) + (m & 0xffff)|0;
              v = ((imul(ah2, bl1)|0) + (r3 >>> 16)|0) + (m >>> 16)|0;
              w = ((imul(al2, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
              m = ((imul(ah2, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
              r3 = (w << 16) | (u & 0xffff);

              u = ((imul(al2, bl2)|0) + (r4 & 0xffff)|0) + (m & 0xffff)|0;
              v = ((imul(ah2, bl2)|0) + (r4 >>> 16)|0) + (m >>> 16)|0;
              w = ((imul(al2, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
              m = ((imul(ah2, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;
              r4 = (w << 16) | (u & 0xffff);

              u = ((imul(al2, bl3)|0) + (r5 & 0xffff)|0) + (m & 0xffff)|0;
              v = ((imul(ah2, bl3)|0) + (r5 >>> 16)|0) + (m >>> 16)|0;
              w = ((imul(al2, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
              m = ((imul(ah2, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;
              r5 = (w << 16) | (u & 0xffff);

              r6 = m;

              u = (imul(al3, bl0)|0) + (r3 & 0xffff)|0;
              v = (imul(ah3, bl0)|0) + (r3 >>> 16)|0;
              w = ((imul(al3, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
              m = ((imul(ah3, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
              r3 = (w << 16) | (u & 0xffff);

              u = ((imul(al3, bl1)|0) + (r4 & 0xffff)|0) + (m & 0xffff)|0;
              v = ((imul(ah3, bl1)|0) + (r4 >>> 16)|0) + (m >>> 16)|0;
              w = ((imul(al3, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
              m = ((imul(ah3, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
              r4 = (w << 16) | (u & 0xffff);

              u = ((imul(al3, bl2)|0) + (r5 & 0xffff)|0) + (m & 0xffff)|0;
              v = ((imul(ah3, bl2)|0) + (r5 >>> 16)|0) + (m >>> 16)|0;
              w = ((imul(al3, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
              m = ((imul(ah3, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;
              r5 = (w << 16) | (u & 0xffff);

              u = ((imul(al3, bl3)|0) + (r6 & 0xffff)|0) + (m & 0xffff)|0;
              v = ((imul(ah3, bl3)|0) + (r6 >>> 16)|0) + (m >>> 16)|0;
              w = ((imul(al3, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
              m = ((imul(ah3, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;
              r6 = (w << 16) | (u & 0xffff);

              r7 = m;

              r = HEAP32[(Rk|16)>>2]|0;
              u = (r & 0xffff) + ((r0 & 0xffff) << 1)|0;
              w = ((r >>> 16) + ((r0 >>> 16) << 1)|0) + (u >>> 16)|0;
              HEAP32[(Rk|16)>>2] = (w << 16) | (u & 0xffff);
              c = w >>> 16;

              r = HEAP32[(Rk|20)>>2]|0;
              u = ((r & 0xffff) + ((r1 & 0xffff) << 1)|0)  + c|0;
              w = ((r >>> 16) + ((r1 >>> 16) << 1)|0) + (u >>> 16)|0;
              HEAP32[(Rk|20)>>2] = (w << 16) | (u & 0xffff);
              c = w >>> 16;

              r = HEAP32[(Rk|24)>>2]|0;
              u = ((r & 0xffff) + ((r2 & 0xffff) << 1)|0) + c|0;
              w = ((r >>> 16) + ((r2 >>> 16) << 1)|0) + (u >>> 16)|0;
              HEAP32[(Rk|24)>>2] = (w << 16) | (u & 0xffff);
              c = w >>> 16;

              r = HEAP32[(Rk|28)>>2]|0;
              u = ((r & 0xffff) + ((r3 & 0xffff) << 1)|0) + c|0;
              w = ((r >>> 16) + ((r3 >>> 16) << 1)|0) + (u >>> 16)|0;
              HEAP32[(Rk|28)>>2] = (w << 16) | (u & 0xffff);
              c = w >>> 16;

              r = HEAP32[(Rk+32)>>2]|0;
              u = ((r & 0xffff) + ((r4 & 0xffff) << 1)|0) + c|0;
              w = ((r >>> 16) + ((r4 >>> 16) << 1)|0) + (u >>> 16)|0;
              HEAP32[(Rk+32)>>2] = (w << 16) | (u & 0xffff);
              c = w >>> 16;

              r = HEAP32[(Rk+36)>>2]|0;
              u = ((r & 0xffff) + ((r5 & 0xffff) << 1)|0) + c|0;
              w = ((r >>> 16) + ((r5 >>> 16) << 1)|0) + (u >>> 16)|0;
              HEAP32[(Rk+36)>>2] = (w << 16) | (u & 0xffff);
              c = w >>> 16;

              r = HEAP32[(Rk+40)>>2]|0;
              u = ((r & 0xffff) + ((r6 & 0xffff) << 1)|0) + c|0;
              w = ((r >>> 16) + ((r6 >>> 16) << 1)|0) + (u >>> 16)|0;
              HEAP32[(Rk+40)>>2] = (w << 16) | (u & 0xffff);
              c = w >>> 16;

              r = HEAP32[(Rk+44)>>2]|0;
              u = ((r & 0xffff) + ((r7 & 0xffff) << 1)|0) + c|0;
              w = ((r >>> 16) + ((r7 >>> 16) << 1)|0) + (u >>> 16)|0;
              HEAP32[(Rk+44)>>2] = (w << 16) | (u & 0xffff);
              c = w >>> 16;

              for ( k = 48; !!c & ( (k|0) < 64 ); k = (k+4)|0 ) {
                  r = HEAP32[(Rk+k)>>2]|0;
                  u = (r & 0xffff) + c|0;
                  w = (r >>> 16) + (u >>> 16)|0;
                  HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);
                  c = w >>> 16;
              }
          }

          // perform iterations
          for ( d = 32; (d|0) < (lA|0); d = d << 1 ) { // depth loop
              dd = d << 1;

              for ( p = 0; (p|0) < (lA|0); p = (p+dd)|0 ) { // part loop
                  Rk = R+(p<<1)|0;

                  h = 0;
                  for ( i = 0; (i|0) < (d|0); i = (i+32)|0 ) { // multiply-and-add loop
                      Ai = (A+p|0)+i|0;

                      ah0 = HEAP32[(Ai)>>2]|0, al0 = ah0 & 0xffff, ah0 = ah0 >>> 16,
                      ah1 = HEAP32[(Ai|4)>>2]|0, al1 = ah1 & 0xffff, ah1 = ah1 >>> 16,
                      ah2 = HEAP32[(Ai|8)>>2]|0, al2 = ah2 & 0xffff, ah2 = ah2 >>> 16,
                      ah3 = HEAP32[(Ai|12)>>2]|0, al3 = ah3 & 0xffff, ah3 = ah3 >>> 16,
                      ah4 = HEAP32[(Ai|16)>>2]|0, al4 = ah4 & 0xffff, ah4 = ah4 >>> 16,
                      ah5 = HEAP32[(Ai|20)>>2]|0, al5 = ah5 & 0xffff, ah5 = ah5 >>> 16,
                      ah6 = HEAP32[(Ai|24)>>2]|0, al6 = ah6 & 0xffff, ah6 = ah6 >>> 16,
                      ah7 = HEAP32[(Ai|28)>>2]|0, al7 = ah7 & 0xffff, ah7 = ah7 >>> 16;

                      r8 = r9 = r10 = r11 = r12 = r13 = r14 = r15 = c = 0;

                      for ( j = 0; (j|0) < (d|0); j = (j+32)|0 ) {
                          Aj = ((A+p|0)+d|0)+j|0;

                          bh0 = HEAP32[(Aj)>>2]|0, bl0 = bh0 & 0xffff, bh0 = bh0 >>> 16,
                          bh1 = HEAP32[(Aj|4)>>2]|0, bl1 = bh1 & 0xffff, bh1 = bh1 >>> 16,
                          bh2 = HEAP32[(Aj|8)>>2]|0, bl2 = bh2 & 0xffff, bh2 = bh2 >>> 16,
                          bh3 = HEAP32[(Aj|12)>>2]|0, bl3 = bh3 & 0xffff, bh3 = bh3 >>> 16,
                          bh4 = HEAP32[(Aj|16)>>2]|0, bl4 = bh4 & 0xffff, bh4 = bh4 >>> 16,
                          bh5 = HEAP32[(Aj|20)>>2]|0, bl5 = bh5 & 0xffff, bh5 = bh5 >>> 16,
                          bh6 = HEAP32[(Aj|24)>>2]|0, bl6 = bh6 & 0xffff, bh6 = bh6 >>> 16,
                          bh7 = HEAP32[(Aj|28)>>2]|0, bl7 = bh7 & 0xffff, bh7 = bh7 >>> 16;

                          r0 = r1 = r2 = r3 = r4 = r5 = r6 = r7 = 0;

                          u = ((imul(al0, bl0)|0) + (r0 & 0xffff)|0) + (r8 & 0xffff)|0;
                          v = ((imul(ah0, bl0)|0) + (r0 >>> 16)|0) + (r8 >>> 16)|0;
                          w = ((imul(al0, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah0, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r0 = (w << 16) | (u & 0xffff);

                          u = ((imul(al0, bl1)|0) + (r1 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah0, bl1)|0) + (r1 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al0, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah0, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r1 = (w << 16) | (u & 0xffff);

                          u = ((imul(al0, bl2)|0) + (r2 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah0, bl2)|0) + (r2 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al0, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah0, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r2 = (w << 16) | (u & 0xffff);

                          u = ((imul(al0, bl3)|0) + (r3 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah0, bl3)|0) + (r3 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al0, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah0, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r3 = (w << 16) | (u & 0xffff);

                          u = ((imul(al0, bl4)|0) + (r4 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah0, bl4)|0) + (r4 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al0, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah0, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r4 = (w << 16) | (u & 0xffff);

                          u = ((imul(al0, bl5)|0) + (r5 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah0, bl5)|0) + (r5 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al0, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah0, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r5 = (w << 16) | (u & 0xffff);

                          u = ((imul(al0, bl6)|0) + (r6 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah0, bl6)|0) + (r6 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al0, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah0, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r6 = (w << 16) | (u & 0xffff);

                          u = ((imul(al0, bl7)|0) + (r7 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah0, bl7)|0) + (r7 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al0, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah0, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r7 = (w << 16) | (u & 0xffff);

                          r8 = m;

                          u = ((imul(al1, bl0)|0) + (r1 & 0xffff)|0) + (r9 & 0xffff)|0;
                          v = ((imul(ah1, bl0)|0) + (r1 >>> 16)|0) + (r9 >>> 16)|0;
                          w = ((imul(al1, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah1, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r1 = (w << 16) | (u & 0xffff);

                          u = ((imul(al1, bl1)|0) + (r2 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah1, bl1)|0) + (r2 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al1, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah1, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r2 = (w << 16) | (u & 0xffff);

                          u = ((imul(al1, bl2)|0) + (r3 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah1, bl2)|0) + (r3 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al1, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah1, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r3 = (w << 16) | (u & 0xffff);

                          u = ((imul(al1, bl3)|0) + (r4 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah1, bl3)|0) + (r4 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al1, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah1, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r4 = (w << 16) | (u & 0xffff);

                          u = ((imul(al1, bl4)|0) + (r5 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah1, bl4)|0) + (r5 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al1, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah1, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r5 = (w << 16) | (u & 0xffff);

                          u = ((imul(al1, bl5)|0) + (r6 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah1, bl5)|0) + (r6 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al1, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah1, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r6 = (w << 16) | (u & 0xffff);

                          u = ((imul(al1, bl6)|0) + (r7 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah1, bl6)|0) + (r7 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al1, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah1, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r7 = (w << 16) | (u & 0xffff);

                          u = ((imul(al1, bl7)|0) + (r8 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah1, bl7)|0) + (r8 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al1, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah1, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r8 = (w << 16) | (u & 0xffff);

                          r9 = m;

                          u = ((imul(al2, bl0)|0) + (r2 & 0xffff)|0) + (r10 & 0xffff)|0;
                          v = ((imul(ah2, bl0)|0) + (r2 >>> 16)|0) + (r10 >>> 16)|0;
                          w = ((imul(al2, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah2, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r2 = (w << 16) | (u & 0xffff);

                          u = ((imul(al2, bl1)|0) + (r3 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah2, bl1)|0) + (r3 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al2, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah2, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r3 = (w << 16) | (u & 0xffff);

                          u = ((imul(al2, bl2)|0) + (r4 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah2, bl2)|0) + (r4 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al2, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah2, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r4 = (w << 16) | (u & 0xffff);

                          u = ((imul(al2, bl3)|0) + (r5 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah2, bl3)|0) + (r5 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al2, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah2, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r5 = (w << 16) | (u & 0xffff);

                          u = ((imul(al2, bl4)|0) + (r6 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah2, bl4)|0) + (r6 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al2, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah2, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r6 = (w << 16) | (u & 0xffff);

                          u = ((imul(al2, bl5)|0) + (r7 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah2, bl5)|0) + (r7 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al2, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah2, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r7 = (w << 16) | (u & 0xffff);

                          u = ((imul(al2, bl6)|0) + (r8 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah2, bl6)|0) + (r8 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al2, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah2, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r8 = (w << 16) | (u & 0xffff);

                          u = ((imul(al2, bl7)|0) + (r9 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah2, bl7)|0) + (r9 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al2, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah2, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r9 = (w << 16) | (u & 0xffff);

                          r10 = m;

                          u = ((imul(al3, bl0)|0) + (r3 & 0xffff)|0) + (r11 & 0xffff)|0;
                          v = ((imul(ah3, bl0)|0) + (r3 >>> 16)|0) + (r11 >>> 16)|0;
                          w = ((imul(al3, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah3, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r3 = (w << 16) | (u & 0xffff);

                          u = ((imul(al3, bl1)|0) + (r4 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah3, bl1)|0) + (r4 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al3, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah3, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r4 = (w << 16) | (u & 0xffff);

                          u = ((imul(al3, bl2)|0) + (r5 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah3, bl2)|0) + (r5 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al3, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah3, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r5 = (w << 16) | (u & 0xffff);

                          u = ((imul(al3, bl3)|0) + (r6 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah3, bl3)|0) + (r6 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al3, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah3, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r6 = (w << 16) | (u & 0xffff);

                          u = ((imul(al3, bl4)|0) + (r7 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah3, bl4)|0) + (r7 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al3, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah3, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r7 = (w << 16) | (u & 0xffff);

                          u = ((imul(al3, bl5)|0) + (r8 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah3, bl5)|0) + (r8 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al3, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah3, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r8 = (w << 16) | (u & 0xffff);

                          u = ((imul(al3, bl6)|0) + (r9 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah3, bl6)|0) + (r9 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al3, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah3, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r9 = (w << 16) | (u & 0xffff);

                          u = ((imul(al3, bl7)|0) + (r10 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah3, bl7)|0) + (r10 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al3, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah3, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r10 = (w << 16) | (u & 0xffff);

                          r11 = m;

                          u = ((imul(al4, bl0)|0) + (r4 & 0xffff)|0) + (r12 & 0xffff)|0;
                          v = ((imul(ah4, bl0)|0) + (r4 >>> 16)|0) + (r12 >>> 16)|0;
                          w = ((imul(al4, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah4, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r4 = (w << 16) | (u & 0xffff);

                          u = ((imul(al4, bl1)|0) + (r5 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah4, bl1)|0) + (r5 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al4, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah4, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r5 = (w << 16) | (u & 0xffff);

                          u = ((imul(al4, bl2)|0) + (r6 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah4, bl2)|0) + (r6 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al4, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah4, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r6 = (w << 16) | (u & 0xffff);

                          u = ((imul(al4, bl3)|0) + (r7 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah4, bl3)|0) + (r7 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al4, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah4, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r7 = (w << 16) | (u & 0xffff);

                          u = ((imul(al4, bl4)|0) + (r8 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah4, bl4)|0) + (r8 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al4, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah4, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r8 = (w << 16) | (u & 0xffff);

                          u = ((imul(al4, bl5)|0) + (r9 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah4, bl5)|0) + (r9 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al4, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah4, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r9 = (w << 16) | (u & 0xffff);

                          u = ((imul(al4, bl6)|0) + (r10 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah4, bl6)|0) + (r10 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al4, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah4, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r10 = (w << 16) | (u & 0xffff);

                          u = ((imul(al4, bl7)|0) + (r11 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah4, bl7)|0) + (r11 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al4, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah4, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r11 = (w << 16) | (u & 0xffff);

                          r12 = m;

                          u = ((imul(al5, bl0)|0) + (r5 & 0xffff)|0) + (r13 & 0xffff)|0;
                          v = ((imul(ah5, bl0)|0) + (r5 >>> 16)|0) + (r13 >>> 16)|0;
                          w = ((imul(al5, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah5, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r5 = (w << 16) | (u & 0xffff);

                          u = ((imul(al5, bl1)|0) + (r6 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah5, bl1)|0) + (r6 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al5, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah5, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r6 = (w << 16) | (u & 0xffff);

                          u = ((imul(al5, bl2)|0) + (r7 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah5, bl2)|0) + (r7 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al5, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah5, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r7 = (w << 16) | (u & 0xffff);

                          u = ((imul(al5, bl3)|0) + (r8 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah5, bl3)|0) + (r8 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al5, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah5, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r8 = (w << 16) | (u & 0xffff);

                          u = ((imul(al5, bl4)|0) + (r9 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah5, bl4)|0) + (r9 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al5, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah5, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r9 = (w << 16) | (u & 0xffff);

                          u = ((imul(al5, bl5)|0) + (r10 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah5, bl5)|0) + (r10 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al5, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah5, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r10 = (w << 16) | (u & 0xffff);

                          u = ((imul(al5, bl6)|0) + (r11 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah5, bl6)|0) + (r11 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al5, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah5, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r11 = (w << 16) | (u & 0xffff);

                          u = ((imul(al5, bl7)|0) + (r12 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah5, bl7)|0) + (r12 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al5, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah5, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r12 = (w << 16) | (u & 0xffff);

                          r13 = m;

                          u = ((imul(al6, bl0)|0) + (r6 & 0xffff)|0) + (r14 & 0xffff)|0;
                          v = ((imul(ah6, bl0)|0) + (r6 >>> 16)|0) + (r14 >>> 16)|0;
                          w = ((imul(al6, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah6, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r6 = (w << 16) | (u & 0xffff);

                          u = ((imul(al6, bl1)|0) + (r7 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah6, bl1)|0) + (r7 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al6, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah6, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r7 = (w << 16) | (u & 0xffff);

                          u = ((imul(al6, bl2)|0) + (r8 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah6, bl2)|0) + (r8 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al6, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah6, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r8 = (w << 16) | (u & 0xffff);

                          u = ((imul(al6, bl3)|0) + (r9 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah6, bl3)|0) + (r9 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al6, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah6, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r9 = (w << 16) | (u & 0xffff);

                          u = ((imul(al6, bl4)|0) + (r10 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah6, bl4)|0) + (r10 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al6, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah6, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r10 = (w << 16) | (u & 0xffff);

                          u = ((imul(al6, bl5)|0) + (r11 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah6, bl5)|0) + (r11 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al6, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah6, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r11 = (w << 16) | (u & 0xffff);

                          u = ((imul(al6, bl6)|0) + (r12 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah6, bl6)|0) + (r12 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al6, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah6, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r12 = (w << 16) | (u & 0xffff);

                          u = ((imul(al6, bl7)|0) + (r13 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah6, bl7)|0) + (r13 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al6, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah6, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r13 = (w << 16) | (u & 0xffff);

                          r14 = m;

                          u = ((imul(al7, bl0)|0) + (r7 & 0xffff)|0) + (r15 & 0xffff)|0;
                          v = ((imul(ah7, bl0)|0) + (r7 >>> 16)|0) + (r15 >>> 16)|0;
                          w = ((imul(al7, bh0)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah7, bh0)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r7 = (w << 16) | (u & 0xffff);

                          u = ((imul(al7, bl1)|0) + (r8 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah7, bl1)|0) + (r8 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al7, bh1)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah7, bh1)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r8 = (w << 16) | (u & 0xffff);

                          u = ((imul(al7, bl2)|0) + (r9 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah7, bl2)|0) + (r9 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al7, bh2)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah7, bh2)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r9 = (w << 16) | (u & 0xffff);

                          u = ((imul(al7, bl3)|0) + (r10 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah7, bl3)|0) + (r10 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al7, bh3)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah7, bh3)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r10 = (w << 16) | (u & 0xffff);

                          u = ((imul(al7, bl4)|0) + (r11 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah7, bl4)|0) + (r11 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al7, bh4)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah7, bh4)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r11 = (w << 16) | (u & 0xffff);

                          u = ((imul(al7, bl5)|0) + (r12 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah7, bl5)|0) + (r12 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al7, bh5)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah7, bh5)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r12 = (w << 16) | (u & 0xffff);

                          u = ((imul(al7, bl6)|0) + (r13 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah7, bl6)|0) + (r13 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al7, bh6)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah7, bh6)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r13 = (w << 16) | (u & 0xffff);

                          u = ((imul(al7, bl7)|0) + (r14 & 0xffff)|0) + (m & 0xffff)|0;
                          v = ((imul(ah7, bl7)|0) + (r14 >>> 16)|0) + (m >>> 16)|0;
                          w = ((imul(al7, bh7)|0) + (v & 0xffff)|0) + (u >>> 16)|0;
                          m = ((imul(ah7, bh7)|0) + (v >>> 16)|0) + (w >>> 16)|0;
                          r14 = (w << 16) | (u & 0xffff);

                          r15 = m;

                          k = d+(i+j|0)|0;
                          r = HEAP32[(Rk+k)>>2]|0;
                          u = ((r & 0xffff) + ((r0 & 0xffff) << 1)|0) + c|0;
                          w = ((r >>> 16) + ((r0 >>> 16) << 1)|0) + (u >>> 16)|0;
                          HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);
                          c = w >>> 16;

                          k = k+4|0;
                          r = HEAP32[(Rk+k)>>2]|0;
                          u = ((r & 0xffff) + ((r1 & 0xffff) << 1)|0) + c|0;
                          w = ((r >>> 16) + ((r1 >>> 16) << 1)|0) + (u >>> 16)|0;
                          HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);
                          c = w >>> 16;

                          k = k+4|0;
                          r = HEAP32[(Rk+k)>>2]|0;
                          u = ((r & 0xffff) + ((r2 & 0xffff) << 1)|0) + c|0;
                          w = ((r >>> 16) + ((r2 >>> 16) << 1)|0) + (u >>> 16)|0;
                          HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);
                          c = w >>> 16;

                          k = k+4|0;
                          r = HEAP32[(Rk+k)>>2]|0;
                          u = ((r & 0xffff) + ((r3 & 0xffff) << 1)|0) + c|0;
                          w = ((r >>> 16) + ((r3 >>> 16) << 1)|0) + (u >>> 16)|0;
                          HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);
                          c = w >>> 16;

                          k = k+4|0;
                          r = HEAP32[(Rk+k)>>2]|0;
                          u = ((r & 0xffff) + ((r4 & 0xffff) << 1)|0) + c|0;
                          w = ((r >>> 16) + ((r4 >>> 16) << 1)|0) + (u >>> 16)|0;
                          HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);
                          c = w >>> 16;

                          k = k+4|0;
                          r = HEAP32[(Rk+k)>>2]|0;
                          u = ((r & 0xffff) + ((r5 & 0xffff) << 1)|0) + c|0;
                          w = ((r >>> 16) + ((r5 >>> 16) << 1)|0) + (u >>> 16)|0;
                          HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);
                          c = w >>> 16;

                          k = k+4|0;
                          r = HEAP32[(Rk+k)>>2]|0;
                          u = ((r & 0xffff) + ((r6 & 0xffff) << 1)|0) + c|0;
                          w = ((r >>> 16) + ((r6 >>> 16) << 1)|0) + (u >>> 16)|0;
                          HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);
                          c = w >>> 16;

                          k = k+4|0;
                          r = HEAP32[(Rk+k)>>2]|0;
                          u = ((r & 0xffff) + ((r7 & 0xffff) << 1)|0) + c|0;
                          w = ((r >>> 16) + ((r7 >>> 16) << 1)|0) + (u >>> 16)|0;
                          HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);
                          c = w >>> 16;
                      }

                      k = d+(i+j|0)|0;
                      r = HEAP32[(Rk+k)>>2]|0;
                      u = (((r & 0xffff) + ((r8 & 0xffff) << 1)|0) + c|0) + h|0;
                      w = ((r >>> 16) + ((r8 >>> 16) << 1)|0) + (u >>> 16)|0;
                      HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);
                      c = w >>> 16;

                      k = k+4|0;
                      r = HEAP32[(Rk+k)>>2]|0;
                      u = ((r & 0xffff) + ((r9 & 0xffff) << 1)|0) + c|0;
                      w = ((r >>> 16) + ((r9 >>> 16) << 1)|0) + (u >>> 16)|0;
                      HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);
                      c = w >>> 16;

                      k = k+4|0;
                      r = HEAP32[(Rk+k)>>2]|0;
                      u = ((r & 0xffff) + ((r10 & 0xffff) << 1)|0) + c|0;
                      w = ((r >>> 16) + ((r10 >>> 16) << 1)|0) + (u >>> 16)|0;
                      HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);
                      c = w >>> 16;

                      k = k+4|0;
                      r = HEAP32[(Rk+k)>>2]|0;
                      u = ((r & 0xffff) + ((r11 & 0xffff) << 1)|0) + c|0;
                      w = ((r >>> 16) + ((r11 >>> 16) << 1)|0) + (u >>> 16)|0;
                      HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);
                      c = w >>> 16;

                      k = k+4|0;
                      r = HEAP32[(Rk+k)>>2]|0;
                      u = ((r & 0xffff) + ((r12 & 0xffff) << 1)|0) + c|0;
                      w = ((r >>> 16) + ((r12 >>> 16) << 1)|0) + (u >>> 16)|0;
                      HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);
                      c = w >>> 16;

                      k = k+4|0;
                      r = HEAP32[(Rk+k)>>2]|0;
                      u = ((r & 0xffff) + ((r13 & 0xffff) << 1)|0) + c|0;
                      w = ((r >>> 16) + ((r13 >>> 16) << 1)|0) + (u >>> 16)|0;
                      HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);
                      c = w >>> 16;

                      k = k+4|0;
                      r = HEAP32[(Rk+k)>>2]|0;
                      u = ((r & 0xffff) + ((r14 & 0xffff) << 1)|0) + c|0;
                      w = ((r >>> 16) + ((r14 >>> 16) << 1)|0) + (u >>> 16)|0;
                      HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);
                      c = w >>> 16;

                      k = k+4|0;
                      r = HEAP32[(Rk+k)>>2]|0;
                      u = ((r & 0xffff) + ((r15 & 0xffff) << 1)|0) + c|0;
                      w = ((r >>> 16) + ((r15 >>> 16) << 1)|0) + (u >>> 16)|0;
                      HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);
                      h = w >>> 16;
                  }

                  for ( k = k+4|0; !!h & ( (k|0) < (dd<<1) ); k = (k+4)|0 ) { // carry propagation loop
                      r = HEAP32[(Rk+k)>>2]|0;
                      u = (r & 0xffff) + h|0;
                      w = (r >>> 16) + (u >>> 16)|0;
                      HEAP32[(Rk+k)>>2] = (w << 16) | (u & 0xffff);
                      h = w >>> 16;
                  }
              }
          }
      }

      /**
       * Conventional division
       *
       * @param A offset of the numerator, 32-byte aligned
       * @param lA length of the numerator, multiple of 32
       *
       * @param B offset of the divisor, 32-byte aligned
       * @param lB length of the divisor, multiple of 32
       *
       * @param R offset where to place the remainder to, 32-byte aligned
       *
       * @param Q offser where to place the quotient to, 32-byte aligned
       */

      function div ( N, lN, D, lD, Q ) {
          N  =  N|0;
          lN = lN|0;
          D  =  D|0;
          lD = lD|0;
          Q  =  Q|0;

          var n = 0, d = 0, e = 0,
              u1 = 0, u0 = 0,
              v0 = 0, vh = 0, vl = 0,
              qh = 0, ql = 0, rh = 0, rl = 0,
              t1 = 0, t2 = 0, m = 0, c = 0,
              i = 0, j = 0, k = 0;

          // number of significant limbs in `N` (multiplied by 4)
          for ( i = (lN-1) & -4; (i|0) >= 0; i = (i-4)|0 ) {
              n = HEAP32[(N+i)>>2]|0;
              if ( n ) {
                  lN = i;
                  break;
              }
          }

          // number of significant limbs in `D` (multiplied by 4)
          for ( i = (lD-1) & -4; (i|0) >= 0; i = (i-4)|0 ) {
              d = HEAP32[(D+i)>>2]|0;
              if ( d ) {
                  lD = i;
                  break;
              }
          }

          // `D` is zero? WTF?!

          // calculate `e` — the power of 2 of the normalization factor
          while ( (d & 0x80000000) == 0 ) {
              d = d << 1;
              e = e + 1|0;
          }

          // normalize `N` in place
          u0 = HEAP32[(N+lN)>>2]|0;
          if ( e ) {
              u1 = u0>>>(32-e|0);
              for ( i = (lN-4)|0; (i|0) >= 0; i = (i-4)|0 ) {
                  n = HEAP32[(N+i)>>2]|0;
                  HEAP32[(N+i+4)>>2] = (u0 << e) | ( e ? n >>> (32-e|0) : 0 );
                  u0 = n;
              }
              HEAP32[N>>2] = u0 << e;
          }

          // normalize `D` in place
          if ( e ) {
              v0 = HEAP32[(D+lD)>>2]|0;
              for ( i = (lD-4)|0; (i|0) >= 0; i = (i-4)|0 ) {
                  d = HEAP32[(D+i)>>2]|0;
                  HEAP32[(D+i+4)>>2] = (v0 << e) | ( d >>> (32-e|0) );
                  v0 = d;
              }
              HEAP32[D>>2] = v0 << e;
          }

          // divisor parts won't change
          v0 = HEAP32[(D+lD)>>2]|0;
          vh = v0 >>> 16, vl = v0 & 0xffff;

          // perform division
          for ( i = lN; (i|0) >= (lD|0); i = (i-4)|0 ) {
              j = (i-lD)|0;

              // estimate high part of the quotient
              u0 = HEAP32[(N+i)>>2]|0;
              qh = ( (u1>>>0) / (vh>>>0) )|0, rh = ( (u1>>>0) % (vh>>>0) )|0, t1 = imul(qh, vl)|0;
              while ( ( (qh|0) == 0x10000 ) | ( (t1>>>0) > (((rh << 16)|(u0 >>> 16))>>>0) ) ) {
                  qh = (qh-1)|0, rh = (rh+vh)|0, t1 = (t1-vl)|0;
                  if ( (rh|0) >= 0x10000 ) break;
              }

              // bulk multiply-and-subtract
              // m - multiplication carry, c - subtraction carry
              m = 0, c = 0;
              for ( k = 0; (k|0) <= (lD|0); k = (k+4)|0 ) {
                  d = HEAP32[(D+k)>>2]|0;
                  t1 = (imul(qh, d & 0xffff)|0) + (m >>> 16)|0;
                  t2 = (imul(qh, d >>> 16)|0) + (t1 >>> 16)|0;
                  d = (m & 0xffff) | (t1 << 16);
                  m = t2;
                  n = HEAP32[(N+j+k)>>2]|0;
                  t1 = ((n & 0xffff) - (d & 0xffff)|0) + c|0;
                  t2 = ((n >>> 16) - (d >>> 16)|0) + (t1 >> 16)|0;
                  HEAP32[(N+j+k)>>2] = (t2 << 16) | (t1 & 0xffff);
                  c = t2 >> 16;
              }
              t1 = ((u1 & 0xffff) - (m & 0xffff)|0) + c|0;
              t2 = ((u1 >>> 16) - (m >>> 16)|0) + (t1 >> 16)|0;
              u1 = (t2 << 16) | (t1 & 0xffff);
              c = t2 >> 16;

              // add `D` back if got carry-out
              if ( c ) {
                  qh = (qh-1)|0;
                  c = 0;
                  for ( k = 0; (k|0) <= (lD|0); k = (k+4)|0 ) {
                      d = HEAP32[(D+k)>>2]|0;
                      n = HEAP32[(N+j+k)>>2]|0;
                      t1 = (n & 0xffff) + c|0;
                      t2 = (n >>> 16) + d + (t1 >>> 16)|0;
                      HEAP32[(N+j+k)>>2] = (t2 << 16) | (t1 & 0xffff);
                      c = t2 >>> 16;
                  }
                  u1 = (u1+c)|0;
              }

              // estimate low part of the quotient
              u0 = HEAP32[(N+i)>>2]|0;
              n = (u1 << 16) | (u0 >>> 16);
              ql = ( (n>>>0) / (vh>>>0) )|0, rl = ( (n>>>0) % (vh>>>0) )|0, t1 = imul(ql, vl)|0;
              while ( ( (ql|0) == 0x10000 ) | ( (t1>>>0) > (((rl << 16)|(u0 & 0xffff))>>>0) ) ) {
                  ql = (ql-1)|0, rl = (rl+vh)|0, t1 = (t1-vl)|0;
                  if ( (rl|0) >= 0x10000 ) break;
              }

              // bulk multiply-and-subtract
              // m - multiplication carry, c - subtraction carry
              m = 0, c = 0;
              for ( k = 0; (k|0) <= (lD|0); k = (k+4)|0 ) {
                  d = HEAP32[(D+k)>>2]|0;
                  t1 = (imul(ql, d & 0xffff)|0) + (m & 0xffff)|0;
                  t2 = ((imul(ql, d >>> 16)|0) + (t1 >>> 16)|0) + (m >>> 16)|0;
                  d = (t1 & 0xffff) | (t2 << 16);
                  m = t2 >>> 16;
                  n = HEAP32[(N+j+k)>>2]|0;
                  t1 = ((n & 0xffff) - (d & 0xffff)|0) + c|0;
                  t2 = ((n >>> 16) - (d >>> 16)|0) + (t1 >> 16)|0;
                  c = t2 >> 16;
                  HEAP32[(N+j+k)>>2] = (t2 << 16) | (t1 & 0xffff);
              }
              t1 = ((u1 & 0xffff) - (m & 0xffff)|0) + c|0;
              t2 = ((u1 >>> 16) - (m >>> 16)|0) + (t1 >> 16)|0;
              c = t2 >> 16;

              // add `D` back if got carry-out
              if ( c ) {
                  ql = (ql-1)|0;
                  c = 0;
                  for ( k = 0; (k|0) <= (lD|0); k = (k+4)|0 ) {
                      d = HEAP32[(D+k)>>2]|0;
                      n = HEAP32[(N+j+k)>>2]|0;
                      t1 = ((n & 0xffff) + (d & 0xffff)|0) + c|0;
                      t2 = ((n >>> 16) + (d >>> 16)|0) + (t1 >>> 16)|0;
                      c = t2 >>> 16;
                      HEAP32[(N+j+k)>>2] = (t1 & 0xffff) | (t2 << 16);
                  }
              }

              // got quotient limb
              HEAP32[(Q+j)>>2] = (qh << 16) | ql;

              u1 = HEAP32[(N+i)>>2]|0;
          }

          if ( e ) {
              // TODO denormalize `D` in place

              // denormalize `N` in place
              u0 = HEAP32[N>>2]|0;
              for ( i = 4; (i|0) <= (lD|0); i = (i+4)|0 ) {
                  n = HEAP32[(N+i)>>2]|0;
                  HEAP32[(N+i-4)>>2] = ( n << (32-e|0) ) | (u0 >>> e);
                  u0 = n;
              }
              HEAP32[(N+lD)>>2] = u0 >>> e;
          }
      }

      /**
       * Montgomery modular reduction
       *
       * Definition:
       *
       *  MREDC(A) = A × X (mod N),
       *  M × X = N × Y + 1,
       *
       * where M = 2^(32*m) such that N < M and A < N×M
       *
       * Numbers `X` and `Y` can be calculated using Extended Euclidean Algorithm.
       */
      function mredc ( A, lA, N, lN, y, R ) {
          A  =  A|0;
          lA = lA|0;
          N  =  N|0;
          lN = lN|0;
          y  =  y|0;
          R  =  R|0;

          var T = 0,
              c = 0, uh = 0, ul = 0, vl = 0, vh = 0, w0 = 0, w1 = 0, w2 = 0, r0 = 0, r1 = 0,
              i = 0, j = 0, k = 0;

          T = salloc(lN<<1)|0;
          z(lN<<1, 0, T);

          cp( lA, A, T );

          // HAC 14.32
          for ( i = 0; (i|0) < (lN|0); i = (i+4)|0 ) {
              uh = HEAP32[(T+i)>>2]|0, ul = uh & 0xffff, uh = uh >>> 16;
              vh = y >>> 16, vl = y & 0xffff;
              w0 = imul(ul,vl)|0, w1 = ( (imul(ul,vh)|0) + (imul(uh,vl)|0) | 0 ) + (w0 >>> 16) | 0;
              ul = w0 & 0xffff, uh = w1 & 0xffff;
              r1 = 0;
              for ( j = 0; (j|0) < (lN|0); j = (j+4)|0 ) {
                  k = (i+j)|0;
                  vh = HEAP32[(N+j)>>2]|0, vl = vh & 0xffff, vh = vh >>> 16;
                  r0 = HEAP32[(T+k)>>2]|0;
                  w0 = ((imul(ul, vl)|0) + (r1 & 0xffff)|0) + (r0 & 0xffff)|0;
                  w1 = ((imul(ul, vh)|0) + (r1 >>> 16)|0) + (r0 >>> 16)|0;
                  w2 = ((imul(uh, vl)|0) + (w1 & 0xffff)|0) + (w0 >>> 16)|0;
                  r1 = ((imul(uh, vh)|0) + (w2 >>> 16)|0) + (w1 >>> 16)|0;
                  r0 = (w2 << 16) | (w0 & 0xffff);
                  HEAP32[(T+k)>>2] = r0;
              }
              k = (i+j)|0;
              r0 = HEAP32[(T+k)>>2]|0;
              w0 = ((r0 & 0xffff) + (r1 & 0xffff)|0) + c|0;
              w1 = ((r0 >>> 16) + (r1 >>> 16)|0) + (w0 >>> 16)|0;
              HEAP32[(T+k)>>2] = (w1 << 16) | (w0 & 0xffff);
              c = w1 >>> 16;
          }

          cp( lN, (T+lN)|0, R );

          sfree(lN<<1);

          if ( c | ( (cmp( N, lN, R, lN )|0) <= 0 ) ) {
              sub( R, lN, N, lN, R, lN )|0;
          }
      }

      return {
          sreset: sreset,
          salloc: salloc,
          sfree:  sfree,
          z: z,
          tst: tst,
          neg: neg,
          cmp: cmp,
          add: add,
          sub: sub,
          mul: mul,
          sqr: sqr,
          div: div,
          mredc: mredc
      };
  };

  function Number_extGCD(a, b) {
      var sa = a < 0 ? -1 : 1, sb = b < 0 ? -1 : 1, xi = 1, xj = 0, yi = 0, yj = 1, r, q, t, a_cmp_b;
      a *= sa;
      b *= sb;
      a_cmp_b = a < b;
      if (a_cmp_b) {
          t = a;
          (a = b), (b = t);
          t = sa;
          sa = sb;
          sb = t;
      }
      (q = Math.floor(a / b)), (r = a - q * b);
      while (r) {
          (t = xi - q * xj), (xi = xj), (xj = t);
          (t = yi - q * yj), (yi = yj), (yj = t);
          (a = b), (b = r);
          (q = Math.floor(a / b)), (r = a - q * b);
      }
      xj *= sa;
      yj *= sb;
      if (a_cmp_b) {
          t = xj;
          (xj = yj), (yj = t);
      }
      return {
          gcd: b,
          x: xj,
          y: yj,
      };
  }
  function BigNumber_extGCD(a, b) {
      let sa = a.sign;
      let sb = b.sign;
      if (sa < 0)
          a = a.negate();
      if (sb < 0)
          b = b.negate();
      const a_cmp_b = a.compare(b);
      if (a_cmp_b < 0) {
          let t = a;
          (a = b), (b = t);
          let t2 = sa;
          sa = sb;
          sb = t2;
      }
      var xi = BigNumber.ONE, xj = BigNumber.ZERO, lx = b.bitLength, yi = BigNumber.ZERO, yj = BigNumber.ONE, ly = a.bitLength, z, r, q;
      z = a.divide(b);
      while ((r = z.remainder) !== BigNumber.ZERO) {
          q = z.quotient;
          (z = xi.subtract(q.multiply(xj).clamp(lx)).clamp(lx)), (xi = xj), (xj = z);
          (z = yi.subtract(q.multiply(yj).clamp(ly)).clamp(ly)), (yi = yj), (yj = z);
          (a = b), (b = r);
          z = a.divide(b);
      }
      if (sa < 0)
          xj = xj.negate();
      if (sb < 0)
          yj = yj.negate();
      if (a_cmp_b < 0) {
          let t = xj;
          (xj = yj), (yj = t);
      }
      return {
          gcd: b,
          x: xj,
          y: yj,
      };
  }

  function getRandomValues(buf) {
      if (typeof browser$1 !== 'undefined') {
          const nodeCrypto = require$$0;
          const bytes = nodeCrypto.randomBytes(buf.length);
          buf.set(bytes);
          return;
      }
      if (window.crypto && window.crypto.getRandomValues) {
          window.crypto.getRandomValues(buf);
          return;
      }
      if (self.crypto && self.crypto.getRandomValues) {
          self.crypto.getRandomValues(buf);
          return;
      }
      // @ts-ignore
      if (window.msCrypto && window.msCrypto.getRandomValues) {
          // @ts-ignore
          window.msCrypto.getRandomValues(buf);
          return;
      }
      throw new Error('No secure random number generator available.');
  }

  ///////////////////////////////////////////////////////////////////////////////
  const _bigint_stdlib = { Uint32Array: Uint32Array, Math: Math };
  const _bigint_heap = new Uint32Array(0x100000);
  let _bigint_asm;
  function _half_imul(a, b) {
      return (a * b) | 0;
  }
  if (_bigint_stdlib.Math.imul === undefined) {
      _bigint_stdlib.Math.imul = _half_imul;
      _bigint_asm = bigint_asm(_bigint_stdlib, null, _bigint_heap.buffer);
      delete _bigint_stdlib.Math.imul;
  }
  else {
      _bigint_asm = bigint_asm(_bigint_stdlib, null, _bigint_heap.buffer);
  }
  ///////////////////////////////////////////////////////////////////////////////
  const _BigNumber_ZERO_limbs = new Uint32Array(0);
  class BigNumber {
      constructor(num) {
          let limbs = _BigNumber_ZERO_limbs;
          let bitlen = 0;
          let sign = 0;
          if (num === undefined) ;
          else {
              for (var i = 0; !num[i]; i++)
                  ;
              bitlen = (num.length - i) * 8;
              if (!bitlen)
                  return BigNumber.ZERO;
              limbs = new Uint32Array((bitlen + 31) >> 5);
              for (var j = num.length - 4; j >= i; j -= 4) {
                  limbs[(num.length - 4 - j) >> 2] = (num[j] << 24) | (num[j + 1] << 16) | (num[j + 2] << 8) | num[j + 3];
              }
              if (i - j === 3) {
                  limbs[limbs.length - 1] = num[i];
              }
              else if (i - j === 2) {
                  limbs[limbs.length - 1] = (num[i] << 8) | num[i + 1];
              }
              else if (i - j === 1) {
                  limbs[limbs.length - 1] = (num[i] << 16) | (num[i + 1] << 8) | num[i + 2];
              }
              sign = 1;
          }
          this.limbs = limbs;
          this.bitLength = bitlen;
          this.sign = sign;
      }
      static fromString(str) {
          const bytes = string_to_bytes(str);
          return new BigNumber(bytes);
      }
      static fromNumber(num) {
          let limbs = _BigNumber_ZERO_limbs;
          let bitlen = 0;
          let sign = 0;
          var absnum = Math.abs(num);
          if (absnum > 0xffffffff) {
              limbs = new Uint32Array(2);
              limbs[0] = absnum | 0;
              limbs[1] = (absnum / 0x100000000) | 0;
              bitlen = 52;
          }
          else if (absnum > 0) {
              limbs = new Uint32Array(1);
              limbs[0] = absnum;
              bitlen = 32;
          }
          else {
              limbs = _BigNumber_ZERO_limbs;
              bitlen = 0;
          }
          sign = num < 0 ? -1 : 1;
          return BigNumber.fromConfig({ limbs, bitLength: bitlen, sign });
      }
      static fromArrayBuffer(buffer) {
          return new BigNumber(new Uint8Array(buffer));
      }
      static fromConfig(obj) {
          const bn = new BigNumber();
          bn.limbs = new Uint32Array(obj.limbs);
          bn.bitLength = obj.bitLength;
          bn.sign = obj.sign;
          return bn;
      }
      toString(radix) {
          radix = radix || 16;
          const limbs = this.limbs;
          const bitlen = this.bitLength;
          let str = '';
          if (radix === 16) {
              // FIXME clamp last limb to (bitlen % 32)
              for (var i = ((bitlen + 31) >> 5) - 1; i >= 0; i--) {
                  var h = limbs[i].toString(16);
                  str += '00000000'.substr(h.length);
                  str += h;
              }
              str = str.replace(/^0+/, '');
              if (!str.length)
                  str = '0';
          }
          else {
              throw new IllegalArgumentError('bad radix');
          }
          if (this.sign < 0)
              str = '-' + str;
          return str;
      }
      toBytes() {
          const bitlen = this.bitLength;
          const limbs = this.limbs;
          if (bitlen === 0)
              return new Uint8Array(0);
          const bytelen = (bitlen + 7) >> 3;
          const bytes = new Uint8Array(bytelen);
          for (let i = 0; i < bytelen; i++) {
              let j = bytelen - i - 1;
              bytes[i] = limbs[j >> 2] >> ((j & 3) << 3);
          }
          return bytes;
      }
      /**
       * Downgrade to Number
       */
      valueOf() {
          const limbs = this.limbs;
          const bits = this.bitLength;
          const sign = this.sign;
          if (!sign)
              return 0;
          if (bits <= 32)
              return sign * (limbs[0] >>> 0);
          if (bits <= 52)
              return sign * (0x100000000 * (limbs[1] >>> 0) + (limbs[0] >>> 0));
          // normalization
          let i, l, e = 0;
          for (i = limbs.length - 1; i >= 0; i--) {
              if ((l = limbs[i]) === 0)
                  continue;
              while (((l << e) & 0x80000000) === 0)
                  e++;
              break;
          }
          if (i === 0)
              return sign * (limbs[0] >>> 0);
          return (sign *
              (0x100000 * (((limbs[i] << e) | (e ? limbs[i - 1] >>> (32 - e) : 0)) >>> 0) +
                  (((limbs[i - 1] << e) | (e && i > 1 ? limbs[i - 2] >>> (32 - e) : 0)) >>> 12)) *
              Math.pow(2, 32 * i - e - 52));
      }
      clamp(b) {
          const limbs = this.limbs;
          const bitlen = this.bitLength;
          // FIXME check b is number and in a valid range
          if (b >= bitlen)
              return this;
          const clamped = new BigNumber();
          let n = (b + 31) >> 5;
          let k = b % 32;
          clamped.limbs = new Uint32Array(limbs.subarray(0, n));
          clamped.bitLength = b;
          clamped.sign = this.sign;
          if (k)
              clamped.limbs[n - 1] &= -1 >>> (32 - k);
          return clamped;
      }
      slice(f, b) {
          const limbs = this.limbs;
          const bitlen = this.bitLength;
          if (f < 0)
              throw new RangeError('TODO');
          if (f >= bitlen)
              return BigNumber.ZERO;
          if (b === undefined || b > bitlen - f)
              b = bitlen - f;
          const sliced = new BigNumber();
          let n = f >> 5;
          let m = (f + b + 31) >> 5;
          let l = (b + 31) >> 5;
          let t = f % 32;
          let k = b % 32;
          const slimbs = new Uint32Array(l);
          if (t) {
              for (var i = 0; i < m - n - 1; i++) {
                  slimbs[i] = (limbs[n + i] >>> t) | (limbs[n + i + 1] << (32 - t));
              }
              slimbs[i] = limbs[n + i] >>> t;
          }
          else {
              slimbs.set(limbs.subarray(n, m));
          }
          if (k) {
              slimbs[l - 1] &= -1 >>> (32 - k);
          }
          sliced.limbs = slimbs;
          sliced.bitLength = b;
          sliced.sign = this.sign;
          return sliced;
      }
      negate() {
          const negative = new BigNumber();
          negative.limbs = this.limbs;
          negative.bitLength = this.bitLength;
          negative.sign = -1 * this.sign;
          return negative;
      }
      compare(that) {
          var alimbs = this.limbs, alimbcnt = alimbs.length, blimbs = that.limbs, blimbcnt = blimbs.length, z = 0;
          if (this.sign < that.sign)
              return -1;
          if (this.sign > that.sign)
              return 1;
          _bigint_heap.set(alimbs, 0);
          _bigint_heap.set(blimbs, alimbcnt);
          z = _bigint_asm.cmp(0, alimbcnt << 2, alimbcnt << 2, blimbcnt << 2);
          return z * this.sign;
      }
      add(that) {
          if (!this.sign)
              return that;
          if (!that.sign)
              return this;
          var abitlen = this.bitLength, alimbs = this.limbs, alimbcnt = alimbs.length, asign = this.sign, bbitlen = that.bitLength, blimbs = that.limbs, blimbcnt = blimbs.length, bsign = that.sign, rbitlen, rlimbcnt, rsign, rof, result = new BigNumber();
          rbitlen = (abitlen > bbitlen ? abitlen : bbitlen) + (asign * bsign > 0 ? 1 : 0);
          rlimbcnt = (rbitlen + 31) >> 5;
          _bigint_asm.sreset();
          var pA = _bigint_asm.salloc(alimbcnt << 2), pB = _bigint_asm.salloc(blimbcnt << 2), pR = _bigint_asm.salloc(rlimbcnt << 2);
          _bigint_asm.z(pR - pA + (rlimbcnt << 2), 0, pA);
          _bigint_heap.set(alimbs, pA >> 2);
          _bigint_heap.set(blimbs, pB >> 2);
          if (asign * bsign > 0) {
              _bigint_asm.add(pA, alimbcnt << 2, pB, blimbcnt << 2, pR, rlimbcnt << 2);
              rsign = asign;
          }
          else if (asign > bsign) {
              rof = _bigint_asm.sub(pA, alimbcnt << 2, pB, blimbcnt << 2, pR, rlimbcnt << 2);
              rsign = rof ? bsign : asign;
          }
          else {
              rof = _bigint_asm.sub(pB, blimbcnt << 2, pA, alimbcnt << 2, pR, rlimbcnt << 2);
              rsign = rof ? asign : bsign;
          }
          if (rof)
              _bigint_asm.neg(pR, rlimbcnt << 2, pR, rlimbcnt << 2);
          if (_bigint_asm.tst(pR, rlimbcnt << 2) === 0)
              return BigNumber.ZERO;
          result.limbs = new Uint32Array(_bigint_heap.subarray(pR >> 2, (pR >> 2) + rlimbcnt));
          result.bitLength = rbitlen;
          result.sign = rsign;
          return result;
      }
      subtract(that) {
          return this.add(that.negate());
      }
      square() {
          if (!this.sign)
              return BigNumber.ZERO;
          var abitlen = this.bitLength, alimbs = this.limbs, alimbcnt = alimbs.length, rbitlen, rlimbcnt, result = new BigNumber();
          rbitlen = abitlen << 1;
          rlimbcnt = (rbitlen + 31) >> 5;
          _bigint_asm.sreset();
          var pA = _bigint_asm.salloc(alimbcnt << 2), pR = _bigint_asm.salloc(rlimbcnt << 2);
          _bigint_asm.z(pR - pA + (rlimbcnt << 2), 0, pA);
          _bigint_heap.set(alimbs, pA >> 2);
          _bigint_asm.sqr(pA, alimbcnt << 2, pR);
          result.limbs = new Uint32Array(_bigint_heap.subarray(pR >> 2, (pR >> 2) + rlimbcnt));
          result.bitLength = rbitlen;
          result.sign = 1;
          return result;
      }
      divide(that) {
          var abitlen = this.bitLength, alimbs = this.limbs, alimbcnt = alimbs.length, bbitlen = that.bitLength, blimbs = that.limbs, blimbcnt = blimbs.length, qlimbcnt, rlimbcnt, quotient = BigNumber.ZERO, remainder = BigNumber.ZERO;
          _bigint_asm.sreset();
          var pA = _bigint_asm.salloc(alimbcnt << 2), pB = _bigint_asm.salloc(blimbcnt << 2), pQ = _bigint_asm.salloc(alimbcnt << 2);
          _bigint_asm.z(pQ - pA + (alimbcnt << 2), 0, pA);
          _bigint_heap.set(alimbs, pA >> 2);
          _bigint_heap.set(blimbs, pB >> 2);
          _bigint_asm.div(pA, alimbcnt << 2, pB, blimbcnt << 2, pQ);
          qlimbcnt = _bigint_asm.tst(pQ, alimbcnt << 2) >> 2;
          if (qlimbcnt) {
              quotient = new BigNumber();
              quotient.limbs = new Uint32Array(_bigint_heap.subarray(pQ >> 2, (pQ >> 2) + qlimbcnt));
              quotient.bitLength = abitlen < qlimbcnt << 5 ? abitlen : qlimbcnt << 5;
              quotient.sign = this.sign * that.sign;
          }
          rlimbcnt = _bigint_asm.tst(pA, blimbcnt << 2) >> 2;
          if (rlimbcnt) {
              remainder = new BigNumber();
              remainder.limbs = new Uint32Array(_bigint_heap.subarray(pA >> 2, (pA >> 2) + rlimbcnt));
              remainder.bitLength = bbitlen < rlimbcnt << 5 ? bbitlen : rlimbcnt << 5;
              remainder.sign = this.sign;
          }
          return {
              quotient: quotient,
              remainder: remainder,
          };
      }
      multiply(that) {
          if (!this.sign || !that.sign)
              return BigNumber.ZERO;
          var abitlen = this.bitLength, alimbs = this.limbs, alimbcnt = alimbs.length, bbitlen = that.bitLength, blimbs = that.limbs, blimbcnt = blimbs.length, rbitlen, rlimbcnt, result = new BigNumber();
          rbitlen = abitlen + bbitlen;
          rlimbcnt = (rbitlen + 31) >> 5;
          _bigint_asm.sreset();
          var pA = _bigint_asm.salloc(alimbcnt << 2), pB = _bigint_asm.salloc(blimbcnt << 2), pR = _bigint_asm.salloc(rlimbcnt << 2);
          _bigint_asm.z(pR - pA + (rlimbcnt << 2), 0, pA);
          _bigint_heap.set(alimbs, pA >> 2);
          _bigint_heap.set(blimbs, pB >> 2);
          _bigint_asm.mul(pA, alimbcnt << 2, pB, blimbcnt << 2, pR, rlimbcnt << 2);
          result.limbs = new Uint32Array(_bigint_heap.subarray(pR >> 2, (pR >> 2) + rlimbcnt));
          result.sign = this.sign * that.sign;
          result.bitLength = rbitlen;
          return result;
      }
      isMillerRabinProbablePrime(rounds) {
          var t = BigNumber.fromConfig(this), s = 0;
          t.limbs[0] -= 1;
          while (t.limbs[s >> 5] === 0)
              s += 32;
          while (((t.limbs[s >> 5] >> (s & 31)) & 1) === 0)
              s++;
          t = t.slice(s);
          var m = new Modulus(this), m1 = this.subtract(BigNumber.ONE), a = BigNumber.fromConfig(this), l = this.limbs.length - 1;
          while (a.limbs[l] === 0)
              l--;
          while (--rounds >= 0) {
              getRandomValues(a.limbs);
              if (a.limbs[0] < 2)
                  a.limbs[0] += 2;
              while (a.compare(m1) >= 0)
                  a.limbs[l] >>>= 1;
              var x = m.power(a, t);
              if (x.compare(BigNumber.ONE) === 0)
                  continue;
              if (x.compare(m1) === 0)
                  continue;
              var c = s;
              while (--c > 0) {
                  x = x.square().divide(m).remainder;
                  if (x.compare(BigNumber.ONE) === 0)
                      return false;
                  if (x.compare(m1) === 0)
                      break;
              }
              if (c === 0)
                  return false;
          }
          return true;
      }
      isProbablePrime(paranoia = 80) {
          var limbs = this.limbs;
          var i = 0;
          // Oddity test
          // (50% false positive probability)
          if ((limbs[0] & 1) === 0)
              return false;
          if (paranoia <= 1)
              return true;
          // Magic divisors (3, 5, 17) test
          // (~25% false positive probability)
          var s3 = 0, s5 = 0, s17 = 0;
          for (i = 0; i < limbs.length; i++) {
              var l3 = limbs[i];
              while (l3) {
                  s3 += l3 & 3;
                  l3 >>>= 2;
              }
              var l5 = limbs[i];
              while (l5) {
                  s5 += l5 & 3;
                  l5 >>>= 2;
                  s5 -= l5 & 3;
                  l5 >>>= 2;
              }
              var l17 = limbs[i];
              while (l17) {
                  s17 += l17 & 15;
                  l17 >>>= 4;
                  s17 -= l17 & 15;
                  l17 >>>= 4;
              }
          }
          if (!(s3 % 3) || !(s5 % 5) || !(s17 % 17))
              return false;
          if (paranoia <= 2)
              return true;
          // Miller-Rabin test
          // (≤ 4^(-k) false positive probability)
          return this.isMillerRabinProbablePrime(paranoia >>> 1);
      }
  }
  BigNumber.extGCD = BigNumber_extGCD;
  BigNumber.ZERO = BigNumber.fromNumber(0);
  BigNumber.ONE = BigNumber.fromNumber(1);
  class Modulus extends BigNumber {
      constructor(number) {
          super();
          this.limbs = number.limbs;
          this.bitLength = number.bitLength;
          this.sign = number.sign;
          if (this.valueOf() < 1)
              throw new RangeError();
          if (this.bitLength <= 32)
              return;
          let comodulus;
          if (this.limbs[0] & 1) {
              const bitlen = ((this.bitLength + 31) & -32) + 1;
              const limbs = new Uint32Array((bitlen + 31) >> 5);
              limbs[limbs.length - 1] = 1;
              comodulus = new BigNumber();
              comodulus.sign = 1;
              comodulus.bitLength = bitlen;
              comodulus.limbs = limbs;
              const k = Number_extGCD(0x100000000, this.limbs[0]).y;
              this.coefficient = k < 0 ? -k : 0x100000000 - k;
          }
          else {
              /**
               * TODO even modulus reduction
               * Modulus represented as `N = 2^U * V`, where `V` is odd and thus `GCD(2^U, V) = 1`.
               * Calculation `A = TR' mod V` is made as for odd modulo using Montgomery method.
               * Calculation `B = TR' mod 2^U` is easy as modulus is a power of 2.
               * Using Chinese Remainder Theorem and Garner's Algorithm restore `TR' mod N` from `A` and `B`.
               */
              return;
          }
          this.comodulus = comodulus;
          this.comodulusRemainder = comodulus.divide(this).remainder;
          this.comodulusRemainderSquare = comodulus.square().divide(this).remainder;
      }
      /**
       * Modular reduction
       */
      reduce(a) {
          if (a.bitLength <= 32 && this.bitLength <= 32)
              return BigNumber.fromNumber(a.valueOf() % this.valueOf());
          if (a.compare(this) < 0)
              return a;
          return a.divide(this).remainder;
      }
      /**
       * Modular inverse
       */
      inverse(a) {
          a = this.reduce(a);
          const r = BigNumber_extGCD(this, a);
          if (r.gcd.valueOf() !== 1)
              throw new Error('GCD is not 1');
          if (r.y.sign < 0)
              return r.y.add(this).clamp(this.bitLength);
          return r.y;
      }
      /**
       * Modular exponentiation
       */
      power(g, e) {
          // count exponent set bits
          let c = 0;
          for (let i = 0; i < e.limbs.length; i++) {
              let t = e.limbs[i];
              while (t) {
                  if (t & 1)
                      c++;
                  t >>>= 1;
              }
          }
          // window size parameter
          let k = 8;
          if (e.bitLength <= 4536)
              k = 7;
          if (e.bitLength <= 1736)
              k = 6;
          if (e.bitLength <= 630)
              k = 5;
          if (e.bitLength <= 210)
              k = 4;
          if (e.bitLength <= 60)
              k = 3;
          if (e.bitLength <= 12)
              k = 2;
          if (c <= 1 << (k - 1))
              k = 1;
          // montgomerize base
          g = Modulus._Montgomery_reduce(this.reduce(g).multiply(this.comodulusRemainderSquare), this);
          // precompute odd powers
          const g2 = Modulus._Montgomery_reduce(g.square(), this), gn = new Array(1 << (k - 1));
          gn[0] = g;
          gn[1] = Modulus._Montgomery_reduce(g.multiply(g2), this);
          for (let i = 2; i < 1 << (k - 1); i++) {
              gn[i] = Modulus._Montgomery_reduce(gn[i - 1].multiply(g2), this);
          }
          // perform exponentiation
          const u = this.comodulusRemainder;
          let r = u;
          for (let i = e.limbs.length - 1; i >= 0; i--) {
              let t = e.limbs[i];
              for (let j = 32; j > 0;) {
                  if (t & 0x80000000) {
                      let n = t >>> (32 - k), l = k;
                      while ((n & 1) === 0) {
                          n >>>= 1;
                          l--;
                      }
                      var m = gn[n >>> 1];
                      while (n) {
                          n >>>= 1;
                          if (r !== u)
                              r = Modulus._Montgomery_reduce(r.square(), this);
                      }
                      r = r !== u ? Modulus._Montgomery_reduce(r.multiply(m), this) : m;
                      (t <<= l), (j -= l);
                  }
                  else {
                      if (r !== u)
                          r = Modulus._Montgomery_reduce(r.square(), this);
                      (t <<= 1), j--;
                  }
              }
          }
          // de-montgomerize result
          return Modulus._Montgomery_reduce(r, this);
      }
      static _Montgomery_reduce(a, n) {
          const alimbs = a.limbs;
          const alimbcnt = alimbs.length;
          const nlimbs = n.limbs;
          const nlimbcnt = nlimbs.length;
          const y = n.coefficient;
          _bigint_asm.sreset();
          const pA = _bigint_asm.salloc(alimbcnt << 2), pN = _bigint_asm.salloc(nlimbcnt << 2), pR = _bigint_asm.salloc(nlimbcnt << 2);
          _bigint_asm.z(pR - pA + (nlimbcnt << 2), 0, pA);
          _bigint_heap.set(alimbs, pA >> 2);
          _bigint_heap.set(nlimbs, pN >> 2);
          _bigint_asm.mredc(pA, alimbcnt << 2, pN, nlimbcnt << 2, y, pR);
          const result = new BigNumber();
          result.limbs = new Uint32Array(_bigint_heap.subarray(pR >> 2, (pR >> 2) + nlimbcnt));
          result.bitLength = n.bitLength;
          result.sign = 1;
          return result;
      }
  }

  var sha1_asm = function ( stdlib, foreign, buffer ) {
      "use asm";

      // SHA256 state
      var H0 = 0, H1 = 0, H2 = 0, H3 = 0, H4 = 0,
          TOTAL0 = 0, TOTAL1 = 0;

      // HMAC state
      var I0 = 0, I1 = 0, I2 = 0, I3 = 0, I4 = 0,
          O0 = 0, O1 = 0, O2 = 0, O3 = 0, O4 = 0;

      // I/O buffer
      var HEAP = new stdlib.Uint8Array(buffer);

      function _core ( w0, w1, w2, w3, w4, w5, w6, w7, w8, w9, w10, w11, w12, w13, w14, w15 ) {
          w0 = w0|0;
          w1 = w1|0;
          w2 = w2|0;
          w3 = w3|0;
          w4 = w4|0;
          w5 = w5|0;
          w6 = w6|0;
          w7 = w7|0;
          w8 = w8|0;
          w9 = w9|0;
          w10 = w10|0;
          w11 = w11|0;
          w12 = w12|0;
          w13 = w13|0;
          w14 = w14|0;
          w15 = w15|0;

          var a = 0, b = 0, c = 0, d = 0, e = 0, n = 0, t = 0,
              w16 = 0, w17 = 0, w18 = 0, w19 = 0,
              w20 = 0, w21 = 0, w22 = 0, w23 = 0, w24 = 0, w25 = 0, w26 = 0, w27 = 0, w28 = 0, w29 = 0,
              w30 = 0, w31 = 0, w32 = 0, w33 = 0, w34 = 0, w35 = 0, w36 = 0, w37 = 0, w38 = 0, w39 = 0,
              w40 = 0, w41 = 0, w42 = 0, w43 = 0, w44 = 0, w45 = 0, w46 = 0, w47 = 0, w48 = 0, w49 = 0,
              w50 = 0, w51 = 0, w52 = 0, w53 = 0, w54 = 0, w55 = 0, w56 = 0, w57 = 0, w58 = 0, w59 = 0,
              w60 = 0, w61 = 0, w62 = 0, w63 = 0, w64 = 0, w65 = 0, w66 = 0, w67 = 0, w68 = 0, w69 = 0,
              w70 = 0, w71 = 0, w72 = 0, w73 = 0, w74 = 0, w75 = 0, w76 = 0, w77 = 0, w78 = 0, w79 = 0;

          a = H0;
          b = H1;
          c = H2;
          d = H3;
          e = H4;

          // 0
          t = ( w0 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 1
          t = ( w1 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 2
          t = ( w2 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 3
          t = ( w3 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 4
          t = ( w4 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 5
          t = ( w5 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 6
          t = ( w6 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 7
          t = ( w7 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 8
          t = ( w8 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 9
          t = ( w9 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 10
          t = ( w10 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 11
          t = ( w11 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 12
          t = ( w12 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 13
          t = ( w13 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 14
          t = ( w14 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 15
          t = ( w15 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 16
          n = w13 ^ w8 ^ w2 ^ w0;
          w16 = (n << 1) | (n >>> 31);
          t = (w16 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 17
          n = w14 ^ w9 ^ w3 ^ w1;
          w17 = (n << 1) | (n >>> 31);
          t = (w17 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 18
          n = w15 ^ w10 ^ w4 ^ w2;
          w18 = (n << 1) | (n >>> 31);
          t = (w18 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 19
          n = w16 ^ w11 ^ w5 ^ w3;
          w19 = (n << 1) | (n >>> 31);
          t = (w19 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (~b & d)) + 0x5a827999 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 20
          n = w17 ^ w12 ^ w6 ^ w4;
          w20 = (n << 1) | (n >>> 31);
          t = (w20 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 21
          n = w18 ^ w13 ^ w7 ^ w5;
          w21 = (n << 1) | (n >>> 31);
          t = (w21 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 22
          n = w19 ^ w14 ^ w8 ^ w6;
          w22 = (n << 1) | (n >>> 31);
          t = (w22 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 23
          n = w20 ^ w15 ^ w9 ^ w7;
          w23 = (n << 1) | (n >>> 31);
          t = (w23 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 24
          n = w21 ^ w16 ^ w10 ^ w8;
          w24 = (n << 1) | (n >>> 31);
          t = (w24 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 25
          n = w22 ^ w17 ^ w11 ^ w9;
          w25 = (n << 1) | (n >>> 31);
          t = (w25 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 26
          n = w23 ^ w18 ^ w12 ^ w10;
          w26 = (n << 1) | (n >>> 31);
          t = (w26 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 27
          n = w24 ^ w19 ^ w13 ^ w11;
          w27 = (n << 1) | (n >>> 31);
          t = (w27 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 28
          n = w25 ^ w20 ^ w14 ^ w12;
          w28 = (n << 1) | (n >>> 31);
          t = (w28 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 29
          n = w26 ^ w21 ^ w15 ^ w13;
          w29 = (n << 1) | (n >>> 31);
          t = (w29 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 30
          n = w27 ^ w22 ^ w16 ^ w14;
          w30 = (n << 1) | (n >>> 31);
          t = (w30 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 31
          n = w28 ^ w23 ^ w17 ^ w15;
          w31 = (n << 1) | (n >>> 31);
          t = (w31 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 32
          n = w29 ^ w24 ^ w18 ^ w16;
          w32 = (n << 1) | (n >>> 31);
          t = (w32 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 33
          n = w30 ^ w25 ^ w19 ^ w17;
          w33 = (n << 1) | (n >>> 31);
          t = (w33 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 34
          n = w31 ^ w26 ^ w20 ^ w18;
          w34 = (n << 1) | (n >>> 31);
          t = (w34 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 35
          n = w32 ^ w27 ^ w21 ^ w19;
          w35 = (n << 1) | (n >>> 31);
          t = (w35 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 36
          n = w33 ^ w28 ^ w22 ^ w20;
          w36 = (n << 1) | (n >>> 31);
          t = (w36 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 37
          n = w34 ^ w29 ^ w23 ^ w21;
          w37 = (n << 1) | (n >>> 31);
          t = (w37 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 38
          n = w35 ^ w30 ^ w24 ^ w22;
          w38 = (n << 1) | (n >>> 31);
          t = (w38 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 39
          n = w36 ^ w31 ^ w25 ^ w23;
          w39 = (n << 1) | (n >>> 31);
          t = (w39 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) + 0x6ed9eba1 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 40
          n = w37 ^ w32 ^ w26 ^ w24;
          w40 = (n << 1) | (n >>> 31);
          t = (w40 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 41
          n = w38 ^ w33 ^ w27 ^ w25;
          w41 = (n << 1) | (n >>> 31);
          t = (w41 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 42
          n = w39 ^ w34 ^ w28 ^ w26;
          w42 = (n << 1) | (n >>> 31);
          t = (w42 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 43
          n = w40 ^ w35 ^ w29 ^ w27;
          w43 = (n << 1) | (n >>> 31);
          t = (w43 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 44
          n = w41 ^ w36 ^ w30 ^ w28;
          w44 = (n << 1) | (n >>> 31);
          t = (w44 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 45
          n = w42 ^ w37 ^ w31 ^ w29;
          w45 = (n << 1) | (n >>> 31);
          t = (w45 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 46
          n = w43 ^ w38 ^ w32 ^ w30;
          w46 = (n << 1) | (n >>> 31);
          t = (w46 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 47
          n = w44 ^ w39 ^ w33 ^ w31;
          w47 = (n << 1) | (n >>> 31);
          t = (w47 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 48
          n = w45 ^ w40 ^ w34 ^ w32;
          w48 = (n << 1) | (n >>> 31);
          t = (w48 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 49
          n = w46 ^ w41 ^ w35 ^ w33;
          w49 = (n << 1) | (n >>> 31);
          t = (w49 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 50
          n = w47 ^ w42 ^ w36 ^ w34;
          w50 = (n << 1) | (n >>> 31);
          t = (w50 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 51
          n = w48 ^ w43 ^ w37 ^ w35;
          w51 = (n << 1) | (n >>> 31);
          t = (w51 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 52
          n = w49 ^ w44 ^ w38 ^ w36;
          w52 = (n << 1) | (n >>> 31);
          t = (w52 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 53
          n = w50 ^ w45 ^ w39 ^ w37;
          w53 = (n << 1) | (n >>> 31);
          t = (w53 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 54
          n = w51 ^ w46 ^ w40 ^ w38;
          w54 = (n << 1) | (n >>> 31);
          t = (w54 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 55
          n = w52 ^ w47 ^ w41 ^ w39;
          w55 = (n << 1) | (n >>> 31);
          t = (w55 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 56
          n = w53 ^ w48 ^ w42 ^ w40;
          w56 = (n << 1) | (n >>> 31);
          t = (w56 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 57
          n = w54 ^ w49 ^ w43 ^ w41;
          w57 = (n << 1) | (n >>> 31);
          t = (w57 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 58
          n = w55 ^ w50 ^ w44 ^ w42;
          w58 = (n << 1) | (n >>> 31);
          t = (w58 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 59
          n = w56 ^ w51 ^ w45 ^ w43;
          w59 = (n << 1) | (n >>> 31);
          t = (w59 + ((a << 5) | (a >>> 27)) + e + ((b & c) | (b & d) | (c & d)) - 0x70e44324 )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 60
          n = w57 ^ w52 ^ w46 ^ w44;
          w60 = (n << 1) | (n >>> 31);
          t = (w60 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 61
          n = w58 ^ w53 ^ w47 ^ w45;
          w61 = (n << 1) | (n >>> 31);
          t = (w61 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 62
          n = w59 ^ w54 ^ w48 ^ w46;
          w62 = (n << 1) | (n >>> 31);
          t = (w62 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 63
          n = w60 ^ w55 ^ w49 ^ w47;
          w63 = (n << 1) | (n >>> 31);
          t = (w63 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 64
          n = w61 ^ w56 ^ w50 ^ w48;
          w64 = (n << 1) | (n >>> 31);
          t = (w64 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 65
          n = w62 ^ w57 ^ w51 ^ w49;
          w65 = (n << 1) | (n >>> 31);
          t = (w65 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 66
          n = w63 ^ w58 ^ w52 ^ w50;
          w66 = (n << 1) | (n >>> 31);
          t = (w66 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 67
          n = w64 ^ w59 ^ w53 ^ w51;
          w67 = (n << 1) | (n >>> 31);
          t = (w67 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 68
          n = w65 ^ w60 ^ w54 ^ w52;
          w68 = (n << 1) | (n >>> 31);
          t = (w68 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 69
          n = w66 ^ w61 ^ w55 ^ w53;
          w69 = (n << 1) | (n >>> 31);
          t = (w69 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 70
          n = w67 ^ w62 ^ w56 ^ w54;
          w70 = (n << 1) | (n >>> 31);
          t = (w70 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 71
          n = w68 ^ w63 ^ w57 ^ w55;
          w71 = (n << 1) | (n >>> 31);
          t = (w71 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 72
          n = w69 ^ w64 ^ w58 ^ w56;
          w72 = (n << 1) | (n >>> 31);
          t = (w72 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 73
          n = w70 ^ w65 ^ w59 ^ w57;
          w73 = (n << 1) | (n >>> 31);
          t = (w73 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 74
          n = w71 ^ w66 ^ w60 ^ w58;
          w74 = (n << 1) | (n >>> 31);
          t = (w74 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 75
          n = w72 ^ w67 ^ w61 ^ w59;
          w75 = (n << 1) | (n >>> 31);
          t = (w75 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 76
          n = w73 ^ w68 ^ w62 ^ w60;
          w76 = (n << 1) | (n >>> 31);
          t = (w76 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 77
          n = w74 ^ w69 ^ w63 ^ w61;
          w77 = (n << 1) | (n >>> 31);
          t = (w77 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 78
          n = w75 ^ w70 ^ w64 ^ w62;
          w78 = (n << 1) | (n >>> 31);
          t = (w78 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          // 79
          n = w76 ^ w71 ^ w65 ^ w63;
          w79 = (n << 1) | (n >>> 31);
          t = (w79 + ((a << 5) | (a >>> 27)) + e + (b ^ c ^ d) - 0x359d3e2a )|0;
          e = d; d = c; c = (b << 30) | (b >>> 2); b = a; a = t;

          H0 = ( H0 + a )|0;
          H1 = ( H1 + b )|0;
          H2 = ( H2 + c )|0;
          H3 = ( H3 + d )|0;
          H4 = ( H4 + e )|0;

      }

      function _core_heap ( offset ) {
          offset = offset|0;

          _core(
              HEAP[offset|0]<<24 | HEAP[offset|1]<<16 | HEAP[offset|2]<<8 | HEAP[offset|3],
              HEAP[offset|4]<<24 | HEAP[offset|5]<<16 | HEAP[offset|6]<<8 | HEAP[offset|7],
              HEAP[offset|8]<<24 | HEAP[offset|9]<<16 | HEAP[offset|10]<<8 | HEAP[offset|11],
              HEAP[offset|12]<<24 | HEAP[offset|13]<<16 | HEAP[offset|14]<<8 | HEAP[offset|15],
              HEAP[offset|16]<<24 | HEAP[offset|17]<<16 | HEAP[offset|18]<<8 | HEAP[offset|19],
              HEAP[offset|20]<<24 | HEAP[offset|21]<<16 | HEAP[offset|22]<<8 | HEAP[offset|23],
              HEAP[offset|24]<<24 | HEAP[offset|25]<<16 | HEAP[offset|26]<<8 | HEAP[offset|27],
              HEAP[offset|28]<<24 | HEAP[offset|29]<<16 | HEAP[offset|30]<<8 | HEAP[offset|31],
              HEAP[offset|32]<<24 | HEAP[offset|33]<<16 | HEAP[offset|34]<<8 | HEAP[offset|35],
              HEAP[offset|36]<<24 | HEAP[offset|37]<<16 | HEAP[offset|38]<<8 | HEAP[offset|39],
              HEAP[offset|40]<<24 | HEAP[offset|41]<<16 | HEAP[offset|42]<<8 | HEAP[offset|43],
              HEAP[offset|44]<<24 | HEAP[offset|45]<<16 | HEAP[offset|46]<<8 | HEAP[offset|47],
              HEAP[offset|48]<<24 | HEAP[offset|49]<<16 | HEAP[offset|50]<<8 | HEAP[offset|51],
              HEAP[offset|52]<<24 | HEAP[offset|53]<<16 | HEAP[offset|54]<<8 | HEAP[offset|55],
              HEAP[offset|56]<<24 | HEAP[offset|57]<<16 | HEAP[offset|58]<<8 | HEAP[offset|59],
              HEAP[offset|60]<<24 | HEAP[offset|61]<<16 | HEAP[offset|62]<<8 | HEAP[offset|63]
          );
      }

      // offset — multiple of 32
      function _state_to_heap ( output ) {
          output = output|0;

          HEAP[output|0] = H0>>>24;
          HEAP[output|1] = H0>>>16&255;
          HEAP[output|2] = H0>>>8&255;
          HEAP[output|3] = H0&255;
          HEAP[output|4] = H1>>>24;
          HEAP[output|5] = H1>>>16&255;
          HEAP[output|6] = H1>>>8&255;
          HEAP[output|7] = H1&255;
          HEAP[output|8] = H2>>>24;
          HEAP[output|9] = H2>>>16&255;
          HEAP[output|10] = H2>>>8&255;
          HEAP[output|11] = H2&255;
          HEAP[output|12] = H3>>>24;
          HEAP[output|13] = H3>>>16&255;
          HEAP[output|14] = H3>>>8&255;
          HEAP[output|15] = H3&255;
          HEAP[output|16] = H4>>>24;
          HEAP[output|17] = H4>>>16&255;
          HEAP[output|18] = H4>>>8&255;
          HEAP[output|19] = H4&255;
      }

      function reset () {
          H0 = 0x67452301;
          H1 = 0xefcdab89;
          H2 = 0x98badcfe;
          H3 = 0x10325476;
          H4 = 0xc3d2e1f0;
          TOTAL0 = TOTAL1 = 0;
      }

      function init ( h0, h1, h2, h3, h4, total0, total1 ) {
          h0 = h0|0;
          h1 = h1|0;
          h2 = h2|0;
          h3 = h3|0;
          h4 = h4|0;
          total0 = total0|0;
          total1 = total1|0;

          H0 = h0;
          H1 = h1;
          H2 = h2;
          H3 = h3;
          H4 = h4;
          TOTAL0 = total0;
          TOTAL1 = total1;
      }

      // offset — multiple of 64
      function process ( offset, length ) {
          offset = offset|0;
          length = length|0;

          var hashed = 0;

          if ( offset & 63 )
              return -1;

          while ( (length|0) >= 64 ) {
              _core_heap(offset);

              offset = ( offset + 64 )|0;
              length = ( length - 64 )|0;

              hashed = ( hashed + 64 )|0;
          }

          TOTAL0 = ( TOTAL0 + hashed )|0;
          if ( TOTAL0>>>0 < hashed>>>0 ) TOTAL1 = ( TOTAL1 + 1 )|0;

          return hashed|0;
      }

      // offset — multiple of 64
      // output — multiple of 32
      function finish ( offset, length, output ) {
          offset = offset|0;
          length = length|0;
          output = output|0;

          var hashed = 0,
              i = 0;

          if ( offset & 63 )
              return -1;

          if ( ~output )
              if ( output & 31 )
                  return -1;

          if ( (length|0) >= 64 ) {
              hashed = process( offset, length )|0;
              if ( (hashed|0) == -1 )
                  return -1;

              offset = ( offset + hashed )|0;
              length = ( length - hashed )|0;
          }

          hashed = ( hashed + length )|0;
          TOTAL0 = ( TOTAL0 + length )|0;
          if ( TOTAL0>>>0 < length>>>0 ) TOTAL1 = (TOTAL1 + 1)|0;

          HEAP[offset|length] = 0x80;

          if ( (length|0) >= 56 ) {
              for ( i = (length+1)|0; (i|0) < 64; i = (i+1)|0 )
                  HEAP[offset|i] = 0x00;
              _core_heap(offset);

              length = 0;

              HEAP[offset|0] = 0;
          }

          for ( i = (length+1)|0; (i|0) < 59; i = (i+1)|0 )
              HEAP[offset|i] = 0;

          HEAP[offset|56] = TOTAL1>>>21&255;
          HEAP[offset|57] = TOTAL1>>>13&255;
          HEAP[offset|58] = TOTAL1>>>5&255;
          HEAP[offset|59] = TOTAL1<<3&255 | TOTAL0>>>29;
          HEAP[offset|60] = TOTAL0>>>21&255;
          HEAP[offset|61] = TOTAL0>>>13&255;
          HEAP[offset|62] = TOTAL0>>>5&255;
          HEAP[offset|63] = TOTAL0<<3&255;
          _core_heap(offset);

          if ( ~output )
              _state_to_heap(output);

          return hashed|0;
      }

      function hmac_reset () {
          H0 = I0;
          H1 = I1;
          H2 = I2;
          H3 = I3;
          H4 = I4;
          TOTAL0 = 64;
          TOTAL1 = 0;
      }

      function _hmac_opad () {
          H0 = O0;
          H1 = O1;
          H2 = O2;
          H3 = O3;
          H4 = O4;
          TOTAL0 = 64;
          TOTAL1 = 0;
      }

      function hmac_init ( p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15 ) {
          p0 = p0|0;
          p1 = p1|0;
          p2 = p2|0;
          p3 = p3|0;
          p4 = p4|0;
          p5 = p5|0;
          p6 = p6|0;
          p7 = p7|0;
          p8 = p8|0;
          p9 = p9|0;
          p10 = p10|0;
          p11 = p11|0;
          p12 = p12|0;
          p13 = p13|0;
          p14 = p14|0;
          p15 = p15|0;

          // opad
          reset();
          _core(
              p0 ^ 0x5c5c5c5c,
              p1 ^ 0x5c5c5c5c,
              p2 ^ 0x5c5c5c5c,
              p3 ^ 0x5c5c5c5c,
              p4 ^ 0x5c5c5c5c,
              p5 ^ 0x5c5c5c5c,
              p6 ^ 0x5c5c5c5c,
              p7 ^ 0x5c5c5c5c,
              p8 ^ 0x5c5c5c5c,
              p9 ^ 0x5c5c5c5c,
              p10 ^ 0x5c5c5c5c,
              p11 ^ 0x5c5c5c5c,
              p12 ^ 0x5c5c5c5c,
              p13 ^ 0x5c5c5c5c,
              p14 ^ 0x5c5c5c5c,
              p15 ^ 0x5c5c5c5c
          );
          O0 = H0;
          O1 = H1;
          O2 = H2;
          O3 = H3;
          O4 = H4;

          // ipad
          reset();
          _core(
              p0 ^ 0x36363636,
              p1 ^ 0x36363636,
              p2 ^ 0x36363636,
              p3 ^ 0x36363636,
              p4 ^ 0x36363636,
              p5 ^ 0x36363636,
              p6 ^ 0x36363636,
              p7 ^ 0x36363636,
              p8 ^ 0x36363636,
              p9 ^ 0x36363636,
              p10 ^ 0x36363636,
              p11 ^ 0x36363636,
              p12 ^ 0x36363636,
              p13 ^ 0x36363636,
              p14 ^ 0x36363636,
              p15 ^ 0x36363636
          );
          I0 = H0;
          I1 = H1;
          I2 = H2;
          I3 = H3;
          I4 = H4;

          TOTAL0 = 64;
          TOTAL1 = 0;
      }

      // offset — multiple of 64
      // output — multiple of 32
      function hmac_finish ( offset, length, output ) {
          offset = offset|0;
          length = length|0;
          output = output|0;

          var t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, hashed = 0;

          if ( offset & 63 )
              return -1;

          if ( ~output )
              if ( output & 31 )
                  return -1;

          hashed = finish( offset, length, -1 )|0;
          t0 = H0, t1 = H1, t2 = H2, t3 = H3, t4 = H4;

          _hmac_opad();
          _core( t0, t1, t2, t3, t4, 0x80000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 672 );

          if ( ~output )
              _state_to_heap(output);

          return hashed|0;
      }

      // salt is assumed to be already processed
      // offset — multiple of 64
      // output — multiple of 32
      function pbkdf2_generate_block ( offset, length, block, count, output ) {
          offset = offset|0;
          length = length|0;
          block = block|0;
          count = count|0;
          output = output|0;

          var h0 = 0, h1 = 0, h2 = 0, h3 = 0, h4 = 0,
              t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0;

          if ( offset & 63 )
              return -1;

          if ( ~output )
              if ( output & 31 )
                  return -1;

          // pad block number into heap
          // FIXME probable OOB write
          HEAP[(offset+length)|0]   = block>>>24;
          HEAP[(offset+length+1)|0] = block>>>16&255;
          HEAP[(offset+length+2)|0] = block>>>8&255;
          HEAP[(offset+length+3)|0] = block&255;

          // finish first iteration
          hmac_finish( offset, (length+4)|0, -1 )|0;
          h0 = t0 = H0, h1 = t1 = H1, h2 = t2 = H2, h3 = t3 = H3, h4 = t4 = H4;
          count = (count-1)|0;

          // perform the rest iterations
          while ( (count|0) > 0 ) {
              hmac_reset();
              _core( t0, t1, t2, t3, t4, 0x80000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 672 );
              t0 = H0, t1 = H1, t2 = H2, t3 = H3, t4 = H4;

              _hmac_opad();
              _core( t0, t1, t2, t3, t4, 0x80000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 672 );
              t0 = H0, t1 = H1, t2 = H2, t3 = H3, t4 = H4;

              h0 = h0 ^ H0;
              h1 = h1 ^ H1;
              h2 = h2 ^ H2;
              h3 = h3 ^ H3;
              h4 = h4 ^ H4;

              count = (count-1)|0;
          }

          H0 = h0;
          H1 = h1;
          H2 = h2;
          H3 = h3;
          H4 = h4;

          if ( ~output )
              _state_to_heap(output);

          return 0;
      }

      return {
        // SHA1
        reset: reset,
        init: init,
        process: process,
        finish: finish,

        // HMAC-SHA1
        hmac_reset: hmac_reset,
        hmac_init: hmac_init,
        hmac_finish: hmac_finish,

        // PBKDF2-HMAC-SHA1
        pbkdf2_generate_block: pbkdf2_generate_block
      }
  };

  class Hash {
      constructor() {
          this.pos = 0;
          this.len = 0;
      }
      reset() {
          this.result = null;
          this.pos = 0;
          this.len = 0;
          this.asm.reset();
          return this;
      }
      process(data) {
          if (this.result !== null)
              throw new IllegalStateError('state must be reset before processing new data');
          let asm = this.asm;
          let heap = this.heap;
          let hpos = this.pos;
          let hlen = this.len;
          let dpos = 0;
          let dlen = data.length;
          let wlen = 0;
          while (dlen > 0) {
              wlen = _heap_write(heap, hpos + hlen, data, dpos, dlen);
              hlen += wlen;
              dpos += wlen;
              dlen -= wlen;
              wlen = asm.process(hpos, hlen);
              hpos += wlen;
              hlen -= wlen;
              if (!hlen)
                  hpos = 0;
          }
          this.pos = hpos;
          this.len = hlen;
          return this;
      }
      finish() {
          if (this.result !== null)
              throw new IllegalStateError('state must be reset before processing new data');
          this.asm.finish(this.pos, this.len, 0);
          this.result = new Uint8Array(this.HASH_SIZE);
          this.result.set(this.heap.subarray(0, this.HASH_SIZE));
          this.pos = 0;
          this.len = 0;
          return this;
      }
  }

  const _sha1_block_size = 64;
  const _sha1_hash_size = 20;
  class Sha1 extends Hash {
      constructor() {
          super();
          this.NAME = 'sha1';
          this.BLOCK_SIZE = _sha1_block_size;
          this.HASH_SIZE = _sha1_hash_size;
          this.heap = _heap_init();
          this.asm = sha1_asm({ Uint8Array: Uint8Array }, null, this.heap.buffer);
          this.reset();
      }
  }
  Sha1.NAME = 'sha1';

  var sha256_asm = function ( stdlib, foreign, buffer ) {
      "use asm";

      // SHA256 state
      var H0 = 0, H1 = 0, H2 = 0, H3 = 0, H4 = 0, H5 = 0, H6 = 0, H7 = 0,
          TOTAL0 = 0, TOTAL1 = 0;

      // HMAC state
      var I0 = 0, I1 = 0, I2 = 0, I3 = 0, I4 = 0, I5 = 0, I6 = 0, I7 = 0,
          O0 = 0, O1 = 0, O2 = 0, O3 = 0, O4 = 0, O5 = 0, O6 = 0, O7 = 0;

      // I/O buffer
      var HEAP = new stdlib.Uint8Array(buffer);

      function _core ( w0, w1, w2, w3, w4, w5, w6, w7, w8, w9, w10, w11, w12, w13, w14, w15 ) {
          w0 = w0|0;
          w1 = w1|0;
          w2 = w2|0;
          w3 = w3|0;
          w4 = w4|0;
          w5 = w5|0;
          w6 = w6|0;
          w7 = w7|0;
          w8 = w8|0;
          w9 = w9|0;
          w10 = w10|0;
          w11 = w11|0;
          w12 = w12|0;
          w13 = w13|0;
          w14 = w14|0;
          w15 = w15|0;

          var a = 0, b = 0, c = 0, d = 0, e = 0, f = 0, g = 0, h = 0;

          a = H0;
          b = H1;
          c = H2;
          d = H3;
          e = H4;
          f = H5;
          g = H6;
          h = H7;

          // 0
          h = ( w0 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x428a2f98 )|0;
          d = ( d + h )|0;
          h = ( h + ( (a & b) ^ ( c & (a ^ b) ) ) + ( a>>>2 ^ a>>>13 ^ a>>>22 ^ a<<30 ^ a<<19 ^ a<<10 ) )|0;

          // 1
          g = ( w1 + g + ( d>>>6 ^ d>>>11 ^ d>>>25 ^ d<<26 ^ d<<21 ^ d<<7 ) +  ( f ^ d & (e^f) ) + 0x71374491 )|0;
          c = ( c + g )|0;
          g = ( g + ( (h & a) ^ ( b & (h ^ a) ) ) + ( h>>>2 ^ h>>>13 ^ h>>>22 ^ h<<30 ^ h<<19 ^ h<<10 ) )|0;

          // 2
          f = ( w2 + f + ( c>>>6 ^ c>>>11 ^ c>>>25 ^ c<<26 ^ c<<21 ^ c<<7 ) +  ( e ^ c & (d^e) ) + 0xb5c0fbcf )|0;
          b = ( b + f )|0;
          f = ( f + ( (g & h) ^ ( a & (g ^ h) ) ) + ( g>>>2 ^ g>>>13 ^ g>>>22 ^ g<<30 ^ g<<19 ^ g<<10 ) )|0;

          // 3
          e = ( w3 + e + ( b>>>6 ^ b>>>11 ^ b>>>25 ^ b<<26 ^ b<<21 ^ b<<7 ) +  ( d ^ b & (c^d) ) + 0xe9b5dba5 )|0;
          a = ( a + e )|0;
          e = ( e + ( (f & g) ^ ( h & (f ^ g) ) ) + ( f>>>2 ^ f>>>13 ^ f>>>22 ^ f<<30 ^ f<<19 ^ f<<10 ) )|0;

          // 4
          d = ( w4 + d + ( a>>>6 ^ a>>>11 ^ a>>>25 ^ a<<26 ^ a<<21 ^ a<<7 ) +  ( c ^ a & (b^c) ) + 0x3956c25b )|0;
          h = ( h + d )|0;
          d = ( d + ( (e & f) ^ ( g & (e ^ f) ) ) + ( e>>>2 ^ e>>>13 ^ e>>>22 ^ e<<30 ^ e<<19 ^ e<<10 ) )|0;

          // 5
          c = ( w5 + c + ( h>>>6 ^ h>>>11 ^ h>>>25 ^ h<<26 ^ h<<21 ^ h<<7 ) +  ( b ^ h & (a^b) ) + 0x59f111f1 )|0;
          g = ( g + c )|0;
          c = ( c + ( (d & e) ^ ( f & (d ^ e) ) ) + ( d>>>2 ^ d>>>13 ^ d>>>22 ^ d<<30 ^ d<<19 ^ d<<10 ) )|0;

          // 6
          b = ( w6 + b + ( g>>>6 ^ g>>>11 ^ g>>>25 ^ g<<26 ^ g<<21 ^ g<<7 ) +  ( a ^ g & (h^a) ) + 0x923f82a4 )|0;
          f = ( f + b )|0;
          b = ( b + ( (c & d) ^ ( e & (c ^ d) ) ) + ( c>>>2 ^ c>>>13 ^ c>>>22 ^ c<<30 ^ c<<19 ^ c<<10 ) )|0;

          // 7
          a = ( w7 + a + ( f>>>6 ^ f>>>11 ^ f>>>25 ^ f<<26 ^ f<<21 ^ f<<7 ) +  ( h ^ f & (g^h) ) + 0xab1c5ed5 )|0;
          e = ( e + a )|0;
          a = ( a + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;

          // 8
          h = ( w8 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0xd807aa98 )|0;
          d = ( d + h )|0;
          h = ( h + ( (a & b) ^ ( c & (a ^ b) ) ) + ( a>>>2 ^ a>>>13 ^ a>>>22 ^ a<<30 ^ a<<19 ^ a<<10 ) )|0;

          // 9
          g = ( w9 + g + ( d>>>6 ^ d>>>11 ^ d>>>25 ^ d<<26 ^ d<<21 ^ d<<7 ) +  ( f ^ d & (e^f) ) + 0x12835b01 )|0;
          c = ( c + g )|0;
          g = ( g + ( (h & a) ^ ( b & (h ^ a) ) ) + ( h>>>2 ^ h>>>13 ^ h>>>22 ^ h<<30 ^ h<<19 ^ h<<10 ) )|0;

          // 10
          f = ( w10 + f + ( c>>>6 ^ c>>>11 ^ c>>>25 ^ c<<26 ^ c<<21 ^ c<<7 ) +  ( e ^ c & (d^e) ) + 0x243185be )|0;
          b = ( b + f )|0;
          f = ( f + ( (g & h) ^ ( a & (g ^ h) ) ) + ( g>>>2 ^ g>>>13 ^ g>>>22 ^ g<<30 ^ g<<19 ^ g<<10 ) )|0;

          // 11
          e = ( w11 + e + ( b>>>6 ^ b>>>11 ^ b>>>25 ^ b<<26 ^ b<<21 ^ b<<7 ) +  ( d ^ b & (c^d) ) + 0x550c7dc3 )|0;
          a = ( a + e )|0;
          e = ( e + ( (f & g) ^ ( h & (f ^ g) ) ) + ( f>>>2 ^ f>>>13 ^ f>>>22 ^ f<<30 ^ f<<19 ^ f<<10 ) )|0;

          // 12
          d = ( w12 + d + ( a>>>6 ^ a>>>11 ^ a>>>25 ^ a<<26 ^ a<<21 ^ a<<7 ) +  ( c ^ a & (b^c) ) + 0x72be5d74 )|0;
          h = ( h + d )|0;
          d = ( d + ( (e & f) ^ ( g & (e ^ f) ) ) + ( e>>>2 ^ e>>>13 ^ e>>>22 ^ e<<30 ^ e<<19 ^ e<<10 ) )|0;

          // 13
          c = ( w13 + c + ( h>>>6 ^ h>>>11 ^ h>>>25 ^ h<<26 ^ h<<21 ^ h<<7 ) +  ( b ^ h & (a^b) ) + 0x80deb1fe )|0;
          g = ( g + c )|0;
          c = ( c + ( (d & e) ^ ( f & (d ^ e) ) ) + ( d>>>2 ^ d>>>13 ^ d>>>22 ^ d<<30 ^ d<<19 ^ d<<10 ) )|0;

          // 14
          b = ( w14 + b + ( g>>>6 ^ g>>>11 ^ g>>>25 ^ g<<26 ^ g<<21 ^ g<<7 ) +  ( a ^ g & (h^a) ) + 0x9bdc06a7 )|0;
          f = ( f + b )|0;
          b = ( b + ( (c & d) ^ ( e & (c ^ d) ) ) + ( c>>>2 ^ c>>>13 ^ c>>>22 ^ c<<30 ^ c<<19 ^ c<<10 ) )|0;

          // 15
          a = ( w15 + a + ( f>>>6 ^ f>>>11 ^ f>>>25 ^ f<<26 ^ f<<21 ^ f<<7 ) +  ( h ^ f & (g^h) ) + 0xc19bf174 )|0;
          e = ( e + a )|0;
          a = ( a + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;

          // 16
          w0 = ( ( w1>>>7  ^ w1>>>18 ^ w1>>>3  ^ w1<<25 ^ w1<<14 ) + ( w14>>>17 ^ w14>>>19 ^ w14>>>10 ^ w14<<15 ^ w14<<13 ) + w0 + w9 )|0;
          h = ( w0 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0xe49b69c1 )|0;
          d = ( d + h )|0;
          h = ( h + ( (a & b) ^ ( c & (a ^ b) ) ) + ( a>>>2 ^ a>>>13 ^ a>>>22 ^ a<<30 ^ a<<19 ^ a<<10 ) )|0;

          // 17
          w1 = ( ( w2>>>7  ^ w2>>>18 ^ w2>>>3  ^ w2<<25 ^ w2<<14 ) + ( w15>>>17 ^ w15>>>19 ^ w15>>>10 ^ w15<<15 ^ w15<<13 ) + w1 + w10 )|0;
          g = ( w1 + g + ( d>>>6 ^ d>>>11 ^ d>>>25 ^ d<<26 ^ d<<21 ^ d<<7 ) +  ( f ^ d & (e^f) ) + 0xefbe4786 )|0;
          c = ( c + g )|0;
          g = ( g + ( (h & a) ^ ( b & (h ^ a) ) ) + ( h>>>2 ^ h>>>13 ^ h>>>22 ^ h<<30 ^ h<<19 ^ h<<10 ) )|0;

          // 18
          w2 = ( ( w3>>>7  ^ w3>>>18 ^ w3>>>3  ^ w3<<25 ^ w3<<14 ) + ( w0>>>17 ^ w0>>>19 ^ w0>>>10 ^ w0<<15 ^ w0<<13 ) + w2 + w11 )|0;
          f = ( w2 + f + ( c>>>6 ^ c>>>11 ^ c>>>25 ^ c<<26 ^ c<<21 ^ c<<7 ) +  ( e ^ c & (d^e) ) + 0x0fc19dc6 )|0;
          b = ( b + f )|0;
          f = ( f + ( (g & h) ^ ( a & (g ^ h) ) ) + ( g>>>2 ^ g>>>13 ^ g>>>22 ^ g<<30 ^ g<<19 ^ g<<10 ) )|0;

          // 19
          w3 = ( ( w4>>>7  ^ w4>>>18 ^ w4>>>3  ^ w4<<25 ^ w4<<14 ) + ( w1>>>17 ^ w1>>>19 ^ w1>>>10 ^ w1<<15 ^ w1<<13 ) + w3 + w12 )|0;
          e = ( w3 + e + ( b>>>6 ^ b>>>11 ^ b>>>25 ^ b<<26 ^ b<<21 ^ b<<7 ) +  ( d ^ b & (c^d) ) + 0x240ca1cc )|0;
          a = ( a + e )|0;
          e = ( e + ( (f & g) ^ ( h & (f ^ g) ) ) + ( f>>>2 ^ f>>>13 ^ f>>>22 ^ f<<30 ^ f<<19 ^ f<<10 ) )|0;

          // 20
          w4 = ( ( w5>>>7  ^ w5>>>18 ^ w5>>>3  ^ w5<<25 ^ w5<<14 ) + ( w2>>>17 ^ w2>>>19 ^ w2>>>10 ^ w2<<15 ^ w2<<13 ) + w4 + w13 )|0;
          d = ( w4 + d + ( a>>>6 ^ a>>>11 ^ a>>>25 ^ a<<26 ^ a<<21 ^ a<<7 ) +  ( c ^ a & (b^c) ) + 0x2de92c6f )|0;
          h = ( h + d )|0;
          d = ( d + ( (e & f) ^ ( g & (e ^ f) ) ) + ( e>>>2 ^ e>>>13 ^ e>>>22 ^ e<<30 ^ e<<19 ^ e<<10 ) )|0;

          // 21
          w5 = ( ( w6>>>7  ^ w6>>>18 ^ w6>>>3  ^ w6<<25 ^ w6<<14 ) + ( w3>>>17 ^ w3>>>19 ^ w3>>>10 ^ w3<<15 ^ w3<<13 ) + w5 + w14 )|0;
          c = ( w5 + c + ( h>>>6 ^ h>>>11 ^ h>>>25 ^ h<<26 ^ h<<21 ^ h<<7 ) +  ( b ^ h & (a^b) ) + 0x4a7484aa )|0;
          g = ( g + c )|0;
          c = ( c + ( (d & e) ^ ( f & (d ^ e) ) ) + ( d>>>2 ^ d>>>13 ^ d>>>22 ^ d<<30 ^ d<<19 ^ d<<10 ) )|0;

          // 22
          w6 = ( ( w7>>>7  ^ w7>>>18 ^ w7>>>3  ^ w7<<25 ^ w7<<14 ) + ( w4>>>17 ^ w4>>>19 ^ w4>>>10 ^ w4<<15 ^ w4<<13 ) + w6 + w15 )|0;
          b = ( w6 + b + ( g>>>6 ^ g>>>11 ^ g>>>25 ^ g<<26 ^ g<<21 ^ g<<7 ) +  ( a ^ g & (h^a) ) + 0x5cb0a9dc )|0;
          f = ( f + b )|0;
          b = ( b + ( (c & d) ^ ( e & (c ^ d) ) ) + ( c>>>2 ^ c>>>13 ^ c>>>22 ^ c<<30 ^ c<<19 ^ c<<10 ) )|0;

          // 23
          w7 = ( ( w8>>>7  ^ w8>>>18 ^ w8>>>3  ^ w8<<25 ^ w8<<14 ) + ( w5>>>17 ^ w5>>>19 ^ w5>>>10 ^ w5<<15 ^ w5<<13 ) + w7 + w0 )|0;
          a = ( w7 + a + ( f>>>6 ^ f>>>11 ^ f>>>25 ^ f<<26 ^ f<<21 ^ f<<7 ) +  ( h ^ f & (g^h) ) + 0x76f988da )|0;
          e = ( e + a )|0;
          a = ( a + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;

          // 24
          w8 = ( ( w9>>>7  ^ w9>>>18 ^ w9>>>3  ^ w9<<25 ^ w9<<14 ) + ( w6>>>17 ^ w6>>>19 ^ w6>>>10 ^ w6<<15 ^ w6<<13 ) + w8 + w1 )|0;
          h = ( w8 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x983e5152 )|0;
          d = ( d + h )|0;
          h = ( h + ( (a & b) ^ ( c & (a ^ b) ) ) + ( a>>>2 ^ a>>>13 ^ a>>>22 ^ a<<30 ^ a<<19 ^ a<<10 ) )|0;

          // 25
          w9 = ( ( w10>>>7  ^ w10>>>18 ^ w10>>>3  ^ w10<<25 ^ w10<<14 ) + ( w7>>>17 ^ w7>>>19 ^ w7>>>10 ^ w7<<15 ^ w7<<13 ) + w9 + w2 )|0;
          g = ( w9 + g + ( d>>>6 ^ d>>>11 ^ d>>>25 ^ d<<26 ^ d<<21 ^ d<<7 ) +  ( f ^ d & (e^f) ) + 0xa831c66d )|0;
          c = ( c + g )|0;
          g = ( g + ( (h & a) ^ ( b & (h ^ a) ) ) + ( h>>>2 ^ h>>>13 ^ h>>>22 ^ h<<30 ^ h<<19 ^ h<<10 ) )|0;

          // 26
          w10 = ( ( w11>>>7  ^ w11>>>18 ^ w11>>>3  ^ w11<<25 ^ w11<<14 ) + ( w8>>>17 ^ w8>>>19 ^ w8>>>10 ^ w8<<15 ^ w8<<13 ) + w10 + w3 )|0;
          f = ( w10 + f + ( c>>>6 ^ c>>>11 ^ c>>>25 ^ c<<26 ^ c<<21 ^ c<<7 ) +  ( e ^ c & (d^e) ) + 0xb00327c8 )|0;
          b = ( b + f )|0;
          f = ( f + ( (g & h) ^ ( a & (g ^ h) ) ) + ( g>>>2 ^ g>>>13 ^ g>>>22 ^ g<<30 ^ g<<19 ^ g<<10 ) )|0;

          // 27
          w11 = ( ( w12>>>7  ^ w12>>>18 ^ w12>>>3  ^ w12<<25 ^ w12<<14 ) + ( w9>>>17 ^ w9>>>19 ^ w9>>>10 ^ w9<<15 ^ w9<<13 ) + w11 + w4 )|0;
          e = ( w11 + e + ( b>>>6 ^ b>>>11 ^ b>>>25 ^ b<<26 ^ b<<21 ^ b<<7 ) +  ( d ^ b & (c^d) ) + 0xbf597fc7 )|0;
          a = ( a + e )|0;
          e = ( e + ( (f & g) ^ ( h & (f ^ g) ) ) + ( f>>>2 ^ f>>>13 ^ f>>>22 ^ f<<30 ^ f<<19 ^ f<<10 ) )|0;

          // 28
          w12 = ( ( w13>>>7  ^ w13>>>18 ^ w13>>>3  ^ w13<<25 ^ w13<<14 ) + ( w10>>>17 ^ w10>>>19 ^ w10>>>10 ^ w10<<15 ^ w10<<13 ) + w12 + w5 )|0;
          d = ( w12 + d + ( a>>>6 ^ a>>>11 ^ a>>>25 ^ a<<26 ^ a<<21 ^ a<<7 ) +  ( c ^ a & (b^c) ) + 0xc6e00bf3 )|0;
          h = ( h + d )|0;
          d = ( d + ( (e & f) ^ ( g & (e ^ f) ) ) + ( e>>>2 ^ e>>>13 ^ e>>>22 ^ e<<30 ^ e<<19 ^ e<<10 ) )|0;

          // 29
          w13 = ( ( w14>>>7  ^ w14>>>18 ^ w14>>>3  ^ w14<<25 ^ w14<<14 ) + ( w11>>>17 ^ w11>>>19 ^ w11>>>10 ^ w11<<15 ^ w11<<13 ) + w13 + w6 )|0;
          c = ( w13 + c + ( h>>>6 ^ h>>>11 ^ h>>>25 ^ h<<26 ^ h<<21 ^ h<<7 ) +  ( b ^ h & (a^b) ) + 0xd5a79147 )|0;
          g = ( g + c )|0;
          c = ( c + ( (d & e) ^ ( f & (d ^ e) ) ) + ( d>>>2 ^ d>>>13 ^ d>>>22 ^ d<<30 ^ d<<19 ^ d<<10 ) )|0;

          // 30
          w14 = ( ( w15>>>7  ^ w15>>>18 ^ w15>>>3  ^ w15<<25 ^ w15<<14 ) + ( w12>>>17 ^ w12>>>19 ^ w12>>>10 ^ w12<<15 ^ w12<<13 ) + w14 + w7 )|0;
          b = ( w14 + b + ( g>>>6 ^ g>>>11 ^ g>>>25 ^ g<<26 ^ g<<21 ^ g<<7 ) +  ( a ^ g & (h^a) ) + 0x06ca6351 )|0;
          f = ( f + b )|0;
          b = ( b + ( (c & d) ^ ( e & (c ^ d) ) ) + ( c>>>2 ^ c>>>13 ^ c>>>22 ^ c<<30 ^ c<<19 ^ c<<10 ) )|0;

          // 31
          w15 = ( ( w0>>>7  ^ w0>>>18 ^ w0>>>3  ^ w0<<25 ^ w0<<14 ) + ( w13>>>17 ^ w13>>>19 ^ w13>>>10 ^ w13<<15 ^ w13<<13 ) + w15 + w8 )|0;
          a = ( w15 + a + ( f>>>6 ^ f>>>11 ^ f>>>25 ^ f<<26 ^ f<<21 ^ f<<7 ) +  ( h ^ f & (g^h) ) + 0x14292967 )|0;
          e = ( e + a )|0;
          a = ( a + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;

          // 32
          w0 = ( ( w1>>>7  ^ w1>>>18 ^ w1>>>3  ^ w1<<25 ^ w1<<14 ) + ( w14>>>17 ^ w14>>>19 ^ w14>>>10 ^ w14<<15 ^ w14<<13 ) + w0 + w9 )|0;
          h = ( w0 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x27b70a85 )|0;
          d = ( d + h )|0;
          h = ( h + ( (a & b) ^ ( c & (a ^ b) ) ) + ( a>>>2 ^ a>>>13 ^ a>>>22 ^ a<<30 ^ a<<19 ^ a<<10 ) )|0;

          // 33
          w1 = ( ( w2>>>7  ^ w2>>>18 ^ w2>>>3  ^ w2<<25 ^ w2<<14 ) + ( w15>>>17 ^ w15>>>19 ^ w15>>>10 ^ w15<<15 ^ w15<<13 ) + w1 + w10 )|0;
          g = ( w1 + g + ( d>>>6 ^ d>>>11 ^ d>>>25 ^ d<<26 ^ d<<21 ^ d<<7 ) +  ( f ^ d & (e^f) ) + 0x2e1b2138 )|0;
          c = ( c + g )|0;
          g = ( g + ( (h & a) ^ ( b & (h ^ a) ) ) + ( h>>>2 ^ h>>>13 ^ h>>>22 ^ h<<30 ^ h<<19 ^ h<<10 ) )|0;

          // 34
          w2 = ( ( w3>>>7  ^ w3>>>18 ^ w3>>>3  ^ w3<<25 ^ w3<<14 ) + ( w0>>>17 ^ w0>>>19 ^ w0>>>10 ^ w0<<15 ^ w0<<13 ) + w2 + w11 )|0;
          f = ( w2 + f + ( c>>>6 ^ c>>>11 ^ c>>>25 ^ c<<26 ^ c<<21 ^ c<<7 ) +  ( e ^ c & (d^e) ) + 0x4d2c6dfc )|0;
          b = ( b + f )|0;
          f = ( f + ( (g & h) ^ ( a & (g ^ h) ) ) + ( g>>>2 ^ g>>>13 ^ g>>>22 ^ g<<30 ^ g<<19 ^ g<<10 ) )|0;

          // 35
          w3 = ( ( w4>>>7  ^ w4>>>18 ^ w4>>>3  ^ w4<<25 ^ w4<<14 ) + ( w1>>>17 ^ w1>>>19 ^ w1>>>10 ^ w1<<15 ^ w1<<13 ) + w3 + w12 )|0;
          e = ( w3 + e + ( b>>>6 ^ b>>>11 ^ b>>>25 ^ b<<26 ^ b<<21 ^ b<<7 ) +  ( d ^ b & (c^d) ) + 0x53380d13 )|0;
          a = ( a + e )|0;
          e = ( e + ( (f & g) ^ ( h & (f ^ g) ) ) + ( f>>>2 ^ f>>>13 ^ f>>>22 ^ f<<30 ^ f<<19 ^ f<<10 ) )|0;

          // 36
          w4 = ( ( w5>>>7  ^ w5>>>18 ^ w5>>>3  ^ w5<<25 ^ w5<<14 ) + ( w2>>>17 ^ w2>>>19 ^ w2>>>10 ^ w2<<15 ^ w2<<13 ) + w4 + w13 )|0;
          d = ( w4 + d + ( a>>>6 ^ a>>>11 ^ a>>>25 ^ a<<26 ^ a<<21 ^ a<<7 ) +  ( c ^ a & (b^c) ) + 0x650a7354 )|0;
          h = ( h + d )|0;
          d = ( d + ( (e & f) ^ ( g & (e ^ f) ) ) + ( e>>>2 ^ e>>>13 ^ e>>>22 ^ e<<30 ^ e<<19 ^ e<<10 ) )|0;

          // 37
          w5 = ( ( w6>>>7  ^ w6>>>18 ^ w6>>>3  ^ w6<<25 ^ w6<<14 ) + ( w3>>>17 ^ w3>>>19 ^ w3>>>10 ^ w3<<15 ^ w3<<13 ) + w5 + w14 )|0;
          c = ( w5 + c + ( h>>>6 ^ h>>>11 ^ h>>>25 ^ h<<26 ^ h<<21 ^ h<<7 ) +  ( b ^ h & (a^b) ) + 0x766a0abb )|0;
          g = ( g + c )|0;
          c = ( c + ( (d & e) ^ ( f & (d ^ e) ) ) + ( d>>>2 ^ d>>>13 ^ d>>>22 ^ d<<30 ^ d<<19 ^ d<<10 ) )|0;

          // 38
          w6 = ( ( w7>>>7  ^ w7>>>18 ^ w7>>>3  ^ w7<<25 ^ w7<<14 ) + ( w4>>>17 ^ w4>>>19 ^ w4>>>10 ^ w4<<15 ^ w4<<13 ) + w6 + w15 )|0;
          b = ( w6 + b + ( g>>>6 ^ g>>>11 ^ g>>>25 ^ g<<26 ^ g<<21 ^ g<<7 ) +  ( a ^ g & (h^a) ) + 0x81c2c92e )|0;
          f = ( f + b )|0;
          b = ( b + ( (c & d) ^ ( e & (c ^ d) ) ) + ( c>>>2 ^ c>>>13 ^ c>>>22 ^ c<<30 ^ c<<19 ^ c<<10 ) )|0;

          // 39
          w7 = ( ( w8>>>7  ^ w8>>>18 ^ w8>>>3  ^ w8<<25 ^ w8<<14 ) + ( w5>>>17 ^ w5>>>19 ^ w5>>>10 ^ w5<<15 ^ w5<<13 ) + w7 + w0 )|0;
          a = ( w7 + a + ( f>>>6 ^ f>>>11 ^ f>>>25 ^ f<<26 ^ f<<21 ^ f<<7 ) +  ( h ^ f & (g^h) ) + 0x92722c85 )|0;
          e = ( e + a )|0;
          a = ( a + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;

          // 40
          w8 = ( ( w9>>>7  ^ w9>>>18 ^ w9>>>3  ^ w9<<25 ^ w9<<14 ) + ( w6>>>17 ^ w6>>>19 ^ w6>>>10 ^ w6<<15 ^ w6<<13 ) + w8 + w1 )|0;
          h = ( w8 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0xa2bfe8a1 )|0;
          d = ( d + h )|0;
          h = ( h + ( (a & b) ^ ( c & (a ^ b) ) ) + ( a>>>2 ^ a>>>13 ^ a>>>22 ^ a<<30 ^ a<<19 ^ a<<10 ) )|0;

          // 41
          w9 = ( ( w10>>>7  ^ w10>>>18 ^ w10>>>3  ^ w10<<25 ^ w10<<14 ) + ( w7>>>17 ^ w7>>>19 ^ w7>>>10 ^ w7<<15 ^ w7<<13 ) + w9 + w2 )|0;
          g = ( w9 + g + ( d>>>6 ^ d>>>11 ^ d>>>25 ^ d<<26 ^ d<<21 ^ d<<7 ) +  ( f ^ d & (e^f) ) + 0xa81a664b )|0;
          c = ( c + g )|0;
          g = ( g + ( (h & a) ^ ( b & (h ^ a) ) ) + ( h>>>2 ^ h>>>13 ^ h>>>22 ^ h<<30 ^ h<<19 ^ h<<10 ) )|0;

          // 42
          w10 = ( ( w11>>>7  ^ w11>>>18 ^ w11>>>3  ^ w11<<25 ^ w11<<14 ) + ( w8>>>17 ^ w8>>>19 ^ w8>>>10 ^ w8<<15 ^ w8<<13 ) + w10 + w3 )|0;
          f = ( w10 + f + ( c>>>6 ^ c>>>11 ^ c>>>25 ^ c<<26 ^ c<<21 ^ c<<7 ) +  ( e ^ c & (d^e) ) + 0xc24b8b70 )|0;
          b = ( b + f )|0;
          f = ( f + ( (g & h) ^ ( a & (g ^ h) ) ) + ( g>>>2 ^ g>>>13 ^ g>>>22 ^ g<<30 ^ g<<19 ^ g<<10 ) )|0;

          // 43
          w11 = ( ( w12>>>7  ^ w12>>>18 ^ w12>>>3  ^ w12<<25 ^ w12<<14 ) + ( w9>>>17 ^ w9>>>19 ^ w9>>>10 ^ w9<<15 ^ w9<<13 ) + w11 + w4 )|0;
          e = ( w11 + e + ( b>>>6 ^ b>>>11 ^ b>>>25 ^ b<<26 ^ b<<21 ^ b<<7 ) +  ( d ^ b & (c^d) ) + 0xc76c51a3 )|0;
          a = ( a + e )|0;
          e = ( e + ( (f & g) ^ ( h & (f ^ g) ) ) + ( f>>>2 ^ f>>>13 ^ f>>>22 ^ f<<30 ^ f<<19 ^ f<<10 ) )|0;

          // 44
          w12 = ( ( w13>>>7  ^ w13>>>18 ^ w13>>>3  ^ w13<<25 ^ w13<<14 ) + ( w10>>>17 ^ w10>>>19 ^ w10>>>10 ^ w10<<15 ^ w10<<13 ) + w12 + w5 )|0;
          d = ( w12 + d + ( a>>>6 ^ a>>>11 ^ a>>>25 ^ a<<26 ^ a<<21 ^ a<<7 ) +  ( c ^ a & (b^c) ) + 0xd192e819 )|0;
          h = ( h + d )|0;
          d = ( d + ( (e & f) ^ ( g & (e ^ f) ) ) + ( e>>>2 ^ e>>>13 ^ e>>>22 ^ e<<30 ^ e<<19 ^ e<<10 ) )|0;

          // 45
          w13 = ( ( w14>>>7  ^ w14>>>18 ^ w14>>>3  ^ w14<<25 ^ w14<<14 ) + ( w11>>>17 ^ w11>>>19 ^ w11>>>10 ^ w11<<15 ^ w11<<13 ) + w13 + w6 )|0;
          c = ( w13 + c + ( h>>>6 ^ h>>>11 ^ h>>>25 ^ h<<26 ^ h<<21 ^ h<<7 ) +  ( b ^ h & (a^b) ) + 0xd6990624 )|0;
          g = ( g + c )|0;
          c = ( c + ( (d & e) ^ ( f & (d ^ e) ) ) + ( d>>>2 ^ d>>>13 ^ d>>>22 ^ d<<30 ^ d<<19 ^ d<<10 ) )|0;

          // 46
          w14 = ( ( w15>>>7  ^ w15>>>18 ^ w15>>>3  ^ w15<<25 ^ w15<<14 ) + ( w12>>>17 ^ w12>>>19 ^ w12>>>10 ^ w12<<15 ^ w12<<13 ) + w14 + w7 )|0;
          b = ( w14 + b + ( g>>>6 ^ g>>>11 ^ g>>>25 ^ g<<26 ^ g<<21 ^ g<<7 ) +  ( a ^ g & (h^a) ) + 0xf40e3585 )|0;
          f = ( f + b )|0;
          b = ( b + ( (c & d) ^ ( e & (c ^ d) ) ) + ( c>>>2 ^ c>>>13 ^ c>>>22 ^ c<<30 ^ c<<19 ^ c<<10 ) )|0;

          // 47
          w15 = ( ( w0>>>7  ^ w0>>>18 ^ w0>>>3  ^ w0<<25 ^ w0<<14 ) + ( w13>>>17 ^ w13>>>19 ^ w13>>>10 ^ w13<<15 ^ w13<<13 ) + w15 + w8 )|0;
          a = ( w15 + a + ( f>>>6 ^ f>>>11 ^ f>>>25 ^ f<<26 ^ f<<21 ^ f<<7 ) +  ( h ^ f & (g^h) ) + 0x106aa070 )|0;
          e = ( e + a )|0;
          a = ( a + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;

          // 48
          w0 = ( ( w1>>>7  ^ w1>>>18 ^ w1>>>3  ^ w1<<25 ^ w1<<14 ) + ( w14>>>17 ^ w14>>>19 ^ w14>>>10 ^ w14<<15 ^ w14<<13 ) + w0 + w9 )|0;
          h = ( w0 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x19a4c116 )|0;
          d = ( d + h )|0;
          h = ( h + ( (a & b) ^ ( c & (a ^ b) ) ) + ( a>>>2 ^ a>>>13 ^ a>>>22 ^ a<<30 ^ a<<19 ^ a<<10 ) )|0;

          // 49
          w1 = ( ( w2>>>7  ^ w2>>>18 ^ w2>>>3  ^ w2<<25 ^ w2<<14 ) + ( w15>>>17 ^ w15>>>19 ^ w15>>>10 ^ w15<<15 ^ w15<<13 ) + w1 + w10 )|0;
          g = ( w1 + g + ( d>>>6 ^ d>>>11 ^ d>>>25 ^ d<<26 ^ d<<21 ^ d<<7 ) +  ( f ^ d & (e^f) ) + 0x1e376c08 )|0;
          c = ( c + g )|0;
          g = ( g + ( (h & a) ^ ( b & (h ^ a) ) ) + ( h>>>2 ^ h>>>13 ^ h>>>22 ^ h<<30 ^ h<<19 ^ h<<10 ) )|0;

          // 50
          w2 = ( ( w3>>>7  ^ w3>>>18 ^ w3>>>3  ^ w3<<25 ^ w3<<14 ) + ( w0>>>17 ^ w0>>>19 ^ w0>>>10 ^ w0<<15 ^ w0<<13 ) + w2 + w11 )|0;
          f = ( w2 + f + ( c>>>6 ^ c>>>11 ^ c>>>25 ^ c<<26 ^ c<<21 ^ c<<7 ) +  ( e ^ c & (d^e) ) + 0x2748774c )|0;
          b = ( b + f )|0;
          f = ( f + ( (g & h) ^ ( a & (g ^ h) ) ) + ( g>>>2 ^ g>>>13 ^ g>>>22 ^ g<<30 ^ g<<19 ^ g<<10 ) )|0;

          // 51
          w3 = ( ( w4>>>7  ^ w4>>>18 ^ w4>>>3  ^ w4<<25 ^ w4<<14 ) + ( w1>>>17 ^ w1>>>19 ^ w1>>>10 ^ w1<<15 ^ w1<<13 ) + w3 + w12 )|0;
          e = ( w3 + e + ( b>>>6 ^ b>>>11 ^ b>>>25 ^ b<<26 ^ b<<21 ^ b<<7 ) +  ( d ^ b & (c^d) ) + 0x34b0bcb5 )|0;
          a = ( a + e )|0;
          e = ( e + ( (f & g) ^ ( h & (f ^ g) ) ) + ( f>>>2 ^ f>>>13 ^ f>>>22 ^ f<<30 ^ f<<19 ^ f<<10 ) )|0;

          // 52
          w4 = ( ( w5>>>7  ^ w5>>>18 ^ w5>>>3  ^ w5<<25 ^ w5<<14 ) + ( w2>>>17 ^ w2>>>19 ^ w2>>>10 ^ w2<<15 ^ w2<<13 ) + w4 + w13 )|0;
          d = ( w4 + d + ( a>>>6 ^ a>>>11 ^ a>>>25 ^ a<<26 ^ a<<21 ^ a<<7 ) +  ( c ^ a & (b^c) ) + 0x391c0cb3 )|0;
          h = ( h + d )|0;
          d = ( d + ( (e & f) ^ ( g & (e ^ f) ) ) + ( e>>>2 ^ e>>>13 ^ e>>>22 ^ e<<30 ^ e<<19 ^ e<<10 ) )|0;

          // 53
          w5 = ( ( w6>>>7  ^ w6>>>18 ^ w6>>>3  ^ w6<<25 ^ w6<<14 ) + ( w3>>>17 ^ w3>>>19 ^ w3>>>10 ^ w3<<15 ^ w3<<13 ) + w5 + w14 )|0;
          c = ( w5 + c + ( h>>>6 ^ h>>>11 ^ h>>>25 ^ h<<26 ^ h<<21 ^ h<<7 ) +  ( b ^ h & (a^b) ) + 0x4ed8aa4a )|0;
          g = ( g + c )|0;
          c = ( c + ( (d & e) ^ ( f & (d ^ e) ) ) + ( d>>>2 ^ d>>>13 ^ d>>>22 ^ d<<30 ^ d<<19 ^ d<<10 ) )|0;

          // 54
          w6 = ( ( w7>>>7  ^ w7>>>18 ^ w7>>>3  ^ w7<<25 ^ w7<<14 ) + ( w4>>>17 ^ w4>>>19 ^ w4>>>10 ^ w4<<15 ^ w4<<13 ) + w6 + w15 )|0;
          b = ( w6 + b + ( g>>>6 ^ g>>>11 ^ g>>>25 ^ g<<26 ^ g<<21 ^ g<<7 ) +  ( a ^ g & (h^a) ) + 0x5b9cca4f )|0;
          f = ( f + b )|0;
          b = ( b + ( (c & d) ^ ( e & (c ^ d) ) ) + ( c>>>2 ^ c>>>13 ^ c>>>22 ^ c<<30 ^ c<<19 ^ c<<10 ) )|0;

          // 55
          w7 = ( ( w8>>>7  ^ w8>>>18 ^ w8>>>3  ^ w8<<25 ^ w8<<14 ) + ( w5>>>17 ^ w5>>>19 ^ w5>>>10 ^ w5<<15 ^ w5<<13 ) + w7 + w0 )|0;
          a = ( w7 + a + ( f>>>6 ^ f>>>11 ^ f>>>25 ^ f<<26 ^ f<<21 ^ f<<7 ) +  ( h ^ f & (g^h) ) + 0x682e6ff3 )|0;
          e = ( e + a )|0;
          a = ( a + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;

          // 56
          w8 = ( ( w9>>>7  ^ w9>>>18 ^ w9>>>3  ^ w9<<25 ^ w9<<14 ) + ( w6>>>17 ^ w6>>>19 ^ w6>>>10 ^ w6<<15 ^ w6<<13 ) + w8 + w1 )|0;
          h = ( w8 + h + ( e>>>6 ^ e>>>11 ^ e>>>25 ^ e<<26 ^ e<<21 ^ e<<7 ) +  ( g ^ e & (f^g) ) + 0x748f82ee )|0;
          d = ( d + h )|0;
          h = ( h + ( (a & b) ^ ( c & (a ^ b) ) ) + ( a>>>2 ^ a>>>13 ^ a>>>22 ^ a<<30 ^ a<<19 ^ a<<10 ) )|0;

          // 57
          w9 = ( ( w10>>>7  ^ w10>>>18 ^ w10>>>3  ^ w10<<25 ^ w10<<14 ) + ( w7>>>17 ^ w7>>>19 ^ w7>>>10 ^ w7<<15 ^ w7<<13 ) + w9 + w2 )|0;
          g = ( w9 + g + ( d>>>6 ^ d>>>11 ^ d>>>25 ^ d<<26 ^ d<<21 ^ d<<7 ) +  ( f ^ d & (e^f) ) + 0x78a5636f )|0;
          c = ( c + g )|0;
          g = ( g + ( (h & a) ^ ( b & (h ^ a) ) ) + ( h>>>2 ^ h>>>13 ^ h>>>22 ^ h<<30 ^ h<<19 ^ h<<10 ) )|0;

          // 58
          w10 = ( ( w11>>>7  ^ w11>>>18 ^ w11>>>3  ^ w11<<25 ^ w11<<14 ) + ( w8>>>17 ^ w8>>>19 ^ w8>>>10 ^ w8<<15 ^ w8<<13 ) + w10 + w3 )|0;
          f = ( w10 + f + ( c>>>6 ^ c>>>11 ^ c>>>25 ^ c<<26 ^ c<<21 ^ c<<7 ) +  ( e ^ c & (d^e) ) + 0x84c87814 )|0;
          b = ( b + f )|0;
          f = ( f + ( (g & h) ^ ( a & (g ^ h) ) ) + ( g>>>2 ^ g>>>13 ^ g>>>22 ^ g<<30 ^ g<<19 ^ g<<10 ) )|0;

          // 59
          w11 = ( ( w12>>>7  ^ w12>>>18 ^ w12>>>3  ^ w12<<25 ^ w12<<14 ) + ( w9>>>17 ^ w9>>>19 ^ w9>>>10 ^ w9<<15 ^ w9<<13 ) + w11 + w4 )|0;
          e = ( w11 + e + ( b>>>6 ^ b>>>11 ^ b>>>25 ^ b<<26 ^ b<<21 ^ b<<7 ) +  ( d ^ b & (c^d) ) + 0x8cc70208 )|0;
          a = ( a + e )|0;
          e = ( e + ( (f & g) ^ ( h & (f ^ g) ) ) + ( f>>>2 ^ f>>>13 ^ f>>>22 ^ f<<30 ^ f<<19 ^ f<<10 ) )|0;

          // 60
          w12 = ( ( w13>>>7  ^ w13>>>18 ^ w13>>>3  ^ w13<<25 ^ w13<<14 ) + ( w10>>>17 ^ w10>>>19 ^ w10>>>10 ^ w10<<15 ^ w10<<13 ) + w12 + w5 )|0;
          d = ( w12 + d + ( a>>>6 ^ a>>>11 ^ a>>>25 ^ a<<26 ^ a<<21 ^ a<<7 ) +  ( c ^ a & (b^c) ) + 0x90befffa )|0;
          h = ( h + d )|0;
          d = ( d + ( (e & f) ^ ( g & (e ^ f) ) ) + ( e>>>2 ^ e>>>13 ^ e>>>22 ^ e<<30 ^ e<<19 ^ e<<10 ) )|0;

          // 61
          w13 = ( ( w14>>>7  ^ w14>>>18 ^ w14>>>3  ^ w14<<25 ^ w14<<14 ) + ( w11>>>17 ^ w11>>>19 ^ w11>>>10 ^ w11<<15 ^ w11<<13 ) + w13 + w6 )|0;
          c = ( w13 + c + ( h>>>6 ^ h>>>11 ^ h>>>25 ^ h<<26 ^ h<<21 ^ h<<7 ) +  ( b ^ h & (a^b) ) + 0xa4506ceb )|0;
          g = ( g + c )|0;
          c = ( c + ( (d & e) ^ ( f & (d ^ e) ) ) + ( d>>>2 ^ d>>>13 ^ d>>>22 ^ d<<30 ^ d<<19 ^ d<<10 ) )|0;

          // 62
          w14 = ( ( w15>>>7  ^ w15>>>18 ^ w15>>>3  ^ w15<<25 ^ w15<<14 ) + ( w12>>>17 ^ w12>>>19 ^ w12>>>10 ^ w12<<15 ^ w12<<13 ) + w14 + w7 )|0;
          b = ( w14 + b + ( g>>>6 ^ g>>>11 ^ g>>>25 ^ g<<26 ^ g<<21 ^ g<<7 ) +  ( a ^ g & (h^a) ) + 0xbef9a3f7 )|0;
          f = ( f + b )|0;
          b = ( b + ( (c & d) ^ ( e & (c ^ d) ) ) + ( c>>>2 ^ c>>>13 ^ c>>>22 ^ c<<30 ^ c<<19 ^ c<<10 ) )|0;

          // 63
          w15 = ( ( w0>>>7  ^ w0>>>18 ^ w0>>>3  ^ w0<<25 ^ w0<<14 ) + ( w13>>>17 ^ w13>>>19 ^ w13>>>10 ^ w13<<15 ^ w13<<13 ) + w15 + w8 )|0;
          a = ( w15 + a + ( f>>>6 ^ f>>>11 ^ f>>>25 ^ f<<26 ^ f<<21 ^ f<<7 ) +  ( h ^ f & (g^h) ) + 0xc67178f2 )|0;
          e = ( e + a )|0;
          a = ( a + ( (b & c) ^ ( d & (b ^ c) ) ) + ( b>>>2 ^ b>>>13 ^ b>>>22 ^ b<<30 ^ b<<19 ^ b<<10 ) )|0;

          H0 = ( H0 + a )|0;
          H1 = ( H1 + b )|0;
          H2 = ( H2 + c )|0;
          H3 = ( H3 + d )|0;
          H4 = ( H4 + e )|0;
          H5 = ( H5 + f )|0;
          H6 = ( H6 + g )|0;
          H7 = ( H7 + h )|0;
      }

      function _core_heap ( offset ) {
          offset = offset|0;

          _core(
              HEAP[offset|0]<<24 | HEAP[offset|1]<<16 | HEAP[offset|2]<<8 | HEAP[offset|3],
              HEAP[offset|4]<<24 | HEAP[offset|5]<<16 | HEAP[offset|6]<<8 | HEAP[offset|7],
              HEAP[offset|8]<<24 | HEAP[offset|9]<<16 | HEAP[offset|10]<<8 | HEAP[offset|11],
              HEAP[offset|12]<<24 | HEAP[offset|13]<<16 | HEAP[offset|14]<<8 | HEAP[offset|15],
              HEAP[offset|16]<<24 | HEAP[offset|17]<<16 | HEAP[offset|18]<<8 | HEAP[offset|19],
              HEAP[offset|20]<<24 | HEAP[offset|21]<<16 | HEAP[offset|22]<<8 | HEAP[offset|23],
              HEAP[offset|24]<<24 | HEAP[offset|25]<<16 | HEAP[offset|26]<<8 | HEAP[offset|27],
              HEAP[offset|28]<<24 | HEAP[offset|29]<<16 | HEAP[offset|30]<<8 | HEAP[offset|31],
              HEAP[offset|32]<<24 | HEAP[offset|33]<<16 | HEAP[offset|34]<<8 | HEAP[offset|35],
              HEAP[offset|36]<<24 | HEAP[offset|37]<<16 | HEAP[offset|38]<<8 | HEAP[offset|39],
              HEAP[offset|40]<<24 | HEAP[offset|41]<<16 | HEAP[offset|42]<<8 | HEAP[offset|43],
              HEAP[offset|44]<<24 | HEAP[offset|45]<<16 | HEAP[offset|46]<<8 | HEAP[offset|47],
              HEAP[offset|48]<<24 | HEAP[offset|49]<<16 | HEAP[offset|50]<<8 | HEAP[offset|51],
              HEAP[offset|52]<<24 | HEAP[offset|53]<<16 | HEAP[offset|54]<<8 | HEAP[offset|55],
              HEAP[offset|56]<<24 | HEAP[offset|57]<<16 | HEAP[offset|58]<<8 | HEAP[offset|59],
              HEAP[offset|60]<<24 | HEAP[offset|61]<<16 | HEAP[offset|62]<<8 | HEAP[offset|63]
          );
      }

      // offset — multiple of 32
      function _state_to_heap ( output ) {
          output = output|0;

          HEAP[output|0] = H0>>>24;
          HEAP[output|1] = H0>>>16&255;
          HEAP[output|2] = H0>>>8&255;
          HEAP[output|3] = H0&255;
          HEAP[output|4] = H1>>>24;
          HEAP[output|5] = H1>>>16&255;
          HEAP[output|6] = H1>>>8&255;
          HEAP[output|7] = H1&255;
          HEAP[output|8] = H2>>>24;
          HEAP[output|9] = H2>>>16&255;
          HEAP[output|10] = H2>>>8&255;
          HEAP[output|11] = H2&255;
          HEAP[output|12] = H3>>>24;
          HEAP[output|13] = H3>>>16&255;
          HEAP[output|14] = H3>>>8&255;
          HEAP[output|15] = H3&255;
          HEAP[output|16] = H4>>>24;
          HEAP[output|17] = H4>>>16&255;
          HEAP[output|18] = H4>>>8&255;
          HEAP[output|19] = H4&255;
          HEAP[output|20] = H5>>>24;
          HEAP[output|21] = H5>>>16&255;
          HEAP[output|22] = H5>>>8&255;
          HEAP[output|23] = H5&255;
          HEAP[output|24] = H6>>>24;
          HEAP[output|25] = H6>>>16&255;
          HEAP[output|26] = H6>>>8&255;
          HEAP[output|27] = H6&255;
          HEAP[output|28] = H7>>>24;
          HEAP[output|29] = H7>>>16&255;
          HEAP[output|30] = H7>>>8&255;
          HEAP[output|31] = H7&255;
      }

      function reset () {
          H0 = 0x6a09e667;
          H1 = 0xbb67ae85;
          H2 = 0x3c6ef372;
          H3 = 0xa54ff53a;
          H4 = 0x510e527f;
          H5 = 0x9b05688c;
          H6 = 0x1f83d9ab;
          H7 = 0x5be0cd19;
          TOTAL0 = TOTAL1 = 0;
      }

      function init ( h0, h1, h2, h3, h4, h5, h6, h7, total0, total1 ) {
          h0 = h0|0;
          h1 = h1|0;
          h2 = h2|0;
          h3 = h3|0;
          h4 = h4|0;
          h5 = h5|0;
          h6 = h6|0;
          h7 = h7|0;
          total0 = total0|0;
          total1 = total1|0;

          H0 = h0;
          H1 = h1;
          H2 = h2;
          H3 = h3;
          H4 = h4;
          H5 = h5;
          H6 = h6;
          H7 = h7;
          TOTAL0 = total0;
          TOTAL1 = total1;
      }

      // offset — multiple of 64
      function process ( offset, length ) {
          offset = offset|0;
          length = length|0;

          var hashed = 0;

          if ( offset & 63 )
              return -1;

          while ( (length|0) >= 64 ) {
              _core_heap(offset);

              offset = ( offset + 64 )|0;
              length = ( length - 64 )|0;

              hashed = ( hashed + 64 )|0;
          }

          TOTAL0 = ( TOTAL0 + hashed )|0;
          if ( TOTAL0>>>0 < hashed>>>0 ) TOTAL1 = ( TOTAL1 + 1 )|0;

          return hashed|0;
      }

      // offset — multiple of 64
      // output — multiple of 32
      function finish ( offset, length, output ) {
          offset = offset|0;
          length = length|0;
          output = output|0;

          var hashed = 0,
              i = 0;

          if ( offset & 63 )
              return -1;

          if ( ~output )
              if ( output & 31 )
                  return -1;

          if ( (length|0) >= 64 ) {
              hashed = process( offset, length )|0;
              if ( (hashed|0) == -1 )
                  return -1;

              offset = ( offset + hashed )|0;
              length = ( length - hashed )|0;
          }

          hashed = ( hashed + length )|0;
          TOTAL0 = ( TOTAL0 + length )|0;
          if ( TOTAL0>>>0 < length>>>0 ) TOTAL1 = ( TOTAL1 + 1 )|0;

          HEAP[offset|length] = 0x80;

          if ( (length|0) >= 56 ) {
              for ( i = (length+1)|0; (i|0) < 64; i = (i+1)|0 )
                  HEAP[offset|i] = 0x00;

              _core_heap(offset);

              length = 0;

              HEAP[offset|0] = 0;
          }

          for ( i = (length+1)|0; (i|0) < 59; i = (i+1)|0 )
              HEAP[offset|i] = 0;

          HEAP[offset|56] = TOTAL1>>>21&255;
          HEAP[offset|57] = TOTAL1>>>13&255;
          HEAP[offset|58] = TOTAL1>>>5&255;
          HEAP[offset|59] = TOTAL1<<3&255 | TOTAL0>>>29;
          HEAP[offset|60] = TOTAL0>>>21&255;
          HEAP[offset|61] = TOTAL0>>>13&255;
          HEAP[offset|62] = TOTAL0>>>5&255;
          HEAP[offset|63] = TOTAL0<<3&255;
          _core_heap(offset);

          if ( ~output )
              _state_to_heap(output);

          return hashed|0;
      }

      function hmac_reset () {
          H0 = I0;
          H1 = I1;
          H2 = I2;
          H3 = I3;
          H4 = I4;
          H5 = I5;
          H6 = I6;
          H7 = I7;
          TOTAL0 = 64;
          TOTAL1 = 0;
      }

      function _hmac_opad () {
          H0 = O0;
          H1 = O1;
          H2 = O2;
          H3 = O3;
          H4 = O4;
          H5 = O5;
          H6 = O6;
          H7 = O7;
          TOTAL0 = 64;
          TOTAL1 = 0;
      }

      function hmac_init ( p0, p1, p2, p3, p4, p5, p6, p7, p8, p9, p10, p11, p12, p13, p14, p15 ) {
          p0 = p0|0;
          p1 = p1|0;
          p2 = p2|0;
          p3 = p3|0;
          p4 = p4|0;
          p5 = p5|0;
          p6 = p6|0;
          p7 = p7|0;
          p8 = p8|0;
          p9 = p9|0;
          p10 = p10|0;
          p11 = p11|0;
          p12 = p12|0;
          p13 = p13|0;
          p14 = p14|0;
          p15 = p15|0;

          // opad
          reset();
          _core(
              p0 ^ 0x5c5c5c5c,
              p1 ^ 0x5c5c5c5c,
              p2 ^ 0x5c5c5c5c,
              p3 ^ 0x5c5c5c5c,
              p4 ^ 0x5c5c5c5c,
              p5 ^ 0x5c5c5c5c,
              p6 ^ 0x5c5c5c5c,
              p7 ^ 0x5c5c5c5c,
              p8 ^ 0x5c5c5c5c,
              p9 ^ 0x5c5c5c5c,
              p10 ^ 0x5c5c5c5c,
              p11 ^ 0x5c5c5c5c,
              p12 ^ 0x5c5c5c5c,
              p13 ^ 0x5c5c5c5c,
              p14 ^ 0x5c5c5c5c,
              p15 ^ 0x5c5c5c5c
          );
          O0 = H0;
          O1 = H1;
          O2 = H2;
          O3 = H3;
          O4 = H4;
          O5 = H5;
          O6 = H6;
          O7 = H7;

          // ipad
          reset();
          _core(
              p0 ^ 0x36363636,
              p1 ^ 0x36363636,
              p2 ^ 0x36363636,
              p3 ^ 0x36363636,
              p4 ^ 0x36363636,
              p5 ^ 0x36363636,
              p6 ^ 0x36363636,
              p7 ^ 0x36363636,
              p8 ^ 0x36363636,
              p9 ^ 0x36363636,
              p10 ^ 0x36363636,
              p11 ^ 0x36363636,
              p12 ^ 0x36363636,
              p13 ^ 0x36363636,
              p14 ^ 0x36363636,
              p15 ^ 0x36363636
          );
          I0 = H0;
          I1 = H1;
          I2 = H2;
          I3 = H3;
          I4 = H4;
          I5 = H5;
          I6 = H6;
          I7 = H7;

          TOTAL0 = 64;
          TOTAL1 = 0;
      }

      // offset — multiple of 64
      // output — multiple of 32
      function hmac_finish ( offset, length, output ) {
          offset = offset|0;
          length = length|0;
          output = output|0;

          var t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0,
              hashed = 0;

          if ( offset & 63 )
              return -1;

          if ( ~output )
              if ( output & 31 )
                  return -1;

          hashed = finish( offset, length, -1 )|0;
          t0 = H0, t1 = H1, t2 = H2, t3 = H3, t4 = H4, t5 = H5, t6 = H6, t7 = H7;

          _hmac_opad();
          _core( t0, t1, t2, t3, t4, t5, t6, t7, 0x80000000, 0, 0, 0, 0, 0, 0, 768 );

          if ( ~output )
              _state_to_heap(output);

          return hashed|0;
      }

      // salt is assumed to be already processed
      // offset — multiple of 64
      // output — multiple of 32
      function pbkdf2_generate_block ( offset, length, block, count, output ) {
          offset = offset|0;
          length = length|0;
          block = block|0;
          count = count|0;
          output = output|0;

          var h0 = 0, h1 = 0, h2 = 0, h3 = 0, h4 = 0, h5 = 0, h6 = 0, h7 = 0,
              t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0;

          if ( offset & 63 )
              return -1;

          if ( ~output )
              if ( output & 31 )
                  return -1;

          // pad block number into heap
          // FIXME probable OOB write
          HEAP[(offset+length)|0]   = block>>>24;
          HEAP[(offset+length+1)|0] = block>>>16&255;
          HEAP[(offset+length+2)|0] = block>>>8&255;
          HEAP[(offset+length+3)|0] = block&255;

          // finish first iteration
          hmac_finish( offset, (length+4)|0, -1 )|0;
          h0 = t0 = H0, h1 = t1 = H1, h2 = t2 = H2, h3 = t3 = H3, h4 = t4 = H4, h5 = t5 = H5, h6 = t6 = H6, h7 = t7 = H7;
          count = (count-1)|0;

          // perform the rest iterations
          while ( (count|0) > 0 ) {
              hmac_reset();
              _core( t0, t1, t2, t3, t4, t5, t6, t7, 0x80000000, 0, 0, 0, 0, 0, 0, 768 );
              t0 = H0, t1 = H1, t2 = H2, t3 = H3, t4 = H4, t5 = H5, t6 = H6, t7 = H7;

              _hmac_opad();
              _core( t0, t1, t2, t3, t4, t5, t6, t7, 0x80000000, 0, 0, 0, 0, 0, 0, 768 );
              t0 = H0, t1 = H1, t2 = H2, t3 = H3, t4 = H4, t5 = H5, t6 = H6, t7 = H7;

              h0 = h0 ^ H0;
              h1 = h1 ^ H1;
              h2 = h2 ^ H2;
              h3 = h3 ^ H3;
              h4 = h4 ^ H4;
              h5 = h5 ^ H5;
              h6 = h6 ^ H6;
              h7 = h7 ^ H7;

              count = (count-1)|0;
          }

          H0 = h0;
          H1 = h1;
          H2 = h2;
          H3 = h3;
          H4 = h4;
          H5 = h5;
          H6 = h6;
          H7 = h7;

          if ( ~output )
              _state_to_heap(output);

          return 0;
      }

      return {
        // SHA256
        reset: reset,
        init: init,
        process: process,
        finish: finish,

        // HMAC-SHA256
        hmac_reset: hmac_reset,
        hmac_init: hmac_init,
        hmac_finish: hmac_finish,

        // PBKDF2-HMAC-SHA256
        pbkdf2_generate_block: pbkdf2_generate_block
      }
  };

  const _sha256_block_size = 64;
  const _sha256_hash_size = 32;
  class Sha256 extends Hash {
      constructor() {
          super();
          this.NAME = 'sha256';
          this.BLOCK_SIZE = _sha256_block_size;
          this.HASH_SIZE = _sha256_hash_size;
          this.heap = _heap_init();
          this.asm = sha256_asm({ Uint8Array: Uint8Array }, null, this.heap.buffer);
          this.reset();
      }
  }
  Sha256.NAME = 'sha256';

  var sha512_asm = function ( stdlib, foreign, buffer ) {
      "use asm";

      // SHA512 state
      var H0h = 0, H0l = 0, H1h = 0, H1l = 0, H2h = 0, H2l = 0, H3h = 0, H3l = 0,
          H4h = 0, H4l = 0, H5h = 0, H5l = 0, H6h = 0, H6l = 0, H7h = 0, H7l = 0,
          TOTAL0 = 0, TOTAL1 = 0;

      // HMAC state
      var I0h = 0, I0l = 0, I1h = 0, I1l = 0, I2h = 0, I2l = 0, I3h = 0, I3l = 0,
          I4h = 0, I4l = 0, I5h = 0, I5l = 0, I6h = 0, I6l = 0, I7h = 0, I7l = 0,
          O0h = 0, O0l = 0, O1h = 0, O1l = 0, O2h = 0, O2l = 0, O3h = 0, O3l = 0,
          O4h = 0, O4l = 0, O5h = 0, O5l = 0, O6h = 0, O6l = 0, O7h = 0, O7l = 0;

      // I/O buffer
      var HEAP = new stdlib.Uint8Array(buffer);

      function _core ( w0h, w0l, w1h, w1l, w2h, w2l, w3h, w3l, w4h, w4l, w5h, w5l, w6h, w6l, w7h, w7l, w8h, w8l, w9h, w9l, w10h, w10l, w11h, w11l, w12h, w12l, w13h, w13l, w14h, w14l, w15h, w15l ) {
          w0h = w0h|0;
          w0l = w0l|0;
          w1h = w1h|0;
          w1l = w1l|0;
          w2h = w2h|0;
          w2l = w2l|0;
          w3h = w3h|0;
          w3l = w3l|0;
          w4h = w4h|0;
          w4l = w4l|0;
          w5h = w5h|0;
          w5l = w5l|0;
          w6h = w6h|0;
          w6l = w6l|0;
          w7h = w7h|0;
          w7l = w7l|0;
          w8h = w8h|0;
          w8l = w8l|0;
          w9h = w9h|0;
          w9l = w9l|0;
          w10h = w10h|0;
          w10l = w10l|0;
          w11h = w11h|0;
          w11l = w11l|0;
          w12h = w12h|0;
          w12l = w12l|0;
          w13h = w13h|0;
          w13l = w13l|0;
          w14h = w14h|0;
          w14l = w14l|0;
          w15h = w15h|0;
          w15l = w15l|0;

          var ah = 0, al = 0, bh = 0, bl = 0, ch = 0, cl = 0, dh = 0, dl = 0, eh = 0, el = 0, fh = 0, fl = 0, gh = 0, gl = 0, hh = 0, hl = 0,
              th = 0, tl = 0, xl = 0;

          ah = H0h;
          al = H0l;
          bh = H1h;
          bl = H1l;
          ch = H2h;
          cl = H2l;
          dh = H3h;
          dl = H3l;
          eh = H4h;
          el = H4l;
          fh = H5h;
          fl = H5l;
          gh = H6h;
          gl = H6l;
          hh = H7h;
          hl = H7l;

          // 0
          tl = ( 0xd728ae22 + w0l )|0;
          th = ( 0x428a2f98 + w0h + ((tl >>> 0) < (w0l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 1
          tl = ( 0x23ef65cd + w1l )|0;
          th = ( 0x71374491 + w1h + ((tl >>> 0) < (w1l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 2
          tl = ( 0xec4d3b2f + w2l )|0;
          th = ( 0xb5c0fbcf + w2h + ((tl >>> 0) < (w2l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 3
          tl = ( 0x8189dbbc + w3l )|0;
          th = ( 0xe9b5dba5 + w3h + ((tl >>> 0) < (w3l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 4
          tl = ( 0xf348b538 + w4l )|0;
          th = ( 0x3956c25b + w4h + ((tl >>> 0) < (w4l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 5
          tl = ( 0xb605d019 + w5l )|0;
          th = ( 0x59f111f1 + w5h + ((tl >>> 0) < (w5l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 6
          tl = ( 0xaf194f9b + w6l )|0;
          th = ( 0x923f82a4 + w6h + ((tl >>> 0) < (w6l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 7
          tl = ( 0xda6d8118 + w7l )|0;
          th = ( 0xab1c5ed5 + w7h + ((tl >>> 0) < (w7l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 8
          tl = ( 0xa3030242 + w8l )|0;
          th = ( 0xd807aa98 + w8h + ((tl >>> 0) < (w8l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 9
          tl = ( 0x45706fbe + w9l )|0;
          th = ( 0x12835b01 + w9h + ((tl >>> 0) < (w9l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 10
          tl = ( 0x4ee4b28c + w10l )|0;
          th = ( 0x243185be + w10h + ((tl >>> 0) < (w10l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 11
          tl = ( 0xd5ffb4e2 + w11l )|0;
          th = ( 0x550c7dc3 + w11h + ((tl >>> 0) < (w11l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 12
          tl = ( 0xf27b896f + w12l )|0;
          th = ( 0x72be5d74 + w12h + ((tl >>> 0) < (w12l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 13
          tl = ( 0x3b1696b1 + w13l )|0;
          th = ( 0x80deb1fe + w13h + ((tl >>> 0) < (w13l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 14
          tl = ( 0x25c71235 + w14l )|0;
          th = ( 0x9bdc06a7 + w14h + ((tl >>> 0) < (w14l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 15
          tl = ( 0xcf692694 + w15l )|0;
          th = ( 0xc19bf174 + w15h + ((tl >>> 0) < (w15l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 16
          w0l = ( w0l + w9l )|0;
          w0h = ( w0h + w9h + ((w0l >>> 0) < (w9l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w1l >>> 1) | (w1h << 31)) ^ ((w1l >>> 8) | (w1h << 24)) ^ ((w1l >>> 7) | (w1h << 25)) )|0;
          w0l = ( w0l + xl)|0;
          w0h = ( w0h + ( ((w1h >>> 1) | (w1l << 31)) ^ ((w1h >>> 8) | (w1l << 24)) ^ (w1h >>> 7) ) + ((w0l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w14l >>> 19) | (w14h << 13)) ^ ((w14l << 3) | (w14h >>> 29)) ^ ((w14l >>> 6) | (w14h << 26)) )|0;
          w0l = ( w0l + xl)|0;
          w0h = ( w0h + ( ((w14h >>> 19) | (w14l << 13)) ^ ((w14h << 3) | (w14l >>> 29)) ^ (w14h >>> 6) ) + ((w0l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0x9ef14ad2 + w0l )|0;
          th = ( 0xe49b69c1 + w0h + ((tl >>> 0) < (w0l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 17
          w1l = ( w1l + w10l )|0;
          w1h = ( w1h + w10h + ((w1l >>> 0) < (w10l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w2l >>> 1) | (w2h << 31)) ^ ((w2l >>> 8) | (w2h << 24)) ^ ((w2l >>> 7) | (w2h << 25)) )|0;
          w1l = ( w1l + xl)|0;
          w1h = ( w1h + ( ((w2h >>> 1) | (w2l << 31)) ^ ((w2h >>> 8) | (w2l << 24)) ^ (w2h >>> 7) ) + ((w1l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w15l >>> 19) | (w15h << 13)) ^ ((w15l << 3) | (w15h >>> 29)) ^ ((w15l >>> 6) | (w15h << 26)) )|0;
          w1l = ( w1l + xl)|0;
          w1h = ( w1h + ( ((w15h >>> 19) | (w15l << 13)) ^ ((w15h << 3) | (w15l >>> 29)) ^ (w15h >>> 6) ) + ((w1l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0x384f25e3 + w1l )|0;
          th = ( 0xefbe4786 + w1h + ((tl >>> 0) < (w1l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 18
          w2l = ( w2l + w11l )|0;
          w2h = ( w2h + w11h + ((w2l >>> 0) < (w11l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w3l >>> 1) | (w3h << 31)) ^ ((w3l >>> 8) | (w3h << 24)) ^ ((w3l >>> 7) | (w3h << 25)) )|0;
          w2l = ( w2l + xl)|0;
          w2h = ( w2h + ( ((w3h >>> 1) | (w3l << 31)) ^ ((w3h >>> 8) | (w3l << 24)) ^ (w3h >>> 7) ) + ((w2l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w0l >>> 19) | (w0h << 13)) ^ ((w0l << 3) | (w0h >>> 29)) ^ ((w0l >>> 6) | (w0h << 26)) )|0;
          w2l = ( w2l + xl)|0;
          w2h = ( w2h + ( ((w0h >>> 19) | (w0l << 13)) ^ ((w0h << 3) | (w0l >>> 29)) ^ (w0h >>> 6) ) + ((w2l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0x8b8cd5b5 + w2l )|0;
          th = ( 0xfc19dc6 + w2h + ((tl >>> 0) < (w2l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 19
          w3l = ( w3l + w12l )|0;
          w3h = ( w3h + w12h + ((w3l >>> 0) < (w12l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w4l >>> 1) | (w4h << 31)) ^ ((w4l >>> 8) | (w4h << 24)) ^ ((w4l >>> 7) | (w4h << 25)) )|0;
          w3l = ( w3l + xl)|0;
          w3h = ( w3h + ( ((w4h >>> 1) | (w4l << 31)) ^ ((w4h >>> 8) | (w4l << 24)) ^ (w4h >>> 7) ) + ((w3l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w1l >>> 19) | (w1h << 13)) ^ ((w1l << 3) | (w1h >>> 29)) ^ ((w1l >>> 6) | (w1h << 26)) )|0;
          w3l = ( w3l + xl)|0;
          w3h = ( w3h + ( ((w1h >>> 19) | (w1l << 13)) ^ ((w1h << 3) | (w1l >>> 29)) ^ (w1h >>> 6) ) + ((w3l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0x77ac9c65 + w3l )|0;
          th = ( 0x240ca1cc + w3h + ((tl >>> 0) < (w3l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 20
          w4l = ( w4l + w13l )|0;
          w4h = ( w4h + w13h + ((w4l >>> 0) < (w13l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w5l >>> 1) | (w5h << 31)) ^ ((w5l >>> 8) | (w5h << 24)) ^ ((w5l >>> 7) | (w5h << 25)) )|0;
          w4l = ( w4l + xl)|0;
          w4h = ( w4h + ( ((w5h >>> 1) | (w5l << 31)) ^ ((w5h >>> 8) | (w5l << 24)) ^ (w5h >>> 7) ) + ((w4l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w2l >>> 19) | (w2h << 13)) ^ ((w2l << 3) | (w2h >>> 29)) ^ ((w2l >>> 6) | (w2h << 26)) )|0;
          w4l = ( w4l + xl)|0;
          w4h = ( w4h + ( ((w2h >>> 19) | (w2l << 13)) ^ ((w2h << 3) | (w2l >>> 29)) ^ (w2h >>> 6) ) + ((w4l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0x592b0275 + w4l )|0;
          th = ( 0x2de92c6f + w4h + ((tl >>> 0) < (w4l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 21
          w5l = ( w5l + w14l )|0;
          w5h = ( w5h + w14h + ((w5l >>> 0) < (w14l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w6l >>> 1) | (w6h << 31)) ^ ((w6l >>> 8) | (w6h << 24)) ^ ((w6l >>> 7) | (w6h << 25)) )|0;
          w5l = ( w5l + xl)|0;
          w5h = ( w5h + ( ((w6h >>> 1) | (w6l << 31)) ^ ((w6h >>> 8) | (w6l << 24)) ^ (w6h >>> 7) ) + ((w5l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w3l >>> 19) | (w3h << 13)) ^ ((w3l << 3) | (w3h >>> 29)) ^ ((w3l >>> 6) | (w3h << 26)) )|0;
          w5l = ( w5l + xl)|0;
          w5h = ( w5h + ( ((w3h >>> 19) | (w3l << 13)) ^ ((w3h << 3) | (w3l >>> 29)) ^ (w3h >>> 6) ) + ((w5l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0x6ea6e483 + w5l )|0;
          th = ( 0x4a7484aa + w5h + ((tl >>> 0) < (w5l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 22
          w6l = ( w6l + w15l )|0;
          w6h = ( w6h + w15h + ((w6l >>> 0) < (w15l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w7l >>> 1) | (w7h << 31)) ^ ((w7l >>> 8) | (w7h << 24)) ^ ((w7l >>> 7) | (w7h << 25)) )|0;
          w6l = ( w6l + xl)|0;
          w6h = ( w6h + ( ((w7h >>> 1) | (w7l << 31)) ^ ((w7h >>> 8) | (w7l << 24)) ^ (w7h >>> 7) ) + ((w6l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w4l >>> 19) | (w4h << 13)) ^ ((w4l << 3) | (w4h >>> 29)) ^ ((w4l >>> 6) | (w4h << 26)) )|0;
          w6l = ( w6l + xl)|0;
          w6h = ( w6h + ( ((w4h >>> 19) | (w4l << 13)) ^ ((w4h << 3) | (w4l >>> 29)) ^ (w4h >>> 6) ) + ((w6l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0xbd41fbd4 + w6l )|0;
          th = ( 0x5cb0a9dc + w6h + ((tl >>> 0) < (w6l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 23
          w7l = ( w7l + w0l )|0;
          w7h = ( w7h + w0h + ((w7l >>> 0) < (w0l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w8l >>> 1) | (w8h << 31)) ^ ((w8l >>> 8) | (w8h << 24)) ^ ((w8l >>> 7) | (w8h << 25)) )|0;
          w7l = ( w7l + xl)|0;
          w7h = ( w7h + ( ((w8h >>> 1) | (w8l << 31)) ^ ((w8h >>> 8) | (w8l << 24)) ^ (w8h >>> 7) ) + ((w7l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w5l >>> 19) | (w5h << 13)) ^ ((w5l << 3) | (w5h >>> 29)) ^ ((w5l >>> 6) | (w5h << 26)) )|0;
          w7l = ( w7l + xl)|0;
          w7h = ( w7h + ( ((w5h >>> 19) | (w5l << 13)) ^ ((w5h << 3) | (w5l >>> 29)) ^ (w5h >>> 6) ) + ((w7l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0x831153b5 + w7l )|0;
          th = ( 0x76f988da + w7h + ((tl >>> 0) < (w7l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 24
          w8l = ( w8l + w1l )|0;
          w8h = ( w8h + w1h + ((w8l >>> 0) < (w1l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w9l >>> 1) | (w9h << 31)) ^ ((w9l >>> 8) | (w9h << 24)) ^ ((w9l >>> 7) | (w9h << 25)) )|0;
          w8l = ( w8l + xl)|0;
          w8h = ( w8h + ( ((w9h >>> 1) | (w9l << 31)) ^ ((w9h >>> 8) | (w9l << 24)) ^ (w9h >>> 7) ) + ((w8l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w6l >>> 19) | (w6h << 13)) ^ ((w6l << 3) | (w6h >>> 29)) ^ ((w6l >>> 6) | (w6h << 26)) )|0;
          w8l = ( w8l + xl)|0;
          w8h = ( w8h + ( ((w6h >>> 19) | (w6l << 13)) ^ ((w6h << 3) | (w6l >>> 29)) ^ (w6h >>> 6) ) + ((w8l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0xee66dfab + w8l )|0;
          th = ( 0x983e5152 + w8h + ((tl >>> 0) < (w8l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 25
          w9l = ( w9l + w2l )|0;
          w9h = ( w9h + w2h + ((w9l >>> 0) < (w2l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w10l >>> 1) | (w10h << 31)) ^ ((w10l >>> 8) | (w10h << 24)) ^ ((w10l >>> 7) | (w10h << 25)) )|0;
          w9l = ( w9l + xl)|0;
          w9h = ( w9h + ( ((w10h >>> 1) | (w10l << 31)) ^ ((w10h >>> 8) | (w10l << 24)) ^ (w10h >>> 7) ) + ((w9l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w7l >>> 19) | (w7h << 13)) ^ ((w7l << 3) | (w7h >>> 29)) ^ ((w7l >>> 6) | (w7h << 26)) )|0;
          w9l = ( w9l + xl)|0;
          w9h = ( w9h + ( ((w7h >>> 19) | (w7l << 13)) ^ ((w7h << 3) | (w7l >>> 29)) ^ (w7h >>> 6) ) + ((w9l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0x2db43210 + w9l )|0;
          th = ( 0xa831c66d + w9h + ((tl >>> 0) < (w9l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 26
          w10l = ( w10l + w3l )|0;
          w10h = ( w10h + w3h + ((w10l >>> 0) < (w3l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w11l >>> 1) | (w11h << 31)) ^ ((w11l >>> 8) | (w11h << 24)) ^ ((w11l >>> 7) | (w11h << 25)) )|0;
          w10l = ( w10l + xl)|0;
          w10h = ( w10h + ( ((w11h >>> 1) | (w11l << 31)) ^ ((w11h >>> 8) | (w11l << 24)) ^ (w11h >>> 7) ) + ((w10l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w8l >>> 19) | (w8h << 13)) ^ ((w8l << 3) | (w8h >>> 29)) ^ ((w8l >>> 6) | (w8h << 26)) )|0;
          w10l = ( w10l + xl)|0;
          w10h = ( w10h + ( ((w8h >>> 19) | (w8l << 13)) ^ ((w8h << 3) | (w8l >>> 29)) ^ (w8h >>> 6) ) + ((w10l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0x98fb213f + w10l )|0;
          th = ( 0xb00327c8 + w10h + ((tl >>> 0) < (w10l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 27
          w11l = ( w11l + w4l )|0;
          w11h = ( w11h + w4h + ((w11l >>> 0) < (w4l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w12l >>> 1) | (w12h << 31)) ^ ((w12l >>> 8) | (w12h << 24)) ^ ((w12l >>> 7) | (w12h << 25)) )|0;
          w11l = ( w11l + xl)|0;
          w11h = ( w11h + ( ((w12h >>> 1) | (w12l << 31)) ^ ((w12h >>> 8) | (w12l << 24)) ^ (w12h >>> 7) ) + ((w11l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w9l >>> 19) | (w9h << 13)) ^ ((w9l << 3) | (w9h >>> 29)) ^ ((w9l >>> 6) | (w9h << 26)) )|0;
          w11l = ( w11l + xl)|0;
          w11h = ( w11h + ( ((w9h >>> 19) | (w9l << 13)) ^ ((w9h << 3) | (w9l >>> 29)) ^ (w9h >>> 6) ) + ((w11l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0xbeef0ee4 + w11l )|0;
          th = ( 0xbf597fc7 + w11h + ((tl >>> 0) < (w11l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 28
          w12l = ( w12l + w5l )|0;
          w12h = ( w12h + w5h + ((w12l >>> 0) < (w5l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w13l >>> 1) | (w13h << 31)) ^ ((w13l >>> 8) | (w13h << 24)) ^ ((w13l >>> 7) | (w13h << 25)) )|0;
          w12l = ( w12l + xl)|0;
          w12h = ( w12h + ( ((w13h >>> 1) | (w13l << 31)) ^ ((w13h >>> 8) | (w13l << 24)) ^ (w13h >>> 7) ) + ((w12l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w10l >>> 19) | (w10h << 13)) ^ ((w10l << 3) | (w10h >>> 29)) ^ ((w10l >>> 6) | (w10h << 26)) )|0;
          w12l = ( w12l + xl)|0;
          w12h = ( w12h + ( ((w10h >>> 19) | (w10l << 13)) ^ ((w10h << 3) | (w10l >>> 29)) ^ (w10h >>> 6) ) + ((w12l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0x3da88fc2 + w12l )|0;
          th = ( 0xc6e00bf3 + w12h + ((tl >>> 0) < (w12l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 29
          w13l = ( w13l + w6l )|0;
          w13h = ( w13h + w6h + ((w13l >>> 0) < (w6l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w14l >>> 1) | (w14h << 31)) ^ ((w14l >>> 8) | (w14h << 24)) ^ ((w14l >>> 7) | (w14h << 25)) )|0;
          w13l = ( w13l + xl)|0;
          w13h = ( w13h + ( ((w14h >>> 1) | (w14l << 31)) ^ ((w14h >>> 8) | (w14l << 24)) ^ (w14h >>> 7) ) + ((w13l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w11l >>> 19) | (w11h << 13)) ^ ((w11l << 3) | (w11h >>> 29)) ^ ((w11l >>> 6) | (w11h << 26)) )|0;
          w13l = ( w13l + xl)|0;
          w13h = ( w13h + ( ((w11h >>> 19) | (w11l << 13)) ^ ((w11h << 3) | (w11l >>> 29)) ^ (w11h >>> 6) ) + ((w13l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0x930aa725 + w13l )|0;
          th = ( 0xd5a79147 + w13h + ((tl >>> 0) < (w13l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 30
          w14l = ( w14l + w7l )|0;
          w14h = ( w14h + w7h + ((w14l >>> 0) < (w7l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w15l >>> 1) | (w15h << 31)) ^ ((w15l >>> 8) | (w15h << 24)) ^ ((w15l >>> 7) | (w15h << 25)) )|0;
          w14l = ( w14l + xl)|0;
          w14h = ( w14h + ( ((w15h >>> 1) | (w15l << 31)) ^ ((w15h >>> 8) | (w15l << 24)) ^ (w15h >>> 7) ) + ((w14l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w12l >>> 19) | (w12h << 13)) ^ ((w12l << 3) | (w12h >>> 29)) ^ ((w12l >>> 6) | (w12h << 26)) )|0;
          w14l = ( w14l + xl)|0;
          w14h = ( w14h + ( ((w12h >>> 19) | (w12l << 13)) ^ ((w12h << 3) | (w12l >>> 29)) ^ (w12h >>> 6) ) + ((w14l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0xe003826f + w14l )|0;
          th = ( 0x6ca6351 + w14h + ((tl >>> 0) < (w14l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 31
          w15l = ( w15l + w8l )|0;
          w15h = ( w15h + w8h + ((w15l >>> 0) < (w8l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w0l >>> 1) | (w0h << 31)) ^ ((w0l >>> 8) | (w0h << 24)) ^ ((w0l >>> 7) | (w0h << 25)) )|0;
          w15l = ( w15l + xl)|0;
          w15h = ( w15h + ( ((w0h >>> 1) | (w0l << 31)) ^ ((w0h >>> 8) | (w0l << 24)) ^ (w0h >>> 7) ) + ((w15l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w13l >>> 19) | (w13h << 13)) ^ ((w13l << 3) | (w13h >>> 29)) ^ ((w13l >>> 6) | (w13h << 26)) )|0;
          w15l = ( w15l + xl)|0;
          w15h = ( w15h + ( ((w13h >>> 19) | (w13l << 13)) ^ ((w13h << 3) | (w13l >>> 29)) ^ (w13h >>> 6) ) + ((w15l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0xa0e6e70 + w15l )|0;
          th = ( 0x14292967 + w15h + ((tl >>> 0) < (w15l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 32
          w0l = ( w0l + w9l )|0;
          w0h = ( w0h + w9h + ((w0l >>> 0) < (w9l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w1l >>> 1) | (w1h << 31)) ^ ((w1l >>> 8) | (w1h << 24)) ^ ((w1l >>> 7) | (w1h << 25)) )|0;
          w0l = ( w0l + xl)|0;
          w0h = ( w0h + ( ((w1h >>> 1) | (w1l << 31)) ^ ((w1h >>> 8) | (w1l << 24)) ^ (w1h >>> 7) ) + ((w0l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w14l >>> 19) | (w14h << 13)) ^ ((w14l << 3) | (w14h >>> 29)) ^ ((w14l >>> 6) | (w14h << 26)) )|0;
          w0l = ( w0l + xl)|0;
          w0h = ( w0h + ( ((w14h >>> 19) | (w14l << 13)) ^ ((w14h << 3) | (w14l >>> 29)) ^ (w14h >>> 6) ) + ((w0l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0x46d22ffc + w0l )|0;
          th = ( 0x27b70a85 + w0h + ((tl >>> 0) < (w0l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 33
          w1l = ( w1l + w10l )|0;
          w1h = ( w1h + w10h + ((w1l >>> 0) < (w10l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w2l >>> 1) | (w2h << 31)) ^ ((w2l >>> 8) | (w2h << 24)) ^ ((w2l >>> 7) | (w2h << 25)) )|0;
          w1l = ( w1l + xl)|0;
          w1h = ( w1h + ( ((w2h >>> 1) | (w2l << 31)) ^ ((w2h >>> 8) | (w2l << 24)) ^ (w2h >>> 7) ) + ((w1l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w15l >>> 19) | (w15h << 13)) ^ ((w15l << 3) | (w15h >>> 29)) ^ ((w15l >>> 6) | (w15h << 26)) )|0;
          w1l = ( w1l + xl)|0;
          w1h = ( w1h + ( ((w15h >>> 19) | (w15l << 13)) ^ ((w15h << 3) | (w15l >>> 29)) ^ (w15h >>> 6) ) + ((w1l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0x5c26c926 + w1l )|0;
          th = ( 0x2e1b2138 + w1h + ((tl >>> 0) < (w1l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 34
          w2l = ( w2l + w11l )|0;
          w2h = ( w2h + w11h + ((w2l >>> 0) < (w11l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w3l >>> 1) | (w3h << 31)) ^ ((w3l >>> 8) | (w3h << 24)) ^ ((w3l >>> 7) | (w3h << 25)) )|0;
          w2l = ( w2l + xl)|0;
          w2h = ( w2h + ( ((w3h >>> 1) | (w3l << 31)) ^ ((w3h >>> 8) | (w3l << 24)) ^ (w3h >>> 7) ) + ((w2l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w0l >>> 19) | (w0h << 13)) ^ ((w0l << 3) | (w0h >>> 29)) ^ ((w0l >>> 6) | (w0h << 26)) )|0;
          w2l = ( w2l + xl)|0;
          w2h = ( w2h + ( ((w0h >>> 19) | (w0l << 13)) ^ ((w0h << 3) | (w0l >>> 29)) ^ (w0h >>> 6) ) + ((w2l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0x5ac42aed + w2l )|0;
          th = ( 0x4d2c6dfc + w2h + ((tl >>> 0) < (w2l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 35
          w3l = ( w3l + w12l )|0;
          w3h = ( w3h + w12h + ((w3l >>> 0) < (w12l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w4l >>> 1) | (w4h << 31)) ^ ((w4l >>> 8) | (w4h << 24)) ^ ((w4l >>> 7) | (w4h << 25)) )|0;
          w3l = ( w3l + xl)|0;
          w3h = ( w3h + ( ((w4h >>> 1) | (w4l << 31)) ^ ((w4h >>> 8) | (w4l << 24)) ^ (w4h >>> 7) ) + ((w3l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w1l >>> 19) | (w1h << 13)) ^ ((w1l << 3) | (w1h >>> 29)) ^ ((w1l >>> 6) | (w1h << 26)) )|0;
          w3l = ( w3l + xl)|0;
          w3h = ( w3h + ( ((w1h >>> 19) | (w1l << 13)) ^ ((w1h << 3) | (w1l >>> 29)) ^ (w1h >>> 6) ) + ((w3l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0x9d95b3df + w3l )|0;
          th = ( 0x53380d13 + w3h + ((tl >>> 0) < (w3l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 36
          w4l = ( w4l + w13l )|0;
          w4h = ( w4h + w13h + ((w4l >>> 0) < (w13l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w5l >>> 1) | (w5h << 31)) ^ ((w5l >>> 8) | (w5h << 24)) ^ ((w5l >>> 7) | (w5h << 25)) )|0;
          w4l = ( w4l + xl)|0;
          w4h = ( w4h + ( ((w5h >>> 1) | (w5l << 31)) ^ ((w5h >>> 8) | (w5l << 24)) ^ (w5h >>> 7) ) + ((w4l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w2l >>> 19) | (w2h << 13)) ^ ((w2l << 3) | (w2h >>> 29)) ^ ((w2l >>> 6) | (w2h << 26)) )|0;
          w4l = ( w4l + xl)|0;
          w4h = ( w4h + ( ((w2h >>> 19) | (w2l << 13)) ^ ((w2h << 3) | (w2l >>> 29)) ^ (w2h >>> 6) ) + ((w4l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0x8baf63de + w4l )|0;
          th = ( 0x650a7354 + w4h + ((tl >>> 0) < (w4l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 37
          w5l = ( w5l + w14l )|0;
          w5h = ( w5h + w14h + ((w5l >>> 0) < (w14l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w6l >>> 1) | (w6h << 31)) ^ ((w6l >>> 8) | (w6h << 24)) ^ ((w6l >>> 7) | (w6h << 25)) )|0;
          w5l = ( w5l + xl)|0;
          w5h = ( w5h + ( ((w6h >>> 1) | (w6l << 31)) ^ ((w6h >>> 8) | (w6l << 24)) ^ (w6h >>> 7) ) + ((w5l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w3l >>> 19) | (w3h << 13)) ^ ((w3l << 3) | (w3h >>> 29)) ^ ((w3l >>> 6) | (w3h << 26)) )|0;
          w5l = ( w5l + xl)|0;
          w5h = ( w5h + ( ((w3h >>> 19) | (w3l << 13)) ^ ((w3h << 3) | (w3l >>> 29)) ^ (w3h >>> 6) ) + ((w5l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0x3c77b2a8 + w5l )|0;
          th = ( 0x766a0abb + w5h + ((tl >>> 0) < (w5l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 38
          w6l = ( w6l + w15l )|0;
          w6h = ( w6h + w15h + ((w6l >>> 0) < (w15l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w7l >>> 1) | (w7h << 31)) ^ ((w7l >>> 8) | (w7h << 24)) ^ ((w7l >>> 7) | (w7h << 25)) )|0;
          w6l = ( w6l + xl)|0;
          w6h = ( w6h + ( ((w7h >>> 1) | (w7l << 31)) ^ ((w7h >>> 8) | (w7l << 24)) ^ (w7h >>> 7) ) + ((w6l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w4l >>> 19) | (w4h << 13)) ^ ((w4l << 3) | (w4h >>> 29)) ^ ((w4l >>> 6) | (w4h << 26)) )|0;
          w6l = ( w6l + xl)|0;
          w6h = ( w6h + ( ((w4h >>> 19) | (w4l << 13)) ^ ((w4h << 3) | (w4l >>> 29)) ^ (w4h >>> 6) ) + ((w6l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0x47edaee6 + w6l )|0;
          th = ( 0x81c2c92e + w6h + ((tl >>> 0) < (w6l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 39
          w7l = ( w7l + w0l )|0;
          w7h = ( w7h + w0h + ((w7l >>> 0) < (w0l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w8l >>> 1) | (w8h << 31)) ^ ((w8l >>> 8) | (w8h << 24)) ^ ((w8l >>> 7) | (w8h << 25)) )|0;
          w7l = ( w7l + xl)|0;
          w7h = ( w7h + ( ((w8h >>> 1) | (w8l << 31)) ^ ((w8h >>> 8) | (w8l << 24)) ^ (w8h >>> 7) ) + ((w7l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w5l >>> 19) | (w5h << 13)) ^ ((w5l << 3) | (w5h >>> 29)) ^ ((w5l >>> 6) | (w5h << 26)) )|0;
          w7l = ( w7l + xl)|0;
          w7h = ( w7h + ( ((w5h >>> 19) | (w5l << 13)) ^ ((w5h << 3) | (w5l >>> 29)) ^ (w5h >>> 6) ) + ((w7l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0x1482353b + w7l )|0;
          th = ( 0x92722c85 + w7h + ((tl >>> 0) < (w7l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 40
          w8l = ( w8l + w1l )|0;
          w8h = ( w8h + w1h + ((w8l >>> 0) < (w1l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w9l >>> 1) | (w9h << 31)) ^ ((w9l >>> 8) | (w9h << 24)) ^ ((w9l >>> 7) | (w9h << 25)) )|0;
          w8l = ( w8l + xl)|0;
          w8h = ( w8h + ( ((w9h >>> 1) | (w9l << 31)) ^ ((w9h >>> 8) | (w9l << 24)) ^ (w9h >>> 7) ) + ((w8l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w6l >>> 19) | (w6h << 13)) ^ ((w6l << 3) | (w6h >>> 29)) ^ ((w6l >>> 6) | (w6h << 26)) )|0;
          w8l = ( w8l + xl)|0;
          w8h = ( w8h + ( ((w6h >>> 19) | (w6l << 13)) ^ ((w6h << 3) | (w6l >>> 29)) ^ (w6h >>> 6) ) + ((w8l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0x4cf10364 + w8l )|0;
          th = ( 0xa2bfe8a1 + w8h + ((tl >>> 0) < (w8l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 41
          w9l = ( w9l + w2l )|0;
          w9h = ( w9h + w2h + ((w9l >>> 0) < (w2l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w10l >>> 1) | (w10h << 31)) ^ ((w10l >>> 8) | (w10h << 24)) ^ ((w10l >>> 7) | (w10h << 25)) )|0;
          w9l = ( w9l + xl)|0;
          w9h = ( w9h + ( ((w10h >>> 1) | (w10l << 31)) ^ ((w10h >>> 8) | (w10l << 24)) ^ (w10h >>> 7) ) + ((w9l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w7l >>> 19) | (w7h << 13)) ^ ((w7l << 3) | (w7h >>> 29)) ^ ((w7l >>> 6) | (w7h << 26)) )|0;
          w9l = ( w9l + xl)|0;
          w9h = ( w9h + ( ((w7h >>> 19) | (w7l << 13)) ^ ((w7h << 3) | (w7l >>> 29)) ^ (w7h >>> 6) ) + ((w9l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0xbc423001 + w9l )|0;
          th = ( 0xa81a664b + w9h + ((tl >>> 0) < (w9l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 42
          w10l = ( w10l + w3l )|0;
          w10h = ( w10h + w3h + ((w10l >>> 0) < (w3l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w11l >>> 1) | (w11h << 31)) ^ ((w11l >>> 8) | (w11h << 24)) ^ ((w11l >>> 7) | (w11h << 25)) )|0;
          w10l = ( w10l + xl)|0;
          w10h = ( w10h + ( ((w11h >>> 1) | (w11l << 31)) ^ ((w11h >>> 8) | (w11l << 24)) ^ (w11h >>> 7) ) + ((w10l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w8l >>> 19) | (w8h << 13)) ^ ((w8l << 3) | (w8h >>> 29)) ^ ((w8l >>> 6) | (w8h << 26)) )|0;
          w10l = ( w10l + xl)|0;
          w10h = ( w10h + ( ((w8h >>> 19) | (w8l << 13)) ^ ((w8h << 3) | (w8l >>> 29)) ^ (w8h >>> 6) ) + ((w10l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0xd0f89791 + w10l )|0;
          th = ( 0xc24b8b70 + w10h + ((tl >>> 0) < (w10l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 43
          w11l = ( w11l + w4l )|0;
          w11h = ( w11h + w4h + ((w11l >>> 0) < (w4l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w12l >>> 1) | (w12h << 31)) ^ ((w12l >>> 8) | (w12h << 24)) ^ ((w12l >>> 7) | (w12h << 25)) )|0;
          w11l = ( w11l + xl)|0;
          w11h = ( w11h + ( ((w12h >>> 1) | (w12l << 31)) ^ ((w12h >>> 8) | (w12l << 24)) ^ (w12h >>> 7) ) + ((w11l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w9l >>> 19) | (w9h << 13)) ^ ((w9l << 3) | (w9h >>> 29)) ^ ((w9l >>> 6) | (w9h << 26)) )|0;
          w11l = ( w11l + xl)|0;
          w11h = ( w11h + ( ((w9h >>> 19) | (w9l << 13)) ^ ((w9h << 3) | (w9l >>> 29)) ^ (w9h >>> 6) ) + ((w11l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0x654be30 + w11l )|0;
          th = ( 0xc76c51a3 + w11h + ((tl >>> 0) < (w11l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 44
          w12l = ( w12l + w5l )|0;
          w12h = ( w12h + w5h + ((w12l >>> 0) < (w5l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w13l >>> 1) | (w13h << 31)) ^ ((w13l >>> 8) | (w13h << 24)) ^ ((w13l >>> 7) | (w13h << 25)) )|0;
          w12l = ( w12l + xl)|0;
          w12h = ( w12h + ( ((w13h >>> 1) | (w13l << 31)) ^ ((w13h >>> 8) | (w13l << 24)) ^ (w13h >>> 7) ) + ((w12l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w10l >>> 19) | (w10h << 13)) ^ ((w10l << 3) | (w10h >>> 29)) ^ ((w10l >>> 6) | (w10h << 26)) )|0;
          w12l = ( w12l + xl)|0;
          w12h = ( w12h + ( ((w10h >>> 19) | (w10l << 13)) ^ ((w10h << 3) | (w10l >>> 29)) ^ (w10h >>> 6) ) + ((w12l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0xd6ef5218 + w12l )|0;
          th = ( 0xd192e819 + w12h + ((tl >>> 0) < (w12l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 45
          w13l = ( w13l + w6l )|0;
          w13h = ( w13h + w6h + ((w13l >>> 0) < (w6l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w14l >>> 1) | (w14h << 31)) ^ ((w14l >>> 8) | (w14h << 24)) ^ ((w14l >>> 7) | (w14h << 25)) )|0;
          w13l = ( w13l + xl)|0;
          w13h = ( w13h + ( ((w14h >>> 1) | (w14l << 31)) ^ ((w14h >>> 8) | (w14l << 24)) ^ (w14h >>> 7) ) + ((w13l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w11l >>> 19) | (w11h << 13)) ^ ((w11l << 3) | (w11h >>> 29)) ^ ((w11l >>> 6) | (w11h << 26)) )|0;
          w13l = ( w13l + xl)|0;
          w13h = ( w13h + ( ((w11h >>> 19) | (w11l << 13)) ^ ((w11h << 3) | (w11l >>> 29)) ^ (w11h >>> 6) ) + ((w13l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0x5565a910 + w13l )|0;
          th = ( 0xd6990624 + w13h + ((tl >>> 0) < (w13l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 46
          w14l = ( w14l + w7l )|0;
          w14h = ( w14h + w7h + ((w14l >>> 0) < (w7l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w15l >>> 1) | (w15h << 31)) ^ ((w15l >>> 8) | (w15h << 24)) ^ ((w15l >>> 7) | (w15h << 25)) )|0;
          w14l = ( w14l + xl)|0;
          w14h = ( w14h + ( ((w15h >>> 1) | (w15l << 31)) ^ ((w15h >>> 8) | (w15l << 24)) ^ (w15h >>> 7) ) + ((w14l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w12l >>> 19) | (w12h << 13)) ^ ((w12l << 3) | (w12h >>> 29)) ^ ((w12l >>> 6) | (w12h << 26)) )|0;
          w14l = ( w14l + xl)|0;
          w14h = ( w14h + ( ((w12h >>> 19) | (w12l << 13)) ^ ((w12h << 3) | (w12l >>> 29)) ^ (w12h >>> 6) ) + ((w14l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0x5771202a + w14l )|0;
          th = ( 0xf40e3585 + w14h + ((tl >>> 0) < (w14l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 47
          w15l = ( w15l + w8l )|0;
          w15h = ( w15h + w8h + ((w15l >>> 0) < (w8l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w0l >>> 1) | (w0h << 31)) ^ ((w0l >>> 8) | (w0h << 24)) ^ ((w0l >>> 7) | (w0h << 25)) )|0;
          w15l = ( w15l + xl)|0;
          w15h = ( w15h + ( ((w0h >>> 1) | (w0l << 31)) ^ ((w0h >>> 8) | (w0l << 24)) ^ (w0h >>> 7) ) + ((w15l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w13l >>> 19) | (w13h << 13)) ^ ((w13l << 3) | (w13h >>> 29)) ^ ((w13l >>> 6) | (w13h << 26)) )|0;
          w15l = ( w15l + xl)|0;
          w15h = ( w15h + ( ((w13h >>> 19) | (w13l << 13)) ^ ((w13h << 3) | (w13l >>> 29)) ^ (w13h >>> 6) ) + ((w15l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0x32bbd1b8 + w15l )|0;
          th = ( 0x106aa070 + w15h + ((tl >>> 0) < (w15l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 48
          w0l = ( w0l + w9l )|0;
          w0h = ( w0h + w9h + ((w0l >>> 0) < (w9l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w1l >>> 1) | (w1h << 31)) ^ ((w1l >>> 8) | (w1h << 24)) ^ ((w1l >>> 7) | (w1h << 25)) )|0;
          w0l = ( w0l + xl)|0;
          w0h = ( w0h + ( ((w1h >>> 1) | (w1l << 31)) ^ ((w1h >>> 8) | (w1l << 24)) ^ (w1h >>> 7) ) + ((w0l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w14l >>> 19) | (w14h << 13)) ^ ((w14l << 3) | (w14h >>> 29)) ^ ((w14l >>> 6) | (w14h << 26)) )|0;
          w0l = ( w0l + xl)|0;
          w0h = ( w0h + ( ((w14h >>> 19) | (w14l << 13)) ^ ((w14h << 3) | (w14l >>> 29)) ^ (w14h >>> 6) ) + ((w0l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0xb8d2d0c8 + w0l )|0;
          th = ( 0x19a4c116 + w0h + ((tl >>> 0) < (w0l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 49
          w1l = ( w1l + w10l )|0;
          w1h = ( w1h + w10h + ((w1l >>> 0) < (w10l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w2l >>> 1) | (w2h << 31)) ^ ((w2l >>> 8) | (w2h << 24)) ^ ((w2l >>> 7) | (w2h << 25)) )|0;
          w1l = ( w1l + xl)|0;
          w1h = ( w1h + ( ((w2h >>> 1) | (w2l << 31)) ^ ((w2h >>> 8) | (w2l << 24)) ^ (w2h >>> 7) ) + ((w1l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w15l >>> 19) | (w15h << 13)) ^ ((w15l << 3) | (w15h >>> 29)) ^ ((w15l >>> 6) | (w15h << 26)) )|0;
          w1l = ( w1l + xl)|0;
          w1h = ( w1h + ( ((w15h >>> 19) | (w15l << 13)) ^ ((w15h << 3) | (w15l >>> 29)) ^ (w15h >>> 6) ) + ((w1l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0x5141ab53 + w1l )|0;
          th = ( 0x1e376c08 + w1h + ((tl >>> 0) < (w1l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 50
          w2l = ( w2l + w11l )|0;
          w2h = ( w2h + w11h + ((w2l >>> 0) < (w11l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w3l >>> 1) | (w3h << 31)) ^ ((w3l >>> 8) | (w3h << 24)) ^ ((w3l >>> 7) | (w3h << 25)) )|0;
          w2l = ( w2l + xl)|0;
          w2h = ( w2h + ( ((w3h >>> 1) | (w3l << 31)) ^ ((w3h >>> 8) | (w3l << 24)) ^ (w3h >>> 7) ) + ((w2l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w0l >>> 19) | (w0h << 13)) ^ ((w0l << 3) | (w0h >>> 29)) ^ ((w0l >>> 6) | (w0h << 26)) )|0;
          w2l = ( w2l + xl)|0;
          w2h = ( w2h + ( ((w0h >>> 19) | (w0l << 13)) ^ ((w0h << 3) | (w0l >>> 29)) ^ (w0h >>> 6) ) + ((w2l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0xdf8eeb99 + w2l )|0;
          th = ( 0x2748774c + w2h + ((tl >>> 0) < (w2l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 51
          w3l = ( w3l + w12l )|0;
          w3h = ( w3h + w12h + ((w3l >>> 0) < (w12l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w4l >>> 1) | (w4h << 31)) ^ ((w4l >>> 8) | (w4h << 24)) ^ ((w4l >>> 7) | (w4h << 25)) )|0;
          w3l = ( w3l + xl)|0;
          w3h = ( w3h + ( ((w4h >>> 1) | (w4l << 31)) ^ ((w4h >>> 8) | (w4l << 24)) ^ (w4h >>> 7) ) + ((w3l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w1l >>> 19) | (w1h << 13)) ^ ((w1l << 3) | (w1h >>> 29)) ^ ((w1l >>> 6) | (w1h << 26)) )|0;
          w3l = ( w3l + xl)|0;
          w3h = ( w3h + ( ((w1h >>> 19) | (w1l << 13)) ^ ((w1h << 3) | (w1l >>> 29)) ^ (w1h >>> 6) ) + ((w3l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0xe19b48a8 + w3l )|0;
          th = ( 0x34b0bcb5 + w3h + ((tl >>> 0) < (w3l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 52
          w4l = ( w4l + w13l )|0;
          w4h = ( w4h + w13h + ((w4l >>> 0) < (w13l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w5l >>> 1) | (w5h << 31)) ^ ((w5l >>> 8) | (w5h << 24)) ^ ((w5l >>> 7) | (w5h << 25)) )|0;
          w4l = ( w4l + xl)|0;
          w4h = ( w4h + ( ((w5h >>> 1) | (w5l << 31)) ^ ((w5h >>> 8) | (w5l << 24)) ^ (w5h >>> 7) ) + ((w4l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w2l >>> 19) | (w2h << 13)) ^ ((w2l << 3) | (w2h >>> 29)) ^ ((w2l >>> 6) | (w2h << 26)) )|0;
          w4l = ( w4l + xl)|0;
          w4h = ( w4h + ( ((w2h >>> 19) | (w2l << 13)) ^ ((w2h << 3) | (w2l >>> 29)) ^ (w2h >>> 6) ) + ((w4l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0xc5c95a63 + w4l )|0;
          th = ( 0x391c0cb3 + w4h + ((tl >>> 0) < (w4l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 53
          w5l = ( w5l + w14l )|0;
          w5h = ( w5h + w14h + ((w5l >>> 0) < (w14l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w6l >>> 1) | (w6h << 31)) ^ ((w6l >>> 8) | (w6h << 24)) ^ ((w6l >>> 7) | (w6h << 25)) )|0;
          w5l = ( w5l + xl)|0;
          w5h = ( w5h + ( ((w6h >>> 1) | (w6l << 31)) ^ ((w6h >>> 8) | (w6l << 24)) ^ (w6h >>> 7) ) + ((w5l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w3l >>> 19) | (w3h << 13)) ^ ((w3l << 3) | (w3h >>> 29)) ^ ((w3l >>> 6) | (w3h << 26)) )|0;
          w5l = ( w5l + xl)|0;
          w5h = ( w5h + ( ((w3h >>> 19) | (w3l << 13)) ^ ((w3h << 3) | (w3l >>> 29)) ^ (w3h >>> 6) ) + ((w5l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0xe3418acb + w5l )|0;
          th = ( 0x4ed8aa4a + w5h + ((tl >>> 0) < (w5l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 54
          w6l = ( w6l + w15l )|0;
          w6h = ( w6h + w15h + ((w6l >>> 0) < (w15l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w7l >>> 1) | (w7h << 31)) ^ ((w7l >>> 8) | (w7h << 24)) ^ ((w7l >>> 7) | (w7h << 25)) )|0;
          w6l = ( w6l + xl)|0;
          w6h = ( w6h + ( ((w7h >>> 1) | (w7l << 31)) ^ ((w7h >>> 8) | (w7l << 24)) ^ (w7h >>> 7) ) + ((w6l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w4l >>> 19) | (w4h << 13)) ^ ((w4l << 3) | (w4h >>> 29)) ^ ((w4l >>> 6) | (w4h << 26)) )|0;
          w6l = ( w6l + xl)|0;
          w6h = ( w6h + ( ((w4h >>> 19) | (w4l << 13)) ^ ((w4h << 3) | (w4l >>> 29)) ^ (w4h >>> 6) ) + ((w6l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0x7763e373 + w6l )|0;
          th = ( 0x5b9cca4f + w6h + ((tl >>> 0) < (w6l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 55
          w7l = ( w7l + w0l )|0;
          w7h = ( w7h + w0h + ((w7l >>> 0) < (w0l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w8l >>> 1) | (w8h << 31)) ^ ((w8l >>> 8) | (w8h << 24)) ^ ((w8l >>> 7) | (w8h << 25)) )|0;
          w7l = ( w7l + xl)|0;
          w7h = ( w7h + ( ((w8h >>> 1) | (w8l << 31)) ^ ((w8h >>> 8) | (w8l << 24)) ^ (w8h >>> 7) ) + ((w7l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w5l >>> 19) | (w5h << 13)) ^ ((w5l << 3) | (w5h >>> 29)) ^ ((w5l >>> 6) | (w5h << 26)) )|0;
          w7l = ( w7l + xl)|0;
          w7h = ( w7h + ( ((w5h >>> 19) | (w5l << 13)) ^ ((w5h << 3) | (w5l >>> 29)) ^ (w5h >>> 6) ) + ((w7l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0xd6b2b8a3 + w7l )|0;
          th = ( 0x682e6ff3 + w7h + ((tl >>> 0) < (w7l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 56
          w8l = ( w8l + w1l )|0;
          w8h = ( w8h + w1h + ((w8l >>> 0) < (w1l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w9l >>> 1) | (w9h << 31)) ^ ((w9l >>> 8) | (w9h << 24)) ^ ((w9l >>> 7) | (w9h << 25)) )|0;
          w8l = ( w8l + xl)|0;
          w8h = ( w8h + ( ((w9h >>> 1) | (w9l << 31)) ^ ((w9h >>> 8) | (w9l << 24)) ^ (w9h >>> 7) ) + ((w8l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w6l >>> 19) | (w6h << 13)) ^ ((w6l << 3) | (w6h >>> 29)) ^ ((w6l >>> 6) | (w6h << 26)) )|0;
          w8l = ( w8l + xl)|0;
          w8h = ( w8h + ( ((w6h >>> 19) | (w6l << 13)) ^ ((w6h << 3) | (w6l >>> 29)) ^ (w6h >>> 6) ) + ((w8l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0x5defb2fc + w8l )|0;
          th = ( 0x748f82ee + w8h + ((tl >>> 0) < (w8l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 57
          w9l = ( w9l + w2l )|0;
          w9h = ( w9h + w2h + ((w9l >>> 0) < (w2l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w10l >>> 1) | (w10h << 31)) ^ ((w10l >>> 8) | (w10h << 24)) ^ ((w10l >>> 7) | (w10h << 25)) )|0;
          w9l = ( w9l + xl)|0;
          w9h = ( w9h + ( ((w10h >>> 1) | (w10l << 31)) ^ ((w10h >>> 8) | (w10l << 24)) ^ (w10h >>> 7) ) + ((w9l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w7l >>> 19) | (w7h << 13)) ^ ((w7l << 3) | (w7h >>> 29)) ^ ((w7l >>> 6) | (w7h << 26)) )|0;
          w9l = ( w9l + xl)|0;
          w9h = ( w9h + ( ((w7h >>> 19) | (w7l << 13)) ^ ((w7h << 3) | (w7l >>> 29)) ^ (w7h >>> 6) ) + ((w9l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0x43172f60 + w9l )|0;
          th = ( 0x78a5636f + w9h + ((tl >>> 0) < (w9l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 58
          w10l = ( w10l + w3l )|0;
          w10h = ( w10h + w3h + ((w10l >>> 0) < (w3l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w11l >>> 1) | (w11h << 31)) ^ ((w11l >>> 8) | (w11h << 24)) ^ ((w11l >>> 7) | (w11h << 25)) )|0;
          w10l = ( w10l + xl)|0;
          w10h = ( w10h + ( ((w11h >>> 1) | (w11l << 31)) ^ ((w11h >>> 8) | (w11l << 24)) ^ (w11h >>> 7) ) + ((w10l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w8l >>> 19) | (w8h << 13)) ^ ((w8l << 3) | (w8h >>> 29)) ^ ((w8l >>> 6) | (w8h << 26)) )|0;
          w10l = ( w10l + xl)|0;
          w10h = ( w10h + ( ((w8h >>> 19) | (w8l << 13)) ^ ((w8h << 3) | (w8l >>> 29)) ^ (w8h >>> 6) ) + ((w10l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0xa1f0ab72 + w10l )|0;
          th = ( 0x84c87814 + w10h + ((tl >>> 0) < (w10l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 59
          w11l = ( w11l + w4l )|0;
          w11h = ( w11h + w4h + ((w11l >>> 0) < (w4l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w12l >>> 1) | (w12h << 31)) ^ ((w12l >>> 8) | (w12h << 24)) ^ ((w12l >>> 7) | (w12h << 25)) )|0;
          w11l = ( w11l + xl)|0;
          w11h = ( w11h + ( ((w12h >>> 1) | (w12l << 31)) ^ ((w12h >>> 8) | (w12l << 24)) ^ (w12h >>> 7) ) + ((w11l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w9l >>> 19) | (w9h << 13)) ^ ((w9l << 3) | (w9h >>> 29)) ^ ((w9l >>> 6) | (w9h << 26)) )|0;
          w11l = ( w11l + xl)|0;
          w11h = ( w11h + ( ((w9h >>> 19) | (w9l << 13)) ^ ((w9h << 3) | (w9l >>> 29)) ^ (w9h >>> 6) ) + ((w11l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0x1a6439ec + w11l )|0;
          th = ( 0x8cc70208 + w11h + ((tl >>> 0) < (w11l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 60
          w12l = ( w12l + w5l )|0;
          w12h = ( w12h + w5h + ((w12l >>> 0) < (w5l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w13l >>> 1) | (w13h << 31)) ^ ((w13l >>> 8) | (w13h << 24)) ^ ((w13l >>> 7) | (w13h << 25)) )|0;
          w12l = ( w12l + xl)|0;
          w12h = ( w12h + ( ((w13h >>> 1) | (w13l << 31)) ^ ((w13h >>> 8) | (w13l << 24)) ^ (w13h >>> 7) ) + ((w12l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w10l >>> 19) | (w10h << 13)) ^ ((w10l << 3) | (w10h >>> 29)) ^ ((w10l >>> 6) | (w10h << 26)) )|0;
          w12l = ( w12l + xl)|0;
          w12h = ( w12h + ( ((w10h >>> 19) | (w10l << 13)) ^ ((w10h << 3) | (w10l >>> 29)) ^ (w10h >>> 6) ) + ((w12l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0x23631e28 + w12l )|0;
          th = ( 0x90befffa + w12h + ((tl >>> 0) < (w12l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 61
          w13l = ( w13l + w6l )|0;
          w13h = ( w13h + w6h + ((w13l >>> 0) < (w6l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w14l >>> 1) | (w14h << 31)) ^ ((w14l >>> 8) | (w14h << 24)) ^ ((w14l >>> 7) | (w14h << 25)) )|0;
          w13l = ( w13l + xl)|0;
          w13h = ( w13h + ( ((w14h >>> 1) | (w14l << 31)) ^ ((w14h >>> 8) | (w14l << 24)) ^ (w14h >>> 7) ) + ((w13l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w11l >>> 19) | (w11h << 13)) ^ ((w11l << 3) | (w11h >>> 29)) ^ ((w11l >>> 6) | (w11h << 26)) )|0;
          w13l = ( w13l + xl)|0;
          w13h = ( w13h + ( ((w11h >>> 19) | (w11l << 13)) ^ ((w11h << 3) | (w11l >>> 29)) ^ (w11h >>> 6) ) + ((w13l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0xde82bde9 + w13l )|0;
          th = ( 0xa4506ceb + w13h + ((tl >>> 0) < (w13l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 62
          w14l = ( w14l + w7l )|0;
          w14h = ( w14h + w7h + ((w14l >>> 0) < (w7l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w15l >>> 1) | (w15h << 31)) ^ ((w15l >>> 8) | (w15h << 24)) ^ ((w15l >>> 7) | (w15h << 25)) )|0;
          w14l = ( w14l + xl)|0;
          w14h = ( w14h + ( ((w15h >>> 1) | (w15l << 31)) ^ ((w15h >>> 8) | (w15l << 24)) ^ (w15h >>> 7) ) + ((w14l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w12l >>> 19) | (w12h << 13)) ^ ((w12l << 3) | (w12h >>> 29)) ^ ((w12l >>> 6) | (w12h << 26)) )|0;
          w14l = ( w14l + xl)|0;
          w14h = ( w14h + ( ((w12h >>> 19) | (w12l << 13)) ^ ((w12h << 3) | (w12l >>> 29)) ^ (w12h >>> 6) ) + ((w14l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0xb2c67915 + w14l )|0;
          th = ( 0xbef9a3f7 + w14h + ((tl >>> 0) < (w14l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 63
          w15l = ( w15l + w8l )|0;
          w15h = ( w15h + w8h + ((w15l >>> 0) < (w8l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w0l >>> 1) | (w0h << 31)) ^ ((w0l >>> 8) | (w0h << 24)) ^ ((w0l >>> 7) | (w0h << 25)) )|0;
          w15l = ( w15l + xl)|0;
          w15h = ( w15h + ( ((w0h >>> 1) | (w0l << 31)) ^ ((w0h >>> 8) | (w0l << 24)) ^ (w0h >>> 7) ) + ((w15l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w13l >>> 19) | (w13h << 13)) ^ ((w13l << 3) | (w13h >>> 29)) ^ ((w13l >>> 6) | (w13h << 26)) )|0;
          w15l = ( w15l + xl)|0;
          w15h = ( w15h + ( ((w13h >>> 19) | (w13l << 13)) ^ ((w13h << 3) | (w13l >>> 29)) ^ (w13h >>> 6) ) + ((w15l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0xe372532b + w15l )|0;
          th = ( 0xc67178f2 + w15h + ((tl >>> 0) < (w15l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 64
          w0l = ( w0l + w9l )|0;
          w0h = ( w0h + w9h + ((w0l >>> 0) < (w9l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w1l >>> 1) | (w1h << 31)) ^ ((w1l >>> 8) | (w1h << 24)) ^ ((w1l >>> 7) | (w1h << 25)) )|0;
          w0l = ( w0l + xl)|0;
          w0h = ( w0h + ( ((w1h >>> 1) | (w1l << 31)) ^ ((w1h >>> 8) | (w1l << 24)) ^ (w1h >>> 7) ) + ((w0l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w14l >>> 19) | (w14h << 13)) ^ ((w14l << 3) | (w14h >>> 29)) ^ ((w14l >>> 6) | (w14h << 26)) )|0;
          w0l = ( w0l + xl)|0;
          w0h = ( w0h + ( ((w14h >>> 19) | (w14l << 13)) ^ ((w14h << 3) | (w14l >>> 29)) ^ (w14h >>> 6) ) + ((w0l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0xea26619c + w0l )|0;
          th = ( 0xca273ece + w0h + ((tl >>> 0) < (w0l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 65
          w1l = ( w1l + w10l )|0;
          w1h = ( w1h + w10h + ((w1l >>> 0) < (w10l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w2l >>> 1) | (w2h << 31)) ^ ((w2l >>> 8) | (w2h << 24)) ^ ((w2l >>> 7) | (w2h << 25)) )|0;
          w1l = ( w1l + xl)|0;
          w1h = ( w1h + ( ((w2h >>> 1) | (w2l << 31)) ^ ((w2h >>> 8) | (w2l << 24)) ^ (w2h >>> 7) ) + ((w1l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w15l >>> 19) | (w15h << 13)) ^ ((w15l << 3) | (w15h >>> 29)) ^ ((w15l >>> 6) | (w15h << 26)) )|0;
          w1l = ( w1l + xl)|0;
          w1h = ( w1h + ( ((w15h >>> 19) | (w15l << 13)) ^ ((w15h << 3) | (w15l >>> 29)) ^ (w15h >>> 6) ) + ((w1l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0x21c0c207 + w1l )|0;
          th = ( 0xd186b8c7 + w1h + ((tl >>> 0) < (w1l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 66
          w2l = ( w2l + w11l )|0;
          w2h = ( w2h + w11h + ((w2l >>> 0) < (w11l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w3l >>> 1) | (w3h << 31)) ^ ((w3l >>> 8) | (w3h << 24)) ^ ((w3l >>> 7) | (w3h << 25)) )|0;
          w2l = ( w2l + xl)|0;
          w2h = ( w2h + ( ((w3h >>> 1) | (w3l << 31)) ^ ((w3h >>> 8) | (w3l << 24)) ^ (w3h >>> 7) ) + ((w2l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w0l >>> 19) | (w0h << 13)) ^ ((w0l << 3) | (w0h >>> 29)) ^ ((w0l >>> 6) | (w0h << 26)) )|0;
          w2l = ( w2l + xl)|0;
          w2h = ( w2h + ( ((w0h >>> 19) | (w0l << 13)) ^ ((w0h << 3) | (w0l >>> 29)) ^ (w0h >>> 6) ) + ((w2l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0xcde0eb1e + w2l )|0;
          th = ( 0xeada7dd6 + w2h + ((tl >>> 0) < (w2l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 67
          w3l = ( w3l + w12l )|0;
          w3h = ( w3h + w12h + ((w3l >>> 0) < (w12l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w4l >>> 1) | (w4h << 31)) ^ ((w4l >>> 8) | (w4h << 24)) ^ ((w4l >>> 7) | (w4h << 25)) )|0;
          w3l = ( w3l + xl)|0;
          w3h = ( w3h + ( ((w4h >>> 1) | (w4l << 31)) ^ ((w4h >>> 8) | (w4l << 24)) ^ (w4h >>> 7) ) + ((w3l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w1l >>> 19) | (w1h << 13)) ^ ((w1l << 3) | (w1h >>> 29)) ^ ((w1l >>> 6) | (w1h << 26)) )|0;
          w3l = ( w3l + xl)|0;
          w3h = ( w3h + ( ((w1h >>> 19) | (w1l << 13)) ^ ((w1h << 3) | (w1l >>> 29)) ^ (w1h >>> 6) ) + ((w3l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0xee6ed178 + w3l )|0;
          th = ( 0xf57d4f7f + w3h + ((tl >>> 0) < (w3l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 68
          w4l = ( w4l + w13l )|0;
          w4h = ( w4h + w13h + ((w4l >>> 0) < (w13l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w5l >>> 1) | (w5h << 31)) ^ ((w5l >>> 8) | (w5h << 24)) ^ ((w5l >>> 7) | (w5h << 25)) )|0;
          w4l = ( w4l + xl)|0;
          w4h = ( w4h + ( ((w5h >>> 1) | (w5l << 31)) ^ ((w5h >>> 8) | (w5l << 24)) ^ (w5h >>> 7) ) + ((w4l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w2l >>> 19) | (w2h << 13)) ^ ((w2l << 3) | (w2h >>> 29)) ^ ((w2l >>> 6) | (w2h << 26)) )|0;
          w4l = ( w4l + xl)|0;
          w4h = ( w4h + ( ((w2h >>> 19) | (w2l << 13)) ^ ((w2h << 3) | (w2l >>> 29)) ^ (w2h >>> 6) ) + ((w4l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0x72176fba + w4l )|0;
          th = ( 0x6f067aa + w4h + ((tl >>> 0) < (w4l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 69
          w5l = ( w5l + w14l )|0;
          w5h = ( w5h + w14h + ((w5l >>> 0) < (w14l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w6l >>> 1) | (w6h << 31)) ^ ((w6l >>> 8) | (w6h << 24)) ^ ((w6l >>> 7) | (w6h << 25)) )|0;
          w5l = ( w5l + xl)|0;
          w5h = ( w5h + ( ((w6h >>> 1) | (w6l << 31)) ^ ((w6h >>> 8) | (w6l << 24)) ^ (w6h >>> 7) ) + ((w5l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w3l >>> 19) | (w3h << 13)) ^ ((w3l << 3) | (w3h >>> 29)) ^ ((w3l >>> 6) | (w3h << 26)) )|0;
          w5l = ( w5l + xl)|0;
          w5h = ( w5h + ( ((w3h >>> 19) | (w3l << 13)) ^ ((w3h << 3) | (w3l >>> 29)) ^ (w3h >>> 6) ) + ((w5l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0xa2c898a6 + w5l )|0;
          th = ( 0xa637dc5 + w5h + ((tl >>> 0) < (w5l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 70
          w6l = ( w6l + w15l )|0;
          w6h = ( w6h + w15h + ((w6l >>> 0) < (w15l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w7l >>> 1) | (w7h << 31)) ^ ((w7l >>> 8) | (w7h << 24)) ^ ((w7l >>> 7) | (w7h << 25)) )|0;
          w6l = ( w6l + xl)|0;
          w6h = ( w6h + ( ((w7h >>> 1) | (w7l << 31)) ^ ((w7h >>> 8) | (w7l << 24)) ^ (w7h >>> 7) ) + ((w6l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w4l >>> 19) | (w4h << 13)) ^ ((w4l << 3) | (w4h >>> 29)) ^ ((w4l >>> 6) | (w4h << 26)) )|0;
          w6l = ( w6l + xl)|0;
          w6h = ( w6h + ( ((w4h >>> 19) | (w4l << 13)) ^ ((w4h << 3) | (w4l >>> 29)) ^ (w4h >>> 6) ) + ((w6l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0xbef90dae + w6l )|0;
          th = ( 0x113f9804 + w6h + ((tl >>> 0) < (w6l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 71
          w7l = ( w7l + w0l )|0;
          w7h = ( w7h + w0h + ((w7l >>> 0) < (w0l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w8l >>> 1) | (w8h << 31)) ^ ((w8l >>> 8) | (w8h << 24)) ^ ((w8l >>> 7) | (w8h << 25)) )|0;
          w7l = ( w7l + xl)|0;
          w7h = ( w7h + ( ((w8h >>> 1) | (w8l << 31)) ^ ((w8h >>> 8) | (w8l << 24)) ^ (w8h >>> 7) ) + ((w7l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w5l >>> 19) | (w5h << 13)) ^ ((w5l << 3) | (w5h >>> 29)) ^ ((w5l >>> 6) | (w5h << 26)) )|0;
          w7l = ( w7l + xl)|0;
          w7h = ( w7h + ( ((w5h >>> 19) | (w5l << 13)) ^ ((w5h << 3) | (w5l >>> 29)) ^ (w5h >>> 6) ) + ((w7l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0x131c471b + w7l )|0;
          th = ( 0x1b710b35 + w7h + ((tl >>> 0) < (w7l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 72
          w8l = ( w8l + w1l )|0;
          w8h = ( w8h + w1h + ((w8l >>> 0) < (w1l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w9l >>> 1) | (w9h << 31)) ^ ((w9l >>> 8) | (w9h << 24)) ^ ((w9l >>> 7) | (w9h << 25)) )|0;
          w8l = ( w8l + xl)|0;
          w8h = ( w8h + ( ((w9h >>> 1) | (w9l << 31)) ^ ((w9h >>> 8) | (w9l << 24)) ^ (w9h >>> 7) ) + ((w8l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w6l >>> 19) | (w6h << 13)) ^ ((w6l << 3) | (w6h >>> 29)) ^ ((w6l >>> 6) | (w6h << 26)) )|0;
          w8l = ( w8l + xl)|0;
          w8h = ( w8h + ( ((w6h >>> 19) | (w6l << 13)) ^ ((w6h << 3) | (w6l >>> 29)) ^ (w6h >>> 6) ) + ((w8l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0x23047d84 + w8l )|0;
          th = ( 0x28db77f5 + w8h + ((tl >>> 0) < (w8l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 73
          w9l = ( w9l + w2l )|0;
          w9h = ( w9h + w2h + ((w9l >>> 0) < (w2l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w10l >>> 1) | (w10h << 31)) ^ ((w10l >>> 8) | (w10h << 24)) ^ ((w10l >>> 7) | (w10h << 25)) )|0;
          w9l = ( w9l + xl)|0;
          w9h = ( w9h + ( ((w10h >>> 1) | (w10l << 31)) ^ ((w10h >>> 8) | (w10l << 24)) ^ (w10h >>> 7) ) + ((w9l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w7l >>> 19) | (w7h << 13)) ^ ((w7l << 3) | (w7h >>> 29)) ^ ((w7l >>> 6) | (w7h << 26)) )|0;
          w9l = ( w9l + xl)|0;
          w9h = ( w9h + ( ((w7h >>> 19) | (w7l << 13)) ^ ((w7h << 3) | (w7l >>> 29)) ^ (w7h >>> 6) ) + ((w9l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0x40c72493 + w9l )|0;
          th = ( 0x32caab7b + w9h + ((tl >>> 0) < (w9l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 74
          w10l = ( w10l + w3l )|0;
          w10h = ( w10h + w3h + ((w10l >>> 0) < (w3l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w11l >>> 1) | (w11h << 31)) ^ ((w11l >>> 8) | (w11h << 24)) ^ ((w11l >>> 7) | (w11h << 25)) )|0;
          w10l = ( w10l + xl)|0;
          w10h = ( w10h + ( ((w11h >>> 1) | (w11l << 31)) ^ ((w11h >>> 8) | (w11l << 24)) ^ (w11h >>> 7) ) + ((w10l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w8l >>> 19) | (w8h << 13)) ^ ((w8l << 3) | (w8h >>> 29)) ^ ((w8l >>> 6) | (w8h << 26)) )|0;
          w10l = ( w10l + xl)|0;
          w10h = ( w10h + ( ((w8h >>> 19) | (w8l << 13)) ^ ((w8h << 3) | (w8l >>> 29)) ^ (w8h >>> 6) ) + ((w10l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0x15c9bebc + w10l )|0;
          th = ( 0x3c9ebe0a + w10h + ((tl >>> 0) < (w10l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 75
          w11l = ( w11l + w4l )|0;
          w11h = ( w11h + w4h + ((w11l >>> 0) < (w4l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w12l >>> 1) | (w12h << 31)) ^ ((w12l >>> 8) | (w12h << 24)) ^ ((w12l >>> 7) | (w12h << 25)) )|0;
          w11l = ( w11l + xl)|0;
          w11h = ( w11h + ( ((w12h >>> 1) | (w12l << 31)) ^ ((w12h >>> 8) | (w12l << 24)) ^ (w12h >>> 7) ) + ((w11l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w9l >>> 19) | (w9h << 13)) ^ ((w9l << 3) | (w9h >>> 29)) ^ ((w9l >>> 6) | (w9h << 26)) )|0;
          w11l = ( w11l + xl)|0;
          w11h = ( w11h + ( ((w9h >>> 19) | (w9l << 13)) ^ ((w9h << 3) | (w9l >>> 29)) ^ (w9h >>> 6) ) + ((w11l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0x9c100d4c + w11l )|0;
          th = ( 0x431d67c4 + w11h + ((tl >>> 0) < (w11l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 76
          w12l = ( w12l + w5l )|0;
          w12h = ( w12h + w5h + ((w12l >>> 0) < (w5l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w13l >>> 1) | (w13h << 31)) ^ ((w13l >>> 8) | (w13h << 24)) ^ ((w13l >>> 7) | (w13h << 25)) )|0;
          w12l = ( w12l + xl)|0;
          w12h = ( w12h + ( ((w13h >>> 1) | (w13l << 31)) ^ ((w13h >>> 8) | (w13l << 24)) ^ (w13h >>> 7) ) + ((w12l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w10l >>> 19) | (w10h << 13)) ^ ((w10l << 3) | (w10h >>> 29)) ^ ((w10l >>> 6) | (w10h << 26)) )|0;
          w12l = ( w12l + xl)|0;
          w12h = ( w12h + ( ((w10h >>> 19) | (w10l << 13)) ^ ((w10h << 3) | (w10l >>> 29)) ^ (w10h >>> 6) ) + ((w12l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0xcb3e42b6 + w12l )|0;
          th = ( 0x4cc5d4be + w12h + ((tl >>> 0) < (w12l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 77
          w13l = ( w13l + w6l )|0;
          w13h = ( w13h + w6h + ((w13l >>> 0) < (w6l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w14l >>> 1) | (w14h << 31)) ^ ((w14l >>> 8) | (w14h << 24)) ^ ((w14l >>> 7) | (w14h << 25)) )|0;
          w13l = ( w13l + xl)|0;
          w13h = ( w13h + ( ((w14h >>> 1) | (w14l << 31)) ^ ((w14h >>> 8) | (w14l << 24)) ^ (w14h >>> 7) ) + ((w13l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w11l >>> 19) | (w11h << 13)) ^ ((w11l << 3) | (w11h >>> 29)) ^ ((w11l >>> 6) | (w11h << 26)) )|0;
          w13l = ( w13l + xl)|0;
          w13h = ( w13h + ( ((w11h >>> 19) | (w11l << 13)) ^ ((w11h << 3) | (w11l >>> 29)) ^ (w11h >>> 6) ) + ((w13l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0xfc657e2a + w13l )|0;
          th = ( 0x597f299c + w13h + ((tl >>> 0) < (w13l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 78
          w14l = ( w14l + w7l )|0;
          w14h = ( w14h + w7h + ((w14l >>> 0) < (w7l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w15l >>> 1) | (w15h << 31)) ^ ((w15l >>> 8) | (w15h << 24)) ^ ((w15l >>> 7) | (w15h << 25)) )|0;
          w14l = ( w14l + xl)|0;
          w14h = ( w14h + ( ((w15h >>> 1) | (w15l << 31)) ^ ((w15h >>> 8) | (w15l << 24)) ^ (w15h >>> 7) ) + ((w14l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w12l >>> 19) | (w12h << 13)) ^ ((w12l << 3) | (w12h >>> 29)) ^ ((w12l >>> 6) | (w12h << 26)) )|0;
          w14l = ( w14l + xl)|0;
          w14h = ( w14h + ( ((w12h >>> 19) | (w12l << 13)) ^ ((w12h << 3) | (w12l >>> 29)) ^ (w12h >>> 6) ) + ((w14l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0x3ad6faec + w14l )|0;
          th = ( 0x5fcb6fab + w14h + ((tl >>> 0) < (w14l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          // 79
          w15l = ( w15l + w8l )|0;
          w15h = ( w15h + w8h + ((w15l >>> 0) < (w8l >>> 0) ? 1 : 0) )|0;
          xl = ( ((w0l >>> 1) | (w0h << 31)) ^ ((w0l >>> 8) | (w0h << 24)) ^ ((w0l >>> 7) | (w0h << 25)) )|0;
          w15l = ( w15l + xl)|0;
          w15h = ( w15h + ( ((w0h >>> 1) | (w0l << 31)) ^ ((w0h >>> 8) | (w0l << 24)) ^ (w0h >>> 7) ) + ((w15l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ((w13l >>> 19) | (w13h << 13)) ^ ((w13l << 3) | (w13h >>> 29)) ^ ((w13l >>> 6) | (w13h << 26)) )|0;
          w15l = ( w15l + xl)|0;
          w15h = ( w15h + ( ((w13h >>> 19) | (w13l << 13)) ^ ((w13h << 3) | (w13l >>> 29)) ^ (w13h >>> 6) ) + ((w15l >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          tl = ( 0x4a475817 + w15l )|0;
          th = ( 0x6c44198c + w15h + ((tl >>> 0) < (w15l >>> 0) ? 1 : 0) )|0;
          tl = ( tl + hl )|0;
          th = ( th + hh + ((tl >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
          xl = ( ((el >>> 14) | (eh << 18)) ^ ((el >>> 18) | (eh << 14)) ^ ((el << 23) | (eh >>> 9)) )|0;
          tl = ( tl + xl )|0;
          th = ( th + (((eh >>> 14) | (el << 18)) ^ ((eh >>> 18) | (el << 14)) ^ ((eh << 23) | (el >>> 9))) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          xl = ( ( gl ^ el & (fl^gl) ) )|0;
          tl = ( tl + xl )|0;
          th = ( th + ( gh ^ eh & (fh^gh) ) + ((tl >>> 0) < (xl >>> 0) ? 1 : 0) )|0;
          hl = gl; hh = gh;
          gl = fl; gh = fh;
          fl = el; fh = eh;
          el = ( dl + tl )|0; eh = ( dh + th + ((el >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          dl = cl; dh = ch;
          cl = bl; ch = bh;
          bl = al; bh = ah;
          al = ( tl + ( (bl & cl) ^ ( dl & (bl ^ cl) ) ) )|0;
          ah = ( th + ( (bh & ch) ^ ( dh & (bh ^ ch) ) ) + ((al >>> 0) < (tl >>> 0) ? 1 : 0) )|0;
          xl = ( ((bl >>> 28) | (bh << 4)) ^ ((bl << 30) | (bh >>> 2)) ^ ((bl << 25) | (bh >>> 7)) )|0;
          al = ( al + xl )|0;
          ah = ( ah + (((bh >>> 28) | (bl << 4)) ^ ((bh << 30) | (bl >>> 2)) ^ ((bh << 25) | (bl >>> 7))) + ((al >>> 0) < (xl >>> 0) ? 1 : 0) )|0;

          H0l = ( H0l + al )|0;
          H0h = ( H0h + ah + ((H0l >>> 0) < (al >>> 0) ? 1 : 0) )|0;
          H1l = ( H1l + bl )|0;
          H1h = ( H1h + bh + ((H1l >>> 0) < (bl >>> 0) ? 1 : 0) )|0;
          H2l = ( H2l + cl )|0;
          H2h = ( H2h + ch + ((H2l >>> 0) < (cl >>> 0) ? 1 : 0) )|0;
          H3l = ( H3l + dl )|0;
          H3h = ( H3h + dh + ((H3l >>> 0) < (dl >>> 0) ? 1 : 0) )|0;
          H4l = ( H4l + el )|0;
          H4h = ( H4h + eh + ((H4l >>> 0) < (el >>> 0) ? 1 : 0) )|0;
          H5l = ( H5l + fl )|0;
          H5h = ( H5h + fh + ((H5l >>> 0) < (fl >>> 0) ? 1 : 0) )|0;
          H6l = ( H6l + gl )|0;
          H6h = ( H6h + gh + ((H6l >>> 0) < (gl >>> 0) ? 1 : 0) )|0;
          H7l = ( H7l + hl )|0;
          H7h = ( H7h + hh + ((H7l >>> 0) < (hl >>> 0) ? 1 : 0) )|0;
      }

      function _core_heap ( offset ) {
          offset = offset|0;

          _core(
              HEAP[offset|0]<<24 | HEAP[offset|1]<<16 | HEAP[offset|2]<<8 | HEAP[offset|3],
              HEAP[offset|4]<<24 | HEAP[offset|5]<<16 | HEAP[offset|6]<<8 | HEAP[offset|7],
              HEAP[offset|8]<<24 | HEAP[offset|9]<<16 | HEAP[offset|10]<<8 | HEAP[offset|11],
              HEAP[offset|12]<<24 | HEAP[offset|13]<<16 | HEAP[offset|14]<<8 | HEAP[offset|15],
              HEAP[offset|16]<<24 | HEAP[offset|17]<<16 | HEAP[offset|18]<<8 | HEAP[offset|19],
              HEAP[offset|20]<<24 | HEAP[offset|21]<<16 | HEAP[offset|22]<<8 | HEAP[offset|23],
              HEAP[offset|24]<<24 | HEAP[offset|25]<<16 | HEAP[offset|26]<<8 | HEAP[offset|27],
              HEAP[offset|28]<<24 | HEAP[offset|29]<<16 | HEAP[offset|30]<<8 | HEAP[offset|31],
              HEAP[offset|32]<<24 | HEAP[offset|33]<<16 | HEAP[offset|34]<<8 | HEAP[offset|35],
              HEAP[offset|36]<<24 | HEAP[offset|37]<<16 | HEAP[offset|38]<<8 | HEAP[offset|39],
              HEAP[offset|40]<<24 | HEAP[offset|41]<<16 | HEAP[offset|42]<<8 | HEAP[offset|43],
              HEAP[offset|44]<<24 | HEAP[offset|45]<<16 | HEAP[offset|46]<<8 | HEAP[offset|47],
              HEAP[offset|48]<<24 | HEAP[offset|49]<<16 | HEAP[offset|50]<<8 | HEAP[offset|51],
              HEAP[offset|52]<<24 | HEAP[offset|53]<<16 | HEAP[offset|54]<<8 | HEAP[offset|55],
              HEAP[offset|56]<<24 | HEAP[offset|57]<<16 | HEAP[offset|58]<<8 | HEAP[offset|59],
              HEAP[offset|60]<<24 | HEAP[offset|61]<<16 | HEAP[offset|62]<<8 | HEAP[offset|63],
              HEAP[offset|64]<<24 | HEAP[offset|65]<<16 | HEAP[offset|66]<<8 | HEAP[offset|67],
              HEAP[offset|68]<<24 | HEAP[offset|69]<<16 | HEAP[offset|70]<<8 | HEAP[offset|71],
              HEAP[offset|72]<<24 | HEAP[offset|73]<<16 | HEAP[offset|74]<<8 | HEAP[offset|75],
              HEAP[offset|76]<<24 | HEAP[offset|77]<<16 | HEAP[offset|78]<<8 | HEAP[offset|79],
              HEAP[offset|80]<<24 | HEAP[offset|81]<<16 | HEAP[offset|82]<<8 | HEAP[offset|83],
              HEAP[offset|84]<<24 | HEAP[offset|85]<<16 | HEAP[offset|86]<<8 | HEAP[offset|87],
              HEAP[offset|88]<<24 | HEAP[offset|89]<<16 | HEAP[offset|90]<<8 | HEAP[offset|91],
              HEAP[offset|92]<<24 | HEAP[offset|93]<<16 | HEAP[offset|94]<<8 | HEAP[offset|95],
              HEAP[offset|96]<<24 | HEAP[offset|97]<<16 | HEAP[offset|98]<<8 | HEAP[offset|99],
              HEAP[offset|100]<<24 | HEAP[offset|101]<<16 | HEAP[offset|102]<<8 | HEAP[offset|103],
              HEAP[offset|104]<<24 | HEAP[offset|105]<<16 | HEAP[offset|106]<<8 | HEAP[offset|107],
              HEAP[offset|108]<<24 | HEAP[offset|109]<<16 | HEAP[offset|110]<<8 | HEAP[offset|111],
              HEAP[offset|112]<<24 | HEAP[offset|113]<<16 | HEAP[offset|114]<<8 | HEAP[offset|115],
              HEAP[offset|116]<<24 | HEAP[offset|117]<<16 | HEAP[offset|118]<<8 | HEAP[offset|119],
              HEAP[offset|120]<<24 | HEAP[offset|121]<<16 | HEAP[offset|122]<<8 | HEAP[offset|123],
              HEAP[offset|124]<<24 | HEAP[offset|125]<<16 | HEAP[offset|126]<<8 | HEAP[offset|127]
          );
      }

      // offset — multiple of 32
      function _state_to_heap ( output ) {
          output = output|0;

          HEAP[output|0] = H0h>>>24;
          HEAP[output|1] = H0h>>>16&255;
          HEAP[output|2] = H0h>>>8&255;
          HEAP[output|3] = H0h&255;
          HEAP[output|4] = H0l>>>24;
          HEAP[output|5] = H0l>>>16&255;
          HEAP[output|6] = H0l>>>8&255;
          HEAP[output|7] = H0l&255;
          HEAP[output|8] = H1h>>>24;
          HEAP[output|9] = H1h>>>16&255;
          HEAP[output|10] = H1h>>>8&255;
          HEAP[output|11] = H1h&255;
          HEAP[output|12] = H1l>>>24;
          HEAP[output|13] = H1l>>>16&255;
          HEAP[output|14] = H1l>>>8&255;
          HEAP[output|15] = H1l&255;
          HEAP[output|16] = H2h>>>24;
          HEAP[output|17] = H2h>>>16&255;
          HEAP[output|18] = H2h>>>8&255;
          HEAP[output|19] = H2h&255;
          HEAP[output|20] = H2l>>>24;
          HEAP[output|21] = H2l>>>16&255;
          HEAP[output|22] = H2l>>>8&255;
          HEAP[output|23] = H2l&255;
          HEAP[output|24] = H3h>>>24;
          HEAP[output|25] = H3h>>>16&255;
          HEAP[output|26] = H3h>>>8&255;
          HEAP[output|27] = H3h&255;
          HEAP[output|28] = H3l>>>24;
          HEAP[output|29] = H3l>>>16&255;
          HEAP[output|30] = H3l>>>8&255;
          HEAP[output|31] = H3l&255;
          HEAP[output|32] = H4h>>>24;
          HEAP[output|33] = H4h>>>16&255;
          HEAP[output|34] = H4h>>>8&255;
          HEAP[output|35] = H4h&255;
          HEAP[output|36] = H4l>>>24;
          HEAP[output|37] = H4l>>>16&255;
          HEAP[output|38] = H4l>>>8&255;
          HEAP[output|39] = H4l&255;
          HEAP[output|40] = H5h>>>24;
          HEAP[output|41] = H5h>>>16&255;
          HEAP[output|42] = H5h>>>8&255;
          HEAP[output|43] = H5h&255;
          HEAP[output|44] = H5l>>>24;
          HEAP[output|45] = H5l>>>16&255;
          HEAP[output|46] = H5l>>>8&255;
          HEAP[output|47] = H5l&255;
          HEAP[output|48] = H6h>>>24;
          HEAP[output|49] = H6h>>>16&255;
          HEAP[output|50] = H6h>>>8&255;
          HEAP[output|51] = H6h&255;
          HEAP[output|52] = H6l>>>24;
          HEAP[output|53] = H6l>>>16&255;
          HEAP[output|54] = H6l>>>8&255;
          HEAP[output|55] = H6l&255;
          HEAP[output|56] = H7h>>>24;
          HEAP[output|57] = H7h>>>16&255;
          HEAP[output|58] = H7h>>>8&255;
          HEAP[output|59] = H7h&255;
          HEAP[output|60] = H7l>>>24;
          HEAP[output|61] = H7l>>>16&255;
          HEAP[output|62] = H7l>>>8&255;
          HEAP[output|63] = H7l&255;
      }

      function reset () {
          H0h = 0x6a09e667;
          H0l = 0xf3bcc908;
          H1h = 0xbb67ae85;
          H1l = 0x84caa73b;
          H2h = 0x3c6ef372;
          H2l = 0xfe94f82b;
          H3h = 0xa54ff53a;
          H3l = 0x5f1d36f1;
          H4h = 0x510e527f;
          H4l = 0xade682d1;
          H5h = 0x9b05688c;
          H5l = 0x2b3e6c1f;
          H6h = 0x1f83d9ab;
          H6l = 0xfb41bd6b;
          H7h = 0x5be0cd19;
          H7l = 0x137e2179;

          TOTAL0 = TOTAL1 = 0;
      }

      function init ( h0h, h0l, h1h, h1l, h2h, h2l, h3h, h3l, h4h, h4l, h5h, h5l, h6h, h6l, h7h, h7l, total0, total1 ) {
          h0h = h0h|0;
          h0l = h0l|0;
          h1h = h1h|0;
          h1l = h1l|0;
          h2h = h2h|0;
          h2l = h2l|0;
          h3h = h3h|0;
          h3l = h3l|0;
          h4h = h4h|0;
          h4l = h4l|0;
          h5h = h5h|0;
          h5l = h5l|0;
          h6h = h6h|0;
          h6l = h6l|0;
          h7h = h7h|0;
          h7l = h7l|0;
          total0 = total0|0;
          total1 = total1|0;

          H0h = h0h;
          H0l = h0l;
          H1h = h1h;
          H1l = h1l;
          H2h = h2h;
          H2l = h2l;
          H3h = h3h;
          H3l = h3l;
          H4h = h4h;
          H4l = h4l;
          H5h = h5h;
          H5l = h5l;
          H6h = h6h;
          H6l = h6l;
          H7h = h7h;
          H7l = h7l;
          TOTAL0 = total0;
          TOTAL1 = total1;
      }

      // offset — multiple of 128
      function process ( offset, length ) {
          offset = offset|0;
          length = length|0;

          var hashed = 0;

          if ( offset & 127 )
              return -1;

          while ( (length|0) >= 128 ) {
              _core_heap(offset);

              offset = ( offset + 128 )|0;
              length = ( length - 128 )|0;

              hashed = ( hashed + 128 )|0;
          }

          TOTAL0 = ( TOTAL0 + hashed )|0;
          if ( TOTAL0>>>0 < hashed>>>0 ) TOTAL1 = ( TOTAL1 + 1 )|0;

          return hashed|0;
      }

      // offset — multiple of 128
      // output — multiple of 64
      function finish ( offset, length, output ) {
          offset = offset|0;
          length = length|0;
          output = output|0;

          var hashed = 0,
              i = 0;

          if ( offset & 127 )
              return -1;

          if ( ~output )
              if ( output & 63 )
                  return -1;

          if ( (length|0) >= 128 ) {
              hashed = process( offset, length )|0;
              if ( (hashed|0) == -1 )
                  return -1;

              offset = ( offset + hashed )|0;
              length = ( length - hashed )|0;
          }

          hashed = ( hashed + length )|0;
          TOTAL0 = ( TOTAL0 + length )|0;
          if ( TOTAL0>>>0 < length>>>0 ) TOTAL1 = ( TOTAL1 + 1 )|0;

          HEAP[offset|length] = 0x80;

          if ( (length|0) >= 112 ) {
              for ( i = (length+1)|0; (i|0) < 128; i = (i+1)|0 )
                  HEAP[offset|i] = 0x00;

              _core_heap(offset);

              length = 0;

              HEAP[offset|0] = 0;
          }

          for ( i = (length+1)|0; (i|0) < 123; i = (i+1)|0 )
              HEAP[offset|i] = 0;

          HEAP[offset|120] = TOTAL1>>>21&255;
          HEAP[offset|121] = TOTAL1>>>13&255;
          HEAP[offset|122] = TOTAL1>>>5&255;
          HEAP[offset|123] = TOTAL1<<3&255 | TOTAL0>>>29;
          HEAP[offset|124] = TOTAL0>>>21&255;
          HEAP[offset|125] = TOTAL0>>>13&255;
          HEAP[offset|126] = TOTAL0>>>5&255;
          HEAP[offset|127] = TOTAL0<<3&255;
          _core_heap(offset);

          if ( ~output )
              _state_to_heap(output);

          return hashed|0;
      }

      function hmac_reset () {
          H0h = I0h;
          H0l = I0l;
          H1h = I1h;
          H1l = I1l;
          H2h = I2h;
          H2l = I2l;
          H3h = I3h;
          H3l = I3l;
          H4h = I4h;
          H4l = I4l;
          H5h = I5h;
          H5l = I5l;
          H6h = I6h;
          H6l = I6l;
          H7h = I7h;
          H7l = I7l;
          TOTAL0 = 128;
          TOTAL1 = 0;
      }

      function _hmac_opad () {
          H0h = O0h;
          H0l = O0l;
          H1h = O1h;
          H1l = O1l;
          H2h = O2h;
          H2l = O2l;
          H3h = O3h;
          H3l = O3l;
          H4h = O4h;
          H4l = O4l;
          H5h = O5h;
          H5l = O5l;
          H6h = O6h;
          H6l = O6l;
          H7h = O7h;
          H7l = O7l;
          TOTAL0 = 128;
          TOTAL1 = 0;
      }

      function hmac_init ( p0h, p0l, p1h, p1l, p2h, p2l, p3h, p3l, p4h, p4l, p5h, p5l, p6h, p6l, p7h, p7l, p8h, p8l, p9h, p9l, p10h, p10l, p11h, p11l, p12h, p12l, p13h, p13l, p14h, p14l, p15h, p15l ) {
          p0h = p0h|0;
          p0l = p0l|0;
          p1h = p1h|0;
          p1l = p1l|0;
          p2h = p2h|0;
          p2l = p2l|0;
          p3h = p3h|0;
          p3l = p3l|0;
          p4h = p4h|0;
          p4l = p4l|0;
          p5h = p5h|0;
          p5l = p5l|0;
          p6h = p6h|0;
          p6l = p6l|0;
          p7h = p7h|0;
          p7l = p7l|0;
          p8h = p8h|0;
          p8l = p8l|0;
          p9h = p9h|0;
          p9l = p9l|0;
          p10h = p10h|0;
          p10l = p10l|0;
          p11h = p11h|0;
          p11l = p11l|0;
          p12h = p12h|0;
          p12l = p12l|0;
          p13h = p13h|0;
          p13l = p13l|0;
          p14h = p14h|0;
          p14l = p14l|0;
          p15h = p15h|0;
          p15l = p15l|0;

          // opad
          reset();
          _core(
              p0h ^ 0x5c5c5c5c,
              p0l ^ 0x5c5c5c5c,
              p1h ^ 0x5c5c5c5c,
              p1l ^ 0x5c5c5c5c,
              p2h ^ 0x5c5c5c5c,
              p2l ^ 0x5c5c5c5c,
              p3h ^ 0x5c5c5c5c,
              p3l ^ 0x5c5c5c5c,
              p4h ^ 0x5c5c5c5c,
              p4l ^ 0x5c5c5c5c,
              p5h ^ 0x5c5c5c5c,
              p5l ^ 0x5c5c5c5c,
              p6h ^ 0x5c5c5c5c,
              p6l ^ 0x5c5c5c5c,
              p7h ^ 0x5c5c5c5c,
              p7l ^ 0x5c5c5c5c,
              p8h ^ 0x5c5c5c5c,
              p8l ^ 0x5c5c5c5c,
              p9h ^ 0x5c5c5c5c,
              p9l ^ 0x5c5c5c5c,
              p10h ^ 0x5c5c5c5c,
              p10l ^ 0x5c5c5c5c,
              p11h ^ 0x5c5c5c5c,
              p11l ^ 0x5c5c5c5c,
              p12h ^ 0x5c5c5c5c,
              p12l ^ 0x5c5c5c5c,
              p13h ^ 0x5c5c5c5c,
              p13l ^ 0x5c5c5c5c,
              p14h ^ 0x5c5c5c5c,
              p14l ^ 0x5c5c5c5c,
              p15h ^ 0x5c5c5c5c,
              p15l ^ 0x5c5c5c5c
          );
          O0h = H0h;
          O0l = H0l;
          O1h = H1h;
          O1l = H1l;
          O2h = H2h;
          O2l = H2l;
          O3h = H3h;
          O3l = H3l;
          O4h = H4h;
          O4l = H4l;
          O5h = H5h;
          O5l = H5l;
          O6h = H6h;
          O6l = H6l;
          O7h = H7h;
          O7l = H7l;

          // ipad
          reset();
          _core(
             p0h ^ 0x36363636,
             p0l ^ 0x36363636,
             p1h ^ 0x36363636,
             p1l ^ 0x36363636,
             p2h ^ 0x36363636,
             p2l ^ 0x36363636,
             p3h ^ 0x36363636,
             p3l ^ 0x36363636,
             p4h ^ 0x36363636,
             p4l ^ 0x36363636,
             p5h ^ 0x36363636,
             p5l ^ 0x36363636,
             p6h ^ 0x36363636,
             p6l ^ 0x36363636,
             p7h ^ 0x36363636,
             p7l ^ 0x36363636,
             p8h ^ 0x36363636,
             p8l ^ 0x36363636,
             p9h ^ 0x36363636,
             p9l ^ 0x36363636,
             p10h ^ 0x36363636,
             p10l ^ 0x36363636,
             p11h ^ 0x36363636,
             p11l ^ 0x36363636,
             p12h ^ 0x36363636,
             p12l ^ 0x36363636,
             p13h ^ 0x36363636,
             p13l ^ 0x36363636,
             p14h ^ 0x36363636,
             p14l ^ 0x36363636,
             p15h ^ 0x36363636,
             p15l ^ 0x36363636
          );
          I0h = H0h;
          I0l = H0l;
          I1h = H1h;
          I1l = H1l;
          I2h = H2h;
          I2l = H2l;
          I3h = H3h;
          I3l = H3l;
          I4h = H4h;
          I4l = H4l;
          I5h = H5h;
          I5l = H5l;
          I6h = H6h;
          I6l = H6l;
          I7h = H7h;
          I7l = H7l;

          TOTAL0 = 128;
          TOTAL1 = 0;
      }

      // offset — multiple of 128
      // output — multiple of 64
      function hmac_finish ( offset, length, output ) {
          offset = offset|0;
          length = length|0;
          output = output|0;

          var t0h = 0, t0l = 0, t1h = 0, t1l = 0, t2h = 0, t2l = 0, t3h = 0, t3l = 0,
              t4h = 0, t4l = 0, t5h = 0, t5l = 0, t6h = 0, t6l = 0, t7h = 0, t7l = 0,
              hashed = 0;

          if ( offset & 127 )
              return -1;

          if ( ~output )
              if ( output & 63 )
                  return -1;

          hashed = finish( offset, length, -1 )|0;
          t0h = H0h;
          t0l = H0l;
          t1h = H1h;
          t1l = H1l;
          t2h = H2h;
          t2l = H2l;
          t3h = H3h;
          t3l = H3l;
          t4h = H4h;
          t4l = H4l;
          t5h = H5h;
          t5l = H5l;
          t6h = H6h;
          t6l = H6l;
          t7h = H7h;
          t7l = H7l;

          _hmac_opad();
          _core( t0h, t0l, t1h, t1l, t2h, t2l, t3h, t3l, t4h, t4l, t5h, t5l, t6h, t6l, t7h, t7l, 0x80000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1536 );

          if ( ~output )
              _state_to_heap(output);

          return hashed|0;
      }

      // salt is assumed to be already processed
      // offset — multiple of 128
      // output — multiple of 64
      function pbkdf2_generate_block ( offset, length, block, count, output ) {
          offset = offset|0;
          length = length|0;
          block = block|0;
          count = count|0;
          output = output|0;

          var h0h = 0, h0l = 0, h1h = 0, h1l = 0, h2h = 0, h2l = 0, h3h = 0, h3l = 0,
              h4h = 0, h4l = 0, h5h = 0, h5l = 0, h6h = 0, h6l = 0, h7h = 0, h7l = 0,
              t0h = 0, t0l = 0, t1h = 0, t1l = 0, t2h = 0, t2l = 0, t3h = 0, t3l = 0,
              t4h = 0, t4l = 0, t5h = 0, t5l = 0, t6h = 0, t6l = 0, t7h = 0, t7l = 0;

          if ( offset & 127 )
              return -1;

          if ( ~output )
              if ( output & 63 )
                  return -1;

          // pad block number into heap
          // FIXME probable OOB write
          HEAP[(offset+length)|0]   = block>>>24;
          HEAP[(offset+length+1)|0] = block>>>16&255;
          HEAP[(offset+length+2)|0] = block>>>8&255;
          HEAP[(offset+length+3)|0] = block&255;

          // finish first iteration
          hmac_finish( offset, (length+4)|0, -1 )|0;

          h0h = t0h = H0h;
          h0l = t0l = H0l;
          h1h = t1h = H1h;
          h1l = t1l = H1l;
          h2h = t2h = H2h;
          h2l = t2l = H2l;
          h3h = t3h = H3h;
          h3l = t3l = H3l;
          h4h = t4h = H4h;
          h4l = t4l = H4l;
          h5h = t5h = H5h;
          h5l = t5l = H5l;
          h6h = t6h = H6h;
          h6l = t6l = H6l;
          h7h = t7h = H7h;
          h7l = t7l = H7l;

          count = (count-1)|0;

          // perform the rest iterations
          while ( (count|0) > 0 ) {
              hmac_reset();
              _core( t0h, t0l, t1h, t1l, t2h, t2l, t3h, t3l, t4h, t4l, t5h, t5l, t6h, t6l, t7h, t7l, 0x80000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1536 );

              t0h = H0h;
              t0l = H0l;
              t1h = H1h;
              t1l = H1l;
              t2h = H2h;
              t2l = H2l;
              t3h = H3h;
              t3l = H3l;
              t4h = H4h;
              t4l = H4l;
              t5h = H5h;
              t5l = H5l;
              t6h = H6h;
              t6l = H6l;
              t7h = H7h;
              t7l = H7l;

              _hmac_opad();
              _core( t0h, t0l, t1h, t1l, t2h, t2l, t3h, t3l, t4h, t4l, t5h, t5l, t6h, t6l, t7h, t7l, 0x80000000, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1536 );

              t0h = H0h;
              t0l = H0l;
              t1h = H1h;
              t1l = H1l;
              t2h = H2h;
              t2l = H2l;
              t3h = H3h;
              t3l = H3l;
              t4h = H4h;
              t4l = H4l;
              t5h = H5h;
              t5l = H5l;
              t6h = H6h;
              t6l = H6l;
              t7h = H7h;
              t7l = H7l;

              h0h = h0h ^ H0h;
              h0l = h0l ^ H0l;
              h1h = h1h ^ H1h;
              h1l = h1l ^ H1l;
              h2h = h2h ^ H2h;
              h2l = h2l ^ H2l;
              h3h = h3h ^ H3h;
              h3l = h3l ^ H3l;
              h4h = h4h ^ H4h;
              h4l = h4l ^ H4l;
              h5h = h5h ^ H5h;
              h5l = h5l ^ H5l;
              h6h = h6h ^ H6h;
              h6l = h6l ^ H6l;
              h7h = h7h ^ H7h;
              h7l = h7l ^ H7l;

              count = (count-1)|0;
          }

          H0h = h0h;
          H0l = h0l;
          H1h = h1h;
          H1l = h1l;
          H2h = h2h;
          H2l = h2l;
          H3h = h3h;
          H3l = h3l;
          H4h = h4h;
          H4l = h4l;
          H5h = h5h;
          H5l = h5l;
          H6h = h6h;
          H6l = h6l;
          H7h = h7h;
          H7l = h7l;

          if ( ~output )
              _state_to_heap(output);

          return 0;
      }

      return {
        // SHA512
        reset: reset,
        init: init,
        process: process,
        finish: finish,

        // HMAC-SHA512
        hmac_reset: hmac_reset,
        hmac_init: hmac_init,
        hmac_finish: hmac_finish,

        // PBKDF2-HMAC-SHA512
        pbkdf2_generate_block: pbkdf2_generate_block
      }
  };

  const _sha512_block_size = 128;
  const _sha512_hash_size = 64;
  class Sha512 extends Hash {
      constructor() {
          super();
          this.NAME = 'sha512';
          this.BLOCK_SIZE = _sha512_block_size;
          this.HASH_SIZE = _sha512_hash_size;
          this.heap = _heap_init();
          this.asm = sha512_asm({ Uint8Array: Uint8Array }, null, this.heap.buffer);
          this.reset();
      }
  }
  Sha512.NAME = 'sha512';

  class Hmac {
      constructor(hash, password, verify) {
          if (!hash.HASH_SIZE)
              throw new SyntaxError("option 'hash' supplied doesn't seem to be a valid hash function");
          this.hash = hash;
          this.BLOCK_SIZE = this.hash.BLOCK_SIZE;
          this.HMAC_SIZE = this.hash.HASH_SIZE;
          this.result = null;
          this.key = _hmac_key(this.hash, password);
          const ipad = new Uint8Array(this.key);
          for (let i = 0; i < ipad.length; ++i)
              ipad[i] ^= 0x36;
          this.hash.reset().process(ipad);
          if (verify !== undefined) {
              this._hmac_init_verify(verify);
          }
          else {
              this.verify = null;
          }
      }
      process(data) {
          if (this.result !== null)
              throw new IllegalStateError('state must be reset before processing new data');
          this.hash.process(data);
          return this;
      }
      finish() {
          if (this.result !== null)
              throw new IllegalStateError('state must be reset before processing new data');
          const inner_result = this.hash.finish().result;
          const opad = new Uint8Array(this.key);
          for (let i = 0; i < opad.length; ++i)
              opad[i] ^= 0x5c;
          const verify = this.verify;
          const result = this.hash
              .reset()
              .process(opad)
              .process(inner_result)
              .finish().result;
          if (verify) {
              if (verify.length === result.length) {
                  let diff = 0;
                  for (let i = 0; i < verify.length; i++) {
                      diff |= verify[i] ^ result[i];
                  }
                  if (diff !== 0)
                      throw new Error("HMAC verification failed, hash value doesn't match");
              }
              else {
                  throw new Error("HMAC verification failed, lengths doesn't match");
              }
          }
          this.result = result;
          return this;
      }
      _hmac_init_verify(verify) {
          if (verify.length !== this.HMAC_SIZE)
              throw new IllegalArgumentError('illegal verification tag size');
          this.verify = verify;
      }
  }
  function _hmac_key(hash, password) {
      const key = new Uint8Array(hash.BLOCK_SIZE);
      if (password.length > hash.BLOCK_SIZE) {
          key.set(hash
              .reset()
              .process(password)
              .finish().result);
      }
      else {
          key.set(password);
      }
      return key;
  }

  class HmacSha256 extends Hmac {
      constructor(password, verify) {
          const hash = new Sha256();
          // Calculate ipad, init the underlying engine, calculate this.key
          super(hash, password, verify);
          this.reset();
          if (verify !== undefined) {
              this._hmac_init_verify(verify);
          }
          else {
              this.verify = null;
          }
          return this;
      }
      reset() {
          const key = this.key;
          this.hash
              .reset()
              .asm.hmac_init((key[0] << 24) | (key[1] << 16) | (key[2] << 8) | key[3], (key[4] << 24) | (key[5] << 16) | (key[6] << 8) | key[7], (key[8] << 24) | (key[9] << 16) | (key[10] << 8) | key[11], (key[12] << 24) | (key[13] << 16) | (key[14] << 8) | key[15], (key[16] << 24) | (key[17] << 16) | (key[18] << 8) | key[19], (key[20] << 24) | (key[21] << 16) | (key[22] << 8) | key[23], (key[24] << 24) | (key[25] << 16) | (key[26] << 8) | key[27], (key[28] << 24) | (key[29] << 16) | (key[30] << 8) | key[31], (key[32] << 24) | (key[33] << 16) | (key[34] << 8) | key[35], (key[36] << 24) | (key[37] << 16) | (key[38] << 8) | key[39], (key[40] << 24) | (key[41] << 16) | (key[42] << 8) | key[43], (key[44] << 24) | (key[45] << 16) | (key[46] << 8) | key[47], (key[48] << 24) | (key[49] << 16) | (key[50] << 8) | key[51], (key[52] << 24) | (key[53] << 16) | (key[54] << 8) | key[55], (key[56] << 24) | (key[57] << 16) | (key[58] << 8) | key[59], (key[60] << 24) | (key[61] << 16) | (key[62] << 8) | key[63]);
          return this;
      }
      finish() {
          if (this.key === null)
              throw new IllegalStateError('no key is associated with the instance');
          if (this.result !== null)
              throw new IllegalStateError('state must be reset before processing new data');
          const hash = this.hash;
          const asm = this.hash.asm;
          const heap = this.hash.heap;
          asm.hmac_finish(hash.pos, hash.len, 0);
          const verify = this.verify;
          const result = new Uint8Array(_sha256_hash_size);
          result.set(heap.subarray(0, _sha256_hash_size));
          if (verify) {
              if (verify.length === result.length) {
                  let diff = 0;
                  for (let i = 0; i < verify.length; i++) {
                      diff |= verify[i] ^ result[i];
                  }
                  if (diff !== 0)
                      throw new Error("HMAC verification failed, hash value doesn't match");
              }
              else {
                  throw new Error("HMAC verification failed, lengths doesn't match");
              }
          }
          else {
              this.result = result;
          }
          return this;
      }
  }

  function Pbkdf2HmacSha256(password, salt, count, length) {
      const hmac = new HmacSha256(password);
      const result = new Uint8Array(length);
      const blocks = Math.ceil(length / hmac.HMAC_SIZE);
      for (let i = 1; i <= blocks; ++i) {
          const j = (i - 1) * hmac.HMAC_SIZE;
          const l = (i < blocks ? 0 : length % hmac.HMAC_SIZE) || hmac.HMAC_SIZE;
          hmac.reset().process(salt);
          hmac.hash.asm.pbkdf2_generate_block(hmac.hash.pos, hmac.hash.len, i, count, 0);
          result.set(hmac.hash.heap.subarray(0, l), j);
      }
      return result;
  }

  var BI_RM = "0123456789abcdefghijklmnopqrstuvwxyz";
  function int2char(n) {
      return BI_RM.charAt(n);
  }
  //#region BIT_OPERATIONS
  // (public) this & a
  function op_and(x, y) {
      return x & y;
  }
  // (public) this | a
  function op_or(x, y) {
      return x | y;
  }
  // (public) this ^ a
  function op_xor(x, y) {
      return x ^ y;
  }
  // (public) this & ~a
  function op_andnot(x, y) {
      return x & ~y;
  }
  // return index of lowest 1-bit in x, x < 2^31
  function lbit(x) {
      if (x == 0) {
          return -1;
      }
      var r = 0;
      if ((x & 0xffff) == 0) {
          x >>= 16;
          r += 16;
      }
      if ((x & 0xff) == 0) {
          x >>= 8;
          r += 8;
      }
      if ((x & 0xf) == 0) {
          x >>= 4;
          r += 4;
      }
      if ((x & 3) == 0) {
          x >>= 2;
          r += 2;
      }
      if ((x & 1) == 0) {
          ++r;
      }
      return r;
  }
  // return number of 1 bits in x
  function cbit(x) {
      var r = 0;
      while (x != 0) {
          x &= x - 1;
          ++r;
      }
      return r;
  }
  //#endregion BIT_OPERATIONS

  var b64map = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
  var b64pad = "=";
  function hex2b64(h) {
      var i;
      var c;
      var ret = "";
      for (i = 0; i + 3 <= h.length; i += 3) {
          c = parseInt(h.substring(i, i + 3), 16);
          ret += b64map.charAt(c >> 6) + b64map.charAt(c & 63);
      }
      if (i + 1 == h.length) {
          c = parseInt(h.substring(i, i + 1), 16);
          ret += b64map.charAt(c << 2);
      }
      else if (i + 2 == h.length) {
          c = parseInt(h.substring(i, i + 2), 16);
          ret += b64map.charAt(c >> 2) + b64map.charAt((c & 3) << 4);
      }
      while ((ret.length & 3) > 0) {
          ret += b64pad;
      }
      return ret;
  }
  // convert a base64 string to hex
  function b64tohex(s) {
      var ret = "";
      var i;
      var k = 0; // b64 state, 0-3
      var slop = 0;
      for (i = 0; i < s.length; ++i) {
          if (s.charAt(i) == b64pad) {
              break;
          }
          var v = b64map.indexOf(s.charAt(i));
          if (v < 0) {
              continue;
          }
          if (k == 0) {
              ret += int2char(v >> 2);
              slop = v & 3;
              k = 1;
          }
          else if (k == 1) {
              ret += int2char((slop << 2) | (v >> 4));
              slop = v & 0xf;
              k = 2;
          }
          else if (k == 2) {
              ret += int2char(slop);
              ret += int2char(v >> 2);
              slop = v & 3;
              k = 3;
          }
          else {
              ret += int2char((slop << 2) | (v >> 4));
              ret += int2char(v & 0xf);
              k = 0;
          }
      }
      if (k == 1) {
          ret += int2char(slop << 2);
      }
      return ret;
  }

  // Hex JavaScript decoder
  // Copyright (c) 2008-2013 Lapo Luchini <lapo@lapo.it>
  // Permission to use, copy, modify, and/or distribute this software for any
  // purpose with or without fee is hereby granted, provided that the above
  // copyright notice and this permission notice appear in all copies.
  //
  // THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
  // WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
  // MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
  // ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
  // WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
  // ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
  // OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
  /*jshint browser: true, strict: true, immed: true, latedef: true, undef: true, regexdash: false */
  var decoder$1;
  var Hex = {
      decode: function (a) {
          var i;
          if (decoder$1 === undefined) {
              var hex = "0123456789ABCDEF";
              var ignore = " \f\n\r\t\u00A0\u2028\u2029";
              decoder$1 = {};
              for (i = 0; i < 16; ++i) {
                  decoder$1[hex.charAt(i)] = i;
              }
              hex = hex.toLowerCase();
              for (i = 10; i < 16; ++i) {
                  decoder$1[hex.charAt(i)] = i;
              }
              for (i = 0; i < ignore.length; ++i) {
                  decoder$1[ignore.charAt(i)] = -1;
              }
          }
          var out = [];
          var bits = 0;
          var char_count = 0;
          for (i = 0; i < a.length; ++i) {
              var c = a.charAt(i);
              if (c == "=") {
                  break;
              }
              c = decoder$1[c];
              if (c == -1) {
                  continue;
              }
              if (c === undefined) {
                  throw new Error("Illegal character at offset " + i);
              }
              bits |= c;
              if (++char_count >= 2) {
                  out[out.length] = bits;
                  bits = 0;
                  char_count = 0;
              }
              else {
                  bits <<= 4;
              }
          }
          if (char_count) {
              throw new Error("Hex encoding incomplete: 4 bits missing");
          }
          return out;
      }
  };

  // Base64 JavaScript decoder
  // Copyright (c) 2008-2013 Lapo Luchini <lapo@lapo.it>
  // Permission to use, copy, modify, and/or distribute this software for any
  // purpose with or without fee is hereby granted, provided that the above
  // copyright notice and this permission notice appear in all copies.
  //
  // THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
  // WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
  // MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
  // ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
  // WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
  // ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
  // OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
  /*jshint browser: true, strict: true, immed: true, latedef: true, undef: true, regexdash: false */
  var decoder;
  var Base64 = {
      decode: function (a) {
          var i;
          if (decoder === undefined) {
              var b64 = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
              var ignore = "= \f\n\r\t\u00A0\u2028\u2029";
              decoder = Object.create(null);
              for (i = 0; i < 64; ++i) {
                  decoder[b64.charAt(i)] = i;
              }
              decoder['-'] = 62; //+
              decoder['_'] = 63; //-
              for (i = 0; i < ignore.length; ++i) {
                  decoder[ignore.charAt(i)] = -1;
              }
          }
          var out = [];
          var bits = 0;
          var char_count = 0;
          for (i = 0; i < a.length; ++i) {
              var c = a.charAt(i);
              if (c == "=") {
                  break;
              }
              c = decoder[c];
              if (c == -1) {
                  continue;
              }
              if (c === undefined) {
                  throw new Error("Illegal character at offset " + i);
              }
              bits |= c;
              if (++char_count >= 4) {
                  out[out.length] = (bits >> 16);
                  out[out.length] = (bits >> 8) & 0xFF;
                  out[out.length] = bits & 0xFF;
                  bits = 0;
                  char_count = 0;
              }
              else {
                  bits <<= 6;
              }
          }
          switch (char_count) {
              case 1:
                  throw new Error("Base64 encoding incomplete: at least 2 bits missing");
              case 2:
                  out[out.length] = (bits >> 10);
                  break;
              case 3:
                  out[out.length] = (bits >> 16);
                  out[out.length] = (bits >> 8) & 0xFF;
                  break;
          }
          return out;
      },
      re: /-----BEGIN [^-]+-----([A-Za-z0-9+\/=\s]+)-----END [^-]+-----|begin-base64[^\n]+\n([A-Za-z0-9+\/=\s]+)====/,
      unarmor: function (a) {
          var m = Base64.re.exec(a);
          if (m) {
              if (m[1]) {
                  a = m[1];
              }
              else if (m[2]) {
                  a = m[2];
              }
              else {
                  throw new Error("RegExp out of sync");
              }
          }
          return Base64.decode(a);
      }
  };

  // Big integer base-10 printing library
  // Copyright (c) 2014 Lapo Luchini <lapo@lapo.it>
  // Permission to use, copy, modify, and/or distribute this software for any
  // purpose with or without fee is hereby granted, provided that the above
  // copyright notice and this permission notice appear in all copies.
  //
  // THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
  // WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
  // MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
  // ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
  // WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
  // ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
  // OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
  /*jshint browser: true, strict: true, immed: true, latedef: true, undef: true, regexdash: false */
  var max = 10000000000000; // biggest integer that can still fit 2^53 when multiplied by 256
  var Int10 = /** @class */ (function () {
      function Int10(value) {
          this.buf = [+value || 0];
      }
      Int10.prototype.mulAdd = function (m, c) {
          // assert(m <= 256)
          var b = this.buf;
          var l = b.length;
          var i;
          var t;
          for (i = 0; i < l; ++i) {
              t = b[i] * m + c;
              if (t < max) {
                  c = 0;
              }
              else {
                  c = 0 | (t / max);
                  t -= c * max;
              }
              b[i] = t;
          }
          if (c > 0) {
              b[i] = c;
          }
      };
      Int10.prototype.sub = function (c) {
          // assert(m <= 256)
          var b = this.buf;
          var l = b.length;
          var i;
          var t;
          for (i = 0; i < l; ++i) {
              t = b[i] - c;
              if (t < 0) {
                  t += max;
                  c = 1;
              }
              else {
                  c = 0;
              }
              b[i] = t;
          }
          while (b[b.length - 1] === 0) {
              b.pop();
          }
      };
      Int10.prototype.toString = function (base) {
          if ((base || 10) != 10) {
              throw new Error("only base 10 is supported");
          }
          var b = this.buf;
          var s = b[b.length - 1].toString();
          for (var i = b.length - 2; i >= 0; --i) {
              s += (max + b[i]).toString().substring(1);
          }
          return s;
      };
      Int10.prototype.valueOf = function () {
          var b = this.buf;
          var v = 0;
          for (var i = b.length - 1; i >= 0; --i) {
              v = v * max + b[i];
          }
          return v;
      };
      Int10.prototype.simplify = function () {
          var b = this.buf;
          return (b.length == 1) ? b[0] : this;
      };
      return Int10;
  }());

  // ASN.1 JavaScript decoder
  var ellipsis = "\u2026";
  var reTimeS = /^(\d\d)(0[1-9]|1[0-2])(0[1-9]|[12]\d|3[01])([01]\d|2[0-3])(?:([0-5]\d)(?:([0-5]\d)(?:[.,](\d{1,3}))?)?)?(Z|[-+](?:[0]\d|1[0-2])([0-5]\d)?)?$/;
  var reTimeL = /^(\d\d\d\d)(0[1-9]|1[0-2])(0[1-9]|[12]\d|3[01])([01]\d|2[0-3])(?:([0-5]\d)(?:([0-5]\d)(?:[.,](\d{1,3}))?)?)?(Z|[-+](?:[0]\d|1[0-2])([0-5]\d)?)?$/;
  function stringCut(str, len) {
      if (str.length > len) {
          str = str.substring(0, len) + ellipsis;
      }
      return str;
  }
  var Stream = /** @class */ (function () {
      function Stream(enc, pos) {
          this.hexDigits = "0123456789ABCDEF";
          if (enc instanceof Stream) {
              this.enc = enc.enc;
              this.pos = enc.pos;
          }
          else {
              // enc should be an array or a binary string
              this.enc = enc;
              this.pos = pos;
          }
      }
      Stream.prototype.get = function (pos) {
          if (pos === undefined) {
              pos = this.pos++;
          }
          if (pos >= this.enc.length) {
              throw new Error("Requesting byte offset ".concat(pos, " on a stream of length ").concat(this.enc.length));
          }
          return ("string" === typeof this.enc) ? this.enc.charCodeAt(pos) : this.enc[pos];
      };
      Stream.prototype.hexByte = function (b) {
          return this.hexDigits.charAt((b >> 4) & 0xF) + this.hexDigits.charAt(b & 0xF);
      };
      Stream.prototype.hexDump = function (start, end, raw) {
          var s = "";
          for (var i = start; i < end; ++i) {
              s += this.hexByte(this.get(i));
              if (raw !== true) {
                  switch (i & 0xF) {
                      case 0x7:
                          s += "  ";
                          break;
                      case 0xF:
                          s += "\n";
                          break;
                      default:
                          s += " ";
                  }
              }
          }
          return s;
      };
      Stream.prototype.isASCII = function (start, end) {
          for (var i = start; i < end; ++i) {
              var c = this.get(i);
              if (c < 32 || c > 176) {
                  return false;
              }
          }
          return true;
      };
      Stream.prototype.parseStringISO = function (start, end) {
          var s = "";
          for (var i = start; i < end; ++i) {
              s += String.fromCharCode(this.get(i));
          }
          return s;
      };
      Stream.prototype.parseStringUTF = function (start, end) {
          var s = "";
          for (var i = start; i < end;) {
              var c = this.get(i++);
              if (c < 128) {
                  s += String.fromCharCode(c);
              }
              else if ((c > 191) && (c < 224)) {
                  s += String.fromCharCode(((c & 0x1F) << 6) | (this.get(i++) & 0x3F));
              }
              else {
                  s += String.fromCharCode(((c & 0x0F) << 12) | ((this.get(i++) & 0x3F) << 6) | (this.get(i++) & 0x3F));
              }
          }
          return s;
      };
      Stream.prototype.parseStringBMP = function (start, end) {
          var str = "";
          var hi;
          var lo;
          for (var i = start; i < end;) {
              hi = this.get(i++);
              lo = this.get(i++);
              str += String.fromCharCode((hi << 8) | lo);
          }
          return str;
      };
      Stream.prototype.parseTime = function (start, end, shortYear) {
          var s = this.parseStringISO(start, end);
          var m = (shortYear ? reTimeS : reTimeL).exec(s);
          if (!m) {
              return "Unrecognized time: " + s;
          }
          if (shortYear) {
              // to avoid querying the timer, use the fixed range [1970, 2069]
              // it will conform with ITU X.400 [-10, +40] sliding window until 2030
              m[1] = +m[1];
              m[1] += (+m[1] < 70) ? 2000 : 1900;
          }
          s = m[1] + "-" + m[2] + "-" + m[3] + " " + m[4];
          if (m[5]) {
              s += ":" + m[5];
              if (m[6]) {
                  s += ":" + m[6];
                  if (m[7]) {
                      s += "." + m[7];
                  }
              }
          }
          if (m[8]) {
              s += " UTC";
              if (m[8] != "Z") {
                  s += m[8];
                  if (m[9]) {
                      s += ":" + m[9];
                  }
              }
          }
          return s;
      };
      Stream.prototype.parseInteger = function (start, end) {
          var v = this.get(start);
          var neg = (v > 127);
          var pad = neg ? 255 : 0;
          var len;
          var s = "";
          // skip unuseful bits (not allowed in DER)
          while (v == pad && ++start < end) {
              v = this.get(start);
          }
          len = end - start;
          if (len === 0) {
              return neg ? -1 : 0;
          }
          // show bit length of huge integers
          if (len > 4) {
              s = v;
              len <<= 3;
              while (((+s ^ pad) & 0x80) == 0) {
                  s = +s << 1;
                  --len;
              }
              s = "(" + len + " bit)\n";
          }
          // decode the integer
          if (neg) {
              v = v - 256;
          }
          var n = new Int10(v);
          for (var i = start + 1; i < end; ++i) {
              n.mulAdd(256, this.get(i));
          }
          return s + n.toString();
      };
      Stream.prototype.parseBitString = function (start, end, maxLength) {
          var unusedBit = this.get(start);
          var lenBit = ((end - start - 1) << 3) - unusedBit;
          var intro = "(" + lenBit + " bit)\n";
          var s = "";
          for (var i = start + 1; i < end; ++i) {
              var b = this.get(i);
              var skip = (i == end - 1) ? unusedBit : 0;
              for (var j = 7; j >= skip; --j) {
                  s += (b >> j) & 1 ? "1" : "0";
              }
              if (s.length > maxLength) {
                  return intro + stringCut(s, maxLength);
              }
          }
          return intro + s;
      };
      Stream.prototype.parseOctetString = function (start, end, maxLength) {
          if (this.isASCII(start, end)) {
              return stringCut(this.parseStringISO(start, end), maxLength);
          }
          var len = end - start;
          var s = "(" + len + " byte)\n";
          maxLength /= 2; // we work in bytes
          if (len > maxLength) {
              end = start + maxLength;
          }
          for (var i = start; i < end; ++i) {
              s += this.hexByte(this.get(i));
          }
          if (len > maxLength) {
              s += ellipsis;
          }
          return s;
      };
      Stream.prototype.parseOID = function (start, end, maxLength) {
          var s = "";
          var n = new Int10();
          var bits = 0;
          for (var i = start; i < end; ++i) {
              var v = this.get(i);
              n.mulAdd(128, v & 0x7F);
              bits += 7;
              if (!(v & 0x80)) { // finished
                  if (s === "") {
                      n = n.simplify();
                      if (n instanceof Int10) {
                          n.sub(80);
                          s = "2." + n.toString();
                      }
                      else {
                          var m = n < 80 ? n < 40 ? 0 : 1 : 2;
                          s = m + "." + (n - m * 40);
                      }
                  }
                  else {
                      s += "." + n.toString();
                  }
                  if (s.length > maxLength) {
                      return stringCut(s, maxLength);
                  }
                  n = new Int10();
                  bits = 0;
              }
          }
          if (bits > 0) {
              s += ".incomplete";
          }
          return s;
      };
      return Stream;
  }());
  var ASN1 = /** @class */ (function () {
      function ASN1(stream, header, length, tag, sub) {
          if (!(tag instanceof ASN1Tag)) {
              throw new Error("Invalid tag value.");
          }
          this.stream = stream;
          this.header = header;
          this.length = length;
          this.tag = tag;
          this.sub = sub;
      }
      ASN1.prototype.typeName = function () {
          switch (this.tag.tagClass) {
              case 0: // universal
                  switch (this.tag.tagNumber) {
                      case 0x00:
                          return "EOC";
                      case 0x01:
                          return "BOOLEAN";
                      case 0x02:
                          return "INTEGER";
                      case 0x03:
                          return "BIT_STRING";
                      case 0x04:
                          return "OCTET_STRING";
                      case 0x05:
                          return "NULL";
                      case 0x06:
                          return "OBJECT_IDENTIFIER";
                      case 0x07:
                          return "ObjectDescriptor";
                      case 0x08:
                          return "EXTERNAL";
                      case 0x09:
                          return "REAL";
                      case 0x0A:
                          return "ENUMERATED";
                      case 0x0B:
                          return "EMBEDDED_PDV";
                      case 0x0C:
                          return "UTF8String";
                      case 0x10:
                          return "SEQUENCE";
                      case 0x11:
                          return "SET";
                      case 0x12:
                          return "NumericString";
                      case 0x13:
                          return "PrintableString"; // ASCII subset
                      case 0x14:
                          return "TeletexString"; // aka T61String
                      case 0x15:
                          return "VideotexString";
                      case 0x16:
                          return "IA5String"; // ASCII
                      case 0x17:
                          return "UTCTime";
                      case 0x18:
                          return "GeneralizedTime";
                      case 0x19:
                          return "GraphicString";
                      case 0x1A:
                          return "VisibleString"; // ASCII subset
                      case 0x1B:
                          return "GeneralString";
                      case 0x1C:
                          return "UniversalString";
                      case 0x1E:
                          return "BMPString";
                  }
                  return "Universal_" + this.tag.tagNumber.toString();
              case 1:
                  return "Application_" + this.tag.tagNumber.toString();
              case 2:
                  return "[" + this.tag.tagNumber.toString() + "]"; // Context
              case 3:
                  return "Private_" + this.tag.tagNumber.toString();
          }
      };
      ASN1.prototype.content = function (maxLength) {
          if (this.tag === undefined) {
              return null;
          }
          if (maxLength === undefined) {
              maxLength = Infinity;
          }
          var content = this.posContent();
          var len = Math.abs(this.length);
          if (!this.tag.isUniversal()) {
              if (this.sub !== null) {
                  return "(" + this.sub.length + " elem)";
              }
              return this.stream.parseOctetString(content, content + len, maxLength);
          }
          switch (this.tag.tagNumber) {
              case 0x01: // BOOLEAN
                  return (this.stream.get(content) === 0) ? "false" : "true";
              case 0x02: // INTEGER
                  return this.stream.parseInteger(content, content + len);
              case 0x03: // BIT_STRING
                  return this.sub ? "(" + this.sub.length + " elem)" :
                      this.stream.parseBitString(content, content + len, maxLength);
              case 0x04: // OCTET_STRING
                  return this.sub ? "(" + this.sub.length + " elem)" :
                      this.stream.parseOctetString(content, content + len, maxLength);
              // case 0x05: // NULL
              case 0x06: // OBJECT_IDENTIFIER
                  return this.stream.parseOID(content, content + len, maxLength);
              // case 0x07: // ObjectDescriptor
              // case 0x08: // EXTERNAL
              // case 0x09: // REAL
              // case 0x0A: // ENUMERATED
              // case 0x0B: // EMBEDDED_PDV
              case 0x10: // SEQUENCE
              case 0x11: // SET
                  if (this.sub !== null) {
                      return "(" + this.sub.length + " elem)";
                  }
                  else {
                      return "(no elem)";
                  }
              case 0x0C: // UTF8String
                  return stringCut(this.stream.parseStringUTF(content, content + len), maxLength);
              case 0x12: // NumericString
              case 0x13: // PrintableString
              case 0x14: // TeletexString
              case 0x15: // VideotexString
              case 0x16: // IA5String
              // case 0x19: // GraphicString
              case 0x1A: // VisibleString
                  // case 0x1B: // GeneralString
                  // case 0x1C: // UniversalString
                  return stringCut(this.stream.parseStringISO(content, content + len), maxLength);
              case 0x1E: // BMPString
                  return stringCut(this.stream.parseStringBMP(content, content + len), maxLength);
              case 0x17: // UTCTime
              case 0x18: // GeneralizedTime
                  return this.stream.parseTime(content, content + len, (this.tag.tagNumber == 0x17));
          }
          return null;
      };
      ASN1.prototype.toString = function () {
          return this.typeName() + "@" + this.stream.pos + "[header:" + this.header + ",length:" + this.length + ",sub:" + ((this.sub === null) ? "null" : this.sub.length) + "]";
      };
      ASN1.prototype.toPrettyString = function (indent) {
          if (indent === undefined) {
              indent = "";
          }
          var s = indent + this.typeName() + " @" + this.stream.pos;
          if (this.length >= 0) {
              s += "+";
          }
          s += this.length;
          if (this.tag.tagConstructed) {
              s += " (constructed)";
          }
          else if ((this.tag.isUniversal() && ((this.tag.tagNumber == 0x03) || (this.tag.tagNumber == 0x04))) && (this.sub !== null)) {
              s += " (encapsulates)";
          }
          s += "\n";
          if (this.sub !== null) {
              indent += "  ";
              for (var i = 0, max = this.sub.length; i < max; ++i) {
                  s += this.sub[i].toPrettyString(indent);
              }
          }
          return s;
      };
      ASN1.prototype.posStart = function () {
          return this.stream.pos;
      };
      ASN1.prototype.posContent = function () {
          return this.stream.pos + this.header;
      };
      ASN1.prototype.posEnd = function () {
          return this.stream.pos + this.header + Math.abs(this.length);
      };
      ASN1.prototype.toHexString = function () {
          return this.stream.hexDump(this.posStart(), this.posEnd(), true);
      };
      ASN1.decodeLength = function (stream) {
          var buf = stream.get();
          var len = buf & 0x7F;
          if (len == buf) {
              return len;
          }
          // no reason to use Int10, as it would be a huge buffer anyways
          if (len > 6) {
              throw new Error("Length over 48 bits not supported at position " + (stream.pos - 1));
          }
          if (len === 0) {
              return null;
          } // undefined
          buf = 0;
          for (var i = 0; i < len; ++i) {
              buf = (buf * 256) + stream.get();
          }
          return buf;
      };
      /**
       * Retrieve the hexadecimal value (as a string) of the current ASN.1 element
       * @returns {string}
       * @public
       */
      ASN1.prototype.getHexStringValue = function () {
          var hexString = this.toHexString();
          var offset = this.header * 2;
          var length = this.length * 2;
          return hexString.substr(offset, length);
      };
      ASN1.decode = function (str) {
          var stream;
          if (!(str instanceof Stream)) {
              stream = new Stream(str, 0);
          }
          else {
              stream = str;
          }
          var streamStart = new Stream(stream);
          var tag = new ASN1Tag(stream);
          var len = ASN1.decodeLength(stream);
          var start = stream.pos;
          var header = start - streamStart.pos;
          var sub = null;
          var getSub = function () {
              var ret = [];
              if (len !== null) {
                  // definite length
                  var end = start + len;
                  while (stream.pos < end) {
                      ret[ret.length] = ASN1.decode(stream);
                  }
                  if (stream.pos != end) {
                      throw new Error("Content size is not correct for container starting at offset " + start);
                  }
              }
              else {
                  // undefined length
                  try {
                      for (;;) {
                          var s = ASN1.decode(stream);
                          if (s.tag.isEOC()) {
                              break;
                          }
                          ret[ret.length] = s;
                      }
                      len = start - stream.pos; // undefined lengths are represented as negative values
                  }
                  catch (e) {
                      throw new Error("Exception while decoding undefined length content: " + e);
                  }
              }
              return ret;
          };
          if (tag.tagConstructed) {
              // must have valid content
              sub = getSub();
          }
          else if (tag.isUniversal() && ((tag.tagNumber == 0x03) || (tag.tagNumber == 0x04))) {
              // sometimes BitString and OctetString are used to encapsulate ASN.1
              try {
                  if (tag.tagNumber == 0x03) {
                      if (stream.get() != 0) {
                          throw new Error("BIT STRINGs with unused bits cannot encapsulate.");
                      }
                  }
                  sub = getSub();
                  for (var i = 0; i < sub.length; ++i) {
                      if (sub[i].tag.isEOC()) {
                          throw new Error("EOC is not supposed to be actual content.");
                      }
                  }
              }
              catch (e) {
                  // but silently ignore when they don't
                  sub = null;
              }
          }
          if (sub === null) {
              if (len === null) {
                  throw new Error("We can't skip over an invalid tag with undefined length at offset " + start);
              }
              stream.pos = start + Math.abs(len);
          }
          return new ASN1(streamStart, header, len, tag, sub);
      };
      return ASN1;
  }());
  var ASN1Tag = /** @class */ (function () {
      function ASN1Tag(stream) {
          var buf = stream.get();
          this.tagClass = buf >> 6;
          this.tagConstructed = ((buf & 0x20) !== 0);
          this.tagNumber = buf & 0x1F;
          if (this.tagNumber == 0x1F) { // long tag
              var n = new Int10();
              do {
                  buf = stream.get();
                  n.mulAdd(128, buf & 0x7F);
              } while (buf & 0x80);
              this.tagNumber = n.simplify();
          }
      }
      ASN1Tag.prototype.isUniversal = function () {
          return this.tagClass === 0x00;
      };
      ASN1Tag.prototype.isEOC = function () {
          return this.tagClass === 0x00 && this.tagNumber === 0x00;
      };
      return ASN1Tag;
  }());

  // Copyright (c) 2005  Tom Wu
  // Bits per digit
  var dbits;
  // JavaScript engine analysis
  var canary = 0xdeadbeefcafe;
  var j_lm = ((canary & 0xffffff) == 0xefcafe);
  //#region
  var lowprimes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97, 101, 103, 107, 109, 113, 127, 131, 137, 139, 149, 151, 157, 163, 167, 173, 179, 181, 191, 193, 197, 199, 211, 223, 227, 229, 233, 239, 241, 251, 257, 263, 269, 271, 277, 281, 283, 293, 307, 311, 313, 317, 331, 337, 347, 349, 353, 359, 367, 373, 379, 383, 389, 397, 401, 409, 419, 421, 431, 433, 439, 443, 449, 457, 461, 463, 467, 479, 487, 491, 499, 503, 509, 521, 523, 541, 547, 557, 563, 569, 571, 577, 587, 593, 599, 601, 607, 613, 617, 619, 631, 641, 643, 647, 653, 659, 661, 673, 677, 683, 691, 701, 709, 719, 727, 733, 739, 743, 751, 757, 761, 769, 773, 787, 797, 809, 811, 821, 823, 827, 829, 839, 853, 857, 859, 863, 877, 881, 883, 887, 907, 911, 919, 929, 937, 941, 947, 953, 967, 971, 977, 983, 991, 997];
  var lplim = (1 << 26) / lowprimes[lowprimes.length - 1];
  //#endregion
  // (public) Constructor
  var BigInteger = /** @class */ (function () {
      function BigInteger(a, b, c) {
          if (a != null) {
              if ("number" == typeof a) {
                  this.fromNumber(a, b, c);
              }
              else if (b == null && "string" != typeof a) {
                  this.fromString(a, 256);
              }
              else {
                  this.fromString(a, b);
              }
          }
      }
      //#region PUBLIC
      // BigInteger.prototype.toString = bnToString;
      // (public) return string representation in given radix
      BigInteger.prototype.toString = function (b) {
          if (this.s < 0) {
              return "-" + this.negate().toString(b);
          }
          var k;
          if (b == 16) {
              k = 4;
          }
          else if (b == 8) {
              k = 3;
          }
          else if (b == 2) {
              k = 1;
          }
          else if (b == 32) {
              k = 5;
          }
          else if (b == 4) {
              k = 2;
          }
          else {
              return this.toRadix(b);
          }
          var km = (1 << k) - 1;
          var d;
          var m = false;
          var r = "";
          var i = this.t;
          var p = this.DB - (i * this.DB) % k;
          if (i-- > 0) {
              if (p < this.DB && (d = this[i] >> p) > 0) {
                  m = true;
                  r = int2char(d);
              }
              while (i >= 0) {
                  if (p < k) {
                      d = (this[i] & ((1 << p) - 1)) << (k - p);
                      d |= this[--i] >> (p += this.DB - k);
                  }
                  else {
                      d = (this[i] >> (p -= k)) & km;
                      if (p <= 0) {
                          p += this.DB;
                          --i;
                      }
                  }
                  if (d > 0) {
                      m = true;
                  }
                  if (m) {
                      r += int2char(d);
                  }
              }
          }
          return m ? r : "0";
      };
      // BigInteger.prototype.negate = bnNegate;
      // (public) -this
      BigInteger.prototype.negate = function () {
          var r = nbi();
          BigInteger.ZERO.subTo(this, r);
          return r;
      };
      // BigInteger.prototype.abs = bnAbs;
      // (public) |this|
      BigInteger.prototype.abs = function () {
          return (this.s < 0) ? this.negate() : this;
      };
      // BigInteger.prototype.compareTo = bnCompareTo;
      // (public) return + if this > a, - if this < a, 0 if equal
      BigInteger.prototype.compareTo = function (a) {
          var r = this.s - a.s;
          if (r != 0) {
              return r;
          }
          var i = this.t;
          r = i - a.t;
          if (r != 0) {
              return (this.s < 0) ? -r : r;
          }
          while (--i >= 0) {
              if ((r = this[i] - a[i]) != 0) {
                  return r;
              }
          }
          return 0;
      };
      // BigInteger.prototype.bitLength = bnBitLength;
      // (public) return the number of bits in "this"
      BigInteger.prototype.bitLength = function () {
          if (this.t <= 0) {
              return 0;
          }
          return this.DB * (this.t - 1) + nbits(this[this.t - 1] ^ (this.s & this.DM));
      };
      // BigInteger.prototype.mod = bnMod;
      // (public) this mod a
      BigInteger.prototype.mod = function (a) {
          var r = nbi();
          this.abs().divRemTo(a, null, r);
          if (this.s < 0 && r.compareTo(BigInteger.ZERO) > 0) {
              a.subTo(r, r);
          }
          return r;
      };
      // BigInteger.prototype.modPowInt = bnModPowInt;
      // (public) this^e % m, 0 <= e < 2^32
      BigInteger.prototype.modPowInt = function (e, m) {
          var z;
          if (e < 256 || m.isEven()) {
              z = new Classic(m);
          }
          else {
              z = new Montgomery(m);
          }
          return this.exp(e, z);
      };
      // BigInteger.prototype.clone = bnClone;
      // (public)
      BigInteger.prototype.clone = function () {
          var r = nbi();
          this.copyTo(r);
          return r;
      };
      // BigInteger.prototype.intValue = bnIntValue;
      // (public) return value as integer
      BigInteger.prototype.intValue = function () {
          if (this.s < 0) {
              if (this.t == 1) {
                  return this[0] - this.DV;
              }
              else if (this.t == 0) {
                  return -1;
              }
          }
          else if (this.t == 1) {
              return this[0];
          }
          else if (this.t == 0) {
              return 0;
          }
          // assumes 16 < DB < 32
          return ((this[1] & ((1 << (32 - this.DB)) - 1)) << this.DB) | this[0];
      };
      // BigInteger.prototype.byteValue = bnByteValue;
      // (public) return value as byte
      BigInteger.prototype.byteValue = function () {
          return (this.t == 0) ? this.s : (this[0] << 24) >> 24;
      };
      // BigInteger.prototype.shortValue = bnShortValue;
      // (public) return value as short (assumes DB>=16)
      BigInteger.prototype.shortValue = function () {
          return (this.t == 0) ? this.s : (this[0] << 16) >> 16;
      };
      // BigInteger.prototype.signum = bnSigNum;
      // (public) 0 if this == 0, 1 if this > 0
      BigInteger.prototype.signum = function () {
          if (this.s < 0) {
              return -1;
          }
          else if (this.t <= 0 || (this.t == 1 && this[0] <= 0)) {
              return 0;
          }
          else {
              return 1;
          }
      };
      // BigInteger.prototype.toByteArray = bnToByteArray;
      // (public) convert to bigendian byte array
      BigInteger.prototype.toByteArray = function () {
          var i = this.t;
          var r = [];
          r[0] = this.s;
          var p = this.DB - (i * this.DB) % 8;
          var d;
          var k = 0;
          if (i-- > 0) {
              if (p < this.DB && (d = this[i] >> p) != (this.s & this.DM) >> p) {
                  r[k++] = d | (this.s << (this.DB - p));
              }
              while (i >= 0) {
                  if (p < 8) {
                      d = (this[i] & ((1 << p) - 1)) << (8 - p);
                      d |= this[--i] >> (p += this.DB - 8);
                  }
                  else {
                      d = (this[i] >> (p -= 8)) & 0xff;
                      if (p <= 0) {
                          p += this.DB;
                          --i;
                      }
                  }
                  if ((d & 0x80) != 0) {
                      d |= -256;
                  }
                  if (k == 0 && (this.s & 0x80) != (d & 0x80)) {
                      ++k;
                  }
                  if (k > 0 || d != this.s) {
                      r[k++] = d;
                  }
              }
          }
          return r;
      };
      // BigInteger.prototype.equals = bnEquals;
      BigInteger.prototype.equals = function (a) {
          return (this.compareTo(a) == 0);
      };
      // BigInteger.prototype.min = bnMin;
      BigInteger.prototype.min = function (a) {
          return (this.compareTo(a) < 0) ? this : a;
      };
      // BigInteger.prototype.max = bnMax;
      BigInteger.prototype.max = function (a) {
          return (this.compareTo(a) > 0) ? this : a;
      };
      // BigInteger.prototype.and = bnAnd;
      BigInteger.prototype.and = function (a) {
          var r = nbi();
          this.bitwiseTo(a, op_and, r);
          return r;
      };
      // BigInteger.prototype.or = bnOr;
      BigInteger.prototype.or = function (a) {
          var r = nbi();
          this.bitwiseTo(a, op_or, r);
          return r;
      };
      // BigInteger.prototype.xor = bnXor;
      BigInteger.prototype.xor = function (a) {
          var r = nbi();
          this.bitwiseTo(a, op_xor, r);
          return r;
      };
      // BigInteger.prototype.andNot = bnAndNot;
      BigInteger.prototype.andNot = function (a) {
          var r = nbi();
          this.bitwiseTo(a, op_andnot, r);
          return r;
      };
      // BigInteger.prototype.not = bnNot;
      // (public) ~this
      BigInteger.prototype.not = function () {
          var r = nbi();
          for (var i = 0; i < this.t; ++i) {
              r[i] = this.DM & ~this[i];
          }
          r.t = this.t;
          r.s = ~this.s;
          return r;
      };
      // BigInteger.prototype.shiftLeft = bnShiftLeft;
      // (public) this << n
      BigInteger.prototype.shiftLeft = function (n) {
          var r = nbi();
          if (n < 0) {
              this.rShiftTo(-n, r);
          }
          else {
              this.lShiftTo(n, r);
          }
          return r;
      };
      // BigInteger.prototype.shiftRight = bnShiftRight;
      // (public) this >> n
      BigInteger.prototype.shiftRight = function (n) {
          var r = nbi();
          if (n < 0) {
              this.lShiftTo(-n, r);
          }
          else {
              this.rShiftTo(n, r);
          }
          return r;
      };
      // BigInteger.prototype.getLowestSetBit = bnGetLowestSetBit;
      // (public) returns index of lowest 1-bit (or -1 if none)
      BigInteger.prototype.getLowestSetBit = function () {
          for (var i = 0; i < this.t; ++i) {
              if (this[i] != 0) {
                  return i * this.DB + lbit(this[i]);
              }
          }
          if (this.s < 0) {
              return this.t * this.DB;
          }
          return -1;
      };
      // BigInteger.prototype.bitCount = bnBitCount;
      // (public) return number of set bits
      BigInteger.prototype.bitCount = function () {
          var r = 0;
          var x = this.s & this.DM;
          for (var i = 0; i < this.t; ++i) {
              r += cbit(this[i] ^ x);
          }
          return r;
      };
      // BigInteger.prototype.testBit = bnTestBit;
      // (public) true iff nth bit is set
      BigInteger.prototype.testBit = function (n) {
          var j = Math.floor(n / this.DB);
          if (j >= this.t) {
              return (this.s != 0);
          }
          return ((this[j] & (1 << (n % this.DB))) != 0);
      };
      // BigInteger.prototype.setBit = bnSetBit;
      // (public) this | (1<<n)
      BigInteger.prototype.setBit = function (n) {
          return this.changeBit(n, op_or);
      };
      // BigInteger.prototype.clearBit = bnClearBit;
      // (public) this & ~(1<<n)
      BigInteger.prototype.clearBit = function (n) {
          return this.changeBit(n, op_andnot);
      };
      // BigInteger.prototype.flipBit = bnFlipBit;
      // (public) this ^ (1<<n)
      BigInteger.prototype.flipBit = function (n) {
          return this.changeBit(n, op_xor);
      };
      // BigInteger.prototype.add = bnAdd;
      // (public) this + a
      BigInteger.prototype.add = function (a) {
          var r = nbi();
          this.addTo(a, r);
          return r;
      };
      // BigInteger.prototype.subtract = bnSubtract;
      // (public) this - a
      BigInteger.prototype.subtract = function (a) {
          var r = nbi();
          this.subTo(a, r);
          return r;
      };
      // BigInteger.prototype.multiply = bnMultiply;
      // (public) this * a
      BigInteger.prototype.multiply = function (a) {
          var r = nbi();
          this.multiplyTo(a, r);
          return r;
      };
      // BigInteger.prototype.divide = bnDivide;
      // (public) this / a
      BigInteger.prototype.divide = function (a) {
          var r = nbi();
          this.divRemTo(a, r, null);
          return r;
      };
      // BigInteger.prototype.remainder = bnRemainder;
      // (public) this % a
      BigInteger.prototype.remainder = function (a) {
          var r = nbi();
          this.divRemTo(a, null, r);
          return r;
      };
      // BigInteger.prototype.divideAndRemainder = bnDivideAndRemainder;
      // (public) [this/a,this%a]
      BigInteger.prototype.divideAndRemainder = function (a) {
          var q = nbi();
          var r = nbi();
          this.divRemTo(a, q, r);
          return [q, r];
      };
      // BigInteger.prototype.modPow = bnModPow;
      // (public) this^e % m (HAC 14.85)
      BigInteger.prototype.modPow = function (e, m) {
          var i = e.bitLength();
          var k;
          var r = nbv(1);
          var z;
          if (i <= 0) {
              return r;
          }
          else if (i < 18) {
              k = 1;
          }
          else if (i < 48) {
              k = 3;
          }
          else if (i < 144) {
              k = 4;
          }
          else if (i < 768) {
              k = 5;
          }
          else {
              k = 6;
          }
          if (i < 8) {
              z = new Classic(m);
          }
          else if (m.isEven()) {
              z = new Barrett(m);
          }
          else {
              z = new Montgomery(m);
          }
          // precomputation
          var g = [];
          var n = 3;
          var k1 = k - 1;
          var km = (1 << k) - 1;
          g[1] = z.convert(this);
          if (k > 1) {
              var g2 = nbi();
              z.sqrTo(g[1], g2);
              while (n <= km) {
                  g[n] = nbi();
                  z.mulTo(g2, g[n - 2], g[n]);
                  n += 2;
              }
          }
          var j = e.t - 1;
          var w;
          var is1 = true;
          var r2 = nbi();
          var t;
          i = nbits(e[j]) - 1;
          while (j >= 0) {
              if (i >= k1) {
                  w = (e[j] >> (i - k1)) & km;
              }
              else {
                  w = (e[j] & ((1 << (i + 1)) - 1)) << (k1 - i);
                  if (j > 0) {
                      w |= e[j - 1] >> (this.DB + i - k1);
                  }
              }
              n = k;
              while ((w & 1) == 0) {
                  w >>= 1;
                  --n;
              }
              if ((i -= n) < 0) {
                  i += this.DB;
                  --j;
              }
              if (is1) { // ret == 1, don't bother squaring or multiplying it
                  g[w].copyTo(r);
                  is1 = false;
              }
              else {
                  while (n > 1) {
                      z.sqrTo(r, r2);
                      z.sqrTo(r2, r);
                      n -= 2;
                  }
                  if (n > 0) {
                      z.sqrTo(r, r2);
                  }
                  else {
                      t = r;
                      r = r2;
                      r2 = t;
                  }
                  z.mulTo(r2, g[w], r);
              }
              while (j >= 0 && (e[j] & (1 << i)) == 0) {
                  z.sqrTo(r, r2);
                  t = r;
                  r = r2;
                  r2 = t;
                  if (--i < 0) {
                      i = this.DB - 1;
                      --j;
                  }
              }
          }
          return z.revert(r);
      };
      // BigInteger.prototype.modInverse = bnModInverse;
      // (public) 1/this % m (HAC 14.61)
      BigInteger.prototype.modInverse = function (m) {
          var ac = m.isEven();
          if ((this.isEven() && ac) || m.signum() == 0) {
              return BigInteger.ZERO;
          }
          var u = m.clone();
          var v = this.clone();
          var a = nbv(1);
          var b = nbv(0);
          var c = nbv(0);
          var d = nbv(1);
          while (u.signum() != 0) {
              while (u.isEven()) {
                  u.rShiftTo(1, u);
                  if (ac) {
                      if (!a.isEven() || !b.isEven()) {
                          a.addTo(this, a);
                          b.subTo(m, b);
                      }
                      a.rShiftTo(1, a);
                  }
                  else if (!b.isEven()) {
                      b.subTo(m, b);
                  }
                  b.rShiftTo(1, b);
              }
              while (v.isEven()) {
                  v.rShiftTo(1, v);
                  if (ac) {
                      if (!c.isEven() || !d.isEven()) {
                          c.addTo(this, c);
                          d.subTo(m, d);
                      }
                      c.rShiftTo(1, c);
                  }
                  else if (!d.isEven()) {
                      d.subTo(m, d);
                  }
                  d.rShiftTo(1, d);
              }
              if (u.compareTo(v) >= 0) {
                  u.subTo(v, u);
                  if (ac) {
                      a.subTo(c, a);
                  }
                  b.subTo(d, b);
              }
              else {
                  v.subTo(u, v);
                  if (ac) {
                      c.subTo(a, c);
                  }
                  d.subTo(b, d);
              }
          }
          if (v.compareTo(BigInteger.ONE) != 0) {
              return BigInteger.ZERO;
          }
          if (d.compareTo(m) >= 0) {
              return d.subtract(m);
          }
          if (d.signum() < 0) {
              d.addTo(m, d);
          }
          else {
              return d;
          }
          if (d.signum() < 0) {
              return d.add(m);
          }
          else {
              return d;
          }
      };
      // BigInteger.prototype.pow = bnPow;
      // (public) this^e
      BigInteger.prototype.pow = function (e) {
          return this.exp(e, new NullExp());
      };
      // BigInteger.prototype.gcd = bnGCD;
      // (public) gcd(this,a) (HAC 14.54)
      BigInteger.prototype.gcd = function (a) {
          var x = (this.s < 0) ? this.negate() : this.clone();
          var y = (a.s < 0) ? a.negate() : a.clone();
          if (x.compareTo(y) < 0) {
              var t = x;
              x = y;
              y = t;
          }
          var i = x.getLowestSetBit();
          var g = y.getLowestSetBit();
          if (g < 0) {
              return x;
          }
          if (i < g) {
              g = i;
          }
          if (g > 0) {
              x.rShiftTo(g, x);
              y.rShiftTo(g, y);
          }
          while (x.signum() > 0) {
              if ((i = x.getLowestSetBit()) > 0) {
                  x.rShiftTo(i, x);
              }
              if ((i = y.getLowestSetBit()) > 0) {
                  y.rShiftTo(i, y);
              }
              if (x.compareTo(y) >= 0) {
                  x.subTo(y, x);
                  x.rShiftTo(1, x);
              }
              else {
                  y.subTo(x, y);
                  y.rShiftTo(1, y);
              }
          }
          if (g > 0) {
              y.lShiftTo(g, y);
          }
          return y;
      };
      // BigInteger.prototype.isProbablePrime = bnIsProbablePrime;
      // (public) test primality with certainty >= 1-.5^t
      BigInteger.prototype.isProbablePrime = function (t) {
          var i;
          var x = this.abs();
          if (x.t == 1 && x[0] <= lowprimes[lowprimes.length - 1]) {
              for (i = 0; i < lowprimes.length; ++i) {
                  if (x[0] == lowprimes[i]) {
                      return true;
                  }
              }
              return false;
          }
          if (x.isEven()) {
              return false;
          }
          i = 1;
          while (i < lowprimes.length) {
              var m = lowprimes[i];
              var j = i + 1;
              while (j < lowprimes.length && m < lplim) {
                  m *= lowprimes[j++];
              }
              m = x.modInt(m);
              while (i < j) {
                  if (m % lowprimes[i++] == 0) {
                      return false;
                  }
              }
          }
          return x.millerRabin(t);
      };
      //#endregion PUBLIC
      //#region PROTECTED
      // BigInteger.prototype.copyTo = bnpCopyTo;
      // (protected) copy this to r
      BigInteger.prototype.copyTo = function (r) {
          for (var i = this.t - 1; i >= 0; --i) {
              r[i] = this[i];
          }
          r.t = this.t;
          r.s = this.s;
      };
      // BigInteger.prototype.fromInt = bnpFromInt;
      // (protected) set from integer value x, -DV <= x < DV
      BigInteger.prototype.fromInt = function (x) {
          this.t = 1;
          this.s = (x < 0) ? -1 : 0;
          if (x > 0) {
              this[0] = x;
          }
          else if (x < -1) {
              this[0] = x + this.DV;
          }
          else {
              this.t = 0;
          }
      };
      // BigInteger.prototype.fromString = bnpFromString;
      // (protected) set from string and radix
      BigInteger.prototype.fromString = function (s, b) {
          var k;
          if (b == 16) {
              k = 4;
          }
          else if (b == 8) {
              k = 3;
          }
          else if (b == 256) {
              k = 8;
              /* byte array */
          }
          else if (b == 2) {
              k = 1;
          }
          else if (b == 32) {
              k = 5;
          }
          else if (b == 4) {
              k = 2;
          }
          else {
              this.fromRadix(s, b);
              return;
          }
          this.t = 0;
          this.s = 0;
          var i = s.length;
          var mi = false;
          var sh = 0;
          while (--i >= 0) {
              var x = (k == 8) ? (+s[i]) & 0xff : intAt(s, i);
              if (x < 0) {
                  if (s.charAt(i) == "-") {
                      mi = true;
                  }
                  continue;
              }
              mi = false;
              if (sh == 0) {
                  this[this.t++] = x;
              }
              else if (sh + k > this.DB) {
                  this[this.t - 1] |= (x & ((1 << (this.DB - sh)) - 1)) << sh;
                  this[this.t++] = (x >> (this.DB - sh));
              }
              else {
                  this[this.t - 1] |= x << sh;
              }
              sh += k;
              if (sh >= this.DB) {
                  sh -= this.DB;
              }
          }
          if (k == 8 && ((+s[0]) & 0x80) != 0) {
              this.s = -1;
              if (sh > 0) {
                  this[this.t - 1] |= ((1 << (this.DB - sh)) - 1) << sh;
              }
          }
          this.clamp();
          if (mi) {
              BigInteger.ZERO.subTo(this, this);
          }
      };
      // BigInteger.prototype.clamp = bnpClamp;
      // (protected) clamp off excess high words
      BigInteger.prototype.clamp = function () {
          var c = this.s & this.DM;
          while (this.t > 0 && this[this.t - 1] == c) {
              --this.t;
          }
      };
      // BigInteger.prototype.dlShiftTo = bnpDLShiftTo;
      // (protected) r = this << n*DB
      BigInteger.prototype.dlShiftTo = function (n, r) {
          var i;
          for (i = this.t - 1; i >= 0; --i) {
              r[i + n] = this[i];
          }
          for (i = n - 1; i >= 0; --i) {
              r[i] = 0;
          }
          r.t = this.t + n;
          r.s = this.s;
      };
      // BigInteger.prototype.drShiftTo = bnpDRShiftTo;
      // (protected) r = this >> n*DB
      BigInteger.prototype.drShiftTo = function (n, r) {
          for (var i = n; i < this.t; ++i) {
              r[i - n] = this[i];
          }
          r.t = Math.max(this.t - n, 0);
          r.s = this.s;
      };
      // BigInteger.prototype.lShiftTo = bnpLShiftTo;
      // (protected) r = this << n
      BigInteger.prototype.lShiftTo = function (n, r) {
          var bs = n % this.DB;
          var cbs = this.DB - bs;
          var bm = (1 << cbs) - 1;
          var ds = Math.floor(n / this.DB);
          var c = (this.s << bs) & this.DM;
          for (var i = this.t - 1; i >= 0; --i) {
              r[i + ds + 1] = (this[i] >> cbs) | c;
              c = (this[i] & bm) << bs;
          }
          for (var i = ds - 1; i >= 0; --i) {
              r[i] = 0;
          }
          r[ds] = c;
          r.t = this.t + ds + 1;
          r.s = this.s;
          r.clamp();
      };
      // BigInteger.prototype.rShiftTo = bnpRShiftTo;
      // (protected) r = this >> n
      BigInteger.prototype.rShiftTo = function (n, r) {
          r.s = this.s;
          var ds = Math.floor(n / this.DB);
          if (ds >= this.t) {
              r.t = 0;
              return;
          }
          var bs = n % this.DB;
          var cbs = this.DB - bs;
          var bm = (1 << bs) - 1;
          r[0] = this[ds] >> bs;
          for (var i = ds + 1; i < this.t; ++i) {
              r[i - ds - 1] |= (this[i] & bm) << cbs;
              r[i - ds] = this[i] >> bs;
          }
          if (bs > 0) {
              r[this.t - ds - 1] |= (this.s & bm) << cbs;
          }
          r.t = this.t - ds;
          r.clamp();
      };
      // BigInteger.prototype.subTo = bnpSubTo;
      // (protected) r = this - a
      BigInteger.prototype.subTo = function (a, r) {
          var i = 0;
          var c = 0;
          var m = Math.min(a.t, this.t);
          while (i < m) {
              c += this[i] - a[i];
              r[i++] = c & this.DM;
              c >>= this.DB;
          }
          if (a.t < this.t) {
              c -= a.s;
              while (i < this.t) {
                  c += this[i];
                  r[i++] = c & this.DM;
                  c >>= this.DB;
              }
              c += this.s;
          }
          else {
              c += this.s;
              while (i < a.t) {
                  c -= a[i];
                  r[i++] = c & this.DM;
                  c >>= this.DB;
              }
              c -= a.s;
          }
          r.s = (c < 0) ? -1 : 0;
          if (c < -1) {
              r[i++] = this.DV + c;
          }
          else if (c > 0) {
              r[i++] = c;
          }
          r.t = i;
          r.clamp();
      };
      // BigInteger.prototype.multiplyTo = bnpMultiplyTo;
      // (protected) r = this * a, r != this,a (HAC 14.12)
      // "this" should be the larger one if appropriate.
      BigInteger.prototype.multiplyTo = function (a, r) {
          var x = this.abs();
          var y = a.abs();
          var i = x.t;
          r.t = i + y.t;
          while (--i >= 0) {
              r[i] = 0;
          }
          for (i = 0; i < y.t; ++i) {
              r[i + x.t] = x.am(0, y[i], r, i, 0, x.t);
          }
          r.s = 0;
          r.clamp();
          if (this.s != a.s) {
              BigInteger.ZERO.subTo(r, r);
          }
      };
      // BigInteger.prototype.squareTo = bnpSquareTo;
      // (protected) r = this^2, r != this (HAC 14.16)
      BigInteger.prototype.squareTo = function (r) {
          var x = this.abs();
          var i = r.t = 2 * x.t;
          while (--i >= 0) {
              r[i] = 0;
          }
          for (i = 0; i < x.t - 1; ++i) {
              var c = x.am(i, x[i], r, 2 * i, 0, 1);
              if ((r[i + x.t] += x.am(i + 1, 2 * x[i], r, 2 * i + 1, c, x.t - i - 1)) >= x.DV) {
                  r[i + x.t] -= x.DV;
                  r[i + x.t + 1] = 1;
              }
          }
          if (r.t > 0) {
              r[r.t - 1] += x.am(i, x[i], r, 2 * i, 0, 1);
          }
          r.s = 0;
          r.clamp();
      };
      // BigInteger.prototype.divRemTo = bnpDivRemTo;
      // (protected) divide this by m, quotient and remainder to q, r (HAC 14.20)
      // r != q, this != m.  q or r may be null.
      BigInteger.prototype.divRemTo = function (m, q, r) {
          var pm = m.abs();
          if (pm.t <= 0) {
              return;
          }
          var pt = this.abs();
          if (pt.t < pm.t) {
              if (q != null) {
                  q.fromInt(0);
              }
              if (r != null) {
                  this.copyTo(r);
              }
              return;
          }
          if (r == null) {
              r = nbi();
          }
          var y = nbi();
          var ts = this.s;
          var ms = m.s;
          var nsh = this.DB - nbits(pm[pm.t - 1]); // normalize modulus
          if (nsh > 0) {
              pm.lShiftTo(nsh, y);
              pt.lShiftTo(nsh, r);
          }
          else {
              pm.copyTo(y);
              pt.copyTo(r);
          }
          var ys = y.t;
          var y0 = y[ys - 1];
          if (y0 == 0) {
              return;
          }
          var yt = y0 * (1 << this.F1) + ((ys > 1) ? y[ys - 2] >> this.F2 : 0);
          var d1 = this.FV / yt;
          var d2 = (1 << this.F1) / yt;
          var e = 1 << this.F2;
          var i = r.t;
          var j = i - ys;
          var t = (q == null) ? nbi() : q;
          y.dlShiftTo(j, t);
          if (r.compareTo(t) >= 0) {
              r[r.t++] = 1;
              r.subTo(t, r);
          }
          BigInteger.ONE.dlShiftTo(ys, t);
          t.subTo(y, y); // "negative" y so we can replace sub with am later
          while (y.t < ys) {
              y[y.t++] = 0;
          }
          while (--j >= 0) {
              // Estimate quotient digit
              var qd = (r[--i] == y0) ? this.DM : Math.floor(r[i] * d1 + (r[i - 1] + e) * d2);
              if ((r[i] += y.am(0, qd, r, j, 0, ys)) < qd) { // Try it out
                  y.dlShiftTo(j, t);
                  r.subTo(t, r);
                  while (r[i] < --qd) {
                      r.subTo(t, r);
                  }
              }
          }
          if (q != null) {
              r.drShiftTo(ys, q);
              if (ts != ms) {
                  BigInteger.ZERO.subTo(q, q);
              }
          }
          r.t = ys;
          r.clamp();
          if (nsh > 0) {
              r.rShiftTo(nsh, r);
          } // Denormalize remainder
          if (ts < 0) {
              BigInteger.ZERO.subTo(r, r);
          }
      };
      // BigInteger.prototype.invDigit = bnpInvDigit;
      // (protected) return "-1/this % 2^DB"; useful for Mont. reduction
      // justification:
      //         xy == 1 (mod m)
      //         xy =  1+km
      //   xy(2-xy) = (1+km)(1-km)
      // x[y(2-xy)] = 1-k^2m^2
      // x[y(2-xy)] == 1 (mod m^2)
      // if y is 1/x mod m, then y(2-xy) is 1/x mod m^2
      // should reduce x and y(2-xy) by m^2 at each step to keep size bounded.
      // JS multiply "overflows" differently from C/C++, so care is needed here.
      BigInteger.prototype.invDigit = function () {
          if (this.t < 1) {
              return 0;
          }
          var x = this[0];
          if ((x & 1) == 0) {
              return 0;
          }
          var y = x & 3; // y == 1/x mod 2^2
          y = (y * (2 - (x & 0xf) * y)) & 0xf; // y == 1/x mod 2^4
          y = (y * (2 - (x & 0xff) * y)) & 0xff; // y == 1/x mod 2^8
          y = (y * (2 - (((x & 0xffff) * y) & 0xffff))) & 0xffff; // y == 1/x mod 2^16
          // last step - calculate inverse mod DV directly;
          // assumes 16 < DB <= 32 and assumes ability to handle 48-bit ints
          y = (y * (2 - x * y % this.DV)) % this.DV; // y == 1/x mod 2^dbits
          // we really want the negative inverse, and -DV < y < DV
          return (y > 0) ? this.DV - y : -y;
      };
      // BigInteger.prototype.isEven = bnpIsEven;
      // (protected) true iff this is even
      BigInteger.prototype.isEven = function () {
          return ((this.t > 0) ? (this[0] & 1) : this.s) == 0;
      };
      // BigInteger.prototype.exp = bnpExp;
      // (protected) this^e, e < 2^32, doing sqr and mul with "r" (HAC 14.79)
      BigInteger.prototype.exp = function (e, z) {
          if (e > 0xffffffff || e < 1) {
              return BigInteger.ONE;
          }
          var r = nbi();
          var r2 = nbi();
          var g = z.convert(this);
          var i = nbits(e) - 1;
          g.copyTo(r);
          while (--i >= 0) {
              z.sqrTo(r, r2);
              if ((e & (1 << i)) > 0) {
                  z.mulTo(r2, g, r);
              }
              else {
                  var t = r;
                  r = r2;
                  r2 = t;
              }
          }
          return z.revert(r);
      };
      // BigInteger.prototype.chunkSize = bnpChunkSize;
      // (protected) return x s.t. r^x < DV
      BigInteger.prototype.chunkSize = function (r) {
          return Math.floor(Math.LN2 * this.DB / Math.log(r));
      };
      // BigInteger.prototype.toRadix = bnpToRadix;
      // (protected) convert to radix string
      BigInteger.prototype.toRadix = function (b) {
          if (b == null) {
              b = 10;
          }
          if (this.signum() == 0 || b < 2 || b > 36) {
              return "0";
          }
          var cs = this.chunkSize(b);
          var a = Math.pow(b, cs);
          var d = nbv(a);
          var y = nbi();
          var z = nbi();
          var r = "";
          this.divRemTo(d, y, z);
          while (y.signum() > 0) {
              r = (a + z.intValue()).toString(b).substr(1) + r;
              y.divRemTo(d, y, z);
          }
          return z.intValue().toString(b) + r;
      };
      // BigInteger.prototype.fromRadix = bnpFromRadix;
      // (protected) convert from radix string
      BigInteger.prototype.fromRadix = function (s, b) {
          this.fromInt(0);
          if (b == null) {
              b = 10;
          }
          var cs = this.chunkSize(b);
          var d = Math.pow(b, cs);
          var mi = false;
          var j = 0;
          var w = 0;
          for (var i = 0; i < s.length; ++i) {
              var x = intAt(s, i);
              if (x < 0) {
                  if (s.charAt(i) == "-" && this.signum() == 0) {
                      mi = true;
                  }
                  continue;
              }
              w = b * w + x;
              if (++j >= cs) {
                  this.dMultiply(d);
                  this.dAddOffset(w, 0);
                  j = 0;
                  w = 0;
              }
          }
          if (j > 0) {
              this.dMultiply(Math.pow(b, j));
              this.dAddOffset(w, 0);
          }
          if (mi) {
              BigInteger.ZERO.subTo(this, this);
          }
      };
      // BigInteger.prototype.fromNumber = bnpFromNumber;
      // (protected) alternate constructor
      BigInteger.prototype.fromNumber = function (a, b, c) {
          if ("number" == typeof b) {
              // new BigInteger(int,int,RNG)
              if (a < 2) {
                  this.fromInt(1);
              }
              else {
                  this.fromNumber(a, c);
                  if (!this.testBit(a - 1)) {
                      // force MSB set
                      this.bitwiseTo(BigInteger.ONE.shiftLeft(a - 1), op_or, this);
                  }
                  if (this.isEven()) {
                      this.dAddOffset(1, 0);
                  } // force odd
                  while (!this.isProbablePrime(b)) {
                      this.dAddOffset(2, 0);
                      if (this.bitLength() > a) {
                          this.subTo(BigInteger.ONE.shiftLeft(a - 1), this);
                      }
                  }
              }
          }
          else {
              // new BigInteger(int,RNG)
              var x = [];
              var t = a & 7;
              x.length = (a >> 3) + 1;
              b.nextBytes(x);
              if (t > 0) {
                  x[0] &= ((1 << t) - 1);
              }
              else {
                  x[0] = 0;
              }
              this.fromString(x, 256);
          }
      };
      // BigInteger.prototype.bitwiseTo = bnpBitwiseTo;
      // (protected) r = this op a (bitwise)
      BigInteger.prototype.bitwiseTo = function (a, op, r) {
          var i;
          var f;
          var m = Math.min(a.t, this.t);
          for (i = 0; i < m; ++i) {
              r[i] = op(this[i], a[i]);
          }
          if (a.t < this.t) {
              f = a.s & this.DM;
              for (i = m; i < this.t; ++i) {
                  r[i] = op(this[i], f);
              }
              r.t = this.t;
          }
          else {
              f = this.s & this.DM;
              for (i = m; i < a.t; ++i) {
                  r[i] = op(f, a[i]);
              }
              r.t = a.t;
          }
          r.s = op(this.s, a.s);
          r.clamp();
      };
      // BigInteger.prototype.changeBit = bnpChangeBit;
      // (protected) this op (1<<n)
      BigInteger.prototype.changeBit = function (n, op) {
          var r = BigInteger.ONE.shiftLeft(n);
          this.bitwiseTo(r, op, r);
          return r;
      };
      // BigInteger.prototype.addTo = bnpAddTo;
      // (protected) r = this + a
      BigInteger.prototype.addTo = function (a, r) {
          var i = 0;
          var c = 0;
          var m = Math.min(a.t, this.t);
          while (i < m) {
              c += this[i] + a[i];
              r[i++] = c & this.DM;
              c >>= this.DB;
          }
          if (a.t < this.t) {
              c += a.s;
              while (i < this.t) {
                  c += this[i];
                  r[i++] = c & this.DM;
                  c >>= this.DB;
              }
              c += this.s;
          }
          else {
              c += this.s;
              while (i < a.t) {
                  c += a[i];
                  r[i++] = c & this.DM;
                  c >>= this.DB;
              }
              c += a.s;
          }
          r.s = (c < 0) ? -1 : 0;
          if (c > 0) {
              r[i++] = c;
          }
          else if (c < -1) {
              r[i++] = this.DV + c;
          }
          r.t = i;
          r.clamp();
      };
      // BigInteger.prototype.dMultiply = bnpDMultiply;
      // (protected) this *= n, this >= 0, 1 < n < DV
      BigInteger.prototype.dMultiply = function (n) {
          this[this.t] = this.am(0, n - 1, this, 0, 0, this.t);
          ++this.t;
          this.clamp();
      };
      // BigInteger.prototype.dAddOffset = bnpDAddOffset;
      // (protected) this += n << w words, this >= 0
      BigInteger.prototype.dAddOffset = function (n, w) {
          if (n == 0) {
              return;
          }
          while (this.t <= w) {
              this[this.t++] = 0;
          }
          this[w] += n;
          while (this[w] >= this.DV) {
              this[w] -= this.DV;
              if (++w >= this.t) {
                  this[this.t++] = 0;
              }
              ++this[w];
          }
      };
      // BigInteger.prototype.multiplyLowerTo = bnpMultiplyLowerTo;
      // (protected) r = lower n words of "this * a", a.t <= n
      // "this" should be the larger one if appropriate.
      BigInteger.prototype.multiplyLowerTo = function (a, n, r) {
          var i = Math.min(this.t + a.t, n);
          r.s = 0; // assumes a,this >= 0
          r.t = i;
          while (i > 0) {
              r[--i] = 0;
          }
          for (var j = r.t - this.t; i < j; ++i) {
              r[i + this.t] = this.am(0, a[i], r, i, 0, this.t);
          }
          for (var j = Math.min(a.t, n); i < j; ++i) {
              this.am(0, a[i], r, i, 0, n - i);
          }
          r.clamp();
      };
      // BigInteger.prototype.multiplyUpperTo = bnpMultiplyUpperTo;
      // (protected) r = "this * a" without lower n words, n > 0
      // "this" should be the larger one if appropriate.
      BigInteger.prototype.multiplyUpperTo = function (a, n, r) {
          --n;
          var i = r.t = this.t + a.t - n;
          r.s = 0; // assumes a,this >= 0
          while (--i >= 0) {
              r[i] = 0;
          }
          for (i = Math.max(n - this.t, 0); i < a.t; ++i) {
              r[this.t + i - n] = this.am(n - i, a[i], r, 0, 0, this.t + i - n);
          }
          r.clamp();
          r.drShiftTo(1, r);
      };
      // BigInteger.prototype.modInt = bnpModInt;
      // (protected) this % n, n < 2^26
      BigInteger.prototype.modInt = function (n) {
          if (n <= 0) {
              return 0;
          }
          var d = this.DV % n;
          var r = (this.s < 0) ? n - 1 : 0;
          if (this.t > 0) {
              if (d == 0) {
                  r = this[0] % n;
              }
              else {
                  for (var i = this.t - 1; i >= 0; --i) {
                      r = (d * r + this[i]) % n;
                  }
              }
          }
          return r;
      };
      // BigInteger.prototype.millerRabin = bnpMillerRabin;
      // (protected) true if probably prime (HAC 4.24, Miller-Rabin)
      BigInteger.prototype.millerRabin = function (t) {
          var n1 = this.subtract(BigInteger.ONE);
          var k = n1.getLowestSetBit();
          if (k <= 0) {
              return false;
          }
          var r = n1.shiftRight(k);
          t = (t + 1) >> 1;
          if (t > lowprimes.length) {
              t = lowprimes.length;
          }
          var a = nbi();
          for (var i = 0; i < t; ++i) {
              // Pick bases at random, instead of starting at 2
              a.fromInt(lowprimes[Math.floor(Math.random() * lowprimes.length)]);
              var y = a.modPow(r, this);
              if (y.compareTo(BigInteger.ONE) != 0 && y.compareTo(n1) != 0) {
                  var j = 1;
                  while (j++ < k && y.compareTo(n1) != 0) {
                      y = y.modPowInt(2, this);
                      if (y.compareTo(BigInteger.ONE) == 0) {
                          return false;
                      }
                  }
                  if (y.compareTo(n1) != 0) {
                      return false;
                  }
              }
          }
          return true;
      };
      // BigInteger.prototype.square = bnSquare;
      // (public) this^2
      BigInteger.prototype.square = function () {
          var r = nbi();
          this.squareTo(r);
          return r;
      };
      //#region ASYNC
      // Public API method
      BigInteger.prototype.gcda = function (a, callback) {
          var x = (this.s < 0) ? this.negate() : this.clone();
          var y = (a.s < 0) ? a.negate() : a.clone();
          if (x.compareTo(y) < 0) {
              var t = x;
              x = y;
              y = t;
          }
          var i = x.getLowestSetBit();
          var g = y.getLowestSetBit();
          if (g < 0) {
              callback(x);
              return;
          }
          if (i < g) {
              g = i;
          }
          if (g > 0) {
              x.rShiftTo(g, x);
              y.rShiftTo(g, y);
          }
          // Workhorse of the algorithm, gets called 200 - 800 times per 512 bit keygen.
          var gcda1 = function () {
              if ((i = x.getLowestSetBit()) > 0) {
                  x.rShiftTo(i, x);
              }
              if ((i = y.getLowestSetBit()) > 0) {
                  y.rShiftTo(i, y);
              }
              if (x.compareTo(y) >= 0) {
                  x.subTo(y, x);
                  x.rShiftTo(1, x);
              }
              else {
                  y.subTo(x, y);
                  y.rShiftTo(1, y);
              }
              if (!(x.signum() > 0)) {
                  if (g > 0) {
                      y.lShiftTo(g, y);
                  }
                  setTimeout(function () { callback(y); }, 0); // escape
              }
              else {
                  setTimeout(gcda1, 0);
              }
          };
          setTimeout(gcda1, 10);
      };
      // (protected) alternate constructor
      BigInteger.prototype.fromNumberAsync = function (a, b, c, callback) {
          if ("number" == typeof b) {
              if (a < 2) {
                  this.fromInt(1);
              }
              else {
                  this.fromNumber(a, c);
                  if (!this.testBit(a - 1)) {
                      this.bitwiseTo(BigInteger.ONE.shiftLeft(a - 1), op_or, this);
                  }
                  if (this.isEven()) {
                      this.dAddOffset(1, 0);
                  }
                  var bnp_1 = this;
                  var bnpfn1_1 = function () {
                      bnp_1.dAddOffset(2, 0);
                      if (bnp_1.bitLength() > a) {
                          bnp_1.subTo(BigInteger.ONE.shiftLeft(a - 1), bnp_1);
                      }
                      if (bnp_1.isProbablePrime(b)) {
                          setTimeout(function () { callback(); }, 0); // escape
                      }
                      else {
                          setTimeout(bnpfn1_1, 0);
                      }
                  };
                  setTimeout(bnpfn1_1, 0);
              }
          }
          else {
              var x = [];
              var t = a & 7;
              x.length = (a >> 3) + 1;
              b.nextBytes(x);
              if (t > 0) {
                  x[0] &= ((1 << t) - 1);
              }
              else {
                  x[0] = 0;
              }
              this.fromString(x, 256);
          }
      };
      return BigInteger;
  }());
  //#region REDUCERS
  //#region NullExp
  var NullExp = /** @class */ (function () {
      function NullExp() {
      }
      // NullExp.prototype.convert = nNop;
      NullExp.prototype.convert = function (x) {
          return x;
      };
      // NullExp.prototype.revert = nNop;
      NullExp.prototype.revert = function (x) {
          return x;
      };
      // NullExp.prototype.mulTo = nMulTo;
      NullExp.prototype.mulTo = function (x, y, r) {
          x.multiplyTo(y, r);
      };
      // NullExp.prototype.sqrTo = nSqrTo;
      NullExp.prototype.sqrTo = function (x, r) {
          x.squareTo(r);
      };
      return NullExp;
  }());
  // Modular reduction using "classic" algorithm
  var Classic = /** @class */ (function () {
      function Classic(m) {
          this.m = m;
      }
      // Classic.prototype.convert = cConvert;
      Classic.prototype.convert = function (x) {
          if (x.s < 0 || x.compareTo(this.m) >= 0) {
              return x.mod(this.m);
          }
          else {
              return x;
          }
      };
      // Classic.prototype.revert = cRevert;
      Classic.prototype.revert = function (x) {
          return x;
      };
      // Classic.prototype.reduce = cReduce;
      Classic.prototype.reduce = function (x) {
          x.divRemTo(this.m, null, x);
      };
      // Classic.prototype.mulTo = cMulTo;
      Classic.prototype.mulTo = function (x, y, r) {
          x.multiplyTo(y, r);
          this.reduce(r);
      };
      // Classic.prototype.sqrTo = cSqrTo;
      Classic.prototype.sqrTo = function (x, r) {
          x.squareTo(r);
          this.reduce(r);
      };
      return Classic;
  }());
  //#endregion
  //#region Montgomery
  // Montgomery reduction
  var Montgomery = /** @class */ (function () {
      function Montgomery(m) {
          this.m = m;
          this.mp = m.invDigit();
          this.mpl = this.mp & 0x7fff;
          this.mph = this.mp >> 15;
          this.um = (1 << (m.DB - 15)) - 1;
          this.mt2 = 2 * m.t;
      }
      // Montgomery.prototype.convert = montConvert;
      // xR mod m
      Montgomery.prototype.convert = function (x) {
          var r = nbi();
          x.abs().dlShiftTo(this.m.t, r);
          r.divRemTo(this.m, null, r);
          if (x.s < 0 && r.compareTo(BigInteger.ZERO) > 0) {
              this.m.subTo(r, r);
          }
          return r;
      };
      // Montgomery.prototype.revert = montRevert;
      // x/R mod m
      Montgomery.prototype.revert = function (x) {
          var r = nbi();
          x.copyTo(r);
          this.reduce(r);
          return r;
      };
      // Montgomery.prototype.reduce = montReduce;
      // x = x/R mod m (HAC 14.32)
      Montgomery.prototype.reduce = function (x) {
          while (x.t <= this.mt2) {
              // pad x so am has enough room later
              x[x.t++] = 0;
          }
          for (var i = 0; i < this.m.t; ++i) {
              // faster way of calculating u0 = x[i]*mp mod DV
              var j = x[i] & 0x7fff;
              var u0 = (j * this.mpl + (((j * this.mph + (x[i] >> 15) * this.mpl) & this.um) << 15)) & x.DM;
              // use am to combine the multiply-shift-add into one call
              j = i + this.m.t;
              x[j] += this.m.am(0, u0, x, i, 0, this.m.t);
              // propagate carry
              while (x[j] >= x.DV) {
                  x[j] -= x.DV;
                  x[++j]++;
              }
          }
          x.clamp();
          x.drShiftTo(this.m.t, x);
          if (x.compareTo(this.m) >= 0) {
              x.subTo(this.m, x);
          }
      };
      // Montgomery.prototype.mulTo = montMulTo;
      // r = "xy/R mod m"; x,y != r
      Montgomery.prototype.mulTo = function (x, y, r) {
          x.multiplyTo(y, r);
          this.reduce(r);
      };
      // Montgomery.prototype.sqrTo = montSqrTo;
      // r = "x^2/R mod m"; x != r
      Montgomery.prototype.sqrTo = function (x, r) {
          x.squareTo(r);
          this.reduce(r);
      };
      return Montgomery;
  }());
  //#endregion Montgomery
  //#region Barrett
  // Barrett modular reduction
  var Barrett = /** @class */ (function () {
      function Barrett(m) {
          this.m = m;
          // setup Barrett
          this.r2 = nbi();
          this.q3 = nbi();
          BigInteger.ONE.dlShiftTo(2 * m.t, this.r2);
          this.mu = this.r2.divide(m);
      }
      // Barrett.prototype.convert = barrettConvert;
      Barrett.prototype.convert = function (x) {
          if (x.s < 0 || x.t > 2 * this.m.t) {
              return x.mod(this.m);
          }
          else if (x.compareTo(this.m) < 0) {
              return x;
          }
          else {
              var r = nbi();
              x.copyTo(r);
              this.reduce(r);
              return r;
          }
      };
      // Barrett.prototype.revert = barrettRevert;
      Barrett.prototype.revert = function (x) {
          return x;
      };
      // Barrett.prototype.reduce = barrettReduce;
      // x = x mod m (HAC 14.42)
      Barrett.prototype.reduce = function (x) {
          x.drShiftTo(this.m.t - 1, this.r2);
          if (x.t > this.m.t + 1) {
              x.t = this.m.t + 1;
              x.clamp();
          }
          this.mu.multiplyUpperTo(this.r2, this.m.t + 1, this.q3);
          this.m.multiplyLowerTo(this.q3, this.m.t + 1, this.r2);
          while (x.compareTo(this.r2) < 0) {
              x.dAddOffset(1, this.m.t + 1);
          }
          x.subTo(this.r2, x);
          while (x.compareTo(this.m) >= 0) {
              x.subTo(this.m, x);
          }
      };
      // Barrett.prototype.mulTo = barrettMulTo;
      // r = x*y mod m; x,y != r
      Barrett.prototype.mulTo = function (x, y, r) {
          x.multiplyTo(y, r);
          this.reduce(r);
      };
      // Barrett.prototype.sqrTo = barrettSqrTo;
      // r = x^2 mod m; x != r
      Barrett.prototype.sqrTo = function (x, r) {
          x.squareTo(r);
          this.reduce(r);
      };
      return Barrett;
  }());
  //#endregion
  //#endregion REDUCERS
  // return new, unset BigInteger
  function nbi() { return new BigInteger(null); }
  function parseBigInt(str, r) {
      return new BigInteger(str, r);
  }
  // am: Compute w_j += (x*this_i), propagate carries,
  // c is initial carry, returns final carry.
  // c < 3*dvalue, x < 2*dvalue, this_i < dvalue
  // We need to select the fastest one that works in this environment.
  var inBrowser = typeof navigator !== "undefined";
  if (inBrowser && j_lm && (navigator.appName == "Microsoft Internet Explorer")) {
      // am2 avoids a big mult-and-extract completely.
      // Max digit bits should be <= 30 because we do bitwise ops
      // on values up to 2*hdvalue^2-hdvalue-1 (< 2^31)
      BigInteger.prototype.am = function am2(i, x, w, j, c, n) {
          var xl = x & 0x7fff;
          var xh = x >> 15;
          while (--n >= 0) {
              var l = this[i] & 0x7fff;
              var h = this[i++] >> 15;
              var m = xh * l + h * xl;
              l = xl * l + ((m & 0x7fff) << 15) + w[j] + (c & 0x3fffffff);
              c = (l >>> 30) + (m >>> 15) + xh * h + (c >>> 30);
              w[j++] = l & 0x3fffffff;
          }
          return c;
      };
      dbits = 30;
  }
  else if (inBrowser && j_lm && (navigator.appName != "Netscape")) {
      // am1: use a single mult and divide to get the high bits,
      // max digit bits should be 26 because
      // max internal value = 2*dvalue^2-2*dvalue (< 2^53)
      BigInteger.prototype.am = function am1(i, x, w, j, c, n) {
          while (--n >= 0) {
              var v = x * this[i++] + w[j] + c;
              c = Math.floor(v / 0x4000000);
              w[j++] = v & 0x3ffffff;
          }
          return c;
      };
      dbits = 26;
  }
  else { // Mozilla/Netscape seems to prefer am3
      // Alternately, set max digit bits to 28 since some
      // browsers slow down when dealing with 32-bit numbers.
      BigInteger.prototype.am = function am3(i, x, w, j, c, n) {
          var xl = x & 0x3fff;
          var xh = x >> 14;
          while (--n >= 0) {
              var l = this[i] & 0x3fff;
              var h = this[i++] >> 14;
              var m = xh * l + h * xl;
              l = xl * l + ((m & 0x3fff) << 14) + w[j] + c;
              c = (l >> 28) + (m >> 14) + xh * h;
              w[j++] = l & 0xfffffff;
          }
          return c;
      };
      dbits = 28;
  }
  BigInteger.prototype.DB = dbits;
  BigInteger.prototype.DM = ((1 << dbits) - 1);
  BigInteger.prototype.DV = (1 << dbits);
  var BI_FP = 52;
  BigInteger.prototype.FV = Math.pow(2, BI_FP);
  BigInteger.prototype.F1 = BI_FP - dbits;
  BigInteger.prototype.F2 = 2 * dbits - BI_FP;
  // Digit conversions
  var BI_RC = [];
  var rr;
  var vv;
  rr = "0".charCodeAt(0);
  for (vv = 0; vv <= 9; ++vv) {
      BI_RC[rr++] = vv;
  }
  rr = "a".charCodeAt(0);
  for (vv = 10; vv < 36; ++vv) {
      BI_RC[rr++] = vv;
  }
  rr = "A".charCodeAt(0);
  for (vv = 10; vv < 36; ++vv) {
      BI_RC[rr++] = vv;
  }
  function intAt(s, i) {
      var c = BI_RC[s.charCodeAt(i)];
      return (c == null) ? -1 : c;
  }
  // return bigint initialized to value
  function nbv(i) {
      var r = nbi();
      r.fromInt(i);
      return r;
  }
  // returns bit length of the integer x
  function nbits(x) {
      var r = 1;
      var t;
      if ((t = x >>> 16) != 0) {
          x = t;
          r += 16;
      }
      if ((t = x >> 8) != 0) {
          x = t;
          r += 8;
      }
      if ((t = x >> 4) != 0) {
          x = t;
          r += 4;
      }
      if ((t = x >> 2) != 0) {
          x = t;
          r += 2;
      }
      if ((t = x >> 1) != 0) {
          x = t;
          r += 1;
      }
      return r;
  }
  // "constants"
  BigInteger.ZERO = nbv(0);
  BigInteger.ONE = nbv(1);

  // prng4.js - uses Arcfour as a PRNG
  var Arcfour = /** @class */ (function () {
      function Arcfour() {
          this.i = 0;
          this.j = 0;
          this.S = [];
      }
      // Arcfour.prototype.init = ARC4init;
      // Initialize arcfour context from key, an array of ints, each from [0..255]
      Arcfour.prototype.init = function (key) {
          var i;
          var j;
          var t;
          for (i = 0; i < 256; ++i) {
              this.S[i] = i;
          }
          j = 0;
          for (i = 0; i < 256; ++i) {
              j = (j + this.S[i] + key[i % key.length]) & 255;
              t = this.S[i];
              this.S[i] = this.S[j];
              this.S[j] = t;
          }
          this.i = 0;
          this.j = 0;
      };
      // Arcfour.prototype.next = ARC4next;
      Arcfour.prototype.next = function () {
          var t;
          this.i = (this.i + 1) & 255;
          this.j = (this.j + this.S[this.i]) & 255;
          t = this.S[this.i];
          this.S[this.i] = this.S[this.j];
          this.S[this.j] = t;
          return this.S[(t + this.S[this.i]) & 255];
      };
      return Arcfour;
  }());
  // Plug in your RNG constructor here
  function prng_newstate() {
      return new Arcfour();
  }
  // Pool size must be a multiple of 4 and greater than 32.
  // An array of bytes the size of the pool will be passed to init()
  var rng_psize = 256;

  // Random number generator - requires a PRNG backend, e.g. prng4.js
  var rng_state;
  var rng_pool = null;
  var rng_pptr;
  // Initialize the pool with junk if needed.
  if (rng_pool == null) {
      rng_pool = [];
      rng_pptr = 0;
      var t = void 0;
      if (typeof window !== 'undefined' && window.crypto && window.crypto.getRandomValues) {
          // Extract entropy (2048 bits) from RNG if available
          var z = new Uint32Array(256);
          window.crypto.getRandomValues(z);
          for (t = 0; t < z.length; ++t) {
              rng_pool[rng_pptr++] = z[t] & 255;
          }
      }
      // Use mouse events for entropy, if we do not have enough entropy by the time
      // we need it, entropy will be generated by Math.random.
      var count = 0;
      var onMouseMoveListener_1 = function (ev) {
          count = count || 0;
          if (count >= 256 || rng_pptr >= rng_psize) {
              if (window.removeEventListener) {
                  window.removeEventListener("mousemove", onMouseMoveListener_1, false);
              }
              else if (window.detachEvent) {
                  window.detachEvent("onmousemove", onMouseMoveListener_1);
              }
              return;
          }
          try {
              var mouseCoordinates = ev.x + ev.y;
              rng_pool[rng_pptr++] = mouseCoordinates & 255;
              count += 1;
          }
          catch (e) {
              // Sometimes Firefox will deny permission to access event properties for some reason. Ignore.
          }
      };
      if (typeof window !== 'undefined') {
          if (window.addEventListener) {
              window.addEventListener("mousemove", onMouseMoveListener_1, false);
          }
          else if (window.attachEvent) {
              window.attachEvent("onmousemove", onMouseMoveListener_1);
          }
      }
  }
  function rng_get_byte() {
      if (rng_state == null) {
          rng_state = prng_newstate();
          // At this point, we may not have collected enough entropy.  If not, fall back to Math.random
          while (rng_pptr < rng_psize) {
              var random = Math.floor(65536 * Math.random());
              rng_pool[rng_pptr++] = random & 255;
          }
          rng_state.init(rng_pool);
          for (rng_pptr = 0; rng_pptr < rng_pool.length; ++rng_pptr) {
              rng_pool[rng_pptr] = 0;
          }
          rng_pptr = 0;
      }
      // TODO: allow reseeding after first request
      return rng_state.next();
  }
  var SecureRandom = /** @class */ (function () {
      function SecureRandom() {
      }
      SecureRandom.prototype.nextBytes = function (ba) {
          for (var i = 0; i < ba.length; ++i) {
              ba[i] = rng_get_byte();
          }
      };
      return SecureRandom;
  }());

  // Depends on jsbn.js and rng.js
  // function linebrk(s,n) {
  //   var ret = "";
  //   var i = 0;
  //   while(i + n < s.length) {
  //     ret += s.substring(i,i+n) + "\n";
  //     i += n;
  //   }
  //   return ret + s.substring(i,s.length);
  // }
  // function byte2Hex(b) {
  //   if(b < 0x10)
  //     return "0" + b.toString(16);
  //   else
  //     return b.toString(16);
  // }
  function pkcs1pad1(s, n) {
      if (n < s.length + 22) {
          console.error("Message too long for RSA");
          return null;
      }
      var len = n - s.length - 6;
      var filler = "";
      for (var f = 0; f < len; f += 2) {
          filler += "ff";
      }
      var m = "0001" + filler + "00" + s;
      return parseBigInt(m, 16);
  }
  // PKCS#1 (type 2, random) pad input string s to n bytes, and return a bigint
  function pkcs1pad2(s, n) {
      if (n < s.length + 11) { // TODO: fix for utf-8
          console.error("Message too long for RSA");
          return null;
      }
      var ba = [];
      var i = s.length - 1;
      while (i >= 0 && n > 0) {
          var c = s.charCodeAt(i--);
          if (c < 128) { // encode using utf-8
              ba[--n] = c;
          }
          else if ((c > 127) && (c < 2048)) {
              ba[--n] = (c & 63) | 128;
              ba[--n] = (c >> 6) | 192;
          }
          else {
              ba[--n] = (c & 63) | 128;
              ba[--n] = ((c >> 6) & 63) | 128;
              ba[--n] = (c >> 12) | 224;
          }
      }
      ba[--n] = 0;
      var rng = new SecureRandom();
      var x = [];
      while (n > 2) { // random non-zero pad
          x[0] = 0;
          while (x[0] == 0) {
              rng.nextBytes(x);
          }
          ba[--n] = x[0];
      }
      ba[--n] = 2;
      ba[--n] = 0;
      return new BigInteger(ba);
  }
  // "empty" RSA key constructor
  var RSAKey = /** @class */ (function () {
      function RSAKey() {
          this.n = null;
          this.e = 0;
          this.d = null;
          this.p = null;
          this.q = null;
          this.dmp1 = null;
          this.dmq1 = null;
          this.coeff = null;
      }
      //#region PROTECTED
      // protected
      // RSAKey.prototype.doPublic = RSADoPublic;
      // Perform raw public operation on "x": return x^e (mod n)
      RSAKey.prototype.doPublic = function (x) {
          return x.modPowInt(this.e, this.n);
      };
      // RSAKey.prototype.doPrivate = RSADoPrivate;
      // Perform raw private operation on "x": return x^d (mod n)
      RSAKey.prototype.doPrivate = function (x) {
          if (this.p == null || this.q == null) {
              return x.modPow(this.d, this.n);
          }
          // TODO: re-calculate any missing CRT params
          var xp = x.mod(this.p).modPow(this.dmp1, this.p);
          var xq = x.mod(this.q).modPow(this.dmq1, this.q);
          while (xp.compareTo(xq) < 0) {
              xp = xp.add(this.p);
          }
          return xp.subtract(xq).multiply(this.coeff).mod(this.p).multiply(this.q).add(xq);
      };
      //#endregion PROTECTED
      //#region PUBLIC
      // RSAKey.prototype.setPublic = RSASetPublic;
      // Set the public key fields N and e from hex strings
      RSAKey.prototype.setPublic = function (N, E) {
          if (N != null && E != null && N.length > 0 && E.length > 0) {
              this.n = parseBigInt(N, 16);
              this.e = parseInt(E, 16);
          }
          else {
              console.error("Invalid RSA public key");
          }
      };
      // RSAKey.prototype.encrypt = RSAEncrypt;
      // Return the PKCS#1 RSA encryption of "text" as an even-length hex string
      RSAKey.prototype.encrypt = function (text) {
          var maxLength = (this.n.bitLength() + 7) >> 3;
          var m = pkcs1pad2(text, maxLength);
          if (m == null) {
              return null;
          }
          var c = this.doPublic(m);
          if (c == null) {
              return null;
          }
          var h = c.toString(16);
          var length = h.length;
          // fix zero before result
          for (var i = 0; i < maxLength * 2 - length; i++) {
              h = "0" + h;
          }
          return h;
      };
      // RSAKey.prototype.setPrivate = RSASetPrivate;
      // Set the private key fields N, e, and d from hex strings
      RSAKey.prototype.setPrivate = function (N, E, D) {
          if (N != null && E != null && N.length > 0 && E.length > 0) {
              this.n = parseBigInt(N, 16);
              this.e = parseInt(E, 16);
              this.d = parseBigInt(D, 16);
          }
          else {
              console.error("Invalid RSA private key");
          }
      };
      // RSAKey.prototype.setPrivateEx = RSASetPrivateEx;
      // Set the private key fields N, e, d and CRT params from hex strings
      RSAKey.prototype.setPrivateEx = function (N, E, D, P, Q, DP, DQ, C) {
          if (N != null && E != null && N.length > 0 && E.length > 0) {
              this.n = parseBigInt(N, 16);
              this.e = parseInt(E, 16);
              this.d = parseBigInt(D, 16);
              this.p = parseBigInt(P, 16);
              this.q = parseBigInt(Q, 16);
              this.dmp1 = parseBigInt(DP, 16);
              this.dmq1 = parseBigInt(DQ, 16);
              this.coeff = parseBigInt(C, 16);
          }
          else {
              console.error("Invalid RSA private key");
          }
      };
      // RSAKey.prototype.generate = RSAGenerate;
      // Generate a new random private key B bits long, using public expt E
      RSAKey.prototype.generate = function (B, E) {
          var rng = new SecureRandom();
          var qs = B >> 1;
          this.e = parseInt(E, 16);
          var ee = new BigInteger(E, 16);
          for (;;) {
              for (;;) {
                  this.p = new BigInteger(B - qs, 1, rng);
                  if (this.p.subtract(BigInteger.ONE).gcd(ee).compareTo(BigInteger.ONE) == 0 && this.p.isProbablePrime(10)) {
                      break;
                  }
              }
              for (;;) {
                  this.q = new BigInteger(qs, 1, rng);
                  if (this.q.subtract(BigInteger.ONE).gcd(ee).compareTo(BigInteger.ONE) == 0 && this.q.isProbablePrime(10)) {
                      break;
                  }
              }
              if (this.p.compareTo(this.q) <= 0) {
                  var t = this.p;
                  this.p = this.q;
                  this.q = t;
              }
              var p1 = this.p.subtract(BigInteger.ONE);
              var q1 = this.q.subtract(BigInteger.ONE);
              var phi = p1.multiply(q1);
              if (phi.gcd(ee).compareTo(BigInteger.ONE) == 0) {
                  this.n = this.p.multiply(this.q);
                  this.d = ee.modInverse(phi);
                  this.dmp1 = this.d.mod(p1);
                  this.dmq1 = this.d.mod(q1);
                  this.coeff = this.q.modInverse(this.p);
                  break;
              }
          }
      };
      // RSAKey.prototype.decrypt = RSADecrypt;
      // Return the PKCS#1 RSA decryption of "ctext".
      // "ctext" is an even-length hex string and the output is a plain string.
      RSAKey.prototype.decrypt = function (ctext) {
          var c = parseBigInt(ctext, 16);
          var m = this.doPrivate(c);
          if (m == null) {
              return null;
          }
          return pkcs1unpad2(m, (this.n.bitLength() + 7) >> 3);
      };
      // Generate a new random private key B bits long, using public expt E
      RSAKey.prototype.generateAsync = function (B, E, callback) {
          var rng = new SecureRandom();
          var qs = B >> 1;
          this.e = parseInt(E, 16);
          var ee = new BigInteger(E, 16);
          var rsa = this;
          // These functions have non-descript names because they were originally for(;;) loops.
          // I don't know about cryptography to give them better names than loop1-4.
          var loop1 = function () {
              var loop4 = function () {
                  if (rsa.p.compareTo(rsa.q) <= 0) {
                      var t = rsa.p;
                      rsa.p = rsa.q;
                      rsa.q = t;
                  }
                  var p1 = rsa.p.subtract(BigInteger.ONE);
                  var q1 = rsa.q.subtract(BigInteger.ONE);
                  var phi = p1.multiply(q1);
                  if (phi.gcd(ee).compareTo(BigInteger.ONE) == 0) {
                      rsa.n = rsa.p.multiply(rsa.q);
                      rsa.d = ee.modInverse(phi);
                      rsa.dmp1 = rsa.d.mod(p1);
                      rsa.dmq1 = rsa.d.mod(q1);
                      rsa.coeff = rsa.q.modInverse(rsa.p);
                      setTimeout(function () { callback(); }, 0); // escape
                  }
                  else {
                      setTimeout(loop1, 0);
                  }
              };
              var loop3 = function () {
                  rsa.q = nbi();
                  rsa.q.fromNumberAsync(qs, 1, rng, function () {
                      rsa.q.subtract(BigInteger.ONE).gcda(ee, function (r) {
                          if (r.compareTo(BigInteger.ONE) == 0 && rsa.q.isProbablePrime(10)) {
                              setTimeout(loop4, 0);
                          }
                          else {
                              setTimeout(loop3, 0);
                          }
                      });
                  });
              };
              var loop2 = function () {
                  rsa.p = nbi();
                  rsa.p.fromNumberAsync(B - qs, 1, rng, function () {
                      rsa.p.subtract(BigInteger.ONE).gcda(ee, function (r) {
                          if (r.compareTo(BigInteger.ONE) == 0 && rsa.p.isProbablePrime(10)) {
                              setTimeout(loop3, 0);
                          }
                          else {
                              setTimeout(loop2, 0);
                          }
                      });
                  });
              };
              setTimeout(loop2, 0);
          };
          setTimeout(loop1, 0);
      };
      RSAKey.prototype.sign = function (text, digestMethod, digestName) {
          var header = getDigestHeader(digestName);
          var digest = header + digestMethod(text).toString();
          var m = pkcs1pad1(digest, this.n.bitLength() / 4);
          if (m == null) {
              return null;
          }
          var c = this.doPrivate(m);
          if (c == null) {
              return null;
          }
          var h = c.toString(16);
          if ((h.length & 1) == 0) {
              return h;
          }
          else {
              return "0" + h;
          }
      };
      RSAKey.prototype.verify = function (text, signature, digestMethod) {
          var c = parseBigInt(signature, 16);
          var m = this.doPublic(c);
          if (m == null) {
              return null;
          }
          var unpadded = m.toString(16).replace(/^1f+00/, "");
          var digest = removeDigestHeader(unpadded);
          return digest == digestMethod(text).toString();
      };
      return RSAKey;
  }());
  // Undo PKCS#1 (type 2, random) padding and, if valid, return the plaintext
  function pkcs1unpad2(d, n) {
      var b = d.toByteArray();
      var i = 0;
      while (i < b.length && b[i] == 0) {
          ++i;
      }
      if (b.length - i != n - 1 || b[i] != 2) {
          return null;
      }
      ++i;
      while (b[i] != 0) {
          if (++i >= b.length) {
              return null;
          }
      }
      var ret = "";
      while (++i < b.length) {
          var c = b[i] & 255;
          if (c < 128) { // utf-8 decode
              ret += String.fromCharCode(c);
          }
          else if ((c > 191) && (c < 224)) {
              ret += String.fromCharCode(((c & 31) << 6) | (b[i + 1] & 63));
              ++i;
          }
          else {
              ret += String.fromCharCode(((c & 15) << 12) | ((b[i + 1] & 63) << 6) | (b[i + 2] & 63));
              i += 2;
          }
      }
      return ret;
  }
  // https://tools.ietf.org/html/rfc3447#page-43
  var DIGEST_HEADERS = {
      md2: "3020300c06082a864886f70d020205000410",
      md5: "3020300c06082a864886f70d020505000410",
      sha1: "3021300906052b0e03021a05000414",
      sha224: "302d300d06096086480165030402040500041c",
      sha256: "3031300d060960864801650304020105000420",
      sha384: "3041300d060960864801650304020205000430",
      sha512: "3051300d060960864801650304020305000440",
      ripemd160: "3021300906052b2403020105000414"
  };
  function getDigestHeader(name) {
      return DIGEST_HEADERS[name] || "";
  }
  function removeDigestHeader(str) {
      for (var name_1 in DIGEST_HEADERS) {
          if (DIGEST_HEADERS.hasOwnProperty(name_1)) {
              var header = DIGEST_HEADERS[name_1];
              var len = header.length;
              if (str.substr(0, len) == header) {
                  return str.substr(len);
              }
          }
      }
      return str;
  }
  // Return the PKCS#1 RSA encryption of "text" as a Base64-encoded string
  // function RSAEncryptB64(text) {
  //  var h = this.encrypt(text);
  //  if(h) return hex2b64(h); else return null;
  // }
  // public
  // RSAKey.prototype.encrypt_b64 = RSAEncryptB64;

  /*!
  Copyright (c) 2011, Yahoo! Inc. All rights reserved.
  Code licensed under the BSD License:
  http://developer.yahoo.com/yui/license.html
  version: 2.9.0
  */
  var YAHOO = {};
  YAHOO.lang = {
      /**
       * Utility to set up the prototype, constructor and superclass properties to
       * support an inheritance strategy that can chain constructors and methods.
       * Static members will not be inherited.
       *
       * @method extend
       * @static
       * @param {Function} subc   the object to modify
       * @param {Function} superc the object to inherit
       * @param {Object} overrides  additional properties/methods to add to the
       *                              subclass prototype.  These will override the
       *                              matching items obtained from the superclass
       *                              if present.
       */
      extend: function (subc, superc, overrides) {
          if (!superc || !subc) {
              throw new Error("YAHOO.lang.extend failed, please check that " +
                  "all dependencies are included.");
          }
          var F = function () { };
          F.prototype = superc.prototype;
          subc.prototype = new F();
          subc.prototype.constructor = subc;
          subc.superclass = superc.prototype;
          if (superc.prototype.constructor == Object.prototype.constructor) {
              superc.prototype.constructor = superc;
          }
          if (overrides) {
              var i;
              for (i in overrides) {
                  subc.prototype[i] = overrides[i];
              }
              /*
               * IE will not enumerate native functions in a derived object even if the
               * function was overridden.  This is a workaround for specific functions
               * we care about on the Object prototype.
               * @property _IEEnumFix
               * @param {Function} r  the object to receive the augmentation
               * @param {Function} s  the object that supplies the properties to augment
               * @static
               * @private
               */
              var _IEEnumFix = function () { }, ADD = ["toString", "valueOf"];
              try {
                  if (/MSIE/.test(navigator.userAgent)) {
                      _IEEnumFix = function (r, s) {
                          for (i = 0; i < ADD.length; i = i + 1) {
                              var fname = ADD[i], f = s[fname];
                              if (typeof f === 'function' && f != Object.prototype[fname]) {
                                  r[fname] = f;
                              }
                          }
                      };
                  }
              }
              catch (ex) { }
              _IEEnumFix(subc.prototype, overrides);
          }
      }
  };

  /* asn1-1.0.13.js (c) 2013-2017 Kenji Urushima | kjur.github.com/jsrsasign/license
   */
  /**
   * @fileOverview
   * @name asn1-1.0.js
   * @author Kenji Urushima kenji.urushima@gmail.com
   * @version asn1 1.0.13 (2017-Jun-02)
   * @since jsrsasign 2.1
   * @license <a href="https://kjur.github.io/jsrsasign/license/">MIT License</a>
   */
  /**
   * kjur's class library name space
   * <p>
   * This name space provides following name spaces:
   * <ul>
   * <li>{@link KJUR.asn1} - ASN.1 primitive hexadecimal encoder</li>
   * <li>{@link KJUR.asn1.x509} - ASN.1 structure for X.509 certificate and CRL</li>
   * <li>{@link KJUR.crypto} - Java Cryptographic Extension(JCE) style MessageDigest/Signature
   * class and utilities</li>
   * </ul>
   * </p>
   * NOTE: Please ignore method summary and document of this namespace. This caused by a bug of jsdoc2.
   * @name KJUR
   * @namespace kjur's class library name space
   */
  var KJUR = {};
  /**
   * kjur's ASN.1 class library name space
   * <p>
   * This is ITU-T X.690 ASN.1 DER encoder class library and
   * class structure and methods is very similar to
   * org.bouncycastle.asn1 package of
   * well known BouncyCaslte Cryptography Library.
   * <h4>PROVIDING ASN.1 PRIMITIVES</h4>
   * Here are ASN.1 DER primitive classes.
   * <ul>
   * <li>0x01 {@link KJUR.asn1.DERBoolean}</li>
   * <li>0x02 {@link KJUR.asn1.DERInteger}</li>
   * <li>0x03 {@link KJUR.asn1.DERBitString}</li>
   * <li>0x04 {@link KJUR.asn1.DEROctetString}</li>
   * <li>0x05 {@link KJUR.asn1.DERNull}</li>
   * <li>0x06 {@link KJUR.asn1.DERObjectIdentifier}</li>
   * <li>0x0a {@link KJUR.asn1.DEREnumerated}</li>
   * <li>0x0c {@link KJUR.asn1.DERUTF8String}</li>
   * <li>0x12 {@link KJUR.asn1.DERNumericString}</li>
   * <li>0x13 {@link KJUR.asn1.DERPrintableString}</li>
   * <li>0x14 {@link KJUR.asn1.DERTeletexString}</li>
   * <li>0x16 {@link KJUR.asn1.DERIA5String}</li>
   * <li>0x17 {@link KJUR.asn1.DERUTCTime}</li>
   * <li>0x18 {@link KJUR.asn1.DERGeneralizedTime}</li>
   * <li>0x30 {@link KJUR.asn1.DERSequence}</li>
   * <li>0x31 {@link KJUR.asn1.DERSet}</li>
   * </ul>
   * <h4>OTHER ASN.1 CLASSES</h4>
   * <ul>
   * <li>{@link KJUR.asn1.ASN1Object}</li>
   * <li>{@link KJUR.asn1.DERAbstractString}</li>
   * <li>{@link KJUR.asn1.DERAbstractTime}</li>
   * <li>{@link KJUR.asn1.DERAbstractStructured}</li>
   * <li>{@link KJUR.asn1.DERTaggedObject}</li>
   * </ul>
   * <h4>SUB NAME SPACES</h4>
   * <ul>
   * <li>{@link KJUR.asn1.cades} - CAdES long term signature format</li>
   * <li>{@link KJUR.asn1.cms} - Cryptographic Message Syntax</li>
   * <li>{@link KJUR.asn1.csr} - Certificate Signing Request (CSR/PKCS#10)</li>
   * <li>{@link KJUR.asn1.tsp} - RFC 3161 Timestamping Protocol Format</li>
   * <li>{@link KJUR.asn1.x509} - RFC 5280 X.509 certificate and CRL</li>
   * </ul>
   * </p>
   * NOTE: Please ignore method summary and document of this namespace.
   * This caused by a bug of jsdoc2.
   * @name KJUR.asn1
   * @namespace
   */
  if (typeof KJUR.asn1 == "undefined" || !KJUR.asn1)
      KJUR.asn1 = {};
  /**
   * ASN1 utilities class
   * @name KJUR.asn1.ASN1Util
   * @class ASN1 utilities class
   * @since asn1 1.0.2
   */
  KJUR.asn1.ASN1Util = new function () {
      this.integerToByteHex = function (i) {
          var h = i.toString(16);
          if ((h.length % 2) == 1)
              h = '0' + h;
          return h;
      };
      this.bigIntToMinTwosComplementsHex = function (bigIntegerValue) {
          var h = bigIntegerValue.toString(16);
          if (h.substr(0, 1) != '-') {
              if (h.length % 2 == 1) {
                  h = '0' + h;
              }
              else {
                  if (!h.match(/^[0-7]/)) {
                      h = '00' + h;
                  }
              }
          }
          else {
              var hPos = h.substr(1);
              var xorLen = hPos.length;
              if (xorLen % 2 == 1) {
                  xorLen += 1;
              }
              else {
                  if (!h.match(/^[0-7]/)) {
                      xorLen += 2;
                  }
              }
              var hMask = '';
              for (var i = 0; i < xorLen; i++) {
                  hMask += 'f';
              }
              var biMask = new BigInteger(hMask, 16);
              var biNeg = biMask.xor(bigIntegerValue).add(BigInteger.ONE);
              h = biNeg.toString(16).replace(/^-/, '');
          }
          return h;
      };
      /**
       * get PEM string from hexadecimal data and header string
       * @name getPEMStringFromHex
       * @memberOf KJUR.asn1.ASN1Util
       * @function
       * @param {String} dataHex hexadecimal string of PEM body
       * @param {String} pemHeader PEM header string (ex. 'RSA PRIVATE KEY')
       * @return {String} PEM formatted string of input data
       * @description
       * This method converts a hexadecimal string to a PEM string with
       * a specified header. Its line break will be CRLF("\r\n").
       * @example
       * var pem  = KJUR.asn1.ASN1Util.getPEMStringFromHex('616161', 'RSA PRIVATE KEY');
       * // value of pem will be:
       * -----BEGIN PRIVATE KEY-----
       * YWFh
       * -----END PRIVATE KEY-----
       */
      this.getPEMStringFromHex = function (dataHex, pemHeader) {
          return hextopem(dataHex, pemHeader);
      };
      /**
       * generate ASN1Object specifed by JSON parameters
       * @name newObject
       * @memberOf KJUR.asn1.ASN1Util
       * @function
       * @param {Array} param JSON parameter to generate ASN1Object
       * @return {KJUR.asn1.ASN1Object} generated object
       * @since asn1 1.0.3
       * @description
       * generate any ASN1Object specified by JSON param
       * including ASN.1 primitive or structured.
       * Generally 'param' can be described as follows:
       * <blockquote>
       * {TYPE-OF-ASNOBJ: ASN1OBJ-PARAMETER}
       * </blockquote>
       * 'TYPE-OF-ASN1OBJ' can be one of following symbols:
       * <ul>
       * <li>'bool' - DERBoolean</li>
       * <li>'int' - DERInteger</li>
       * <li>'bitstr' - DERBitString</li>
       * <li>'octstr' - DEROctetString</li>
       * <li>'null' - DERNull</li>
       * <li>'oid' - DERObjectIdentifier</li>
       * <li>'enum' - DEREnumerated</li>
       * <li>'utf8str' - DERUTF8String</li>
       * <li>'numstr' - DERNumericString</li>
       * <li>'prnstr' - DERPrintableString</li>
       * <li>'telstr' - DERTeletexString</li>
       * <li>'ia5str' - DERIA5String</li>
       * <li>'utctime' - DERUTCTime</li>
       * <li>'gentime' - DERGeneralizedTime</li>
       * <li>'seq' - DERSequence</li>
       * <li>'set' - DERSet</li>
       * <li>'tag' - DERTaggedObject</li>
       * </ul>
       * @example
       * newObject({'prnstr': 'aaa'});
       * newObject({'seq': [{'int': 3}, {'prnstr': 'aaa'}]})
       * // ASN.1 Tagged Object
       * newObject({'tag': {'tag': 'a1',
       *                    'explicit': true,
       *                    'obj': {'seq': [{'int': 3}, {'prnstr': 'aaa'}]}}});
       * // more simple representation of ASN.1 Tagged Object
       * newObject({'tag': ['a1',
       *                    true,
       *                    {'seq': [
       *                      {'int': 3},
       *                      {'prnstr': 'aaa'}]}
       *                   ]});
       */
      this.newObject = function (param) {
          var _KJUR = KJUR, _KJUR_asn1 = _KJUR.asn1, _DERBoolean = _KJUR_asn1.DERBoolean, _DERInteger = _KJUR_asn1.DERInteger, _DERBitString = _KJUR_asn1.DERBitString, _DEROctetString = _KJUR_asn1.DEROctetString, _DERNull = _KJUR_asn1.DERNull, _DERObjectIdentifier = _KJUR_asn1.DERObjectIdentifier, _DEREnumerated = _KJUR_asn1.DEREnumerated, _DERUTF8String = _KJUR_asn1.DERUTF8String, _DERNumericString = _KJUR_asn1.DERNumericString, _DERPrintableString = _KJUR_asn1.DERPrintableString, _DERTeletexString = _KJUR_asn1.DERTeletexString, _DERIA5String = _KJUR_asn1.DERIA5String, _DERUTCTime = _KJUR_asn1.DERUTCTime, _DERGeneralizedTime = _KJUR_asn1.DERGeneralizedTime, _DERSequence = _KJUR_asn1.DERSequence, _DERSet = _KJUR_asn1.DERSet, _DERTaggedObject = _KJUR_asn1.DERTaggedObject, _newObject = _KJUR_asn1.ASN1Util.newObject;
          var keys = Object.keys(param);
          if (keys.length != 1)
              throw "key of param shall be only one.";
          var key = keys[0];
          if (":bool:int:bitstr:octstr:null:oid:enum:utf8str:numstr:prnstr:telstr:ia5str:utctime:gentime:seq:set:tag:".indexOf(":" + key + ":") == -1)
              throw "undefined key: " + key;
          if (key == "bool")
              return new _DERBoolean(param[key]);
          if (key == "int")
              return new _DERInteger(param[key]);
          if (key == "bitstr")
              return new _DERBitString(param[key]);
          if (key == "octstr")
              return new _DEROctetString(param[key]);
          if (key == "null")
              return new _DERNull(param[key]);
          if (key == "oid")
              return new _DERObjectIdentifier(param[key]);
          if (key == "enum")
              return new _DEREnumerated(param[key]);
          if (key == "utf8str")
              return new _DERUTF8String(param[key]);
          if (key == "numstr")
              return new _DERNumericString(param[key]);
          if (key == "prnstr")
              return new _DERPrintableString(param[key]);
          if (key == "telstr")
              return new _DERTeletexString(param[key]);
          if (key == "ia5str")
              return new _DERIA5String(param[key]);
          if (key == "utctime")
              return new _DERUTCTime(param[key]);
          if (key == "gentime")
              return new _DERGeneralizedTime(param[key]);
          if (key == "seq") {
              var paramList = param[key];
              var a = [];
              for (var i = 0; i < paramList.length; i++) {
                  var asn1Obj = _newObject(paramList[i]);
                  a.push(asn1Obj);
              }
              return new _DERSequence({ 'array': a });
          }
          if (key == "set") {
              var paramList = param[key];
              var a = [];
              for (var i = 0; i < paramList.length; i++) {
                  var asn1Obj = _newObject(paramList[i]);
                  a.push(asn1Obj);
              }
              return new _DERSet({ 'array': a });
          }
          if (key == "tag") {
              var tagParam = param[key];
              if (Object.prototype.toString.call(tagParam) === '[object Array]' &&
                  tagParam.length == 3) {
                  var obj = _newObject(tagParam[2]);
                  return new _DERTaggedObject({ tag: tagParam[0],
                      explicit: tagParam[1],
                      obj: obj });
              }
              else {
                  var newParam = {};
                  if (tagParam.explicit !== undefined)
                      newParam.explicit = tagParam.explicit;
                  if (tagParam.tag !== undefined)
                      newParam.tag = tagParam.tag;
                  if (tagParam.obj === undefined)
                      throw "obj shall be specified for 'tag'.";
                  newParam.obj = _newObject(tagParam.obj);
                  return new _DERTaggedObject(newParam);
              }
          }
      };
      /**
       * get encoded hexadecimal string of ASN1Object specifed by JSON parameters
       * @name jsonToASN1HEX
       * @memberOf KJUR.asn1.ASN1Util
       * @function
       * @param {Array} param JSON parameter to generate ASN1Object
       * @return hexadecimal string of ASN1Object
       * @since asn1 1.0.4
       * @description
       * As for ASN.1 object representation of JSON object,
       * please see {@link newObject}.
       * @example
       * jsonToASN1HEX({'prnstr': 'aaa'});
       */
      this.jsonToASN1HEX = function (param) {
          var asn1Obj = this.newObject(param);
          return asn1Obj.getEncodedHex();
      };
  };
  /**
   * get dot noted oid number string from hexadecimal value of OID
   * @name oidHexToInt
   * @memberOf KJUR.asn1.ASN1Util
   * @function
   * @param {String} hex hexadecimal value of object identifier
   * @return {String} dot noted string of object identifier
   * @since jsrsasign 4.8.3 asn1 1.0.7
   * @description
   * This static method converts from hexadecimal string representation of
   * ASN.1 value of object identifier to oid number string.
   * @example
   * KJUR.asn1.ASN1Util.oidHexToInt('550406') &rarr; "2.5.4.6"
   */
  KJUR.asn1.ASN1Util.oidHexToInt = function (hex) {
      var s = "";
      var i01 = parseInt(hex.substr(0, 2), 16);
      var i0 = Math.floor(i01 / 40);
      var i1 = i01 % 40;
      var s = i0 + "." + i1;
      var binbuf = "";
      for (var i = 2; i < hex.length; i += 2) {
          var value = parseInt(hex.substr(i, 2), 16);
          var bin = ("00000000" + value.toString(2)).slice(-8);
          binbuf = binbuf + bin.substr(1, 7);
          if (bin.substr(0, 1) == "0") {
              var bi = new BigInteger(binbuf, 2);
              s = s + "." + bi.toString(10);
              binbuf = "";
          }
      }
      return s;
  };
  /**
   * get hexadecimal value of object identifier from dot noted oid value
   * @name oidIntToHex
   * @memberOf KJUR.asn1.ASN1Util
   * @function
   * @param {String} oidString dot noted string of object identifier
   * @return {String} hexadecimal value of object identifier
   * @since jsrsasign 4.8.3 asn1 1.0.7
   * @description
   * This static method converts from object identifier value string.
   * to hexadecimal string representation of it.
   * @example
   * KJUR.asn1.ASN1Util.oidIntToHex("2.5.4.6") &rarr; "550406"
   */
  KJUR.asn1.ASN1Util.oidIntToHex = function (oidString) {
      var itox = function (i) {
          var h = i.toString(16);
          if (h.length == 1)
              h = '0' + h;
          return h;
      };
      var roidtox = function (roid) {
          var h = '';
          var bi = new BigInteger(roid, 10);
          var b = bi.toString(2);
          var padLen = 7 - b.length % 7;
          if (padLen == 7)
              padLen = 0;
          var bPad = '';
          for (var i = 0; i < padLen; i++)
              bPad += '0';
          b = bPad + b;
          for (var i = 0; i < b.length - 1; i += 7) {
              var b8 = b.substr(i, 7);
              if (i != b.length - 7)
                  b8 = '1' + b8;
              h += itox(parseInt(b8, 2));
          }
          return h;
      };
      if (!oidString.match(/^[0-9.]+$/)) {
          throw "malformed oid string: " + oidString;
      }
      var h = '';
      var a = oidString.split('.');
      var i0 = parseInt(a[0]) * 40 + parseInt(a[1]);
      h += itox(i0);
      a.splice(0, 2);
      for (var i = 0; i < a.length; i++) {
          h += roidtox(a[i]);
      }
      return h;
  };
  // ********************************************************************
  //  Abstract ASN.1 Classes
  // ********************************************************************
  // ********************************************************************
  /**
   * base class for ASN.1 DER encoder object
   * @name KJUR.asn1.ASN1Object
   * @class base class for ASN.1 DER encoder object
   * @property {Boolean} isModified flag whether internal data was changed
   * @property {String} hTLV hexadecimal string of ASN.1 TLV
   * @property {String} hT hexadecimal string of ASN.1 TLV tag(T)
   * @property {String} hL hexadecimal string of ASN.1 TLV length(L)
   * @property {String} hV hexadecimal string of ASN.1 TLV value(V)
   * @description
   */
  KJUR.asn1.ASN1Object = function () {
      var hV = '';
      /**
       * get hexadecimal ASN.1 TLV length(L) bytes from TLV value(V)
       * @name getLengthHexFromValue
       * @memberOf KJUR.asn1.ASN1Object#
       * @function
       * @return {String} hexadecimal string of ASN.1 TLV length(L)
       */
      this.getLengthHexFromValue = function () {
          if (typeof this.hV == "undefined" || this.hV == null) {
              throw "this.hV is null or undefined.";
          }
          if (this.hV.length % 2 == 1) {
              throw "value hex must be even length: n=" + hV.length + ",v=" + this.hV;
          }
          var n = this.hV.length / 2;
          var hN = n.toString(16);
          if (hN.length % 2 == 1) {
              hN = "0" + hN;
          }
          if (n < 128) {
              return hN;
          }
          else {
              var hNlen = hN.length / 2;
              if (hNlen > 15) {
                  throw "ASN.1 length too long to represent by 8x: n = " + n.toString(16);
              }
              var head = 128 + hNlen;
              return head.toString(16) + hN;
          }
      };
      /**
       * get hexadecimal string of ASN.1 TLV bytes
       * @name getEncodedHex
       * @memberOf KJUR.asn1.ASN1Object#
       * @function
       * @return {String} hexadecimal string of ASN.1 TLV
       */
      this.getEncodedHex = function () {
          if (this.hTLV == null || this.isModified) {
              this.hV = this.getFreshValueHex();
              this.hL = this.getLengthHexFromValue();
              this.hTLV = this.hT + this.hL + this.hV;
              this.isModified = false;
              //alert("first time: " + this.hTLV);
          }
          return this.hTLV;
      };
      /**
       * get hexadecimal string of ASN.1 TLV value(V) bytes
       * @name getValueHex
       * @memberOf KJUR.asn1.ASN1Object#
       * @function
       * @return {String} hexadecimal string of ASN.1 TLV value(V) bytes
       */
      this.getValueHex = function () {
          this.getEncodedHex();
          return this.hV;
      };
      this.getFreshValueHex = function () {
          return '';
      };
  };
  // == BEGIN DERAbstractString ================================================
  /**
   * base class for ASN.1 DER string classes
   * @name KJUR.asn1.DERAbstractString
   * @class base class for ASN.1 DER string classes
   * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})
   * @property {String} s internal string of value
   * @extends KJUR.asn1.ASN1Object
   * @description
   * <br/>
   * As for argument 'params' for constructor, you can specify one of
   * following properties:
   * <ul>
   * <li>str - specify initial ASN.1 value(V) by a string</li>
   * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>
   * </ul>
   * NOTE: 'params' can be omitted.
   */
  KJUR.asn1.DERAbstractString = function (params) {
      KJUR.asn1.DERAbstractString.superclass.constructor.call(this);
      /**
       * get string value of this string object
       * @name getString
       * @memberOf KJUR.asn1.DERAbstractString#
       * @function
       * @return {String} string value of this string object
       */
      this.getString = function () {
          return this.s;
      };
      /**
       * set value by a string
       * @name setString
       * @memberOf KJUR.asn1.DERAbstractString#
       * @function
       * @param {String} newS value by a string to set
       */
      this.setString = function (newS) {
          this.hTLV = null;
          this.isModified = true;
          this.s = newS;
          this.hV = stohex(this.s);
      };
      /**
       * set value by a hexadecimal string
       * @name setStringHex
       * @memberOf KJUR.asn1.DERAbstractString#
       * @function
       * @param {String} newHexString value by a hexadecimal string to set
       */
      this.setStringHex = function (newHexString) {
          this.hTLV = null;
          this.isModified = true;
          this.s = null;
          this.hV = newHexString;
      };
      this.getFreshValueHex = function () {
          return this.hV;
      };
      if (typeof params != "undefined") {
          if (typeof params == "string") {
              this.setString(params);
          }
          else if (typeof params['str'] != "undefined") {
              this.setString(params['str']);
          }
          else if (typeof params['hex'] != "undefined") {
              this.setStringHex(params['hex']);
          }
      }
  };
  YAHOO.lang.extend(KJUR.asn1.DERAbstractString, KJUR.asn1.ASN1Object);
  // == END   DERAbstractString ================================================
  // == BEGIN DERAbstractTime ==================================================
  /**
   * base class for ASN.1 DER Generalized/UTCTime class
   * @name KJUR.asn1.DERAbstractTime
   * @class base class for ASN.1 DER Generalized/UTCTime class
   * @param {Array} params associative array of parameters (ex. {'str': '130430235959Z'})
   * @extends KJUR.asn1.ASN1Object
   * @description
   * @see KJUR.asn1.ASN1Object - superclass
   */
  KJUR.asn1.DERAbstractTime = function (params) {
      KJUR.asn1.DERAbstractTime.superclass.constructor.call(this);
      // --- PRIVATE METHODS --------------------
      this.localDateToUTC = function (d) {
          utc = d.getTime() + (d.getTimezoneOffset() * 60000);
          var utcDate = new Date(utc);
          return utcDate;
      };
      /*
       * format date string by Data object
       * @name formatDate
       * @memberOf KJUR.asn1.AbstractTime;
       * @param {Date} dateObject
       * @param {string} type 'utc' or 'gen'
       * @param {boolean} withMillis flag for with millisections or not
       * @description
       * 'withMillis' flag is supported from asn1 1.0.6.
       */
      this.formatDate = function (dateObject, type, withMillis) {
          var pad = this.zeroPadding;
          var d = this.localDateToUTC(dateObject);
          var year = String(d.getFullYear());
          if (type == 'utc')
              year = year.substr(2, 2);
          var month = pad(String(d.getMonth() + 1), 2);
          var day = pad(String(d.getDate()), 2);
          var hour = pad(String(d.getHours()), 2);
          var min = pad(String(d.getMinutes()), 2);
          var sec = pad(String(d.getSeconds()), 2);
          var s = year + month + day + hour + min + sec;
          if (withMillis === true) {
              var millis = d.getMilliseconds();
              if (millis != 0) {
                  var sMillis = pad(String(millis), 3);
                  sMillis = sMillis.replace(/[0]+$/, "");
                  s = s + "." + sMillis;
              }
          }
          return s + "Z";
      };
      this.zeroPadding = function (s, len) {
          if (s.length >= len)
              return s;
          return new Array(len - s.length + 1).join('0') + s;
      };
      // --- PUBLIC METHODS --------------------
      /**
       * get string value of this string object
       * @name getString
       * @memberOf KJUR.asn1.DERAbstractTime#
       * @function
       * @return {String} string value of this time object
       */
      this.getString = function () {
          return this.s;
      };
      /**
       * set value by a string
       * @name setString
       * @memberOf KJUR.asn1.DERAbstractTime#
       * @function
       * @param {String} newS value by a string to set such like "130430235959Z"
       */
      this.setString = function (newS) {
          this.hTLV = null;
          this.isModified = true;
          this.s = newS;
          this.hV = stohex(newS);
      };
      /**
       * set value by a Date object
       * @name setByDateValue
       * @memberOf KJUR.asn1.DERAbstractTime#
       * @function
       * @param {Integer} year year of date (ex. 2013)
       * @param {Integer} month month of date between 1 and 12 (ex. 12)
       * @param {Integer} day day of month
       * @param {Integer} hour hours of date
       * @param {Integer} min minutes of date
       * @param {Integer} sec seconds of date
       */
      this.setByDateValue = function (year, month, day, hour, min, sec) {
          var dateObject = new Date(Date.UTC(year, month - 1, day, hour, min, sec, 0));
          this.setByDate(dateObject);
      };
      this.getFreshValueHex = function () {
          return this.hV;
      };
  };
  YAHOO.lang.extend(KJUR.asn1.DERAbstractTime, KJUR.asn1.ASN1Object);
  // == END   DERAbstractTime ==================================================
  // == BEGIN DERAbstractStructured ============================================
  /**
   * base class for ASN.1 DER structured class
   * @name KJUR.asn1.DERAbstractStructured
   * @class base class for ASN.1 DER structured class
   * @property {Array} asn1Array internal array of ASN1Object
   * @extends KJUR.asn1.ASN1Object
   * @description
   * @see KJUR.asn1.ASN1Object - superclass
   */
  KJUR.asn1.DERAbstractStructured = function (params) {
      KJUR.asn1.DERAbstractString.superclass.constructor.call(this);
      /**
       * set value by array of ASN1Object
       * @name setByASN1ObjectArray
       * @memberOf KJUR.asn1.DERAbstractStructured#
       * @function
       * @param {array} asn1ObjectArray array of ASN1Object to set
       */
      this.setByASN1ObjectArray = function (asn1ObjectArray) {
          this.hTLV = null;
          this.isModified = true;
          this.asn1Array = asn1ObjectArray;
      };
      /**
       * append an ASN1Object to internal array
       * @name appendASN1Object
       * @memberOf KJUR.asn1.DERAbstractStructured#
       * @function
       * @param {ASN1Object} asn1Object to add
       */
      this.appendASN1Object = function (asn1Object) {
          this.hTLV = null;
          this.isModified = true;
          this.asn1Array.push(asn1Object);
      };
      this.asn1Array = new Array();
      if (typeof params != "undefined") {
          if (typeof params['array'] != "undefined") {
              this.asn1Array = params['array'];
          }
      }
  };
  YAHOO.lang.extend(KJUR.asn1.DERAbstractStructured, KJUR.asn1.ASN1Object);
  // ********************************************************************
  //  ASN.1 Object Classes
  // ********************************************************************
  // ********************************************************************
  /**
   * class for ASN.1 DER Boolean
   * @name KJUR.asn1.DERBoolean
   * @class class for ASN.1 DER Boolean
   * @extends KJUR.asn1.ASN1Object
   * @description
   * @see KJUR.asn1.ASN1Object - superclass
   */
  KJUR.asn1.DERBoolean = function () {
      KJUR.asn1.DERBoolean.superclass.constructor.call(this);
      this.hT = "01";
      this.hTLV = "0101ff";
  };
  YAHOO.lang.extend(KJUR.asn1.DERBoolean, KJUR.asn1.ASN1Object);
  // ********************************************************************
  /**
   * class for ASN.1 DER Integer
   * @name KJUR.asn1.DERInteger
   * @class class for ASN.1 DER Integer
   * @extends KJUR.asn1.ASN1Object
   * @description
   * <br/>
   * As for argument 'params' for constructor, you can specify one of
   * following properties:
   * <ul>
   * <li>int - specify initial ASN.1 value(V) by integer value</li>
   * <li>bigint - specify initial ASN.1 value(V) by BigInteger object</li>
   * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>
   * </ul>
   * NOTE: 'params' can be omitted.
   */
  KJUR.asn1.DERInteger = function (params) {
      KJUR.asn1.DERInteger.superclass.constructor.call(this);
      this.hT = "02";
      /**
       * set value by Tom Wu's BigInteger object
       * @name setByBigInteger
       * @memberOf KJUR.asn1.DERInteger#
       * @function
       * @param {BigInteger} bigIntegerValue to set
       */
      this.setByBigInteger = function (bigIntegerValue) {
          this.hTLV = null;
          this.isModified = true;
          this.hV = KJUR.asn1.ASN1Util.bigIntToMinTwosComplementsHex(bigIntegerValue);
      };
      /**
       * set value by integer value
       * @name setByInteger
       * @memberOf KJUR.asn1.DERInteger
       * @function
       * @param {Integer} integer value to set
       */
      this.setByInteger = function (intValue) {
          var bi = new BigInteger(String(intValue), 10);
          this.setByBigInteger(bi);
      };
      /**
       * set value by integer value
       * @name setValueHex
       * @memberOf KJUR.asn1.DERInteger#
       * @function
       * @param {String} hexadecimal string of integer value
       * @description
       * <br/>
       * NOTE: Value shall be represented by minimum octet length of
       * two's complement representation.
       * @example
       * new KJUR.asn1.DERInteger(123);
       * new KJUR.asn1.DERInteger({'int': 123});
       * new KJUR.asn1.DERInteger({'hex': '1fad'});
       */
      this.setValueHex = function (newHexString) {
          this.hV = newHexString;
      };
      this.getFreshValueHex = function () {
          return this.hV;
      };
      if (typeof params != "undefined") {
          if (typeof params['bigint'] != "undefined") {
              this.setByBigInteger(params['bigint']);
          }
          else if (typeof params['int'] != "undefined") {
              this.setByInteger(params['int']);
          }
          else if (typeof params == "number") {
              this.setByInteger(params);
          }
          else if (typeof params['hex'] != "undefined") {
              this.setValueHex(params['hex']);
          }
      }
  };
  YAHOO.lang.extend(KJUR.asn1.DERInteger, KJUR.asn1.ASN1Object);
  // ********************************************************************
  /**
   * class for ASN.1 DER encoded BitString primitive
   * @name KJUR.asn1.DERBitString
   * @class class for ASN.1 DER encoded BitString primitive
   * @extends KJUR.asn1.ASN1Object
   * @description
   * <br/>
   * As for argument 'params' for constructor, you can specify one of
   * following properties:
   * <ul>
   * <li>bin - specify binary string (ex. '10111')</li>
   * <li>array - specify array of boolean (ex. [true,false,true,true])</li>
   * <li>hex - specify hexadecimal string of ASN.1 value(V) including unused bits</li>
   * <li>obj - specify {@link KJUR.asn1.ASN1Util.newObject}
   * argument for "BitString encapsulates" structure.</li>
   * </ul>
   * NOTE1: 'params' can be omitted.<br/>
   * NOTE2: 'obj' parameter have been supported since
   * asn1 1.0.11, jsrsasign 6.1.1 (2016-Sep-25).<br/>
   * @example
   * // default constructor
   * o = new KJUR.asn1.DERBitString();
   * // initialize with binary string
   * o = new KJUR.asn1.DERBitString({bin: "1011"});
   * // initialize with boolean array
   * o = new KJUR.asn1.DERBitString({array: [true,false,true,true]});
   * // initialize with hexadecimal string (04 is unused bits)
   * o = new KJUR.asn1.DEROctetString({hex: "04bac0"});
   * // initialize with ASN1Util.newObject argument for encapsulated
   * o = new KJUR.asn1.DERBitString({obj: {seq: [{int: 3}, {prnstr: 'aaa'}]}});
   * // above generates a ASN.1 data like this:
   * // BIT STRING, encapsulates {
   * //   SEQUENCE {
   * //     INTEGER 3
   * //     PrintableString 'aaa'
   * //     }
   * //   }
   */
  KJUR.asn1.DERBitString = function (params) {
      if (params !== undefined && typeof params.obj !== "undefined") {
          var o = KJUR.asn1.ASN1Util.newObject(params.obj);
          params.hex = "00" + o.getEncodedHex();
      }
      KJUR.asn1.DERBitString.superclass.constructor.call(this);
      this.hT = "03";
      /**
       * set ASN.1 value(V) by a hexadecimal string including unused bits
       * @name setHexValueIncludingUnusedBits
       * @memberOf KJUR.asn1.DERBitString#
       * @function
       * @param {String} newHexStringIncludingUnusedBits
       */
      this.setHexValueIncludingUnusedBits = function (newHexStringIncludingUnusedBits) {
          this.hTLV = null;
          this.isModified = true;
          this.hV = newHexStringIncludingUnusedBits;
      };
      /**
       * set ASN.1 value(V) by unused bit and hexadecimal string of value
       * @name setUnusedBitsAndHexValue
       * @memberOf KJUR.asn1.DERBitString#
       * @function
       * @param {Integer} unusedBits
       * @param {String} hValue
       */
      this.setUnusedBitsAndHexValue = function (unusedBits, hValue) {
          if (unusedBits < 0 || 7 < unusedBits) {
              throw "unused bits shall be from 0 to 7: u = " + unusedBits;
          }
          var hUnusedBits = "0" + unusedBits;
          this.hTLV = null;
          this.isModified = true;
          this.hV = hUnusedBits + hValue;
      };
      /**
       * set ASN.1 DER BitString by binary string<br/>
       * @name setByBinaryString
       * @memberOf KJUR.asn1.DERBitString#
       * @function
       * @param {String} binaryString binary value string (i.e. '10111')
       * @description
       * Its unused bits will be calculated automatically by length of
       * 'binaryValue'. <br/>
       * NOTE: Trailing zeros '0' will be ignored.
       * @example
       * o = new KJUR.asn1.DERBitString();
       * o.setByBooleanArray("01011");
       */
      this.setByBinaryString = function (binaryString) {
          binaryString = binaryString.replace(/0+$/, '');
          var unusedBits = 8 - binaryString.length % 8;
          if (unusedBits == 8)
              unusedBits = 0;
          for (var i = 0; i <= unusedBits; i++) {
              binaryString += '0';
          }
          var h = '';
          for (var i = 0; i < binaryString.length - 1; i += 8) {
              var b = binaryString.substr(i, 8);
              var x = parseInt(b, 2).toString(16);
              if (x.length == 1)
                  x = '0' + x;
              h += x;
          }
          this.hTLV = null;
          this.isModified = true;
          this.hV = '0' + unusedBits + h;
      };
      /**
       * set ASN.1 TLV value(V) by an array of boolean<br/>
       * @name setByBooleanArray
       * @memberOf KJUR.asn1.DERBitString#
       * @function
       * @param {array} booleanArray array of boolean (ex. [true, false, true])
       * @description
       * NOTE: Trailing falses will be ignored in the ASN.1 DER Object.
       * @example
       * o = new KJUR.asn1.DERBitString();
       * o.setByBooleanArray([false, true, false, true, true]);
       */
      this.setByBooleanArray = function (booleanArray) {
          var s = '';
          for (var i = 0; i < booleanArray.length; i++) {
              if (booleanArray[i] == true) {
                  s += '1';
              }
              else {
                  s += '0';
              }
          }
          this.setByBinaryString(s);
      };
      /**
       * generate an array of falses with specified length<br/>
       * @name newFalseArray
       * @memberOf KJUR.asn1.DERBitString
       * @function
       * @param {Integer} nLength length of array to generate
       * @return {array} array of boolean falses
       * @description
       * This static method may be useful to initialize boolean array.
       * @example
       * o = new KJUR.asn1.DERBitString();
       * o.newFalseArray(3) &rarr; [false, false, false]
       */
      this.newFalseArray = function (nLength) {
          var a = new Array(nLength);
          for (var i = 0; i < nLength; i++) {
              a[i] = false;
          }
          return a;
      };
      this.getFreshValueHex = function () {
          return this.hV;
      };
      if (typeof params != "undefined") {
          if (typeof params == "string" && params.toLowerCase().match(/^[0-9a-f]+$/)) {
              this.setHexValueIncludingUnusedBits(params);
          }
          else if (typeof params['hex'] != "undefined") {
              this.setHexValueIncludingUnusedBits(params['hex']);
          }
          else if (typeof params['bin'] != "undefined") {
              this.setByBinaryString(params['bin']);
          }
          else if (typeof params['array'] != "undefined") {
              this.setByBooleanArray(params['array']);
          }
      }
  };
  YAHOO.lang.extend(KJUR.asn1.DERBitString, KJUR.asn1.ASN1Object);
  // ********************************************************************
  /**
   * class for ASN.1 DER OctetString<br/>
   * @name KJUR.asn1.DEROctetString
   * @class class for ASN.1 DER OctetString
   * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})
   * @extends KJUR.asn1.DERAbstractString
   * @description
   * This class provides ASN.1 OctetString simple type.<br/>
   * Supported "params" attributes are:
   * <ul>
   * <li>str - to set a string as a value</li>
   * <li>hex - to set a hexadecimal string as a value</li>
   * <li>obj - to set a encapsulated ASN.1 value by JSON object
   * which is defined in {@link KJUR.asn1.ASN1Util.newObject}</li>
   * </ul>
   * NOTE: A parameter 'obj' have been supported
   * for "OCTET STRING, encapsulates" structure.
   * since asn1 1.0.11, jsrsasign 6.1.1 (2016-Sep-25).
   * @see KJUR.asn1.DERAbstractString - superclass
   * @example
   * // default constructor
   * o = new KJUR.asn1.DEROctetString();
   * // initialize with string
   * o = new KJUR.asn1.DEROctetString({str: "aaa"});
   * // initialize with hexadecimal string
   * o = new KJUR.asn1.DEROctetString({hex: "616161"});
   * // initialize with ASN1Util.newObject argument
   * o = new KJUR.asn1.DEROctetString({obj: {seq: [{int: 3}, {prnstr: 'aaa'}]}});
   * // above generates a ASN.1 data like this:
   * // OCTET STRING, encapsulates {
   * //   SEQUENCE {
   * //     INTEGER 3
   * //     PrintableString 'aaa'
   * //     }
   * //   }
   */
  KJUR.asn1.DEROctetString = function (params) {
      if (params !== undefined && typeof params.obj !== "undefined") {
          var o = KJUR.asn1.ASN1Util.newObject(params.obj);
          params.hex = o.getEncodedHex();
      }
      KJUR.asn1.DEROctetString.superclass.constructor.call(this, params);
      this.hT = "04";
  };
  YAHOO.lang.extend(KJUR.asn1.DEROctetString, KJUR.asn1.DERAbstractString);
  // ********************************************************************
  /**
   * class for ASN.1 DER Null
   * @name KJUR.asn1.DERNull
   * @class class for ASN.1 DER Null
   * @extends KJUR.asn1.ASN1Object
   * @description
   * @see KJUR.asn1.ASN1Object - superclass
   */
  KJUR.asn1.DERNull = function () {
      KJUR.asn1.DERNull.superclass.constructor.call(this);
      this.hT = "05";
      this.hTLV = "0500";
  };
  YAHOO.lang.extend(KJUR.asn1.DERNull, KJUR.asn1.ASN1Object);
  // ********************************************************************
  /**
   * class for ASN.1 DER ObjectIdentifier
   * @name KJUR.asn1.DERObjectIdentifier
   * @class class for ASN.1 DER ObjectIdentifier
   * @param {Array} params associative array of parameters (ex. {'oid': '2.5.4.5'})
   * @extends KJUR.asn1.ASN1Object
   * @description
   * <br/>
   * As for argument 'params' for constructor, you can specify one of
   * following properties:
   * <ul>
   * <li>oid - specify initial ASN.1 value(V) by a oid string (ex. 2.5.4.13)</li>
   * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>
   * </ul>
   * NOTE: 'params' can be omitted.
   */
  KJUR.asn1.DERObjectIdentifier = function (params) {
      var itox = function (i) {
          var h = i.toString(16);
          if (h.length == 1)
              h = '0' + h;
          return h;
      };
      var roidtox = function (roid) {
          var h = '';
          var bi = new BigInteger(roid, 10);
          var b = bi.toString(2);
          var padLen = 7 - b.length % 7;
          if (padLen == 7)
              padLen = 0;
          var bPad = '';
          for (var i = 0; i < padLen; i++)
              bPad += '0';
          b = bPad + b;
          for (var i = 0; i < b.length - 1; i += 7) {
              var b8 = b.substr(i, 7);
              if (i != b.length - 7)
                  b8 = '1' + b8;
              h += itox(parseInt(b8, 2));
          }
          return h;
      };
      KJUR.asn1.DERObjectIdentifier.superclass.constructor.call(this);
      this.hT = "06";
      /**
       * set value by a hexadecimal string
       * @name setValueHex
       * @memberOf KJUR.asn1.DERObjectIdentifier#
       * @function
       * @param {String} newHexString hexadecimal value of OID bytes
       */
      this.setValueHex = function (newHexString) {
          this.hTLV = null;
          this.isModified = true;
          this.s = null;
          this.hV = newHexString;
      };
      /**
       * set value by a OID string<br/>
       * @name setValueOidString
       * @memberOf KJUR.asn1.DERObjectIdentifier#
       * @function
       * @param {String} oidString OID string (ex. 2.5.4.13)
       * @example
       * o = new KJUR.asn1.DERObjectIdentifier();
       * o.setValueOidString("2.5.4.13");
       */
      this.setValueOidString = function (oidString) {
          if (!oidString.match(/^[0-9.]+$/)) {
              throw "malformed oid string: " + oidString;
          }
          var h = '';
          var a = oidString.split('.');
          var i0 = parseInt(a[0]) * 40 + parseInt(a[1]);
          h += itox(i0);
          a.splice(0, 2);
          for (var i = 0; i < a.length; i++) {
              h += roidtox(a[i]);
          }
          this.hTLV = null;
          this.isModified = true;
          this.s = null;
          this.hV = h;
      };
      /**
       * set value by a OID name
       * @name setValueName
       * @memberOf KJUR.asn1.DERObjectIdentifier#
       * @function
       * @param {String} oidName OID name (ex. 'serverAuth')
       * @since 1.0.1
       * @description
       * OID name shall be defined in 'KJUR.asn1.x509.OID.name2oidList'.
       * Otherwise raise error.
       * @example
       * o = new KJUR.asn1.DERObjectIdentifier();
       * o.setValueName("serverAuth");
       */
      this.setValueName = function (oidName) {
          var oid = KJUR.asn1.x509.OID.name2oid(oidName);
          if (oid !== '') {
              this.setValueOidString(oid);
          }
          else {
              throw "DERObjectIdentifier oidName undefined: " + oidName;
          }
      };
      this.getFreshValueHex = function () {
          return this.hV;
      };
      if (params !== undefined) {
          if (typeof params === "string") {
              if (params.match(/^[0-2].[0-9.]+$/)) {
                  this.setValueOidString(params);
              }
              else {
                  this.setValueName(params);
              }
          }
          else if (params.oid !== undefined) {
              this.setValueOidString(params.oid);
          }
          else if (params.hex !== undefined) {
              this.setValueHex(params.hex);
          }
          else if (params.name !== undefined) {
              this.setValueName(params.name);
          }
      }
  };
  YAHOO.lang.extend(KJUR.asn1.DERObjectIdentifier, KJUR.asn1.ASN1Object);
  // ********************************************************************
  /**
   * class for ASN.1 DER Enumerated
   * @name KJUR.asn1.DEREnumerated
   * @class class for ASN.1 DER Enumerated
   * @extends KJUR.asn1.ASN1Object
   * @description
   * <br/>
   * As for argument 'params' for constructor, you can specify one of
   * following properties:
   * <ul>
   * <li>int - specify initial ASN.1 value(V) by integer value</li>
   * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>
   * </ul>
   * NOTE: 'params' can be omitted.
   * @example
   * new KJUR.asn1.DEREnumerated(123);
   * new KJUR.asn1.DEREnumerated({int: 123});
   * new KJUR.asn1.DEREnumerated({hex: '1fad'});
   */
  KJUR.asn1.DEREnumerated = function (params) {
      KJUR.asn1.DEREnumerated.superclass.constructor.call(this);
      this.hT = "0a";
      /**
       * set value by Tom Wu's BigInteger object
       * @name setByBigInteger
       * @memberOf KJUR.asn1.DEREnumerated#
       * @function
       * @param {BigInteger} bigIntegerValue to set
       */
      this.setByBigInteger = function (bigIntegerValue) {
          this.hTLV = null;
          this.isModified = true;
          this.hV = KJUR.asn1.ASN1Util.bigIntToMinTwosComplementsHex(bigIntegerValue);
      };
      /**
       * set value by integer value
       * @name setByInteger
       * @memberOf KJUR.asn1.DEREnumerated#
       * @function
       * @param {Integer} integer value to set
       */
      this.setByInteger = function (intValue) {
          var bi = new BigInteger(String(intValue), 10);
          this.setByBigInteger(bi);
      };
      /**
       * set value by integer value
       * @name setValueHex
       * @memberOf KJUR.asn1.DEREnumerated#
       * @function
       * @param {String} hexadecimal string of integer value
       * @description
       * <br/>
       * NOTE: Value shall be represented by minimum octet length of
       * two's complement representation.
       */
      this.setValueHex = function (newHexString) {
          this.hV = newHexString;
      };
      this.getFreshValueHex = function () {
          return this.hV;
      };
      if (typeof params != "undefined") {
          if (typeof params['int'] != "undefined") {
              this.setByInteger(params['int']);
          }
          else if (typeof params == "number") {
              this.setByInteger(params);
          }
          else if (typeof params['hex'] != "undefined") {
              this.setValueHex(params['hex']);
          }
      }
  };
  YAHOO.lang.extend(KJUR.asn1.DEREnumerated, KJUR.asn1.ASN1Object);
  // ********************************************************************
  /**
   * class for ASN.1 DER UTF8String
   * @name KJUR.asn1.DERUTF8String
   * @class class for ASN.1 DER UTF8String
   * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})
   * @extends KJUR.asn1.DERAbstractString
   * @description
   * @see KJUR.asn1.DERAbstractString - superclass
   */
  KJUR.asn1.DERUTF8String = function (params) {
      KJUR.asn1.DERUTF8String.superclass.constructor.call(this, params);
      this.hT = "0c";
  };
  YAHOO.lang.extend(KJUR.asn1.DERUTF8String, KJUR.asn1.DERAbstractString);
  // ********************************************************************
  /**
   * class for ASN.1 DER NumericString
   * @name KJUR.asn1.DERNumericString
   * @class class for ASN.1 DER NumericString
   * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})
   * @extends KJUR.asn1.DERAbstractString
   * @description
   * @see KJUR.asn1.DERAbstractString - superclass
   */
  KJUR.asn1.DERNumericString = function (params) {
      KJUR.asn1.DERNumericString.superclass.constructor.call(this, params);
      this.hT = "12";
  };
  YAHOO.lang.extend(KJUR.asn1.DERNumericString, KJUR.asn1.DERAbstractString);
  // ********************************************************************
  /**
   * class for ASN.1 DER PrintableString
   * @name KJUR.asn1.DERPrintableString
   * @class class for ASN.1 DER PrintableString
   * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})
   * @extends KJUR.asn1.DERAbstractString
   * @description
   * @see KJUR.asn1.DERAbstractString - superclass
   */
  KJUR.asn1.DERPrintableString = function (params) {
      KJUR.asn1.DERPrintableString.superclass.constructor.call(this, params);
      this.hT = "13";
  };
  YAHOO.lang.extend(KJUR.asn1.DERPrintableString, KJUR.asn1.DERAbstractString);
  // ********************************************************************
  /**
   * class for ASN.1 DER TeletexString
   * @name KJUR.asn1.DERTeletexString
   * @class class for ASN.1 DER TeletexString
   * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})
   * @extends KJUR.asn1.DERAbstractString
   * @description
   * @see KJUR.asn1.DERAbstractString - superclass
   */
  KJUR.asn1.DERTeletexString = function (params) {
      KJUR.asn1.DERTeletexString.superclass.constructor.call(this, params);
      this.hT = "14";
  };
  YAHOO.lang.extend(KJUR.asn1.DERTeletexString, KJUR.asn1.DERAbstractString);
  // ********************************************************************
  /**
   * class for ASN.1 DER IA5String
   * @name KJUR.asn1.DERIA5String
   * @class class for ASN.1 DER IA5String
   * @param {Array} params associative array of parameters (ex. {'str': 'aaa'})
   * @extends KJUR.asn1.DERAbstractString
   * @description
   * @see KJUR.asn1.DERAbstractString - superclass
   */
  KJUR.asn1.DERIA5String = function (params) {
      KJUR.asn1.DERIA5String.superclass.constructor.call(this, params);
      this.hT = "16";
  };
  YAHOO.lang.extend(KJUR.asn1.DERIA5String, KJUR.asn1.DERAbstractString);
  // ********************************************************************
  /**
   * class for ASN.1 DER UTCTime
   * @name KJUR.asn1.DERUTCTime
   * @class class for ASN.1 DER UTCTime
   * @param {Array} params associative array of parameters (ex. {'str': '130430235959Z'})
   * @extends KJUR.asn1.DERAbstractTime
   * @description
   * <br/>
   * As for argument 'params' for constructor, you can specify one of
   * following properties:
   * <ul>
   * <li>str - specify initial ASN.1 value(V) by a string (ex.'130430235959Z')</li>
   * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>
   * <li>date - specify Date object.</li>
   * </ul>
   * NOTE: 'params' can be omitted.
   * <h4>EXAMPLES</h4>
   * @example
   * d1 = new KJUR.asn1.DERUTCTime();
   * d1.setString('130430125959Z');
   *
   * d2 = new KJUR.asn1.DERUTCTime({'str': '130430125959Z'});
   * d3 = new KJUR.asn1.DERUTCTime({'date': new Date(Date.UTC(2015, 0, 31, 0, 0, 0, 0))});
   * d4 = new KJUR.asn1.DERUTCTime('130430125959Z');
   */
  KJUR.asn1.DERUTCTime = function (params) {
      KJUR.asn1.DERUTCTime.superclass.constructor.call(this, params);
      this.hT = "17";
      /**
       * set value by a Date object<br/>
       * @name setByDate
       * @memberOf KJUR.asn1.DERUTCTime#
       * @function
       * @param {Date} dateObject Date object to set ASN.1 value(V)
       * @example
       * o = new KJUR.asn1.DERUTCTime();
       * o.setByDate(new Date("2016/12/31"));
       */
      this.setByDate = function (dateObject) {
          this.hTLV = null;
          this.isModified = true;
          this.date = dateObject;
          this.s = this.formatDate(this.date, 'utc');
          this.hV = stohex(this.s);
      };
      this.getFreshValueHex = function () {
          if (typeof this.date == "undefined" && typeof this.s == "undefined") {
              this.date = new Date();
              this.s = this.formatDate(this.date, 'utc');
              this.hV = stohex(this.s);
          }
          return this.hV;
      };
      if (params !== undefined) {
          if (params.str !== undefined) {
              this.setString(params.str);
          }
          else if (typeof params == "string" && params.match(/^[0-9]{12}Z$/)) {
              this.setString(params);
          }
          else if (params.hex !== undefined) {
              this.setStringHex(params.hex);
          }
          else if (params.date !== undefined) {
              this.setByDate(params.date);
          }
      }
  };
  YAHOO.lang.extend(KJUR.asn1.DERUTCTime, KJUR.asn1.DERAbstractTime);
  // ********************************************************************
  /**
   * class for ASN.1 DER GeneralizedTime
   * @name KJUR.asn1.DERGeneralizedTime
   * @class class for ASN.1 DER GeneralizedTime
   * @param {Array} params associative array of parameters (ex. {'str': '20130430235959Z'})
   * @property {Boolean} withMillis flag to show milliseconds or not
   * @extends KJUR.asn1.DERAbstractTime
   * @description
   * <br/>
   * As for argument 'params' for constructor, you can specify one of
   * following properties:
   * <ul>
   * <li>str - specify initial ASN.1 value(V) by a string (ex.'20130430235959Z')</li>
   * <li>hex - specify initial ASN.1 value(V) by a hexadecimal string</li>
   * <li>date - specify Date object.</li>
   * <li>millis - specify flag to show milliseconds (from 1.0.6)</li>
   * </ul>
   * NOTE1: 'params' can be omitted.
   * NOTE2: 'withMillis' property is supported from asn1 1.0.6.
   */
  KJUR.asn1.DERGeneralizedTime = function (params) {
      KJUR.asn1.DERGeneralizedTime.superclass.constructor.call(this, params);
      this.hT = "18";
      this.withMillis = false;
      /**
       * set value by a Date object
       * @name setByDate
       * @memberOf KJUR.asn1.DERGeneralizedTime#
       * @function
       * @param {Date} dateObject Date object to set ASN.1 value(V)
       * @example
       * When you specify UTC time, use 'Date.UTC' method like this:<br/>
       * o1 = new DERUTCTime();
       * o1.setByDate(date);
       *
       * date = new Date(Date.UTC(2015, 0, 31, 23, 59, 59, 0)); #2015JAN31 23:59:59
       */
      this.setByDate = function (dateObject) {
          this.hTLV = null;
          this.isModified = true;
          this.date = dateObject;
          this.s = this.formatDate(this.date, 'gen', this.withMillis);
          this.hV = stohex(this.s);
      };
      this.getFreshValueHex = function () {
          if (this.date === undefined && this.s === undefined) {
              this.date = new Date();
              this.s = this.formatDate(this.date, 'gen', this.withMillis);
              this.hV = stohex(this.s);
          }
          return this.hV;
      };
      if (params !== undefined) {
          if (params.str !== undefined) {
              this.setString(params.str);
          }
          else if (typeof params == "string" && params.match(/^[0-9]{14}Z$/)) {
              this.setString(params);
          }
          else if (params.hex !== undefined) {
              this.setStringHex(params.hex);
          }
          else if (params.date !== undefined) {
              this.setByDate(params.date);
          }
          if (params.millis === true) {
              this.withMillis = true;
          }
      }
  };
  YAHOO.lang.extend(KJUR.asn1.DERGeneralizedTime, KJUR.asn1.DERAbstractTime);
  // ********************************************************************
  /**
   * class for ASN.1 DER Sequence
   * @name KJUR.asn1.DERSequence
   * @class class for ASN.1 DER Sequence
   * @extends KJUR.asn1.DERAbstractStructured
   * @description
   * <br/>
   * As for argument 'params' for constructor, you can specify one of
   * following properties:
   * <ul>
   * <li>array - specify array of ASN1Object to set elements of content</li>
   * </ul>
   * NOTE: 'params' can be omitted.
   */
  KJUR.asn1.DERSequence = function (params) {
      KJUR.asn1.DERSequence.superclass.constructor.call(this, params);
      this.hT = "30";
      this.getFreshValueHex = function () {
          var h = '';
          for (var i = 0; i < this.asn1Array.length; i++) {
              var asn1Obj = this.asn1Array[i];
              h += asn1Obj.getEncodedHex();
          }
          this.hV = h;
          return this.hV;
      };
  };
  YAHOO.lang.extend(KJUR.asn1.DERSequence, KJUR.asn1.DERAbstractStructured);
  // ********************************************************************
  /**
   * class for ASN.1 DER Set
   * @name KJUR.asn1.DERSet
   * @class class for ASN.1 DER Set
   * @extends KJUR.asn1.DERAbstractStructured
   * @description
   * <br/>
   * As for argument 'params' for constructor, you can specify one of
   * following properties:
   * <ul>
   * <li>array - specify array of ASN1Object to set elements of content</li>
   * <li>sortflag - flag for sort (default: true). ASN.1 BER is not sorted in 'SET OF'.</li>
   * </ul>
   * NOTE1: 'params' can be omitted.<br/>
   * NOTE2: sortflag is supported since 1.0.5.
   */
  KJUR.asn1.DERSet = function (params) {
      KJUR.asn1.DERSet.superclass.constructor.call(this, params);
      this.hT = "31";
      this.sortFlag = true; // item shall be sorted only in ASN.1 DER
      this.getFreshValueHex = function () {
          var a = new Array();
          for (var i = 0; i < this.asn1Array.length; i++) {
              var asn1Obj = this.asn1Array[i];
              a.push(asn1Obj.getEncodedHex());
          }
          if (this.sortFlag == true)
              a.sort();
          this.hV = a.join('');
          return this.hV;
      };
      if (typeof params != "undefined") {
          if (typeof params.sortflag != "undefined" &&
              params.sortflag == false)
              this.sortFlag = false;
      }
  };
  YAHOO.lang.extend(KJUR.asn1.DERSet, KJUR.asn1.DERAbstractStructured);
  // ********************************************************************
  /**
   * class for ASN.1 DER TaggedObject
   * @name KJUR.asn1.DERTaggedObject
   * @class class for ASN.1 DER TaggedObject
   * @extends KJUR.asn1.ASN1Object
   * @description
   * <br/>
   * Parameter 'tagNoNex' is ASN.1 tag(T) value for this object.
   * For example, if you find '[1]' tag in a ASN.1 dump,
   * 'tagNoHex' will be 'a1'.
   * <br/>
   * As for optional argument 'params' for constructor, you can specify *ANY* of
   * following properties:
   * <ul>
   * <li>explicit - specify true if this is explicit tag otherwise false
   *     (default is 'true').</li>
   * <li>tag - specify tag (default is 'a0' which means [0])</li>
   * <li>obj - specify ASN1Object which is tagged</li>
   * </ul>
   * @example
   * d1 = new KJUR.asn1.DERUTF8String({'str':'a'});
   * d2 = new KJUR.asn1.DERTaggedObject({'obj': d1});
   * hex = d2.getEncodedHex();
   */
  KJUR.asn1.DERTaggedObject = function (params) {
      KJUR.asn1.DERTaggedObject.superclass.constructor.call(this);
      this.hT = "a0";
      this.hV = '';
      this.isExplicit = true;
      this.asn1Object = null;
      /**
       * set value by an ASN1Object
       * @name setString
       * @memberOf KJUR.asn1.DERTaggedObject#
       * @function
       * @param {Boolean} isExplicitFlag flag for explicit/implicit tag
       * @param {Integer} tagNoHex hexadecimal string of ASN.1 tag
       * @param {ASN1Object} asn1Object ASN.1 to encapsulate
       */
      this.setASN1Object = function (isExplicitFlag, tagNoHex, asn1Object) {
          this.hT = tagNoHex;
          this.isExplicit = isExplicitFlag;
          this.asn1Object = asn1Object;
          if (this.isExplicit) {
              this.hV = this.asn1Object.getEncodedHex();
              this.hTLV = null;
              this.isModified = true;
          }
          else {
              this.hV = null;
              this.hTLV = asn1Object.getEncodedHex();
              this.hTLV = this.hTLV.replace(/^../, tagNoHex);
              this.isModified = false;
          }
      };
      this.getFreshValueHex = function () {
          return this.hV;
      };
      if (typeof params != "undefined") {
          if (typeof params['tag'] != "undefined") {
              this.hT = params['tag'];
          }
          if (typeof params['explicit'] != "undefined") {
              this.isExplicit = params['explicit'];
          }
          if (typeof params['obj'] != "undefined") {
              this.asn1Object = params['obj'];
              this.setASN1Object(this.isExplicit, this.hT, this.asn1Object);
          }
      }
  };
  YAHOO.lang.extend(KJUR.asn1.DERTaggedObject, KJUR.asn1.ASN1Object);

  var __extends = (undefined && undefined.__extends) || (function () {
      var extendStatics = function (d, b) {
          extendStatics = Object.setPrototypeOf ||
              ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
              function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
          return extendStatics(d, b);
      };
      return function (d, b) {
          if (typeof b !== "function" && b !== null)
              throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
          extendStatics(d, b);
          function __() { this.constructor = d; }
          d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
      };
  })();
  /**
   * Create a new JSEncryptRSAKey that extends Tom Wu's RSA key object.
   * This object is just a decorator for parsing the key parameter
   * @param {string|Object} key - The key in string format, or an object containing
   * the parameters needed to build a RSAKey object.
   * @constructor
   */
  var JSEncryptRSAKey = /** @class */ (function (_super) {
      __extends(JSEncryptRSAKey, _super);
      function JSEncryptRSAKey(key) {
          var _this = _super.call(this) || this;
          // Call the super constructor.
          //  RSAKey.call(this);
          // If a key key was provided.
          if (key) {
              // If this is a string...
              if (typeof key === "string") {
                  _this.parseKey(key);
              }
              else if (JSEncryptRSAKey.hasPrivateKeyProperty(key) ||
                  JSEncryptRSAKey.hasPublicKeyProperty(key)) {
                  // Set the values for the key.
                  _this.parsePropertiesFrom(key);
              }
          }
          return _this;
      }
      /**
       * Method to parse a pem encoded string containing both a public or private key.
       * The method will translate the pem encoded string in a der encoded string and
       * will parse private key and public key parameters. This method accepts public key
       * in the rsaencryption pkcs #1 format (oid: 1.2.840.113549.1.1.1).
       *
       * @todo Check how many rsa formats use the same format of pkcs #1.
       *
       * The format is defined as:
       * PublicKeyInfo ::= SEQUENCE {
       *   algorithm       AlgorithmIdentifier,
       *   PublicKey       BIT STRING
       * }
       * Where AlgorithmIdentifier is:
       * AlgorithmIdentifier ::= SEQUENCE {
       *   algorithm       OBJECT IDENTIFIER,     the OID of the enc algorithm
       *   parameters      ANY DEFINED BY algorithm OPTIONAL (NULL for PKCS #1)
       * }
       * and PublicKey is a SEQUENCE encapsulated in a BIT STRING
       * RSAPublicKey ::= SEQUENCE {
       *   modulus           INTEGER,  -- n
       *   publicExponent    INTEGER   -- e
       * }
       * it's possible to examine the structure of the keys obtained from openssl using
       * an asn.1 dumper as the one used here to parse the components: http://lapo.it/asn1js/
       * @argument {string} pem the pem encoded string, can include the BEGIN/END header/footer
       * @private
       */
      JSEncryptRSAKey.prototype.parseKey = function (pem) {
          try {
              var modulus = 0;
              var public_exponent = 0;
              var reHex = /^\s*(?:[0-9A-Fa-f][0-9A-Fa-f]\s*)+$/;
              var der = reHex.test(pem) ? Hex.decode(pem) : Base64.unarmor(pem);
              var asn1 = ASN1.decode(der);
              // Fixes a bug with OpenSSL 1.0+ private keys
              if (asn1.sub.length === 3) {
                  asn1 = asn1.sub[2].sub[0];
              }
              if (asn1.sub.length === 9) {
                  // Parse the private key.
                  modulus = asn1.sub[1].getHexStringValue(); // bigint
                  this.n = parseBigInt(modulus, 16);
                  public_exponent = asn1.sub[2].getHexStringValue(); // int
                  this.e = parseInt(public_exponent, 16);
                  var private_exponent = asn1.sub[3].getHexStringValue(); // bigint
                  this.d = parseBigInt(private_exponent, 16);
                  var prime1 = asn1.sub[4].getHexStringValue(); // bigint
                  this.p = parseBigInt(prime1, 16);
                  var prime2 = asn1.sub[5].getHexStringValue(); // bigint
                  this.q = parseBigInt(prime2, 16);
                  var exponent1 = asn1.sub[6].getHexStringValue(); // bigint
                  this.dmp1 = parseBigInt(exponent1, 16);
                  var exponent2 = asn1.sub[7].getHexStringValue(); // bigint
                  this.dmq1 = parseBigInt(exponent2, 16);
                  var coefficient = asn1.sub[8].getHexStringValue(); // bigint
                  this.coeff = parseBigInt(coefficient, 16);
              }
              else if (asn1.sub.length === 2) {
                  if (asn1.sub[0].sub) {
                      // Parse ASN.1 SubjectPublicKeyInfo type as defined by X.509
                      var bit_string = asn1.sub[1];
                      var sequence = bit_string.sub[0];
                      modulus = sequence.sub[0].getHexStringValue();
                      this.n = parseBigInt(modulus, 16);
                      public_exponent = sequence.sub[1].getHexStringValue();
                      this.e = parseInt(public_exponent, 16);
                  }
                  else {
                      // Parse ASN.1 RSAPublicKey type as defined by PKCS #1
                      modulus = asn1.sub[0].getHexStringValue();
                      this.n = parseBigInt(modulus, 16);
                      public_exponent = asn1.sub[1].getHexStringValue();
                      this.e = parseInt(public_exponent, 16);
                  }
              }
              else {
                  return false;
              }
              return true;
          }
          catch (ex) {
              return false;
          }
      };
      /**
       * Translate rsa parameters in a hex encoded string representing the rsa key.
       *
       * The translation follow the ASN.1 notation :
       * RSAPrivateKey ::= SEQUENCE {
       *   version           Version,
       *   modulus           INTEGER,  -- n
       *   publicExponent    INTEGER,  -- e
       *   privateExponent   INTEGER,  -- d
       *   prime1            INTEGER,  -- p
       *   prime2            INTEGER,  -- q
       *   exponent1         INTEGER,  -- d mod (p1)
       *   exponent2         INTEGER,  -- d mod (q-1)
       *   coefficient       INTEGER,  -- (inverse of q) mod p
       * }
       * @returns {string}  DER Encoded String representing the rsa private key
       * @private
       */
      JSEncryptRSAKey.prototype.getPrivateBaseKey = function () {
          var options = {
              array: [
                  new KJUR.asn1.DERInteger({ int: 0 }),
                  new KJUR.asn1.DERInteger({ bigint: this.n }),
                  new KJUR.asn1.DERInteger({ int: this.e }),
                  new KJUR.asn1.DERInteger({ bigint: this.d }),
                  new KJUR.asn1.DERInteger({ bigint: this.p }),
                  new KJUR.asn1.DERInteger({ bigint: this.q }),
                  new KJUR.asn1.DERInteger({ bigint: this.dmp1 }),
                  new KJUR.asn1.DERInteger({ bigint: this.dmq1 }),
                  new KJUR.asn1.DERInteger({ bigint: this.coeff }),
              ],
          };
          var seq = new KJUR.asn1.DERSequence(options);
          return seq.getEncodedHex();
      };
      /**
       * base64 (pem) encoded version of the DER encoded representation
       * @returns {string} pem encoded representation without header and footer
       * @public
       */
      JSEncryptRSAKey.prototype.getPrivateBaseKeyB64 = function () {
          return hex2b64(this.getPrivateBaseKey());
      };
      /**
       * Translate rsa parameters in a hex encoded string representing the rsa public key.
       * The representation follow the ASN.1 notation :
       * PublicKeyInfo ::= SEQUENCE {
       *   algorithm       AlgorithmIdentifier,
       *   PublicKey       BIT STRING
       * }
       * Where AlgorithmIdentifier is:
       * AlgorithmIdentifier ::= SEQUENCE {
       *   algorithm       OBJECT IDENTIFIER,     the OID of the enc algorithm
       *   parameters      ANY DEFINED BY algorithm OPTIONAL (NULL for PKCS #1)
       * }
       * and PublicKey is a SEQUENCE encapsulated in a BIT STRING
       * RSAPublicKey ::= SEQUENCE {
       *   modulus           INTEGER,  -- n
       *   publicExponent    INTEGER   -- e
       * }
       * @returns {string} DER Encoded String representing the rsa public key
       * @private
       */
      JSEncryptRSAKey.prototype.getPublicBaseKey = function () {
          var first_sequence = new KJUR.asn1.DERSequence({
              array: [
                  new KJUR.asn1.DERObjectIdentifier({ oid: "1.2.840.113549.1.1.1" }),
                  new KJUR.asn1.DERNull(),
              ],
          });
          var second_sequence = new KJUR.asn1.DERSequence({
              array: [
                  new KJUR.asn1.DERInteger({ bigint: this.n }),
                  new KJUR.asn1.DERInteger({ int: this.e }),
              ],
          });
          var bit_string = new KJUR.asn1.DERBitString({
              hex: "00" + second_sequence.getEncodedHex(),
          });
          var seq = new KJUR.asn1.DERSequence({
              array: [first_sequence, bit_string],
          });
          return seq.getEncodedHex();
      };
      /**
       * base64 (pem) encoded version of the DER encoded representation
       * @returns {string} pem encoded representation without header and footer
       * @public
       */
      JSEncryptRSAKey.prototype.getPublicBaseKeyB64 = function () {
          return hex2b64(this.getPublicBaseKey());
      };
      /**
       * wrap the string in block of width chars. The default value for rsa keys is 64
       * characters.
       * @param {string} str the pem encoded string without header and footer
       * @param {Number} [width=64] - the length the string has to be wrapped at
       * @returns {string}
       * @private
       */
      JSEncryptRSAKey.wordwrap = function (str, width) {
          width = width || 64;
          if (!str) {
              return str;
          }
          var regex = "(.{1," + width + "})( +|$\n?)|(.{1," + width + "})";
          return str.match(RegExp(regex, "g")).join("\n");
      };
      /**
       * Retrieve the pem encoded private key
       * @returns {string} the pem encoded private key with header/footer
       * @public
       */
      JSEncryptRSAKey.prototype.getPrivateKey = function () {
          var key = "-----BEGIN RSA PRIVATE KEY-----\n";
          key += JSEncryptRSAKey.wordwrap(this.getPrivateBaseKeyB64()) + "\n";
          key += "-----END RSA PRIVATE KEY-----";
          return key;
      };
      /**
       * Retrieve the pem encoded public key
       * @returns {string} the pem encoded public key with header/footer
       * @public
       */
      JSEncryptRSAKey.prototype.getPublicKey = function () {
          var key = "-----BEGIN PUBLIC KEY-----\n";
          key += JSEncryptRSAKey.wordwrap(this.getPublicBaseKeyB64()) + "\n";
          key += "-----END PUBLIC KEY-----";
          return key;
      };
      /**
       * Check if the object contains the necessary parameters to populate the rsa modulus
       * and public exponent parameters.
       * @param {Object} [obj={}] - An object that may contain the two public key
       * parameters
       * @returns {boolean} true if the object contains both the modulus and the public exponent
       * properties (n and e)
       * @todo check for types of n and e. N should be a parseable bigInt object, E should
       * be a parseable integer number
       * @private
       */
      JSEncryptRSAKey.hasPublicKeyProperty = function (obj) {
          obj = obj || {};
          return obj.hasOwnProperty("n") && obj.hasOwnProperty("e");
      };
      /**
       * Check if the object contains ALL the parameters of an RSA key.
       * @param {Object} [obj={}] - An object that may contain nine rsa key
       * parameters
       * @returns {boolean} true if the object contains all the parameters needed
       * @todo check for types of the parameters all the parameters but the public exponent
       * should be parseable bigint objects, the public exponent should be a parseable integer number
       * @private
       */
      JSEncryptRSAKey.hasPrivateKeyProperty = function (obj) {
          obj = obj || {};
          return (obj.hasOwnProperty("n") &&
              obj.hasOwnProperty("e") &&
              obj.hasOwnProperty("d") &&
              obj.hasOwnProperty("p") &&
              obj.hasOwnProperty("q") &&
              obj.hasOwnProperty("dmp1") &&
              obj.hasOwnProperty("dmq1") &&
              obj.hasOwnProperty("coeff"));
      };
      /**
       * Parse the properties of obj in the current rsa object. Obj should AT LEAST
       * include the modulus and public exponent (n, e) parameters.
       * @param {Object} obj - the object containing rsa parameters
       * @private
       */
      JSEncryptRSAKey.prototype.parsePropertiesFrom = function (obj) {
          this.n = obj.n;
          this.e = obj.e;
          if (obj.hasOwnProperty("d")) {
              this.d = obj.d;
              this.p = obj.p;
              this.q = obj.q;
              this.dmp1 = obj.dmp1;
              this.dmq1 = obj.dmq1;
              this.coeff = obj.coeff;
          }
      };
      return JSEncryptRSAKey;
  }(RSAKey));

  var _a$1;
  var version = typeof browser$1 !== 'undefined'
      ? (_a$1 = browser$1.env) === null || _a$1 === void 0 ? void 0 : _a$1.npm_package_version
      : undefined;
  /**
   *
   * @param {Object} [options = {}] - An object to customize JSEncrypt behaviour
   * possible parameters are:
   * - default_key_size        {number}  default: 1024 the key size in bit
   * - default_public_exponent {string}  default: '010001' the hexadecimal representation of the public exponent
   * - log                     {boolean} default: false whether log warn/error or not
   * @constructor
   */
  var JSEncrypt = /** @class */ (function () {
      function JSEncrypt(options) {
          if (options === void 0) { options = {}; }
          options = options || {};
          this.default_key_size = options.default_key_size
              ? parseInt(options.default_key_size, 10)
              : 1024;
          this.default_public_exponent = options.default_public_exponent || "010001"; // 65537 default openssl public exponent for rsa key type
          this.log = options.log || false;
          // The private and public key.
          this.key = null;
      }
      /**
       * Method to set the rsa key parameter (one method is enough to set both the public
       * and the private key, since the private key contains the public key paramenters)
       * Log a warning if logs are enabled
       * @param {Object|string} key the pem encoded string or an object (with or without header/footer)
       * @public
       */
      JSEncrypt.prototype.setKey = function (key) {
          if (this.log && this.key) {
              console.warn("A key was already set, overriding existing.");
          }
          this.key = new JSEncryptRSAKey(key);
      };
      /**
       * Proxy method for setKey, for api compatibility
       * @see setKey
       * @public
       */
      JSEncrypt.prototype.setPrivateKey = function (privkey) {
          // Create the key.
          this.setKey(privkey);
      };
      /**
       * Proxy method for setKey, for api compatibility
       * @see setKey
       * @public
       */
      JSEncrypt.prototype.setPublicKey = function (pubkey) {
          // Sets the public key.
          this.setKey(pubkey);
      };
      /**
       * Proxy method for RSAKey object's decrypt, decrypt the string using the private
       * components of the rsa key object. Note that if the object was not set will be created
       * on the fly (by the getKey method) using the parameters passed in the JSEncrypt constructor
       * @param {string} str base64 encoded crypted string to decrypt
       * @return {string} the decrypted string
       * @public
       */
      JSEncrypt.prototype.decrypt = function (str) {
          // Return the decrypted string.
          try {
              return this.getKey().decrypt(b64tohex(str));
          }
          catch (ex) {
              return false;
          }
      };
      /**
       * Proxy method for RSAKey object's encrypt, encrypt the string using the public
       * components of the rsa key object. Note that if the object was not set will be created
       * on the fly (by the getKey method) using the parameters passed in the JSEncrypt constructor
       * @param {string} str the string to encrypt
       * @return {string} the encrypted string encoded in base64
       * @public
       */
      JSEncrypt.prototype.encrypt = function (str) {
          // Return the encrypted string.
          try {
              return hex2b64(this.getKey().encrypt(str));
          }
          catch (ex) {
              return false;
          }
      };
      /**
       * Proxy method for RSAKey object's sign.
       * @param {string} str the string to sign
       * @param {function} digestMethod hash method
       * @param {string} digestName the name of the hash algorithm
       * @return {string} the signature encoded in base64
       * @public
       */
      JSEncrypt.prototype.sign = function (str, digestMethod, digestName) {
          // return the RSA signature of 'str' in 'hex' format.
          try {
              return hex2b64(this.getKey().sign(str, digestMethod, digestName));
          }
          catch (ex) {
              return false;
          }
      };
      /**
       * Proxy method for RSAKey object's verify.
       * @param {string} str the string to verify
       * @param {string} signature the signature encoded in base64 to compare the string to
       * @param {function} digestMethod hash method
       * @return {boolean} whether the data and signature match
       * @public
       */
      JSEncrypt.prototype.verify = function (str, signature, digestMethod) {
          // Return the decrypted 'digest' of the signature.
          try {
              return this.getKey().verify(str, b64tohex(signature), digestMethod);
          }
          catch (ex) {
              return false;
          }
      };
      /**
       * Getter for the current JSEncryptRSAKey object. If it doesn't exists a new object
       * will be created and returned
       * @param {callback} [cb] the callback to be called if we want the key to be generated
       * in an async fashion
       * @returns {JSEncryptRSAKey} the JSEncryptRSAKey object
       * @public
       */
      JSEncrypt.prototype.getKey = function (cb) {
          // Only create new if it does not exist.
          if (!this.key) {
              // Get a new private key.
              this.key = new JSEncryptRSAKey();
              if (cb && {}.toString.call(cb) === "[object Function]") {
                  this.key.generateAsync(this.default_key_size, this.default_public_exponent, cb);
                  return;
              }
              // Generate the key.
              this.key.generate(this.default_key_size, this.default_public_exponent);
          }
          return this.key;
      };
      /**
       * Returns the pem encoded representation of the private key
       * If the key doesn't exists a new key will be created
       * @returns {string} pem encoded representation of the private key WITH header and footer
       * @public
       */
      JSEncrypt.prototype.getPrivateKey = function () {
          // Return the private representation of this key.
          return this.getKey().getPrivateKey();
      };
      /**
       * Returns the pem encoded representation of the private key
       * If the key doesn't exists a new key will be created
       * @returns {string} pem encoded representation of the private key WITHOUT header and footer
       * @public
       */
      JSEncrypt.prototype.getPrivateKeyB64 = function () {
          // Return the private representation of this key.
          return this.getKey().getPrivateBaseKeyB64();
      };
      /**
       * Returns the pem encoded representation of the public key
       * If the key doesn't exists a new key will be created
       * @returns {string} pem encoded representation of the public key WITH header and footer
       * @public
       */
      JSEncrypt.prototype.getPublicKey = function () {
          // Return the private representation of this key.
          return this.getKey().getPublicKey();
      };
      /**
       * Returns the pem encoded representation of the public key
       * If the key doesn't exists a new key will be created
       * @returns {string} pem encoded representation of the public key WITHOUT header and footer
       * @public
       */
      JSEncrypt.prototype.getPublicKeyB64 = function () {
          // Return the private representation of this key.
          return this.getKey().getPublicBaseKeyB64();
      };
      JSEncrypt.version = version;
      return JSEncrypt;
  }());

  /**
   * Geens com library wrapper.
   */
  var CryptoService = /** @class */ (function () {
      function CryptoService() {
      }
      // TODO hashing big files without draining all pc ram var hashBytes = (new asmCrypto.SHA256).process(data).process(moreData).finish().result;
      /**
       * Asymmetric rsa encryption
       * @param data
       * @param publicKey
       * @returns {any}
       */
      CryptoService.rsaEncrypt = function (data, publicKey) {
          var encrypt = new JSEncrypt();
          encrypt.setPublicKey(publicKey);
          return encrypt.encrypt(data);
      };
      /**
       * Asymmetric rsa decryption
       * @param data
       * @param privateKey
       * @returns {any}
       */
      CryptoService.rsaDecrypt = function (data, privateKey) {
          var decrypt = new JSEncrypt();
          decrypt.setPrivateKey(privateKey);
          return decrypt.decrypt(data);
      };
      /**
       * Symmetric file encryption (AES AES_GCM)
       * @param data
       * @param password
       * @param iterations
       * @returns {any}
       */
      CryptoService.symEncryptFile = function (data, password, iterations) {
          var dataToEncrypt = new Uint8Array();
          if (data instanceof ArrayBuffer) {
              dataToEncrypt = new Uint8Array(data);
          }
          else {
              dataToEncrypt = data;
          }
          var iv = this.getRandomBytes(64);
          var salt = this.getRandomBytes(128);
          iterations = iterations || 9000;
          var bytesIterations = this.stringToBytes(iterations.toString()); //TODO add check if iterations is not bigger than 9999
          var stretchedPass = this.keyStretch(password, salt, iterations, 32);
          var encrypted = AES_GCM.encrypt(dataToEncrypt, stretchedPass, iv);
          var mergedBytes = new Uint8Array(iv.byteLength + salt.byteLength + 4 + encrypted.byteLength);
          mergedBytes.set(iv, 0);
          mergedBytes.set(salt, iv.byteLength);
          mergedBytes.set(bytesIterations, iv.byteLength + salt.byteLength);
          mergedBytes.set(encrypted, +iv.byteLength + salt.byteLength + 4);
          return mergedBytes;
      };
      /**
       * Symmetric file decryption (AES AES_GCM)
       * @param data
       * @param password
       * @returns {any}
       */
      CryptoService.symDecryptFile = function (data, password) {
          var dataToDencrypt = new Uint8Array();
          if (data instanceof ArrayBuffer) {
              dataToDencrypt = new Uint8Array(data);
          }
          else {
              dataToDencrypt = data;
          }
          var iv = dataToDencrypt.subarray(0, 64);
          var salt = dataToDencrypt.subarray(64, 192);
          var iterations = dataToDencrypt.subarray(192, 196);
          dataToDencrypt = dataToDencrypt.subarray(196, data.byteLength);
          var stretchedPass = this.keyStretch(password, salt, parseInt(this.bytesToString(iterations)), 32);
          return AES_GCM.decrypt(dataToDencrypt, stretchedPass, iv);
      };
      /**
       * Symmetric text encryption (AES AES_GCM)
       * @param data
       * @param password
       * @param iterations
       * @returns {any}
       */
      CryptoService.symEncryptText = function (data, password, iterations) {
          var dataText = this.stringToBytes(data, true);
          var iv = this.getRandomBytes(64);
          var salt = this.getRandomBytes(128);
          iterations = iterations || 2000;
          var stretchedPass = this.keyStretch(password, salt, iterations, 32);
          var encrypted = AES_GCM.encrypt(dataText, stretchedPass, iv);
          return JSON.stringify({
              bytes: this.bytesToB64(encrypted),
              iv: this.bytesToB64(iv),
              salt: this.bytesToB64(salt),
              iterations: iterations
          });
      };
      /**
       * Symmetric text decryption (AES AES_GCM)
       * @param data
       * @param password
       * @returns {any}
       */
      CryptoService.symDecryptText = function (data, password) {
          var dataJson = JSON.parse(data);
          var stretchedPass = this.keyStretch(password, this.b64ToBytes(dataJson.salt), dataJson.iterations, 32);
          return this.bytesToString(AES_GCM.decrypt(this.b64ToBytes(dataJson.bytes), stretchedPass, this.b64ToBytes(dataJson.iv)), true);
      };
      /**
       * Password(used for AES) stretching using PBKDF2_HMAC_SHA256
       * @param password
       * @param salt
       * @param iterations
       * @param length
       * @returns {any}
       */
      CryptoService.keyStretch = function (password, salt, iterations, length) {
          var passwordBytes = this.stringToBytes(password);
          return Pbkdf2HmacSha256(passwordBytes, salt, iterations || 9000, length);
      };
      /**
       * Generate true random bytes
       * @returns {any}
       * @param bytes
       */
      CryptoService.getRandomBytes = function (bytes) {
          if (bytes % 16 !== 0) {
              throw 'getRandomBytes(bytes) not a modules of 32';
          }
          var buf = new Uint8Array(bytes);
          window.crypto.getRandomValues(buf);
          return buf;
      };
      /**
       * Generate true random string
       * @returns {any}
       * @param size
       * @param excludedChars
       * @param onlyNumbersAndLetters
       * @param specialChars
       */
      CryptoService.getRandomText = function (size, excludedChars, onlyNumbersAndLetters) {
          if (excludedChars === void 0) { excludedChars = []; }
          if (onlyNumbersAndLetters === void 0) { onlyNumbersAndLetters = false; }
          var randomString = '';
          while (randomString.length < size) {
              var rand = this.getRandomBytes(size);
              for (var i = 0; i < rand.length; i++) {
                  if (randomString.length < size) {
                      if (onlyNumbersAndLetters) {
                          if ((rand[i] >= 48 && rand[i] <= 57) ||
                              (rand[i] >= 65 && rand[i] <= 90) ||
                              (rand[i] >= 97 && rand[i] <= 122)) {
                              if (excludedChars.indexOf(String.fromCharCode(rand[i])) === -1) {
                                  randomString = randomString + String.fromCharCode(rand[i]);
                              }
                          }
                      }
                      else {
                          if (rand[i] >= 33 && rand[i] <= 126) {
                              if (excludedChars.indexOf(String.fromCharCode(rand[i])) === -1) {
                                  randomString = randomString + String.fromCharCode(rand[i]);
                              }
                          }
                      }
                  }
              }
          }
          return randomString;
      };
      CryptoService.resultToString = function (result) {
          return JSON.stringify(result);
      };
      CryptoService.resultToJson = function (result) {
          return JSON.parse(result);
      };
      CryptoService.generateKeys = function (keySize) {
          return new Promise(function (resolve) {
              // keySize = keySize || 1024;
              keySize = keySize || 2048;
              // keySize = keySize || 4096;
              var crypt = new JSEncrypt({ default_key_size: keySize });
              crypt.getKey(function () {
                  resolve({
                      privateKey: crypt.getPrivateKeyB64(),
                      publicKey: crypt.getPublicKeyB64()
                  });
              });
          });
      };
      CryptoService.bytesToB64 = function (bits) {
          return bytes_to_base64(bits);
      };
      CryptoService.bytesToString = function (bits, utf8) {
          if (utf8 === void 0) { utf8 = false; }
          return bytes_to_string(bits, utf8);
      };
      CryptoService.bytesToHex = function (bits) {
          return bytes_to_hex(bits);
      };
      CryptoService.hexToBytes = function (hex) {
          return hex_to_bytes(hex);
      };
      CryptoService.stringToBytes = function (str, utf8) {
          if (utf8 === void 0) { utf8 = false; }
          return string_to_bytes(str, utf8);
      };
      CryptoService.b64ToBytes = function (b64) {
          return base64_to_bytes(b64);
      };
      return CryptoService;
  }());

  var ErrorService = /** @class */ (function () {
      function ErrorService() {
      }
      ErrorService.isArrayOfNumbers = function (array) {
          var valueIsNumber = true;
          if (!Array.isArray(array)) {
              throw new Error('Array is not valid. Expected array of numbers');
          }
          for (var i = 0; i < array.length; i++) {
              if (isNaN(array[i]) || typeof array[i] !== 'number' || array[i] === null) {
                  valueIsNumber = false;
              }
          }
          if (valueIsNumber === false) {
              throw new Error('Array is not valid. Expected array of numbers');
          }
          if (array && array.length === 0) {
              throw new Error("Array is not valid. Array can't be empty");
          }
      };
      ErrorService.isTitleValid = function (title) {
          if (typeof title !== 'string' || title.length < 1) {
              throw new Error('Text is not valid. Expected string with length > 0');
          }
      };
      ErrorService.isNullOrUndefinedOrEmpty = function (value) {
          return typeof value === 'undefined' || value === '' || value === null;
      };
      ErrorService.isIdNaNAndNotNull = function (id) {
          if (isNaN(id) || typeof id !== 'number' || id === null) {
              throw new Error('Id is not valid. Expected value of type number');
          }
      };
      ErrorService.isItemSharePermissionSetCorrectly = function (permission) {
          if (permission !== ItemAccessPermissionType.READ_WRITE &&
              permission !== ItemAccessPermissionType.SHARING_DOWNLOAD) {
              throw new Error('Permission is not valid. Expected 3(READ_WRITE) or 4(SHARING_DOWNLOAD)');
          }
      };
      ErrorService.isOptionsSetCorrectly = function (options) {
          if ((options.url_token && !options.password) ||
              (!options.url_token && options.password) ||
              options.url_token === '' ||
              options.password === '' ||
              ((options.external_access_token ||
                  (options.external_access_token &&
                      options.external_access_token.length &&
                      options.external_access_token.length > 0)) &&
                  !options.url_token &&
                  !options.password)) {
              throw new Error('Url token, password or external access token is not set correctly');
          }
      };
      ErrorService.isItemDataSetCorrectly = function (items) {
          for (var i = 0; i < items.length; i++) {
              this.isIdNaN(items[i].itemId);
              if ((typeof items[i].versionId !== 'number' &&
                  items[i].versionId !== null &&
                  items[i].versionId !== undefined) ||
                  items[i].versionId !== items[i].versionId) {
                  throw new Error('Version id is not valid. Expected value of type number, null or undefined');
              }
          }
      };
      ErrorService.isToBeDeletedVersionDataSet = function (item) {
          this.isIdNaN(item.id);
          if (item.version) {
              if ((typeof item.version.id !== 'number' &&
                  item.version.id !== null &&
                  item.version.id !== undefined) ||
                  item.version.id !== item.version.id) {
                  throw new Error('Version id is not valid. Expected value of type number');
              }
          }
          else {
              throw new Error('Version data is not set');
          }
      };
      ErrorService.isGeensIdsSetCorrectly = function (geensIds) {
          if (geensIds.length === 0 || geensIds[0].length === 0) {
              throw new Error('Geens ids are required');
          }
          for (var _i = 0, geensIds_1 = geensIds; _i < geensIds_1.length; _i++) {
              var geensId = geensIds_1[_i];
              if (!geensId.includes('#'))
                  throw new Error('Incorrect Geens id, No # found');
          }
      };
      ErrorService.isIdNaN = function (id) {
          if (isNaN(id) || (typeof id !== 'number' && id !== null)) {
              throw new Error('Id is not valid. Expected value of type number');
          }
      };
      ErrorService.isPermissionsNaNAndValid = function (permission) {
          if (isNaN(permission) || (typeof permission !== 'number' && permission !== null)) {
              throw new Error('Permission is not valid. Expected value of type number');
          }
          else if (permission < 4 || permission > 12) {
              throw new Error('Permission is not valid. Expected value is 4(Download), 5(View), 6(Upload),' +
                  ' 7(View/Edit), 8(Download/View/Upload), 9(Download/View/Edit), 10(Upload/View),' +
                  ' 11(Upload/Edit/View) or 12(Upload/Download/Edit/View)');
          }
      };
      ErrorService.isSharedIdentityTypeNaNAndValid = function (sharedIdentityType) {
          if (isNaN(sharedIdentityType) ||
              (typeof sharedIdentityType !== 'number' && sharedIdentityType !== null)) {
              throw new Error('Shared identity type is not valid. Expected value of type number');
          }
          else if (sharedIdentityType !== 5 && sharedIdentityType !== 6) {
              throw new Error('Shared identity type is not valid. Expected value is 5(GeensId) or 6(surname)');
          }
      };
      ErrorService.isPasswordValid = function (password, length) {
          if (length === void 0) { length = 8; }
          if (typeof password !== 'string' || password.length < length) {
              throw new Error('Password is not valid. Expected string with length >= ' + length);
          }
      };
      ErrorService.isParameterBoolean = function (value, parameterName) {
          if (typeof value !== 'boolean') {
              throw new Error(parameterName + 'is not valid. Expected value of type boolean');
          }
      };
      ErrorService.isFileOfTypeArrayBufferValid = function (file, title, extension, mime_type) {
          if (!(file instanceof File) &&
              (ErrorService.isNullOrUndefinedOrEmpty(title) ||
                  ErrorService.isNullOrUndefinedOrEmpty(extension) ||
                  ErrorService.isNullOrUndefinedOrEmpty(mime_type))) {
              throw new Error('File metadata is not valid. File of this type must contain valid title, mime_type and extension');
          }
      };
      ErrorService.isFileOfTypeFileOrArrayBuffer = function (file) {
          if (!file.byteLength) {
              if (!(file instanceof File)) {
                  throw new Error('file parameter must be of type File or ArrayBuffer');
              }
          }
      };
      ErrorService.isListAllItemsOptionsTypeValid = function (type) {
          if (type !== '' &&
              type !== 'personal' &&
              type !== 'company' &&
              type !== 'shared_for_me' &&
              type !== 'shared_by_me') {
              throw new Error('Type is invalid. Options are `personal`, `company`, `shared_for_me`, `shared_by_me` or ``');
          }
      };
      ErrorService.validateOauthUsersKey = function (oauthUsersData) {
          for (var _i = 0, oauthUsersData_1 = oauthUsersData; _i < oauthUsersData_1.length; _i++) {
              var oauthUserData = oauthUsersData_1[_i];
              if (oauthUserData.error || !oauthUserData.public_key || !oauthUserData.email) {
                  // if user is not a geens service user on geens user return false
                  return false;
              }
          }
          return true;
      };
      return ErrorService;
  }());

  // const GeensUrl: string = GlobalVars.GeensUrl;
  var GeensGetListUrl = geensGetListUrl;
  var GeensGetItemUrl = geensGetItemUrl;
  var GeensMoveItemUrl = geensMoveItemUrl;
  var GeensCopyItemUrl = geensCopyItemUrl;
  var GeensStoreItemUrl = geensStoreItemUrl;
  var GeensContentGetUrl = geensContentGetUrl;
  var GeensCreateItemUrl = geensCreateItemUrl;
  var GeensUpdateItemUrl = geensUpdateItemUrl;
  var GeensRemoveItemUrl = geensRemoveItemUrl;
  var GeensUpdateNoteUrl = geensUpdateNoteUrl;
  var GeensGetAllItemsUrl = geensGetAllItemsUrl;
  var GeensRestoreItemUrl = geensRestoreItemUrl;
  var GeensGetFragmentListUrl = geensGetFragmentListUrl;
  var GeensSoftDeletedItemsUrl = geensSoftDeletedItemsUrl;
  var GeensGenerateSharableUrl = geensGenerateSharableUrl;
  var GeensItemsDescendantsUrl = geensItemsDescendantsUrl;
  var GeensDeleteItemVersionUrl = geensDeleteItemVersionUrl;
  var GeensRevokeSharesUrl = geensRevokeSharesUrl;
  var GeensGetAllUrlSharedItems = geensGetAllUrlSharedItems;
  var GeensGetSharedForMeItems = geensGetSharedForMeItems;
  var GeensGetSharedByMeItems = geensGetSharedByMeItems;
  var GeensGetSharedUrl = geensGetSharedUrl;
  var GeensShareItem = geensShareItem;
  var ItemApiService = /** @class */ (function () {
      function ItemApiService() {
          this.userService = new UserService();
      }
      ItemApiService.prototype.getOptions = function () {
          return [
              {
                  Accept: 'application/json',
              },
          ];
      };
      ItemApiService.prototype.getUserData = function (on_success, on_error) {
          var access_token = localStorage.getItem('geens_access_token');
          var url = GlobalVars.GeensUrl + geensUserCredentials.url;
          HttpRequestService.postAjax(url + '?' + geensUserCredentials.accessToken + access_token, function (response) {
              var authenticatedUser = JSON.parse(response);
              localStorage.setItem('user_data', JSON.stringify(authenticatedUser));
              on_success(true);
          }, function (error) {
              on_error(error);
          });
      };
      ItemApiService.prototype.list = function (parentId, is_private, extra_details) {
          if (is_private === void 0) { is_private = false; }
          if (extra_details === void 0) { extra_details = false; }
          var params = 'item_ids=[' + parentId.toString() + ']';
          params += '&private=' + is_private;
          params += '&extra_details=' + Boolean(extra_details);
          return HttpRequestService.getRequest(GlobalVars.GeensUrl + GeensGetListUrl, params, this.getOptions());
      };
      ItemApiService.prototype.getAvatar = function (keyId) {
          return HttpRequestService.getRequest(GlobalVars.GeensUrl + '/api/settings/get-avatar/' + keyId + '/avatar.png', null, this.getOptions());
      };
      ItemApiService.prototype.deletedItemsList = function (parentId, groupId) {
          var parent = 'parent_id=' + parentId.toString();
          var group = groupId === null ? '' : '&group_id=' + groupId.toString();
          return HttpRequestService.getRequest(GlobalVars.GeensUrl + GeensSoftDeletedItemsUrl, parent + group, this.getOptions());
      };
      ItemApiService.prototype.create = function (items, group_id, privateFile, options) {
          if (group_id === void 0) { group_id = null; }
          if (privateFile === void 0) { privateFile = false; }
          localStorage.getItem('user_data');
          var body = privateFile
              ? {
                  items: items,
                  group_id: group_id,
                  privateFile: true,
              }
              : {
                  items: items,
                  group_id: group_id,
                  privateFile: false,
              };
          if (options) {
              if (options.url_token && options.url_token !== '') {
                  Object.assign(body, {
                      url_token: options.url_token,
                  });
              }
              if (options.external_access_token && options.external_access_token !== '') {
                  Object.assign(body, {
                      external_access_token: options.external_access_token,
                  });
              }
          }
          Object.assign(body, {
              client_id: localStorage.getItem('client_id'),
          });
          return HttpRequestService.postRequest(GlobalVars.GeensUrl + GeensCreateItemUrl, body, [
              { 'Content-Type': 'application/json' },
              { Accept: 'application/json' },
          ]);
      };
      ItemApiService.prototype.get = function (itemIds, url_token, external_access_token) {
          var params = 'item_ids=' + JSON.stringify(itemIds);
          localStorage.getItem('user_data');
          if (url_token !== undefined && url_token !== null) {
              params += '&url_token=' + url_token;
              if (external_access_token && external_access_token !== '') {
                  // Used for sharable link in item accesses
                  params += '&external_access_token=' + encodeURIComponent(external_access_token);
              }
          }
          params += '&client_id=' + localStorage.getItem('client_id');
          return HttpRequestService.getRequest(GlobalVars.GeensUrl + GeensGetItemUrl, params, this.getOptions());
      };
      ItemApiService.prototype.storeContent = function (content, id, offset, url_token, external_access_token, version_id) {
          var formData = new FormData();
          var contentBlob = new Blob([content], { type: 'application/octet-binary' });
          formData.append('content', contentBlob, 'content');
          formData.append('item_id', id);
          formData.append('position', offset);
          if (version_id) {
              formData.append('version', version_id);
          }
          if (url_token) {
              formData.append('url_token', url_token);
              if (external_access_token) {
                  formData.append('external_access_token', external_access_token);
              }
          }
          formData.append('client_id', localStorage.getItem('client_id'));
          return HttpRequestService.postRequest(GlobalVars.GeensUrl + GeensStoreItemUrl, formData, [{ Multipart: 'form-data' }, { Accept: 'application/json' }], url_token);
      };
      ItemApiService.prototype.update = function (items, options, withAccesses, triggerColorChangeLog, triggerDescChangeLog, itemVersionParameters) {
          if (withAccesses === void 0) { withAccesses = false; }
          if (triggerColorChangeLog === void 0) { triggerColorChangeLog = false; }
          if (triggerDescChangeLog === void 0) { triggerDescChangeLog = false; }
          localStorage.getItem('user_data');
          var requestItems = items.map(function (item) {
              var obj = {};
              if (item.meta_data.length > 0) {
                  obj = {
                      id: item.id,
                      state: item.state,
                      meta_data: item.meta_data,
                  };
              }
              else if (itemVersionParameters) {
                  if (itemVersionParameters.main_version_id) {
                      if (itemVersionParameters.new_version !== null ||
                          itemVersionParameters.new_version !== undefined) {
                          obj = {
                              id: item.id,
                              state: item.state,
                              fragment_count: item.fragment_count,
                              new_version: itemVersionParameters.new_version,
                              main_version_id: itemVersionParameters.main_version_id,
                          };
                      }
                      else {
                          obj = {
                              id: item.id,
                              state: item.state,
                              fragment_count: item.fragment_count,
                              main_version_id: itemVersionParameters.main_version_id,
                          };
                      }
                  }
                  else if (!itemVersionParameters.main_version_id) {
                      if (itemVersionParameters.new_version !== null ||
                          itemVersionParameters.new_version !== undefined) {
                          obj = {
                              id: item.id,
                              state: item.state,
                              fragment_count: item.fragment_count,
                              new_version: itemVersionParameters.new_version,
                              main_version_id: itemVersionParameters.main_version_id,
                          };
                      }
                      else {
                          obj = {
                              id: item.id,
                              state: item.state,
                              fragment_count: item.fragment_count,
                              main_version_id: itemVersionParameters.main_version_id,
                          };
                      }
                  }
              }
              else {
                  obj = {
                      id: item.id,
                      state: item.state,
                  };
              }
              if (withAccesses && item.owner) {
                  Object.assign(obj, {
                      accesses: item.accesses,
                      owner: {
                          password: item.owner.password,
                      },
                  });
              }
              return obj;
          });
          var body = {};
          body['items'] = requestItems;
          body['triggerColorChangeLog'] = triggerColorChangeLog;
          body['triggerDescChangeLog'] = triggerDescChangeLog;
          if (options) {
              if (options.url_token) {
                  body['url_token'] = options.url_token;
                  if (options.external_access_token) {
                      body['external_access_token'] = options.external_access_token;
                  }
              }
          }
          body['client_id'] = localStorage.getItem('client_id');
          return HttpRequestService.postRequest(GlobalVars.GeensUrl + GeensUpdateItemUrl, body, [
              { Accept: 'application/json' },
              { 'Content-Type': 'application/json' },
          ]);
      };
      ItemApiService.prototype.remove = function (ids, options, state) {
          var items = [];
          for (var i = 0; i < ids.length; i++) {
              items.push({ id: ids[i], state: state, client_id: localStorage.getItem('client_id') });
          }
          var body = {};
          body['items'] = items;
          body['soft_delete'] = false;
          if (options.url_token) {
              body['url_token'] = options.url_token;
          }
          if (options.external_access_token && options.external_access_token !== '') {
              // Used for sharable link in item accesses
              body['external_access_token'] = options.external_access_token;
          }
          return HttpRequestService.postRequest(GlobalVars.GeensUrl + GeensRemoveItemUrl, body, [
              { Accept: 'application/json' },
              { 'Content-Type': 'application/json' },
          ]);
      };
      ItemApiService.prototype.restore = function (ids) {
          var items = [];
          for (var i = 0; i < ids.length; i++) {
              items.push({ id: ids[i] });
          }
          return HttpRequestService.postRequest(GlobalVars.GeensUrl + GeensRestoreItemUrl, { items: items }, [{ Accept: 'application/json' }, { 'Content-Type': 'application/json' }]);
      };
      ItemApiService.prototype.all = function (deleted) {
          if (deleted === void 0) { deleted = false; }
          var isDeleted = deleted === false ? null : 'deleted=true';
          return HttpRequestService.getRequest(GlobalVars.GeensUrl + GeensGetAllItemsUrl, isDeleted, this.getOptions());
      };
      ItemApiService.prototype.move = function (items, options) {
          localStorage.getItem('user_data');
          var mappedItems = items.map(function (item) {
              return {
                  id: item.id,
                  parent_id: item.parent_id,
                  owner: item.owner
                      ? {
                          group_id: item.owner.group_id,
                          private: item.owner.private,
                          password: item.owner.password,
                      }
                      : null,
                  accesses: item.accesses,
                  url_shares: item.url_shares,
              };
          });
          var body = {};
          body['items'] = mappedItems;
          if (options.url_token) {
              body['url_token'] = options.url_token;
          }
          if (options.external_access_token &&
              options.external_access_token.length &&
              options.external_access_token.length > 0) {
              // Used for sharable link in item accesses
              if (options.external_access_token[0]) {
                  body['external_access_token1'] = options.external_access_token[0]; // parent item
              }
              if (options.external_access_token[1]) {
                  body['external_access_token2'] = options.external_access_token[1]; // movable item
              }
          }
          body['client_id'] = localStorage.getItem('client_id');
          return HttpRequestService.postRequest(GlobalVars.GeensUrl + GeensMoveItemUrl, body, [
              { Accept: 'application/json' },
              { 'Content-Type': 'application/json' },
          ]);
      };
      ItemApiService.prototype.copy = function (items, group_id, privateFile, options) {
          var body = {};
          localStorage.getItem('user_data');
          if (group_id !== null) {
              body['group_id'] = group_id;
              body['privateFile'] = privateFile;
          }
          body['items'] = items;
          if (options.url_token) {
              body['url_token'] = options.url_token;
          }
          if (options.external_access_token &&
              options.external_access_token.length &&
              options.external_access_token.length > 0) {
              // Used for sharable link in item accesses
              if (options.external_access_token[0]) {
                  body['external_access_token1'] = options.external_access_token[0]; // parent item
              }
              if (options.external_access_token[1]) {
                  body['external_access_token2'] = options.external_access_token[1]; // movable item
              }
          }
          body['client_id'] = localStorage.getItem('client_id');
          return HttpRequestService.postRequest(GlobalVars.GeensUrl + GeensCopyItemUrl, body, [
              { Accept: 'application/json' },
              { 'Content-Type': 'application/json' },
          ]);
      };
      ItemApiService.prototype.getItemsDescendants = function (itemIds, url_token, external_access_token) {
          var params = 'item_ids=' + JSON.stringify(itemIds);
          if (url_token !== undefined && url_token !== null) {
              params += '&url_token=' + url_token;
              if (external_access_token) {
                  params += '&external_access_token=' + encodeURIComponent(external_access_token);
              }
          }
          params += '&client_id=' + localStorage.getItem('client_id');
          return HttpRequestService.getRequest(GlobalVars.GeensUrl + GeensItemsDescendantsUrl, params, this.getOptions());
      };
      ItemApiService.prototype.updateNote = function (item_id, content, url_token, external_access_token) {
          var formData = new FormData();
          var contentBlob = new Blob([content], { type: 'application/octet-binary' });
          formData.append('content', contentBlob, 'content');
          formData.append('item_id', item_id);
          if (url_token) {
              formData.append('url_token', url_token);
          }
          if (external_access_token) {
              formData.append('external_access_token', external_access_token);
          }
          formData.append('client_id', localStorage.getItem('client_id'));
          return HttpRequestService.postRequest(GlobalVars.GeensUrl + GeensUpdateNoteUrl, formData, [
              { Multipart: 'form-data' },
              { Accept: 'application/json' },
          ]);
      };
      ItemApiService.prototype.getFragments = function (item_id, url_token, version_id, external_access_token) {
          var params = 'item_id=' + item_id;
          localStorage.getItem('user_data');
          if (url_token !== undefined && url_token !== null && url_token !== '')
              params += '&url_token=' + url_token;
          if (version_id !== undefined && version_id !== null)
              params += '&version_id=' + version_id;
          if (external_access_token && external_access_token !== '') {
              // Used for sharable link in item accesses
              params += '&external_access_token=' + encodeURIComponent(external_access_token);
          }
          params += '&client_id=' + localStorage.getItem('client_id');
          return HttpRequestService.getRequest(GlobalVars.GeensUrl + GeensGetFragmentListUrl, params, this.getOptions());
      };
      ItemApiService.prototype.getContent = function (id, url_token, external_access_token) {
          var accessToken = localStorage.getItem('geens_access_token');
          if (typeof accessToken !== 'string' && !url_token) {
              throw new Error('Access token error');
          }
          var options = {};
          options['Authorization'] = 'Bearer' + ' ' + accessToken;
          var params = 'key_id=' + id;
          if (url_token !== undefined && url_token !== null) {
              params += '&url_token=' + url_token;
              if (external_access_token) {
                  params += '&external_access_token=' + encodeURIComponent(external_access_token);
              }
          }
          params += '&client_id=' + localStorage.getItem('client_id');
          var url = GlobalVars.GeensUrl + GeensContentGetUrl + '?' + params;
          return ajax({
              url: url,
              method: 'GET',
              headers: options,
              responseType: 'arraybuffer',
              crossDomain: true,
              withCredentials: true,
          }).pipe(operators_39(function (response) {
              HttpRequestService.setXSRFToken(response.xhr.getResponseHeader('set-xsrf'));
              HttpRequestService.setGeensXcsToken(response.xhr.getResponseHeader('set-geens-xcs'));
              return response.response;
          }),
          // map(response => response.response),
          operators_8(function (error) {
              console.log('error: ', error);
              return of(null);
          }));
      };
      ItemApiService.prototype.deleteVersion = function (item, options) {
          var body = {};
          body['item'] = item;
          if (options.url_token) {
              body['url_token'] = options.url_token;
          }
          if (options.external_access_token) {
              body['external_access_token'] = options.external_access_token; // used for sharable link
          }
          body['client_id'] = localStorage.getItem('client_id');
          return HttpRequestService.postRequest(GlobalVars.GeensUrl + GeensDeleteItemVersionUrl, body, [{ Accept: 'application/json', 'Content-Type': 'application/json' }]);
      };
      ItemApiService.prototype.generateShareUrlAPI = function (items, permission, sharedIdentityType, url_token) {
          if (url_token === void 0) { url_token = ''; }
          var params = {
              items: items,
              url_token: url_token,
              expiration_time: null,
              type: permission,
              shared_from_identity: sharedIdentityType,
              url_token_user_password: true,
          };
          return HttpRequestService.postRequest(GlobalVars.GeensUrl + GeensGenerateSharableUrl, params, [{ Accept: 'application/json', 'Content-Type': 'application/json' }]);
      };
      ItemApiService.prototype.getAllUrlSharedItems = function (url_token) {
          var params = '';
          if (url_token !== undefined && url_token !== null && url_token !== '')
              params += 'url_token=' + url_token;
          return HttpRequestService.getRequest(GlobalVars.GeensUrl + GeensGetAllUrlSharedItems, params, this.getOptions());
      };
      ItemApiService.prototype.revokeItemAccess = function (accessesIds, clientId) {
          if (clientId === void 0) { clientId = null; }
          var params = {
              accesses: [accessesIds],
              client_id: clientId,
          };
          return HttpRequestService.postRequest(GlobalVars.GeensUrl + GeensRevokeSharesUrl, params, [
              { Accept: 'application/json', 'Content-Type': 'application/json' },
          ]);
      };
      ItemApiService.generateSharableUrlLinkString = function (url_token, password) {
          var domain = GlobalVars.GeensUrl;
          if (password) {
              return domain + '/slink/' + url_token + '#' + password;
          }
          return domain + '/slink/' + url_token;
      };
      ItemApiService.prototype.sharedForMe = function (parent_id) {
          var params = '';
          if (parent_id !== null && parent_id !== -1) {
              params += 'Item[id]=' + parent_id;
          }
          return HttpRequestService.getRequest(GlobalVars.GeensUrl + GeensGetSharedForMeItems, params, this.getOptions());
      };
      ItemApiService.prototype.sharedbyMe = function (parent_id) {
          var params = '';
          if (parent_id !== null && parent_id !== -1) {
              params += 'Item[id]=' + parent_id;
          }
          return HttpRequestService.getRequest(GlobalVars.GeensUrl + GeensGetSharedByMeItems, params, this.getOptions());
      };
      ItemApiService.prototype.getSharedUrl = function (parent_id, options) {
          var params = '';
          params += 'url_token=' + options.url_token;
          if (options.external_access_token) {
              params +=
                  '&external_access_token=' +
                      options.external_access_token.map(function (token) { return ' ' + encodeURIComponent(token); });
          }
          params += '&Item[id]=' + parent_id;
          return HttpRequestService.getRequest(GlobalVars.GeensUrl + GeensGetSharedUrl, params, this.getOptions());
      };
      ItemApiService.prototype.shareAPI = function (items, permissions, expiration_time) {
          var clientId = localStorage.getItem('client_id');
          if (clientId) {
              clientId = parseInt(clientId);
          }
          var params = {
              items: items,
              type: permissions,
              expiration_time: expiration_time,
              client_id: clientId,
          };
          return HttpRequestService.postRequest(GlobalVars.GeensUrl + GeensShareItem, params, [
              { Accept: 'application/json', 'Content-Type': 'application/json' },
          ]);
      };
      ItemApiService.prototype.geensIDItemsShare = function (itemId, receiversGeensIDs, permissions) {
          var _this = this;
          return new Observable(function (observer) {
              _this.userService.getPublicKeys(receiversGeensIDs).subscribe(function (receivers) {
                  if (!ErrorService.validateOauthUsersKey(receivers)) {
                      observer.error(receivers);
                      observer.complete();
                      return;
                  }
                  _this.getItemsDescendants([itemId]).subscribe(function (itemsDescendants) {
                      var afterEncrypt = function (encryptedItems) {
                          _this.shareAPI(encryptedItems, permissions, '').subscribe(function (response) { return observer.next([]); }, function (error) { return observer.error(error); }, function () { return observer.complete(); });
                      };
                      _this.prepareGeensIDShareItemsAsync(itemsDescendants.flat(), receivers).subscribe(function (encryptedItems) { return afterEncrypt(encryptedItems); }, function (error) { return observer.error(error); });
                  });
              }, function (error) { return observer.error(error); });
          });
      };
      ItemApiService.prototype.prepareGeensIDShareItemsAsync = function (items, receivers) {
          var _this = this;
          var privateKey = localStorage.getItem('private_key');
          return new Observable(function (observer) {
              var processedItems = [];
              items.forEach(function (item) {
                  if (privateKey) {
                      processedItems.push(_this.prepareItemShare(item, receivers, privateKey));
                  }
              });
              observer.next(processedItems);
              observer.complete();
          });
      };
      ItemApiService.prototype.prepareItemShare = function (itemToOperateWith, receivers, privateKey) {
          if (itemToOperateWith && itemToOperateWith.access) {
              var decryptedPassword_1 = CryptoService.rsaDecrypt(itemToOperateWith.access.password, privateKey);
              var tempItem_1 = new Item$1();
              tempItem_1.id = itemToOperateWith.id;
              tempItem_1.shared_accesses = new Array();
              receivers.forEach(function (receiver) {
                  var sharedAccess = new ItemAccess();
                  sharedAccess.accessible_id = receiver.user_id;
                  sharedAccess.password = CryptoService.rsaEncrypt(decryptedPassword_1, receiver.public_key);
                  var sharedAccess2 = new ItemAccess();
                  sharedAccess2.accessible_id = receiver.user_id;
                  sharedAccess2.main = true; // main is used to determine if for_client_id is null or not
                  sharedAccess2.password = CryptoService.rsaEncrypt(decryptedPassword_1, receiver.public_key);
                  tempItem_1.shared_accesses.push(sharedAccess); // need two accesses one for client_id
                  tempItem_1.shared_accesses.push(sharedAccess2); // need two accesses another for client_id and for_client_id
              });
              return tempItem_1;
          }
      };
      return ItemApiService;
  }());

  var Settings = /** @class */ (function () {
      function Settings() {
          this.email_notifications = false;
          this.show_welcome_screen = false;
          this.show_sidebar = false;
          this.experimental_features = false;
          this.file_order_direction = false;
          this.folder_order_direction = false;
          this.file_order = 0;
          this.folder_order = 0;
          this.files_view = 0;
      }
      Settings.ITEMS_ORDER_BY_NAME = 0;
      Settings.ITEMS_ORDER_BY_CREATED_AT_DATE = 1;
      Settings.ITEMS_ORDER_BY_SIZE = 2;
      Settings.ITEMS_ORDER_BY_UPDATED_AT_DATE = 3;
      Settings.ITEMS_ORDER_BY_FILE_TYPE = 4;
      Settings.ORDER_ASCENDING = true;
      Settings.ORDER_DESCENDING = false;
      Settings.GRID_VIEW = 0;
      Settings.LIST_VIEW = 1;
      Settings.BLOCK_VIEW = 2;
      Settings.USER_ENVIRONMENT = 0;
      Settings.GROUP_ENVIRONMENT = 1;
      return Settings;
  }());

  var ItemListService = /** @class */ (function () {
      function ItemListService() {
          this.listSubject = new Subject();
          this.itemList = []; // store current folder item list for naming check
          this.currentFolder = new Item$1(); // store current folder
          this.backgroundProcessing = false;
          this.processedListsMap = {};
      }
      ItemListService.prototype.setCurrentListParent = function (folder, sharedView) {
          var id = folder && folder.id ? folder.id : null;
          this.currentFolder = Object.assign(new Item$1(id), { sharedView: sharedView });
      };
      ItemListService.prototype.getCurrentListParent = function () {
          return this.currentFolder;
      };
      ItemListService.prototype.setBackgroundProcessing = function (value) {
          this.backgroundProcessing = value;
      };
      ItemListService.prototype.isProcessingInBackground = function () {
          return this.backgroundProcessing;
      };
      ItemListService.prototype.dispatchItemListUpdate = function (items) {
          this.listSubject.next({ items: items });
      };
      ItemListService.prototype.storeList = function (list) {
          this.itemList = list;
      };
      ItemListService.prototype.getItemList = function () {
          return this.itemList;
      };
      ItemListService.prototype.addToListsInProcessMap = function (key, list) {
          this.processedListsMap[key] = list;
      };
      ItemListService.prototype.updateListsInProcessMap = function (key, list) {
          if (this.processedListsMap[key]) {
              this.addToListsInProcessMap(key, list);
          }
      };
      ItemListService.prototype.getListFromProcessMap = function (key) {
          return this.processedListsMap[key];
      };
      ItemListService.prototype.clearListsInProcessMap = function () {
          this.processedListsMap = {};
      };
      return ItemListService;
  }());

  var CacheService = /** @class */ (function () {
      function CacheService() {
          this.cachedItems = sessionStorage.getItem('cached_items');
          this.copyItemsCache = [];
          this.cutItemsCache = [];
      }
      CacheService.prototype.setCopyItemsCache = function (items) {
          this.copyItemsCache = items;
          this.cutItemsCache = [];
      };
      CacheService.prototype.setCutItemsCache = function (items) {
          this.copyItemsCache = [];
          this.cutItemsCache = items;
      };
      CacheService.prototype.getCopyItemsCache = function () {
          return this.copyItemsCache;
      };
      CacheService.prototype.getCutItemsCache = function () {
          return this.cutItemsCache;
      };
      CacheService.prototype.cachePassword = function (item_id, password) {
          //TODO add try catch, try to use for search
          if (this.cachedItems === null || this.cachedItems === '' || this.cachedItems === undefined) {
              this.cachedItems = '[]';
          }
          var items = JSON.parse(this.cachedItems);
          var item = items.find(function (item) {
              return item.id == item_id;
          });
          if (item !== undefined) {
              item.password = password;
          }
          else {
              items.push({ id: item_id, password: password });
          }
          this.cachedItems = JSON.stringify(items);
          sessionStorage.setItem('cached_items', this.cachedItems);
      };
      CacheService.prototype.getItemPassword = function (id) {
          if (this.cachedItems === null || this.cachedItems === '' || this.cachedItems === undefined) {
              return null;
          }
          var items = JSON.parse(this.cachedItems);
          var item = items.find(function (item) {
              return item.id == id;
          });
          if (item == undefined) {
              return null;
          }
          else {
              return item.password;
          }
      };
      CacheService.prototype.clearCache = function () {
          this.cachedItems = '[]';
      };
      CacheService.prototype.deletePassword = function (id) {
          if (this.cachedItems === null || this.cachedItems === '' || this.cachedItems === undefined) {
              this.cachedItems = '[]';
              return;
          }
          var items = JSON.parse(this.cachedItems);
          var itemIndex = items.findIndex(function (item) {
              return item.id == id;
          });
          if (itemIndex !== null && itemIndex !== undefined) {
              items.splice(itemIndex, 1);
              this.cachedItems = JSON.stringify(items);
          }
      };
      return CacheService;
  }());

  // declare var Alphanum: any
  var ItemService = /** @class */ (function () {
      function ItemService() {
          this.trustedContentType = {
              'application/pdf': 'pdf',
              'image/jpeg': ['jpeg', 'jpg'],
              'image/jpg': ['jpeg', 'jpg'],
              'image/png': 'png',
              'image/gif': 'gif',
              'image/bmp': 'bmp',
              'audio/mp3': 'mp3',
              'audio/wav': 'wav',
              'audio/flac': 'flac',
              'audio/ogg': 'ogg',
              'video/mp4': 'mp4',
              'video/webm': 'webm',
              'text/plain': 'txt',
          };
          this.imageTypes = [
              'image/jpeg',
              'image/png',
              'image/jpg',
              'image/gif',
              'image/bmp',
          ];
          this.audioTypes = ['audio/mp3', 'audio/wav', 'audio/flac', 'audio/ogg'];
          this.videoTypes = ['video/mp4', 'video/webm'];
          this.userService = new UserService();
          this.cacheService = new CacheService();
          this.itemAPIService = new ItemApiService();
          this.itemListService = new ItemListService();
          // wrong naming. Its more like 'folders which participate in uploading'
          this.foldersInUseStore = [];
      }
      ItemService.isActionAlwaysAllowed = function (action) {
          return (action === ItemService.ITEM_ACTIONS.SELECT ||
              action === ItemService.ITEM_ACTIONS.DETAILS ||
              action === ItemService.ITEM_ACTIONS.REVOKE ||
              action === ItemService.ITEM_ACTIONS.DELETE);
      };
      // static filterAndSortItemList(settings: Settings, items: Item[]) {
      //     let folders = items.filter(item => {
      //         return item.mime_type === 'inode/directory'
      //     })
      //
      //     let files = items.filter(item => {
      //         return item.mime_type !== 'inode/directory'
      //     })
      //
      //     ItemService.sortItemList(settings, folders, Item.$ITEM_FOLDER)
      //     ItemService.sortItemList(settings, files, Item.$ITEM_FILE)
      //
      //     return folders.concat(files)
      // }
      // static sortItemList(settings: Settings, items: Item[], itemsType: any) {
      //     let orderDirection =
      //         itemsType === Item.$ITEM_FILE
      //             ? settings.file_order_direction
      //             : settings.folder_order_direction
      //
      //     if (
      //         (itemsType === Item.$ITEM_FILE && settings.file_order === Settings.ITEMS_ORDER_BY_NAME) ||
      //         (itemsType === Item.$ITEM_FOLDER && settings.folder_order === Settings.ITEMS_ORDER_BY_NAME)
      //     ) {
      //         this.sortItemsByTitleAndMimeType(items, orderDirection)
      //     }
      //     if (
      //         (itemsType === Item.$ITEM_FILE &&
      //             settings.file_order === Settings.ITEMS_ORDER_BY_CREATED_AT_DATE) ||
      //         (itemsType === Item.$ITEM_FOLDER &&
      //             settings.folder_order === Settings.ITEMS_ORDER_BY_CREATED_AT_DATE)
      //     ) {
      //         this.sortItemsByDateAndMimeType(
      //             items,
      //             orderDirection,
      //             Settings.ITEMS_ORDER_BY_CREATED_AT_DATE
      //         )
      //     }
      //     if (
      //         (itemsType === Item.$ITEM_FILE &&
      //             settings.file_order === Settings.ITEMS_ORDER_BY_UPDATED_AT_DATE) ||
      //         (itemsType === Item.$ITEM_FOLDER &&
      //             settings.folder_order === Settings.ITEMS_ORDER_BY_UPDATED_AT_DATE)
      //     ) {
      //         this.sortItemsByDateAndMimeType(
      //             items,
      //             orderDirection,
      //             Settings.ITEMS_ORDER_BY_UPDATED_AT_DATE
      //         )
      //     }
      //     if (
      //         (itemsType === Item.$ITEM_FILE && settings.file_order === Settings.ITEMS_ORDER_BY_SIZE) ||
      //         (itemsType === Item.$ITEM_FOLDER && settings.folder_order === Settings.ITEMS_ORDER_BY_SIZE)
      //     ) {
      //         this.sortItemsBySize(items, orderDirection)
      //     }
      //     if (
      //         (itemsType === Item.$ITEM_FILE &&
      //             settings.file_order === Settings.ITEMS_ORDER_BY_FILE_TYPE) ||
      //         (itemsType === Item.$ITEM_FOLDER &&
      //             settings.folder_order === Settings.ITEMS_ORDER_BY_FILE_TYPE)
      //     ) {
      //         this.sortItemsByMimeType(items, orderDirection)
      //     }
      // }
      // private static sortItemsByTitleAndMimeType(itemList: Item[], order_ascending: any) {
      //     this.sortItems(
      //         itemList,
      //         order_ascending,
      //         (item1: Item, item2: Item, mime1: string, mime2: string) => {
      //             return Alphanum.alphanumCase(mime1 + item1.title, mime2 + item2.title)
      //         }
      //     )
      // }
      // private static sortItemsByDateAndMimeType(itemList: Item[], order_ascending: any, dateType: any) {
      //     this.sortItems(
      //         itemList,
      //         order_ascending,
      //         (item1: Item, item2: Item, mime1: string, mime2: string) => {
      //             let date1 =
      //                 dateType === Settings.ITEMS_ORDER_BY_CREATED_AT_DATE ? item1.created_at : item1.updated_at
      //             let date2 =
      //                 dateType === Settings.ITEMS_ORDER_BY_CREATED_AT_DATE ? item2.created_at : item2.updated_at
      //             return (mime1 + date1).localeCompare(mime2 + date2)
      //         }
      //     )
      // }
      // private static sortItemsBySize(itemList: Item[], order_ascending: any) {
      //     this.sortItems(
      //         itemList,
      //         order_ascending,
      //         (item1: Item, item2: Item, mime1: string, mime2: string) => {
      //             return Alphanum.alphanumCase(mime1 + item1.size, mime2 + item2.size)
      //         }
      //     )
      // }
      // private static sortItemsByMimeType(itemList: Item[], order_ascending: any) {
      //     this.sortItems(
      //         itemList,
      //         order_ascending,
      //         (item1: Item, item2: Item, mime1: string, mime2: string) => {
      //             return Alphanum.alphanumCase(mime1, mime2)
      //         },
      //         true
      //     )
      // }
      ItemService.sortItems = function (itemList, order_ascending, compareFunction, pureMime) {
          if (pureMime === void 0) { pureMime = false; }
          itemList.sort(function (item1, item2) {
              if (item1 && item2) {
                  if (order_ascending) {
                      var mime1 = pureMime
                          ? item1.mime_type
                          : item1.mime_type === 'inode/directory'
                              ? '0|'
                              : '1|';
                      var mime2 = pureMime
                          ? item2.mime_type
                          : item2.mime_type === 'inode/directory'
                              ? '0|'
                              : '1|';
                      return compareFunction(item1, item2, mime1, mime2);
                  }
                  else {
                      var mime1 = pureMime
                          ? item1.mime_type
                          : item1.mime_type === 'inode/directory'
                              ? '1|'
                              : '0|';
                      var mime2 = pureMime
                          ? item2.mime_type
                          : item2.mime_type === 'inode/directory'
                              ? '1|'
                              : '0|';
                      return compareFunction(item2, item1, mime2, mime1);
                  }
              }
          });
      };
      ItemService.isSharedForMeType = function (type) {
          return type === ItemAccess.$TYPE_READ || type === ItemAccess.$TYPE_READ_WRITE;
      };
      ItemService.getFileTitle = function (fileName) {
          return fileName.substring(0, fileName.lastIndexOf('.'));
      };
      ItemService.getFileExtension = function (fileName) {
          var splitContent = fileName.split('.');
          return splitContent[splitContent.length - 1];
      };
      ItemService.getItemType = function (item) {
          if (this.isFile(item)) {
              return this.ITEM_TYPES.FILE_TYPE;
          }
          else {
              return this.ITEM_TYPES.FOLDER_TYPE;
          }
      };
      ItemService.prototype.setSoftDeletedParameter = function (items) {
          var tempItems;
          if (items) {
              if (Array.isArray(items)) {
                  tempItems = items;
                  if (Array.isArray(items[0])) {
                      tempItems = items[0];
                  }
              }
              for (var _i = 0, tempItems_1 = tempItems; _i < tempItems_1.length; _i++) {
                  var item = tempItems_1[_i];
                  if (item.state === 2) {
                      item.softDeleted = true;
                  }
                  else {
                      item.softDeleted = false;
                  }
              }
          }
      };
      ItemService.isFile = function (item) {
          if (item) {
              return item.mime_type !== 'inode/directory';
          }
          return false;
      };
      ItemService.getFullTitle = function (item) {
          var title = item.title ? item.title : '';
          var extension = item.extension ? item.extension : '';
          if (title && extension) {
              extension = '.' + item.extension;
          }
          return title + extension;
      };
      ItemService.decrypt = function (item, password) {
          item.password = password;
          var meta_data = JSON.parse(CryptoService.symDecryptText(item.meta_data, password));
          item.extension = meta_data['extension'] ? meta_data['extension'] : '';
          item.extension = ItemService.filterTrimFileName(item.extension);
          item.mime_type = meta_data['mime_type'] ? meta_data['mime_type'] : '';
          item.title = meta_data['title'] ? meta_data['title'] : '';
          item.title = ItemService.filterTrimFileName(item.title);
          item.description = meta_data['description']
              ? meta_data['description'].substring(0, 240)
              : null;
      };
      ItemService.decryptUrlAccessPassword = function (urlShare, itemPassword) {
          var encryptedUrlPass = JSON.parse(urlShare['password'])['url_password'];
          try {
              var urlPassword = CryptoService.symDecryptText(encryptedUrlPass, itemPassword);
              urlShare.url_password = urlPassword;
              urlShare.url_full = ItemApiService.generateSharableUrlLinkString(urlShare.url_token, urlPassword);
          }
          catch (exception) {
              console.error(exception);
          }
      };
      ItemService.prototype.prepareItemForUpload = function (file, parentItem, group_id, groupUsers, user, isFileUpload, options, onError) {
          var item = new Item$1();
          if (parentItem) {
              parentItem = this.decryptItems([parentItem], onError, options.password)[0];
          }
          item = this.setItemAccesses(item, parentItem, file.password, user, group_id, file.is_private, groupUsers, {
              url_token: options.url_token,
              password: options.password,
              external_access_token: options.external_access_token
                  ? [options.external_access_token]
                  : null,
          });
          var crypt_data;
          if (file.title == null)
              file.title = '';
          file.title = file.title.replace('.' + file.extension, '');
          if (isFileUpload) {
              crypt_data = {
                  title: file.title === null
                      ? ItemService.getFileTitle(file.file_data.name)
                      : file.title,
                  mime_type: file.mime_type === null ? file.file_data.type : file.mime_type,
                  extension: file.extension === null
                      ? ItemService.getFileExtension(file.file_data.name)
                      : file.extension,
              };
              item.state = Item$1.$ITEM_STATE_LOCKED;
          }
          else {
              crypt_data = {
                  title: file.title,
                  mime_type: 'inode/directory',
                  extension: null,
              };
              item.state = Item$1.$ITEM_STATE_UNLOCKED;
          }
          item.meta_data = CryptoService.symEncryptText(JSON.stringify(crypt_data), file.password);
          item.parent_id = parentItem != null ? parentItem.id : null;
          item.task_id = null;
          // if (parentItem && parentItem.url_shares) {
          //   item.url_shares = parentItem.url_shares;
          // }
          if (file.file_data) {
              // when create a folder file_data does not exist
              item.fragment_count = Math.floor(file.file_data.size / Item$1.chunkSize);
              if (file.file_data.size % Item$1.chunkSize > 0)
                  item.fragment_count += 1;
          }
          return item;
      };
      /**
       * Decrypt
       * @param items
       * @param on_error
       * @param urlPassword
       */
      ItemService.prototype.decryptItems = function (items, on_error, urlPassword) {
          for (var _i = 0, items_1 = items; _i < items_1.length; _i++) {
              var item = items_1[_i];
              try {
                  var password = this.getDecryptedPassword(item, urlPassword);
                  ItemService.decrypt(item, password);
              }
              catch (exception) {
                  console.log(exception);
                  item.corrupted = true;
                  on_error(exception);
                  throw exception;
                  // items.splice(items.indexOf(data), 1);
              }
          }
          return items;
      };
      ItemService.prototype.isTrustedContent = function (mimeType, extension) {
          extension = extension.toLowerCase();
          if (this.trustedContentType.hasOwnProperty(mimeType)) {
              if (Array.isArray(this.trustedContentType[mimeType])) {
                  return this.trustedContentType[mimeType].indexOf(extension) !== -1;
              }
              else {
                  return this.trustedContentType[mimeType] == extension;
              }
          }
          return false;
      };
      ItemService.prototype.isImageType = function (mimeType) {
          return this.imageTypes.indexOf(mimeType) >= 0;
      };
      ItemService.prototype.isAudioType = function (mimeType) {
          return this.audioTypes.indexOf(mimeType) >= 0;
      };
      ItemService.prototype.isVideoType = function (mimeType) {
          return this.videoTypes.indexOf(mimeType) >= 0;
      };
      ItemService.prototype.getSharedState = function (item) {
          var sharedState = false;
          if (item &&
              ((item.received_accesses && item.received_accesses.length) ||
                  (item.shared_accesses && item.shared_accesses.length))) {
              sharedState = true;
          }
          return sharedState;
      };
      ItemService.filterTrimFileName = function (name) {
          var result = '';
          var blacklistChars = ItemService.blacklistedNameCharacters;
          if (typeof name !== 'undefined' && typeof name !== null) {
              for (var i = 0; i < name.length; i++) {
                  if (blacklistChars.indexOf(name.charAt(i)) == -1) {
                      result = result + name.charAt(i);
                  }
              }
          }
          return result;
      };
      ItemService.isFileNameContainsBlacklistedChars = function (name) {
          var blacklistChars = ItemService.blacklistedNameCharacters;
          for (var i = 0; i < name.length; i++) {
              if (blacklistChars.indexOf(name.charAt(i)) >= 0) {
                  return true;
              }
          }
          return false;
      };
      ItemService.prototype.getItemIcon = function (item) {
          var iconClass = null;
          if (ItemService.isFile(item)) {
              iconClass = 'file outline';
          }
          else if (!item.color) {
              iconClass = 'folder';
          }
          else {
              var color = ItemService.validateAndGetItemColor(item.color);
              iconClass = 'folder-full ' + (color ? color.class : '');
          }
          item.title = item.title ? item.title : '';
          var extension = item.extension || ItemService.getFileExtension(item.title);
          if (item.corrupted) {
              iconClass = 'window close outline';
          }
          else if (extension === 'txt') {
              iconClass = 'file text outline';
          }
          else if (extension === 'ppt' || extension === 'pptx') {
              iconClass = 'file powerpoint outline';
          }
          else if (extension === 'doc' || extension === 'docx') {
              iconClass = 'file word outline';
          }
          else if (extension === 'zip' || extension === 'rar') {
              iconClass = 'file archive outline';
          }
          else if (item.mime_type.indexOf('audio') >= 0) {
              iconClass = 'file audio outline';
          }
          else if (this.isImageType(item.mime_type)) {
              iconClass = 'file image outline';
          }
          else if (this.isVideoType(item.mime_type)) {
              iconClass = 'file video outline';
          }
          else if (item.mime_type.indexOf('pdf') >= 0) {
              iconClass = 'file pdf outline';
          }
          return iconClass;
      };
      ItemService.validateAndGetItemColor = function (color) {
          var folderColors = [
              Item$1.$ITEM_COLOR_DEFAULT,
              Item$1.$ITEM_COLOR_BLUE,
              Item$1.$ITEM_COLOR_GREEN,
              Item$1.$ITEM_COLOR_PURPLE,
              Item$1.$ITEM_COLOR_RED,
              Item$1.$ITEM_COLOR_YELLOW,
          ];
          return folderColors.find(function (staticColor) {
              return staticColor.id == color;
          });
      };
      ItemService.prototype.isItemInList = function (list, item) {
          var isInList = false;
          for (var i = 0; i < list.length; i++) {
              if (list[i].id === item.id) {
                  isInList = true;
                  break;
              }
          }
          return isInList;
      };
      ItemService.prototype.getItemsInFolder = function (list, parent, sharedView) {
          if (sharedView === void 0) { sharedView = false; }
          var parentId = parent && parent.id ? parent.id : Item$1.$ROOT_ITEM_ID;
          return list.filter(function (item) {
              var itemId = item.parent_id ? item.parent_id : Item$1.$ROOT_ITEM_ID;
              var isCorrectView = true;
              if (itemId === Item$1.$ROOT_ITEM_ID && sharedView) {
                  isCorrectView = false;
              }
              return itemId === parentId && isCorrectView;
          });
      };
      ItemService.prototype.areFoldersContained = function (list) {
          return (list.filter(function (item) {
              return !ItemService.isFile(item);
          }).length > 0);
      };
      ItemService.prototype.areFilesAccessible = function (list) {
          return (list.filter(function (item) {
              if (item.access) {
                  return item.access.type === 4;
              }
              return;
          }).length === 0);
      };
      ItemService.prototype.getItemIds = function (items) {
          return items.map(function (item) {
              return item.id;
          });
      };
      ItemService.prototype.areItemsInUse = function (items, activeItems) {
          var _this = this;
          var filesInUse = 0;
          if (items) {
              items.forEach(function (item) {
                  if (_this.isItemInList(activeItems, item)) {
                      filesInUse++;
                  }
              });
              if (filesInUse === 1 && items.length === 1) {
                  throw new Error('File in use');
              }
              if (filesInUse && items.length > 1) {
                  throw new Error('File in use');
              }
          }
          return !!filesInUse;
      };
      ItemService.prototype.areFoldersInUse = function (items) {
          var _this = this;
          var foldersInUse = 0;
          if (items) {
              items.forEach(function (item) {
                  if (!ItemService.isFile(item) &&
                      _this.getFoldersInUseStore().indexOf(item.id) >= 0) {
                      foldersInUse++;
                  }
              });
              if (foldersInUse === 1 && items.length === 1) {
                  console.log('Folder in use');
              }
              if (foldersInUse && items.length > 1) {
                  console.log('Folder in use');
              }
          }
          return !!foldersInUse;
      };
      /*public setDescendantsAccesses(itemIds, parentItem, changeParent = false, group_id = null, privateFile = false, groupUsers = null, urlPassword:string = null) {
              return new Promise((resolve) => {
                  this.itemAPIService.getItemsDescendants(itemIds).subscribe((itemsDescendants: Item[][])=> {
                      resolve(this.setAccessesFromParent(itemsDescendants, parentItem, changeParent, group_id, privateFile, groupUsers, urlPassword));
                  });
              });
          }*/
      /*public setAccessesFromParent(itemsDescendants: Item[][], parentItem, changeParent, group_id = null, privateFile = false, groupUsers = null, urlPassword: string = null) {
              let allItems: Item[] = [];

              itemsDescendants.forEach((itemDescendants: Item[]) => {
                  let rootItem = itemDescendants[0];
                  itemDescendants.forEach(itemDescendant => {
                      let password = this.getDecryptedPassword(itemDescendant, urlPassword);
                      let user = this.userService.getUser();
                      itemDescendant = this.setItemAccesses(itemDescendant, parentItem, password, user, group_id, privateFile, groupUsers);

                      if (itemDescendant == rootItem) {
                          if (changeParent) {
                              itemDescendant.parent_id = parentItem ? parentItem.id : null;
                          }
                          ItemService.decrypt(itemDescendant, password);
                      }
                      allItems.push(itemDescendant);
                  })
              });
              return allItems;
          }*/
      ItemService.prototype.encryptItemPassword = function (item, password) {
          if (item.owner && item.owner.user) {
              item.owner.password = CryptoService.rsaEncrypt(password, item.owner.user.rsa_public);
              item.accesses.forEach(function (access) {
                  if (access && access.user) {
                      access.password = CryptoService.rsaEncrypt(password, access.user.rsa_public);
                  }
                  else {
                      return;
                  }
              });
          }
          return item;
      };
      ItemService.prototype.getDecryptedPassword = function (item, urlPassword, useCache) {
          if (useCache === void 0) { useCache = true; }
          var password = useCache ? this.cacheService.getItemPassword(item.id) : null;
          if (password === null) {
              if (urlPassword === null || urlPassword === undefined || urlPassword === '') {
                  var user = this.userService.getUser();
                  if (user !== null) {
                      var privateKey = user.rsa_private;
                      if (item.access) {
                          password = CryptoService.rsaDecrypt(item.access.password, privateKey);
                      }
                      else {
                          console.log('item access not found');
                      }
                  }
                  else {
                      console.log('User not found');
                  }
              }
              else {
                  if (item.url_share) {
                      var encryptedPassword = JSON.parse(item.url_share.password)['password'];
                      password = CryptoService.symDecryptText(encryptedPassword, urlPassword);
                  }
                  else {
                      console.log('item url share not defined');
                  }
              }
              this.cacheService.cachePassword(item.id, password);
          }
          return password;
      };
      ItemService.prototype.setItemAccesses = function (item, parentItem, password, user, group_id, privateFile, groupUsers, options) {
          var _this = this;
          if (group_id === void 0) { group_id = null; }
          if (privateFile === void 0) { privateFile = false; }
          item.owner = new ItemAccess();
          if (parentItem !== null && parentItem.owner && parentItem.owner.user) {
              item.owner.user = parentItem.owner.user;
              item.owner.accessible_id = parentItem.owner.user.id;
              item.owner.group_id = parentItem.owner.group_id;
              item.owner.private = parentItem.owner.private;
              item.owner.password = CryptoService.rsaEncrypt(password, parentItem.owner.user.rsa_public);
          }
          else {
              item.owner.user = new User();
              item.owner.user.id = user.id;
              item.owner.accessible_id = user.id;
              item.owner.user.rsa_public = user.rsa_public;
              item.owner.group_id = group_id;
              item.owner.private = privateFile;
              item.owner.password = CryptoService.rsaEncrypt(password, user.rsa_public);
          }
          item.accesses = [];
          if (parentItem !== null) {
              parentItem.accesses.forEach(function (parentAccess) {
                  //encrypt accesses for everyone who have access for parent
                  if (typeof parentAccess.user !== 'undefined' &&
                      parentAccess.user !== null &&
                      typeof parentItem.owner !== 'undefined' &&
                      parentItem.owner !== null &&
                      typeof parentItem.owner.user !== 'undefined' &&
                      parentItem.owner.user !== null) {
                      if (parentAccess.user.rsa_public !== '' &&
                          parentAccess.user.rsa_public !== null &&
                          typeof parentAccess.user.rsa_public !== 'undefined' &&
                          parentItem.owner.accessible_id !== parentAccess.user.id) {
                          var access = new ItemAccess();
                          access.password = CryptoService.rsaEncrypt(password, parentAccess.user.rsa_public
                              ? parentAccess.user.rsa_public
                              : parentAccess.user.rsa_public_main);
                          access.shared_from_user_id = parentAccess.shared_from_user_id;
                          access.shared_from_identity = parentAccess.shared_from_identity;
                          access.shared_from_group_id = parentAccess.shared_from_group_id;
                          access.accessible_identity = parentAccess.accessible_identity;
                          access.group_id = parentAccess.group_id;
                          access.private = parentItem.owner.private;
                          access.type = parentAccess.type;
                          access.user = new User();
                          access.user.id = parentAccess.user.id;
                          access.accessible_id = parentAccess.user.id;
                          if (parentAccess.client_id && !parentAccess.for_client_id) {
                              // when set main to true access for_client_id parameter will be null
                              access.main = true;
                          }
                          item.accesses.push(access);
                      }
                      if (typeof parentAccess.user.rsa_public_main !== 'undefined' &&
                          parentAccess.user.rsa_public_main !== null &&
                          parentAccess.user.rsa_public_main !== '') {
                          var accessMain = new ItemAccess();
                          accessMain.password = CryptoService.rsaEncrypt(password, parentAccess.user.rsa_public_main);
                          accessMain.accessible_identity = parentAccess.accessible_identity;
                          accessMain.shared_from_user_id = parentAccess.shared_from_user_id;
                          accessMain.shared_from_identity = parentAccess.shared_from_identity;
                          accessMain.shared_from_group_id = parentAccess.shared_from_group_id;
                          accessMain.group_id = parentAccess.group_id;
                          accessMain.main = true;
                          accessMain.private = parentItem.owner.private;
                          accessMain.type = parentAccess.type;
                          accessMain.user = new User();
                          accessMain.user.id = parentAccess.user.id;
                          accessMain.accessible_id = parentAccess.user.id;
                          item.accesses.push(accessMain);
                      }
                  }
              });
              if (parentItem.url_shares) {
                  item.url_shares = [];
                  parentItem.url_shares.forEach(function (parentUrlShare) {
                      var access = new ItemAccess();
                      if (parentUrlShare.url_password === null ||
                          parentUrlShare.url_password === undefined) {
                          if (parentItem.password === null || parentItem.password === undefined) {
                              parentItem.password = _this.getDecryptedPassword(parentItem);
                          }
                          ItemService.decryptUrlAccessPassword(parentUrlShare, parentItem.password);
                      }
                      access.password = JSON.stringify({
                          password: CryptoService.symEncryptText(password, parentUrlShare.url_password, 10000),
                          url_password: CryptoService.symEncryptText(parentUrlShare.url_password, password, 10000),
                      });
                      access.shared_from_user_id = parentUrlShare.shared_from_user_id;
                      access.shared_from_identity = parentUrlShare.shared_from_identity;
                      access.shared_from_group_id = parentUrlShare.shared_from_group_id;
                      access.accessible_identity = parentUrlShare.accessible_identity;
                      access.group_id = parentUrlShare.group_id;
                      access.url_token = parentUrlShare.url_token;
                      if (options.external_access_token && options.external_access_token.length > 0) {
                          access.external_access_token = options.external_access_token[0]
                              ? options.external_access_token[0]
                              : options.external_access_token[1];
                      }
                      // if (options.external_access_token && options.external_access_token !== '') {
                      //     access.external_access_token = options.external_access_token
                      // }
                      if (parentItem.owner) {
                          access.private = parentItem.owner.private;
                      }
                      access.type = parentUrlShare.type;
                      if (item.url_shares) {
                          item.url_shares.push(access);
                      }
                  });
              }
          }
          if (user &&
              user.rsa_public_main !== '' &&
              user.rsa_public_main !== null &&
              typeof user.rsa_public_main !== 'undefined') {
              if (options && options.url_token) {
                  if (parentItem && parentItem.owner) {
                      var accessMain = new ItemAccess();
                      accessMain.password = CryptoService.rsaEncrypt(password, parentItem.owner.user.rsa_public_main);
                      // accessMain.type = ItemAccess.$TYPE_READ_WRITE;
                      accessMain.user = new User();
                      accessMain.user.id = parentItem.owner.user.id;
                      accessMain.group_id = group_id;
                      accessMain.private = privateFile;
                      accessMain.main = true;
                      accessMain.accessible_identity = ItemAccess.$IDENTITY_TYPE_EMAIL;
                      accessMain.shared_from_identity = ItemAccess.$IDENTITY_TYPE_EMAIL;
                      accessMain.accessible_id = parentItem.owner.user.id;
                      item.accesses.push(accessMain);
                  }
              }
              else {
                  var accessMain = new ItemAccess();
                  var itemOwner = user;
                  var itemOwnerGroupId = group_id;
                  if (parentItem && parentItem.owner) {
                      // when parent item is shared to user and that user is creating new items inside you have to select parent item owner as the owner of new items
                      itemOwner = parentItem.owner.user;
                      itemOwnerGroupId = parentItem.owner.group_id;
                  }
                  accessMain.password = CryptoService.rsaEncrypt(password, itemOwner.rsa_public_main);
                  // accessMain.type = ItemAccess.$TYPE_READ_WRITE;
                  accessMain.user = new User();
                  accessMain.user.id = itemOwner.id;
                  accessMain.group_id = itemOwnerGroupId;
                  accessMain.private = privateFile;
                  accessMain.main = true;
                  accessMain.accessible_identity = ItemAccess.$IDENTITY_TYPE_EMAIL;
                  accessMain.shared_from_identity = ItemAccess.$IDENTITY_TYPE_EMAIL;
                  accessMain.accessible_id = itemOwner.id;
                  item.accesses.push(accessMain);
              }
          }
          else {
              if (parentItem !== null &&
                  parentItem.owner &&
                  parentItem.owner.user &&
                  options &&
                  options.url_token) {
                  // for logged out user and using sharable link
                  var accessMain = new ItemAccess();
                  accessMain.password = CryptoService.rsaEncrypt(password, parentItem.owner.user.rsa_public_main);
                  // accessMain.type = ItemAccess.$TYPE_READ_WRITE;
                  accessMain.user = new User();
                  accessMain.user.id = parentItem.owner.user.id;
                  accessMain.group_id = parentItem.owner.group_id; // have to set it up because user is null
                  accessMain.private = privateFile;
                  accessMain.main = true;
                  accessMain.accessible_identity = ItemAccess.$IDENTITY_TYPE_EMAIL;
                  accessMain.shared_from_identity = ItemAccess.$IDENTITY_TYPE_EMAIL;
                  accessMain.accessible_id = parentItem.owner.user.id;
                  item.accesses.push(accessMain);
              }
          }
          if (item.url_shares && item.url_shares.length > 0) {
              var encryptedUrlPass = JSON.parse(item.url_shares[0]['password'])['url_password'];
              CryptoService.symDecryptText(encryptedUrlPass, password);
          }
          return item;
      };
      // public excludeFromCutCache(items: Item[]) {
      //     let data = this.cutItemsCache.filter((item) => {
      //         return !this.isItemInList(items, item);
      //     });
      //     this.setCutItemsCache(data);
      // }
      //
      // public excludeFromCopyPasteCache(items: Item[]) {
      //     let data = this.copyPasteCache.filter((item) => {
      //         return !this.isItemInList(items, item);
      //     });
      //     this.setCopyPasteCache(data);
      // }
      ItemService.prototype.isTitleUnique = function (title, extension, type, itemList) {
          if (itemList === void 0) { itemList = this.itemListService.getItemList(); }
          return !itemList.filter(function (file) {
              var fullTitle1 = file.title + (file.extension ? '.' + file.extension : '');
              var fullTitle2 = title + (extension ? '.' + extension : '');
              return (fullTitle1 === fullTitle2 &&
                  ((type === ItemService.ITEM_TYPES.FOLDER_TYPE &&
                      file.mime_type === 'inode/directory') ||
                      (type === ItemService.ITEM_TYPES.FILE_TYPE &&
                          file.mime_type !== 'inode/directory')));
          }).length;
      };
      ItemService.prototype.setUniqueTitle = function (title, extension, type, itemList) {
          while (!this.isTitleUnique(title, extension, type, itemList)) {
              title += ' (1)';
          }
          return title;
      };
      ItemService.prototype.setUniqueTitles = function (items, itemList) {
          var _this = this;
          items.forEach(function (item) {
              item.title = _this.setUniqueTitle(item.title, item.extension, ItemService.getItemType(item), itemList);
              var meta_data = {
                  title: item.title,
                  mime_type: item.mime_type,
                  extension: item.extension,
                  color: item.color,
                  description: item.description,
              };
              item.meta_data = CryptoService.symEncryptText(JSON.stringify(meta_data), item.password);
              itemList = itemList.concat([item]); // for multiple items
          });
      };
      ItemService.prototype.appendFoldersInUseStore = function (id) {
          this.foldersInUseStore.indexOf(id) < 0 ? this.foldersInUseStore.push(id) : null;
      };
      ItemService.prototype.clearFoldersInUseStore = function () {
          this.foldersInUseStore = [];
      };
      ItemService.prototype.getFoldersInUseStore = function () {
          return this.foldersInUseStore;
      };
      ItemService.prototype.adjustAccessesToEnvironment = function (items, environment) {
          if (!environment || environment.type === Settings.USER_ENVIRONMENT) {
              return;
          }
          items.forEach(function (item) {
              if (!item.access.shared_from_user_id) {
                  item.received_accesses = [];
              }
          });
      };
      ItemService.blacklistedNameCharacters = ['/', '\\', ':', '*', '?', '"', '<', '>', '|'];
      ItemService.ITEM_TYPES = {
          FOLDER_TYPE: Item$1.$ITEM_FOLDER,
          FILE_TYPE: Item$1.$ITEM_FILE,
      };
      ItemService.ITEM_ACTIONS = {
          CREATE: 'CREATE',
          RENAME: 'RENAME',
          DELETE: 'DELETE',
          RESTORE: 'RESTORE',
          TIMESTAMP: 'TIMESTAMP',
          SHARE: 'SHARE',
          REVOKE: 'REVOKE',
          DETAILS: 'DETAILS',
          CUT: 'CUT',
          COPY: 'COPY',
          PASTE: 'PASTE',
          SELECT: 'SELECT',
          UPLOAD: 'UPLOAD',
          DOWNLOAD: 'DOWNLOAD',
          CHANGECOLOR: 'CHANGECOLOR',
          DESCRIPTION: 'DESCRIPTION',
      };
      return ItemService;
  }());

  var DownloadService = /** @class */ (function () {
      function DownloadService() {
          this.item = null;
          this.itemApiService = new ItemApiService();
          this.downloaded = 0;
          this.requests = [];
          this.encCounter = 0;
          this.chunksMap = [];
          this.content = {};
          this.workersArray = [];
          this.fragmentsCount = 0;
          this.fragments = [];
          this.blobArray = [];
      }
      DownloadService.prototype.downloadItemContent = function (items, options, on_success, on_error) {
          var _this = this;
          var itemService = new ItemService();
          this.downloadFinishedCallback = on_success;
          var items_ids = [];
          for (var i = 0; i < items.length; i++) {
              items_ids.push(items[i].itemId);
          }
          this.itemApiService
              .get(items_ids, options.url_token, options.external_access_token)
              .subscribe(function (response) {
              if (response.length < 1) {
                  on_error('item_is_missing');
              }
              var itemsArr = [];
              var temp = null;
              itemService.decryptItems(response, on_error, options.password);
              var here = _this;
              var work = function () {
                  temp = itemsArr.shift();
                  here.item = temp.item ? temp.item : null;
                  if (typeof temp !== 'undefined' && temp !== null) {
                      here.download(temp.item, options.url_token, temp.versionId, options.external_access_token, on_success, on_error).then(function (withContent) {
                          if (withContent) {
                              here.createWorkers().then(function (chunkMap) {
                                  here.constructFile(chunkMap);
                                  if (itemsArr.length == 0) {
                                      here.callBack();
                                  }
                                  else {
                                      work();
                                  }
                              });
                          }
                          else {
                              here.downloadFinished([]);
                              if (itemsArr.length == 0) {
                                  here.callBack();
                              }
                              else {
                                  work();
                              }
                          }
                      }, function (error) {
                          throw new Error(error);
                      });
                  }
                  else {
                      throw new Error('Item unavailable');
                  }
              };
              var getChildren = function (parentItem) {
                  return new Promise(function (resolve) {
                      if (parentItem.children > 0) {
                          here.itemApiService
                              .getItemsDescendants([parentItem.id], options.url_token, options.external_access_token)
                              .subscribe(function (response) {
                              var itemService = new ItemService();
                              itemService.decryptItems(response[0], on_error, options.password);
                              for (var j = 0; j < response[0].length; j++) {
                                  itemsArr.push({
                                      item: response[0][j],
                                      versionId: response[0][j].main_version_id,
                                  });
                              }
                              resolve();
                          }, function (error) {
                              on_error(error);
                          });
                      }
                      else {
                          resolve();
                      }
                  });
              };
              var counter = 0;
              var itemCount = response.length;
              for (var i = 0; i < response.length; i++) {
                  for (var j = 0; j < items.length; j++) {
                      if (response[i].id == items[j].itemId) {
                          itemsArr.push({ item: response[i], versionId: items[j].versionId });
                      }
                  }
                  getChildren(response[i]).then(function (response) {
                      counter++;
                      if (counter >= itemCount) {
                          work();
                      }
                  }, function (error) {
                      throw new Error(error);
                  });
              }
          }, on_error);
      };
      DownloadService.prototype.download = function (item, url_token, version_id, external_access_token, on_success, on_error) {
          var _this = this;
          if (external_access_token === void 0) { external_access_token = null; }
          var id = item === null ? 0 : item.id;
          var activeFragmentDownloads = 0;
          var maxActiveFragmentDownloads = 10;
          var self = this;
          return new Promise(function (resolve) {
              _this.itemApiService
                  .getFragments(id, url_token, version_id, external_access_token)
                  .subscribe(function (fragments) {
                  _this.downloaded = 0;
                  _this.fragments = fragments;
                  if (fragments.length === 0) {
                      resolve(false);
                  }
                  var downloadFragmentContent = function (activeFragment) {
                      var request;
                      request = self.itemApiService
                          .getContent(activeFragment.id, url_token, external_access_token)
                          .subscribe(function (response) {
                          if (!response)
                              on_error('get content error');
                          self.fragments[activeFragment.arrayKey]['content'] = response;
                          self.downloaded++;
                          activeFragmentDownloads -= 1;
                          if (self.downloaded >= fragments.length) {
                              resolve(true);
                              return;
                          }
                          processDownloadArray();
                      });
                      self.requests.push(request);
                  };
                  /* Creates workable array with all fragment ids */
                  var workingDownloadArray = [];
                  for (var i = 0; i < fragments.length; i++) {
                      workingDownloadArray.push({ arrayKey: i, id: fragments[i]['key_id'] });
                  }
                  /* function checks if new fragment can be started to download */
                  var processDownloadArray = function () {
                      if (maxActiveFragmentDownloads - activeFragmentDownloads !== 0) {
                          activeFragmentDownloads += 1;
                          var activeFragment = workingDownloadArray.shift();
                          if (!(activeFragment === null ||
                              typeof activeFragment === 'undefined')) {
                              downloadFragmentContent(activeFragment);
                          }
                      }
                  };
                  /* initiate first 10 fragment downloads */
                  for (var i = 0; i < maxActiveFragmentDownloads; i++) {
                      processDownloadArray();
                  }
              }, function (error) {
                  on_error(error);
                  // throw new Error(error)
              });
          });
      };
      DownloadService.prototype.createWorkers = function () {
          var _this = this;
          return new Promise(function (resolve) {
              var maxWorkers = navigator.hardwareConcurrency || 4;
              _this.fragmentsCount = _this.fragments.length;
              if (_this.fragments.length < maxWorkers) {
                  maxWorkers = _this.fragments.length;
              }
              for (var i = 0; i < maxWorkers; i++) {
                  var worker = new Worker(LibraryConverterService.asmWorkerUrl());
                  worker['working'] = false;
                  worker['id'] = i;
                  _this.workersArray[i] = worker;
                  worker.addEventListener('message', function (event) {
                      _this.workersArray[event.data.worker_id].working = false;
                      _this.content[event.data.position] = {
                          content: event.data.data,
                          key: event.data.key,
                      };
                      _this.encCounter++;
                      if (_this.encCounter == _this.fragmentsCount) {
                          _this.terminateWorkers();
                          resolve(_this.chunksMap);
                      }
                      else {
                          _this.startWorkers();
                      }
                  });
              }
              _this.startWorkers();
          });
      };
      DownloadService.prototype.startWorkers = function () {
          var _this = this;
          this.workersArray.forEach(function (worker) {
              if (_this.fragments.length > 0 && !worker.working) {
                  var asmCryptoUrl = LibraryConverterService.asmCryptoUrl();
                  var fragment = _this.fragments.shift();
                  _this.chunksMap.push(fragment.position);
                  worker.working = true;
                  worker.postMessage({
                      key: fragment['key_id'],
                      data: fragment['content'],
                      password: _this.item ? _this.item.password : '',
                      item_id: _this.item ? _this.item.id : 0,
                      position: fragment.position,
                      worker_id: worker.id,
                      asm_crypto_url: asmCryptoUrl,
                  });
              }
          });
      };
      DownloadService.prototype.constructFile = function (chunksMap) {
          var _this = this;
          var bytesBlobArray = chunksMap.map(function (value) {
              return _this.content[value].content;
          });
          this.downloadFinished(bytesBlobArray);
      };
      DownloadService.prototype.downloadFinished = function (bytesBlobArray) {
          var fileData;
          var blob = new Blob(bytesBlobArray, { type: this.item ? this.item.mime_type : '' });
          if (this.item !== null) {
              fileData = {
                  blob: blob,
                  id: this.item.id,
                  title: this.item.title,
                  size: this.item.size,
                  extension: this.item.extension,
                  parent_id: this.item.parent_id,
                  softDeleted: this.item.softDeleted,
              };
          }
          this.blobArray.push(fileData);
          this.cleanDownloadState();
      };
      DownloadService.prototype.callBack = function () {
          this.downloadFinishedCallback(this.blobArray);
      };
      DownloadService.prototype.cleanDownloadState = function () {
          for (var _i = 0, _a = this.requests; _i < _a.length; _i++) {
              var request = _a[_i];
              request.unsubscribe();
          }
          this.content = {};
          this.fragments = [];
          this.requests = [];
          this.downloaded = 0;
          this.encCounter = 0;
          this.chunksMap = [];
          this.fragmentsCount = 0;
          this.terminateWorkers();
          this.workersArray = [];
      };
      DownloadService.prototype.terminateWorkers = function () {
          this.workersArray.forEach(function (worker) {
              worker.terminate();
          });
      };
      return DownloadService;
  }());

  // const GeensUrl: string = GlobalVars.GeensUrl;
  var GeensGroupsUserListUrl = geensGroupsUserListUrl;
  var GroupsService = /** @class */ (function () {
      // private userService: UserService;
      // private authService: AuthService;
      function GroupsService() {
          /*public inviteEditUsersToGroup(users:User[], adminUser:User, newUser = false): Promise<any> { //invite or edit
                if (newUser) {
                    return this.http.post('/api/groups/users/invite-edit',{users}).toPromise();
                } else {
                    return this.encryptGroupAdminKeysForAdminRole(users, adminUser).then(users =>{
                        return this.http.post('/api/groups/users/invite-edit',{users}).toPromise();
                    });
                }
            }*/
          /*public getUserEncKey(users = null): Observable<any[]> {
                let params: HttpParams = new HttpParams();
                if(users !== null) {
                    params = params.append('user', users[0]['email']);
                }
                return this.http.get<any[]>('/api/groups/users/get-user-keys',{params});
            }*/
          /*public confirmUserToGroup(user: User, accesses: ItemAccess[]) {
                return this.http.post('/api/groups/users/confirm',{
                    user: {id:user.id, group_admin_keys:user.group_admin_keys},
                    accesses: accesses
                });
            }*/
          /*public removeUsers(group_id: number, user_ids: number[], user: any) {
                return AuthService.postWithPassAndToken(this.http, '/api/groups/users/remove', {group_id, user_ids}, user);
            }*/
          /*public encryptGroupAdminKeysForAdminRole(users: User[], adminUser:User): Promise<User[]>  {
                return new Promise((resolve) => {
                    this.getUserEncKey().subscribe(encKeys => {
                        let identifiers = [];
                        users.forEach(user => {
                            if((user.group && user.group.roles.length > 0) || (user.roles && user.roles.length > 0)) { //TODO later, when more roles than admin will be available, refactor this.
                                identifiers.push({"identifier":user.email});
                            }
                        });

                        encKeys.forEach(encKey => {
                            encKey['enc_password'] = CryptoService.rsaDecrypt(encKey['enc_password'], adminUser.rsa_private);
                        });

                        this.userService.getPublicKeys(identifiers).subscribe((publicKeysGroups: any[])=>{

                            publicKeysGroups.forEach((publicKeys: any[]) => {
                                publicKeys.forEach( publicKey => {
                                    users.forEach( user => {
                                        if(user.email == publicKey.identifier){
                                            user.group_admin_keys = [];

                                            encKeys.forEach(encKey => {
                                                user.group_admin_keys.push({
                                                    user_id: encKey.user_id,
                                                    enc_password: CryptoService.rsaEncrypt(encKey.enc_password, publicKey.rsa_public),
                                                    admin_id: null
                                                });
                                            });
                                        }
                                    });
                                });
                            });
                            resolve(users);
                        });
                    });
                });
            }*/
          /*public getUpdatedGroups(group_id, newGroupData, groups): Group[] {
                groups.forEach((group, i) => {
                    if (group.id === group_id) {
                        Object.keys(newGroupData).forEach((key) => {
                            groups[i][key] = newGroupData[key];
                        });
                    }
                });
                return groups;
            }*/
          /*public static getUserPermissions(user: any, settings: any = null):{GROUP_ADMIN: boolean, MANAGE_USERS_LIST: boolean, EDIT_GROUP_SETTINGS: boolean} {
                if (!user.group) {
                    return
                }

                let permissions = [];
                user.group.roles.forEach((role) => {
                    role.permissions.forEach((permission) => {
                        if (permissions.indexOf(permission.type) < 0) {
                            permissions.push(permission.type);
                        }
                    });
                });

                return {
                    GROUP_ADMIN: permissions.indexOf(User.$TYPE_ADMIN) > -1,
                    MANAGE_USERS_LIST: permissions.indexOf(User.$TYPE_ADMIN) > -1 || permissions.indexOf(User.$TYPE_ADD_USERS) > -1,
                    EDIT_GROUP_SETTINGS: permissions.indexOf(User.$TYPE_ADMIN) > -1
                };
            }*/
          //    ---------
          this.groupSettingsData = {};
          this.groupSettingsChange = new Subject();
      }
      GroupsService.prototype.getUsersList = function (group_id) {
          return HttpRequestService.getRequest(GlobalVars.GeensUrl + GeensGroupsUserListUrl, 'group_id=' + group_id.toString(), [{ Accept: 'application/json' }]);
      };
      return GroupsService;
  }());

  var FileService = /** @class */ (function () {
      function FileService() {
          this.error = false;
          this.cancel = false;
          this.uploadSubject = new Subject();
          this.uploadFinishedSubject = new Subject();
          this.uploadedCountMap = {};
          this.itemService = new ItemService();
          this.groupsService = new GroupsService();
          this.itemApiService = new ItemApiService();
      }
      /**
       * Prepare file data for new file creation
       * @param data - file data. Expected instance of File or array buffer
       * @param customTitle - custom title for item being created
       * @param customExtension - custom extension for item being created
       * @param customMimeType - custom mime type for item being created
       * @param parentId - parent item of item being created
       * @param isPrivate - is new file being created private
       * @param options - is for creating file through sharable link
       * @param onSuccess - callback for returning response from successful request
       * @param onError - error callback
       * */
      FileService.prototype.prepareFileDataForCreation = function (data, customTitle, customExtension, customMimeType, parentId, isPrivate, options, onSuccess, onError) {
          var _this = this;
          var user_data = localStorage.getItem('user_data');
          if (!user_data && options !== null && !options.url_token) {
              throw new Error('no_user_found');
          }
          var user = JSON.parse(user_data);
          if (data instanceof File) {
              var upload = {
                  title: customTitle,
                  mime_type: customMimeType,
                  extension: customExtension,
                  file_data: data,
                  is_private: isPrivate,
              };
              this.initializeFileCreation(upload, parentId, user ? user.group_id : null, options, function (data) {
                  _this.parseFile(data, options, {}, function (response) {
                      onSuccess(response);
                  }, null, onError);
              }, function (error) {
                  onError(error);
              });
          }
          else {
              var upload = {
                  title: customTitle,
                  mime_type: customMimeType,
                  extension: customExtension,
                  file_data: data,
                  is_private: isPrivate,
              };
              this.initializeFileCreation(upload, parentId, user ? user.group_id : null, options, function (data) {
                  _this.parseArrayBuffer(data, options, function (response) {
                      onSuccess(response);
                  }, null, onError);
              }, function (error) {
                  onError(error);
              });
          }
      };
      /**
       * Prepare necessary data for directory creation
       * @param parentId - parent item of item being created
       * @param title - title of directory being created
       * @param isPrivateDirectory - is directory being created private item or not
       * @param options - required for sharable link
       * @param onSuccess - callback for returning response from successful request
       * @param onError - error callback
       * */
      FileService.prototype.prepareDirectoryDataForCreation = function (parentId, title, isPrivateDirectory, options, onSuccess, onError) {
          if (parentId === void 0) { parentId = null; }
          if (title === void 0) { title = null; }
          if (isPrivateDirectory === void 0) { isPrivateDirectory = false; }
          var folder = {
              title: title,
              is_private: isPrivateDirectory,
          };
          var user_data = localStorage.getItem('user_data');
          var user = JSON.parse(user_data);
          this.folderUpload(folder, parentId, user ? user.group_id : null, options, function (response) {
              onSuccess(response);
          }, onError);
      };
      /**
       * Initialize file upload
       * @param file - title of directory being created
       * @param parentId - parent item of item being created
       * @param groupId - is directory being created private item or not
       * @param options - is for creating file through sharable link
       * @param onSuccess - callback for returning response from successful request
       * @param onError - error callback
       * */
      FileService.prototype.initializeFileCreation = function (file, parentId, groupId, options, onSuccess, onError) {
          var _this = this;
          if (groupId === void 0) { groupId = null; }
          file.password = CryptoService.getRandomText(96);
          if (typeof parentId !== 'undefined' && parentId !== null && parentId > 0) {
              this.itemApiService
                  .get([parentId], options.url_token, options.external_access_token_for_parent_item)
                  .subscribe(function (parentItems) {
                  _this.createItemInDB(file, parentItems[0], groupId, null, options, onSuccess, onError);
              }, onError);
          }
          else {
              if (groupId == null) {
                  //checking if in group only when parent_id is null
                  this.createItemInDB(file, null, groupId, null, options, onSuccess, onError);
              }
              else {
                  // this.groupsService.getUsersList(groupId).subscribe((groupUsers: any) => {
                  //get all group users to encrypt item access for each of them
                  this.createItemInDB(file, null, groupId, [], options, onSuccess, onError);
                  // })
              }
          }
      };
      /**
       * Create database record of new file as item
       * @param file - file data
       * @param parentItem - parent item of the item that is being created
       * @param groupUsers - list of users that are in the group that item is being added to
       * @param groupId - is directory being created private item or not
       * @param options - is for creating file through sharable link
       * @param onSuccess - callback for returning response from successful request
       * @param onError - error callback
       * */
      FileService.prototype.createItemInDB = function (file, parentItem, groupId, groupUsers, options, onSuccess, onError) {
          var user_data = localStorage.getItem('user_data');
          var user = JSON.parse(user_data);
          groupId = this.updateItemsGroupIdParameter(parentItem, options, groupId);
          var item = this.itemService.prepareItemForUpload(file, parentItem, groupId, groupUsers, user, true, options, onError);
          this.itemApiService
              .create([item], groupId, file.is_private, options)
              .subscribe(function (response) {
              var data = {
                  file: file.file_data,
                  password: file.password,
                  id: response[0]['id'],
              };
              onSuccess(data);
          }, onError);
      };
      /**
       * Parse file data that is an instance of File into fragments and store it to database
       * @param  data - file data
       * @param  options - data for sharable link
       * @param  itemVersionParameters - data used for item/update request for setting item version
       * @param  onFinishCallback
       * @param  onStepCallback
       * @param  onErrorCallback
       * @param  uploading
       * */
      FileService.prototype.parseFile = function (data, options, itemVersionParameters, onFinishCallback, onStepCallback, onErrorCallback, uploading) {
          if (onFinishCallback === void 0) { onFinishCallback = null; }
          if (onStepCallback === void 0) { onStepCallback = null; }
          if (onErrorCallback === void 0) { onErrorCallback = null; }
          if (uploading === void 0) { uploading = true; }
          this.error = false;
          var file = data.file;
          var fileSize = parseInt(file.size);
          var chunkSize = 1500 * 1024; // bytes
          var offset = 0;
          var chunkReaderBlock = null;
          var activeFragmentUploads = 0;
          var maxActiveFragmentUploads = 10;
          this.uploadedCountMap[data.id] = 0;
          var fragmentsCount = Math.floor(fileSize / chunkSize);
          if (fileSize % chunkSize > 0) {
              fragmentsCount += 1;
          }
          var self = this;
          var readEventHandler = function (evt, _offset) {
              var parseNonUploadedFile = evt.target.error == null && !uploading;
              var parseUploadedFile = evt.target.error == null && uploading && !self.cancel;
              if (parseNonUploadedFile || parseUploadedFile) {
                  self.storeFragment({ chunk: evt.target.result, offset: _offset }, { id: data.id, password: data.password }, { onFinishCallback: onFinishCallback, onStepCallback: onStepCallback }, fragmentsCount, options, itemVersionParameters).subscribe(function (response) {
                      activeFragmentUploads -= 1;
                      processUploadingArray();
                  }, function (errorResponse) {
                      onErrorCallback(errorResponse);
                  });
              }
              else {
                  return;
              }
          };
          chunkReaderBlock = function (_offset, length, _file, context) {
              var r = new FileReader();
              var blob = _file.slice(_offset, length + _offset);
              r.onload = function (event) {
                  readEventHandler(event, _offset);
              };
              r.readAsArrayBuffer(blob);
          };
          /* Creates array with all fragment offsets */
          var workingUploadArray = [];
          for (var i = 0; i < fragmentsCount; i++) {
              workingUploadArray.push(offset);
              offset += chunkSize;
          }
          /* function checks if new fragment can be started to upload */
          var processUploadingArray = function () {
              if (maxActiveFragmentUploads - activeFragmentUploads !== 0) {
                  activeFragmentUploads += 1;
                  var fragmentOffset = workingUploadArray.shift();
                  if (!(fragmentOffset === null || fragmentOffset === undefined)) {
                      chunkReaderBlock(fragmentOffset, chunkSize, file, self);
                  }
              }
          };
          /* initiate first 10 fragment uploads */
          for (var i = 0; i < maxActiveFragmentUploads; i++) {
              processUploadingArray();
          }
      };
      /**
       * Parse file data that is an instance of array buffer into fragments and store it to database
       * @param  data - file data
       * @param  options - data for sharable link
       * @param  onFinishCallback
       * @param  onStepCallback
       * @param  onErrorCallback
       * */
      FileService.prototype.parseArrayBuffer = function (data, options, onFinishCallback, onStepCallback, onErrorCallback) {
          if (onFinishCallback === void 0) { onFinishCallback = null; }
          if (onErrorCallback === void 0) { onErrorCallback = null; }
          var file = data.file;
          var fileSize = file.byteLength;
          var chunkSize = 1500 * 1024; // bytes
          var offset = 0;
          var activeFragmentUploads = 0;
          var maxActiveFragmentUploads = 10;
          var fragmentsCount = Math.floor(fileSize / chunkSize);
          this.error = false;
          this.uploadedCountMap[data.id] = 0;
          if (fileSize % chunkSize > 0) {
              fragmentsCount += 1;
          }
          /* Creates array with all fragment offsets */
          var workingUploadArray = [];
          for (var i = 0; i < fragmentsCount; i++) {
              workingUploadArray.push(offset);
              offset += chunkSize;
          }
          /* initiate first 10 fragment uploads */
          for (var i = 0; i < maxActiveFragmentUploads; i++) {
              this.processUploadingArrayBuffer(data.id, file, data.password, fragmentsCount, chunkSize, maxActiveFragmentUploads, activeFragmentUploads, workingUploadArray, options, onFinishCallback, null, onErrorCallback);
          }
      };
      /**
       * Perform storing of the fragments for array buffer
       * @param  id
       * @param  file
       * @param  password
       * @param  fragmentsCount,
       * @param  chunkSize
       * @param  options
       * @param  maxActiveFragmentUploads
       * @param  activeFragmentUploads
       * @param  workingUploadArray
       * @param  onFinishCallback
       * @param  onStepCallback
       * @param  onErrorCallback
       * */
      FileService.prototype.processUploadingArrayBuffer = function (id, file, password, fragmentsCount, chunkSize, maxActiveFragmentUploads, activeFragmentUploads, workingUploadArray, options, onFinishCallback, onStepCallback, onErrorCallback) {
          var _this = this;
          if (onFinishCallback === void 0) { onFinishCallback = null; }
          if (onStepCallback === void 0) { onStepCallback = null; }
          if (onErrorCallback === void 0) { onErrorCallback = null; }
          if (maxActiveFragmentUploads - activeFragmentUploads !== 0) {
              activeFragmentUploads += 1;
              var fragmentOffset = workingUploadArray.shift();
              if (fragmentOffset !== null && fragmentOffset !== undefined) {
                  this.storeFragment({
                      chunk: file.slice(fragmentOffset, fragmentOffset + chunkSize),
                      offset: fragmentOffset,
                  }, { id: id, password: password }, { onFinishCallback: onFinishCallback, onStepCallback: onStepCallback }, fragmentsCount, options, {}).subscribe(function (response) {
                      activeFragmentUploads -= 1;
                      _this.processUploadingArrayBuffer(id, file, password, fragmentsCount, chunkSize, maxActiveFragmentUploads, activeFragmentUploads, workingUploadArray, options, onFinishCallback, null, onErrorCallback);
                  }, function (errorResponse) {
                      onErrorCallback(errorResponse);
                  });
              }
          }
      };
      /**
       * On file parse a chunk should be uploaded to server.
       * @param fileData
       * @param fileMetadata
       * @param options
       * @param callbacks
       * @param fragmentsCount
       * @param  itemVersionParameters - data used for item/update request for setting item version
       */
      FileService.prototype.storeFragment = function (fileData, fileMetadata, callbacks, fragmentsCount, options, itemVersionParameters) {
          var _this = this;
          var encryptedData = CryptoService.symEncryptFile(fileData.chunk, fileMetadata.password);
          var storeContent = this.itemApiService.storeContent(encryptedData, fileMetadata.id, fileData.offset, options.url_token, options.external_access_token, itemVersionParameters ? itemVersionParameters.main_version_id : undefined);
          return storeContent.pipe(map(function () {
              _this.uploadedCountMap[fileMetadata.id]++;
              callbacks.onStepCallback &&
                  callbacks.onStepCallback(_this.uploadedCountMap[fileMetadata.id], fragmentsCount);
              if (_this.uploadedCountMap[fileMetadata.id] >= fragmentsCount) {
                  delete _this.uploadedCountMap[fileMetadata.id];
                  var item = new Item$1();
                  item.id = fileMetadata.id;
                  item.state = Item$1.$ITEM_STATE_UNLOCKED;
                  _this.itemApiService
                      .update([item], options, false, false, false, itemVersionParameters)
                      .subscribe(function (response) {
                      callbacks.onFinishCallback && callbacks.onFinishCallback(response);
                  });
              }
          }, operators_8(function (err) {
              throw new Error(err);
          })));
      };
      /**
       * Update text files with new content
       * @param itemId - id item that is being updated
       * @param itemContent - content that item is being updated with
       * @param options - used for sharable link
       * @param onSuccess - callback for returning response from successful request
       * @param onError - error callback
       * */
      FileService.prototype.updateTextFile = function (itemId, itemContent, options, onSuccess, onError) {
          var _this = this;
          this.itemApiService
              .get([itemId], options.url_token, options.external_access_token)
              .subscribe(function (response) {
              var item = _this.itemService.decryptItems(response, onError, options.password)[0];
              if (item.extension !== 'txt' || item.mime_type !== 'text/plain') {
                  throw new Error('Invalid item. Expected item to be a text file');
              }
              var noteBytes = CryptoService.stringToBytes(itemContent, true);
              var encryptedNote = CryptoService.symEncryptFile(noteBytes, item.password);
              _this.itemApiService
                  .updateNote(itemId, encryptedNote, options.url_token, options.external_access_token)
                  .subscribe(function (response) {
                  onSuccess(response);
              }, onError);
          }, onError);
      };
      /**
       * Create new file version
       * @param itemId - id of item that is being updated
       * @param file - new file version
       * @param options - used for sharable link
       * @param onSuccess - callback for returning response from successful request
       * @param onError - error callback
       * */
      FileService.prototype.createNewFileVersion = function (itemId, file, options, onSuccess, onError) {
          var _this = this;
          this.itemApiService
              .get([itemId], options.url_token, options.external_access_token)
              .subscribe(function (response) {
              var item = _this.itemService.decryptItems(response, onError, options.password)[0];
              if (file.type !== item.mime_type) {
                  throw new Error('New item version type must be the same as the first item');
              }
              else {
                  item.state = Item$1.$ITEM_STATE_LOCKED; // has to be locked to create new version
                  item.meta_data = ''; // has to be empty to create new version
                  item.fragment_count = Math.floor(file.size / Item$1.chunkSize);
                  if (file.size % Item$1.chunkSize > 0)
                      item.fragment_count += 1;
                  _this.itemApiService
                      .update([item], options, false, false, false, { new_version: true })
                      .subscribe(function (response) {
                      if (response[0]) {
                          var data = {
                              id: response[0].id,
                              file: file,
                              password: item.password,
                          };
                          var itemVersionParameters = {
                              main_version_id: response[0].main_version_id,
                              new_version: true,
                          };
                          _this.parseFile(data, options, itemVersionParameters, function (response) {
                              onSuccess(response);
                          }, null, onError);
                      }
                  }, onError);
              }
          }, onError);
      };
      /**
       * Proceed with folder creation.
       * @param folder - folder data
       * @param parentId - id of parent of the item that is being created
       * @param groupId - id of the group that item is being added to
       * @param options - required for sharable link
       * @param onSuccess - callback for returning response from successful request
       * @param onError - error callback
       * */
      FileService.prototype.folderUpload = function (folder, parentId, groupId, options, onSuccess, onError) {
          var _this = this;
          if (groupId === void 0) { groupId = null; }
          folder['password'] = CryptoService.getRandomText(96);
          if (parentId !== null && typeof parentId !== 'undefined' && !isNaN(parentId)) {
              // uploding when parent is not null
              this.itemApiService
                  .get([parentId], options.url_token, options.external_access_token_for_parent_item)
                  .subscribe(function (parentItems) {
                  _this.doFolderUpload(folder, parentItems[0], groupId, null, options, onSuccess, onError);
              }, onError);
          }
          else {
              //when parent is null
              if (groupId === null) {
                  //checking if in group only when parent_id is null
                  this.doFolderUpload(folder, null, groupId, null, options, onSuccess, onError);
              }
              else {
                  // this.groupsService.getUsersList(groupId).subscribe((groupUsers: any) => {
                  //get all group users to encrypt item access for each of them
                  this.doFolderUpload(folder, null, groupId, [], options, onSuccess, onError);
                  // })
              }
          }
      };
      /**
       * Proceed with folder. Item state is changed to soft deleted
       * @param folder - folder data
       * @param parentItem - parent item of the item that is being created
       * @param groupId - id of the group that item is being added to
       * @param groupUsers - list of users that are in the group that item is being added to
       * @param onSuccess - callback for returning response from successful request
       * @param onError - error callback
       * */
      FileService.prototype.doFolderUpload = function (folder, parentItem, groupId, groupUsers, options, onSuccess, onError) {
          if (groupId === void 0) { groupId = null; }
          var user_data = localStorage.getItem('user_data');
          var user = JSON.parse(user_data);
          groupId = this.updateItemsGroupIdParameter(parentItem, options, groupId);
          var requestItem = this.itemService.prepareItemForUpload(folder, parentItem, groupId, groupUsers, user, false, options, onError);
          this.itemApiService
              .create([requestItem], groupId, folder.is_private, options)
              .subscribe(function (response) {
              onSuccess(response[0]);
          }, onError);
      };
      /**
       * Soft delete item. Item state is changed to soft deleted
       * @param item - item with contains item id and item version
       * @param options - used for sharable link
       * @param onSuccess - callback for returning response from successful request
       * @param onError - error callback
       * */
      FileService.prototype.deleteItemVersion = function (item, options, onSuccess, onError) {
          this.itemApiService.deleteVersion(item, options).subscribe(function (response) {
              onSuccess(response);
          }, onError);
      };
      /**
       * Soft delete item. Item state is changed to soft deleted
       * @param ids - array of items ids to be soft deleted
       * @param options - required for sharable link
       * @param onSuccess - callback for returning response from successful request
       * @param onError - error callback
       * */
      FileService.prototype.softDeleteItem = function (ids, options, onSuccess, onError) {
          var _this = this;
          if (options && options.url_token) {
              this.itemApiService
                  .get(ids, options.url_token, options.external_access_token)
                  .subscribe(function (response) {
                  _this.itemService.decryptItems(response, onError, options.password);
                  _this.itemApiService.remove(ids, options, Item$1.$ITEM_SOFT_DELETE).subscribe(function (response) {
                      onSuccess(response);
                  }, function (error) {
                      onError(error);
                  });
              }, function (error) {
                  onError(error);
                  return;
              });
          }
          else {
              this.itemApiService.remove(ids, options, Item$1.$ITEM_SOFT_DELETE).subscribe(function (response) {
                  onSuccess(response);
              }, function (error) {
                  onError(error);
              });
          }
      };
      /**
       * Hard delete item. Item is deleted from database
       * @param ids - array of items ids to be hard deleted
       * @param onSuccess - callback for returning response from successful request
       * @param onError - error callback
       * */
      FileService.prototype.hardDeleteItem = function (ids, onSuccess, onError) {
          // this.itemApiService.remove(ids, Item.$ITEM_HARD_DELETE).subscribe(response => {
          //   onSuccess(response)
          // }, onError)
      };
      /**
       * Restore item state from being soft deleted
       * @param ids - array of items ids to be restored
       * @param onSuccess - callback for returning response from successful request
       * @param onError - error callback
       * */
      FileService.prototype.restoreDeletedItem = function (ids, onSuccess, onError) {
          this.itemApiService.restore(ids).subscribe(function (response) {
              onSuccess(response);
          }, onError);
      };
      /**
       * Update item with new title or description
       * @param id - id of the item being updated
       * @param title - new title for the item being updated
       * @param description - new description for the item being updated
       * @param options - used for sharable link
       * @param onSuccess - callback for returning response from successful request
       * @param onError - error callback
       * */
      FileService.prototype.updateItem = function (id, title, description, options, onSuccess, onError) {
          var _this = this;
          if (title === void 0) { title = null; }
          if (description === void 0) { description = null; }
          this.itemApiService
              .get([id], options.url_token, options.external_access_token)
              .subscribe(function (response) {
              var item = _this.itemService.decryptItems(response, onError, options.password)[0];
              var crypt_data = {
                  title: title !== null && typeof title !== 'undefined' ? title : item.title,
                  mime_type: item.mime_type,
                  extension: item.extension,
                  description: description !== null && typeof description !== 'undefined'
                      ? description
                      : item.description,
              };
              item.meta_data = CryptoService.symEncryptText(JSON.stringify(crypt_data), item.password);
              _this.itemApiService.update([item], options).subscribe(function (response) {
                  onSuccess(response);
              }, onError);
          }, onError);
      };
      /**
       * Move items to new location and update their accesses
       * @param ids - id of the items being moved
       * @param parentId - id  of items new parent being updated
       * @param options - used for sharable link
       * @param options.external_access_token - is an array, first element is parent token and second is movable item token
       * @param onSuccess - success callback
       * @param onError - error callback
       * */
      FileService.prototype.moveItemsAndUpdateItemsAccesses = function (parentId, ids, options, onSuccess, onError) {
          var _this = this;
          var itemService = new ItemService();
          var userService = new UserService();
          var user = userService.getUser();
          if (user !== null) {
              if (typeof parentId !== 'undefined' && parentId !== null && parentId > 0) {
                  this.itemApiService
                      .get([parentId], options.url_token, options.external_access_token ? options.external_access_token[0] : null)
                      .subscribe(function (response) {
                      var parentItem = itemService.decryptItems(response, onError, options.password)[0];
                      _this.itemApiService
                          .getItemsDescendants(ids, options.url_token, options.external_access_token
                          ? options.external_access_token[1]
                          : null)
                          .subscribe(function (response) {
                          var itemsToMove = [];
                          for (var _i = 0, response_1 = response; _i < response_1.length; _i++) {
                              var item = response_1[_i];
                              item = itemService.decryptItems(item, onError, options.password);
                              for (var _a = 0, item_1 = item; _a < item_1.length; _a++) {
                                  var itemInside = item_1[_a];
                                  if (ids.indexOf(itemInside.id) !== -1) {
                                      itemInside.parent_id = parentId;
                                  }
                                  itemsToMove.push(itemService.setItemAccesses(itemInside, parentItem, itemInside.password, user, user.group_id, false, null, options));
                              }
                          }
                          _this.itemApiService
                              .move(itemsToMove, options)
                              .subscribe(function (response) {
                              onSuccess(response);
                          }, onError);
                      }, onError);
                  }, onError);
              }
              if (user.group_id === null && (typeof parentId === 'undefined' || !parentId)) {
                  this.itemApiService
                      .getItemsDescendants(ids, options.url_token, options.external_access_token ? options.external_access_token[1] : null)
                      .subscribe(function (response) {
                      var itemsToMove = [];
                      for (var _i = 0, response_2 = response; _i < response_2.length; _i++) {
                          var item = response_2[_i];
                          item = itemService.decryptItems(item, onError, options.password);
                          for (var _a = 0, item_2 = item; _a < item_2.length; _a++) {
                              var itemInside = item_2[_a];
                              if (ids.indexOf(itemInside.id) !== -1) {
                                  itemInside.parent_id = null;
                              }
                              itemsToMove.push(itemService.setItemAccesses(itemInside, null, itemInside.password, user, null, itemInside.access.private, null, {}));
                          }
                      }
                      _this.itemApiService.move(itemsToMove, options).subscribe(function (response) {
                          onSuccess(response);
                      }, onError);
                  }, onError);
              }
              if (user.group_id !== null && parentId === null) {
                  // this.groupsService.getUsersList(user.group_id).subscribe((groupUsers: any) => {
                  this.itemApiService
                      .getItemsDescendants(ids, options.url_token, options.external_access_token ? options.external_access_token[1] : null)
                      .subscribe(function (response) {
                      var itemsToMove = [];
                      for (var _i = 0, response_3 = response; _i < response_3.length; _i++) {
                          var item = response_3[_i];
                          item = itemService.decryptItems(item, onError, options.password);
                          for (var _a = 0, item_3 = item; _a < item_3.length; _a++) {
                              var itemInside = item_3[_a];
                              if (ids.indexOf(itemInside.id) !== -1) {
                                  itemInside.parent_id = null;
                              }
                              itemsToMove.push(itemService.setItemAccesses(itemInside, null, itemInside.password, user, user.group_id, itemInside.access.private, [], {}));
                          }
                      }
                      _this.itemApiService.move(itemsToMove, options).subscribe(function (response) {
                          onSuccess(response);
                      }, onError);
                  }, onError);
                  // }, onError)
              }
          }
          else {
              throw new Error('User not found');
          }
      };
      /**
       * Copy items
       * @param ids - id of the items being copied
       * @param parentId - id of items new parent being copied
       * @param options - used for sharable link
       * @param onSuccess - success callback
       * @param onError - error callback
       * */
      FileService.prototype.copyItemsAndUpdateItemsAccesses = function (parentId, ids, options, onSuccess, onError) {
          var _this = this;
          var itemService = new ItemService();
          var userService = new UserService();
          var user = userService.getUser();
          if (user !== null) {
              if (typeof parentId !== 'undefined' && parentId !== null && parentId > 0) {
                  this.itemApiService
                      .get([parentId], options.url_token, options.external_access_token ? options.external_access_token[0] : null)
                      .subscribe(function (response) {
                      var parentItem = itemService.decryptItems(response, onError, options.password)[0];
                      _this.itemApiService
                          .getItemsDescendants(ids, options.url_token, options.external_access_token
                          ? options.external_access_token[1]
                          : null)
                          .subscribe(function (response) {
                          var itemsToMove = [];
                          for (var _i = 0, response_4 = response; _i < response_4.length; _i++) {
                              var item = response_4[_i];
                              item = itemService.decryptItems(item, onError, options.password);
                              for (var _a = 0, item_4 = item; _a < item_4.length; _a++) {
                                  var itemInside = item_4[_a];
                                  if (ids.indexOf(itemInside.id) !== -1) {
                                      itemInside.parent_id = parentId;
                                  }
                                  itemsToMove.push(itemService.setItemAccesses(itemInside, parentItem, itemInside.password, user, user.group_id, false, null, {}));
                              }
                          }
                          _this.itemApiService
                              .copy(itemsToMove, null, false, options)
                              .subscribe(function (response) {
                              onSuccess(response);
                          }, onError);
                      }, onError);
                  }, onError);
              }
              if (user.group_id === null && (typeof parentId === 'undefined' || !parentId)) {
                  this.itemApiService
                      .getItemsDescendants(ids, options.url_token, options.external_access_token ? options.external_access_token[1] : null)
                      .subscribe(function (response) {
                      var itemsToMove = [];
                      var isPrivateFile = false;
                      for (var _i = 0, response_5 = response; _i < response_5.length; _i++) {
                          var item = response_5[_i];
                          item = itemService.decryptItems(item, onError, options.password);
                          for (var _a = 0, item_5 = item; _a < item_5.length; _a++) {
                              var itemInside = item_5[_a];
                              if (ids.indexOf(itemInside.id) !== -1) {
                                  itemInside.parent_id = null;
                                  isPrivateFile = itemInside.access.private;
                              }
                              itemsToMove.push(itemService.setItemAccesses(itemInside, null, itemInside.password, user, null, itemInside.access.private, null, {}));
                          }
                      }
                      _this.itemApiService
                          .copy(itemsToMove, null, isPrivateFile, options)
                          .subscribe(function (response) {
                          onSuccess(response);
                      }, onError);
                  }, onError);
              }
              if (user.group_id !== null && parentId === null) {
                  // this.groupsService.getUsersList(user.group_id).subscribe((groupUsers: any) => {
                  this.itemApiService
                      .getItemsDescendants(ids, options.url_token, options.external_access_token ? options.external_access_token[1] : null)
                      .subscribe(function (response) {
                      var itemsToMove = [];
                      var isPrivateFile = false;
                      for (var _i = 0, response_6 = response; _i < response_6.length; _i++) {
                          var item = response_6[_i];
                          item = itemService.decryptItems(item, onError, options.password);
                          for (var _a = 0, item_6 = item; _a < item_6.length; _a++) {
                              var itemInside = item_6[_a];
                              if (ids.indexOf(itemInside.id) !== -1) {
                                  itemInside.parent_id = null;
                                  isPrivateFile = itemInside.access.private;
                              }
                              itemsToMove.push(itemService.setItemAccesses(itemInside, null, itemInside.password, user, user.group_id, itemInside.access.private, [], {}));
                          }
                      }
                      _this.itemApiService
                          .copy(itemsToMove, user.group_id, isPrivateFile, options)
                          .subscribe(function (response) {
                          onSuccess(response);
                      }, onError);
                  }, onError);
                  // }, onError)
              }
          }
          else {
              throw new Error('User not found');
          }
      };
      FileService.prototype.updateItemsGroupIdParameter = function (parentItem, options, groupId) {
          if (parentItem && parentItem.owner && options && options.url_token) {
              // when creating an item through sharable link from another account, you have to set group id
              // from parent item
              return parentItem.owner.group_id;
          }
          else {
              return groupId;
          }
      };
      FileService.prototype.fileToArrayBuffer = function (file, success) {
          var blob = file.slice(0, file.size);
          var reader = new FileReader();
          reader.onload = function (e) {
              var arrayBuffer = reader.result;
              success(arrayBuffer);
          };
          reader.readAsArrayBuffer(blob);
      };
      return FileService;
  }());

  var _a;
  var PermissionsList;
  (function (PermissionsList) {
      PermissionsList[PermissionsList["NOT_USED"] = 0] = "NOT_USED";
      PermissionsList[PermissionsList["MASTER_ADMIN"] = 1] = "MASTER_ADMIN";
      PermissionsList[PermissionsList["ITEM_DOWNLOAD"] = 2] = "ITEM_DOWNLOAD";
      PermissionsList[PermissionsList["ITEM_CREATE"] = 3] = "ITEM_CREATE";
      PermissionsList[PermissionsList["ITEM_DELETE"] = 4] = "ITEM_DELETE";
      PermissionsList[PermissionsList["ITEM_UPDATE"] = 5] = "ITEM_UPDATE";
      PermissionsList[PermissionsList["ITEM_COPY"] = 6] = "ITEM_COPY";
      PermissionsList[PermissionsList["ITEM_CUT"] = 7] = "ITEM_CUT";
      PermissionsList[PermissionsList["ITEM_ASSIGN_ROLES"] = 8] = "ITEM_ASSIGN_ROLES";
      PermissionsList[PermissionsList["ITEM_PERSONAL_ENABLED"] = 9] = "ITEM_PERSONAL_ENABLED";
      PermissionsList[PermissionsList["ITEM_COMPANY_ENABLED"] = 10] = "ITEM_COMPANY_ENABLED";
      PermissionsList[PermissionsList["ITEM_ATTRIBUTES_VIEW_DESCRIPTION"] = 11] = "ITEM_ATTRIBUTES_VIEW_DESCRIPTION";
      PermissionsList[PermissionsList["ITEM_ATTRIBUTES_EDIT_DESCRIPTION"] = 12] = "ITEM_ATTRIBUTES_EDIT_DESCRIPTION";
      PermissionsList[PermissionsList["ITEM_ATTRIBUTES_EDIT_COLOR"] = 13] = "ITEM_ATTRIBUTES_EDIT_COLOR";
      PermissionsList[PermissionsList["ITEM_ATTRIBUTES_VIEW_DETAILS"] = 14] = "ITEM_ATTRIBUTES_VIEW_DETAILS";
      PermissionsList[PermissionsList["ITEM_VERSION_ENABLED"] = 15] = "ITEM_VERSION_ENABLED";
      PermissionsList[PermissionsList["ITEM_VERSION_CHANGE_MAIN"] = 16] = "ITEM_VERSION_CHANGE_MAIN";
      PermissionsList[PermissionsList["ITEM_VERSION_DELETE"] = 17] = "ITEM_VERSION_DELETE";
      PermissionsList[PermissionsList["ITEM_LOG_ENABLED"] = 18] = "ITEM_LOG_ENABLED";
      PermissionsList[PermissionsList["TRASHBIN_ENABLED"] = 19] = "TRASHBIN_ENABLED";
      PermissionsList[PermissionsList["TRASHBIN_RESTORE"] = 20] = "TRASHBIN_RESTORE";
      PermissionsList[PermissionsList["TRASHBIN_EMPTY"] = 21] = "TRASHBIN_EMPTY";
      PermissionsList[PermissionsList["TEAM_ENABLED"] = 22] = "TEAM_ENABLED";
      PermissionsList[PermissionsList["TEAM_LIST"] = 23] = "TEAM_LIST";
      PermissionsList[PermissionsList["TEAM_INVITE"] = 24] = "TEAM_INVITE";
      PermissionsList[PermissionsList["TEAM_REMOVE"] = 25] = "TEAM_REMOVE";
      PermissionsList[PermissionsList["TEAM_EDIT"] = 26] = "TEAM_EDIT";
      PermissionsList[PermissionsList["TEAM_CHANGE_PASSWORD"] = 27] = "TEAM_CHANGE_PASSWORD";
      PermissionsList[PermissionsList["TIMESTAMPS_ENABLED"] = 28] = "TIMESTAMPS_ENABLED";
      PermissionsList[PermissionsList["TIMESTAMPS_PERSONAL"] = 29] = "TIMESTAMPS_PERSONAL";
      PermissionsList[PermissionsList["TIMESTAMPS_COMPANY"] = 30] = "TIMESTAMPS_COMPANY";
      PermissionsList[PermissionsList["TEMPLATES_ENABLED"] = 31] = "TEMPLATES_ENABLED";
      PermissionsList[PermissionsList["TEMPLATES_CREATE"] = 32] = "TEMPLATES_CREATE";
      PermissionsList[PermissionsList["TEMPLATES_EDIT"] = 33] = "TEMPLATES_EDIT";
      PermissionsList[PermissionsList["TEMPLATES_DELETE"] = 34] = "TEMPLATES_DELETE";
      PermissionsList[PermissionsList["TEMPLATES_APPLY"] = 35] = "TEMPLATES_APPLY";
      PermissionsList[PermissionsList["TEMPLATES_SHARE"] = 36] = "TEMPLATES_SHARE";
      PermissionsList[PermissionsList["TEMPLATES_PUBLIC"] = 37] = "TEMPLATES_PUBLIC";
      PermissionsList[PermissionsList["SERVICES_ENABLED"] = 38] = "SERVICES_ENABLED";
      PermissionsList[PermissionsList["SHARING_ENABLED"] = 39] = "SHARING_ENABLED";
      PermissionsList[PermissionsList["SHARING_SHARE"] = 40] = "SHARING_SHARE";
      PermissionsList[PermissionsList["SHARING_SET_EXPIRATION_DATE"] = 41] = "SHARING_SET_EXPIRATION_DATE";
      PermissionsList[PermissionsList["SHARING_URL_SHARE"] = 42] = "SHARING_URL_SHARE";
      PermissionsList[PermissionsList["SUBGROUPS_ENABLED"] = 43] = "SUBGROUPS_ENABLED";
      PermissionsList[PermissionsList["SUBGROUPS_CREATE"] = 44] = "SUBGROUPS_CREATE";
      PermissionsList[PermissionsList["SUBGROUPS_DELETE"] = 45] = "SUBGROUPS_DELETE";
      PermissionsList[PermissionsList["SUBGROUPS_EDIT"] = 46] = "SUBGROUPS_EDIT";
      PermissionsList[PermissionsList["SUBGROUPS_CHANGE_PASSWORD"] = 47] = "SUBGROUPS_CHANGE_PASSWORD";
      PermissionsList[PermissionsList["SETTINGS_GROUP_ENABLED"] = 48] = "SETTINGS_GROUP_ENABLED";
      PermissionsList[PermissionsList["SETTINGS_OVERVIEW_ENABLED"] = 49] = "SETTINGS_OVERVIEW_ENABLED";
      PermissionsList[PermissionsList["SETTINGS_GROUP_EDIT"] = 50] = "SETTINGS_GROUP_EDIT";
      PermissionsList[PermissionsList["SETTINGS_GROUP_BRANDING_EDIT"] = 51] = "SETTINGS_GROUP_BRANDING_EDIT";
      PermissionsList[PermissionsList["SETTINGS_GROUP_PAYMENT_SETUP"] = 52] = "SETTINGS_GROUP_PAYMENT_SETUP";
      PermissionsList[PermissionsList["SETTINGS_GROUP_VIEW_INVOICES"] = 53] = "SETTINGS_GROUP_VIEW_INVOICES";
      PermissionsList[PermissionsList["SETTINGS_STORAGE_BUY"] = 54] = "SETTINGS_STORAGE_BUY";
      PermissionsList[PermissionsList["SETTINGS_STORAGE_CANCEL_SUBSCRIPTION"] = 55] = "SETTINGS_STORAGE_CANCEL_SUBSCRIPTION";
      PermissionsList[PermissionsList["SETTINGS_USERS_BUY"] = 56] = "SETTINGS_USERS_BUY";
      PermissionsList[PermissionsList["SETTINGS_USERS_CANCEL_SUBSCRIPTION"] = 57] = "SETTINGS_USERS_CANCEL_SUBSCRIPTION";
      PermissionsList[PermissionsList["SETTINGS_TIMESTAMPS_BUY"] = 58] = "SETTINGS_TIMESTAMPS_BUY";
      PermissionsList[PermissionsList["ROLES_SETTINGS_ENABLED"] = 59] = "ROLES_SETTINGS_ENABLED";
      PermissionsList[PermissionsList["ROLES_SETTINGS_CREATE"] = 60] = "ROLES_SETTINGS_CREATE";
      PermissionsList[PermissionsList["ROLES_SETTINGS_EDIT"] = 61] = "ROLES_SETTINGS_EDIT";
      PermissionsList[PermissionsList["ROLES_SETTINGS_DELETE"] = 62] = "ROLES_SETTINGS_DELETE";
      PermissionsList[PermissionsList["POSITIONS_SETTINGS_ENABLED"] = 63] = "POSITIONS_SETTINGS_ENABLED";
      PermissionsList[PermissionsList["POSITIONS_SETTINGS_CREATE"] = 64] = "POSITIONS_SETTINGS_CREATE";
      PermissionsList[PermissionsList["POSITIONS_SETTINGS_EDIT"] = 65] = "POSITIONS_SETTINGS_EDIT";
      PermissionsList[PermissionsList["POSITIONS_SETTINGS_DELETE"] = 66] = "POSITIONS_SETTINGS_DELETE";
      PermissionsList[PermissionsList["GEE_ENABLED"] = 67] = "GEE_ENABLED";
      PermissionsList[PermissionsList["SETTINGS_GROUP_MANDATORY_2FA"] = 68] = "SETTINGS_GROUP_MANDATORY_2FA";
      PermissionsList[PermissionsList["TEAM_BYPASS_MANDATORY_2FA"] = 69] = "TEAM_BYPASS_MANDATORY_2FA";
      PermissionsList[PermissionsList["TEAM_REMOVE_DEEP"] = 70] = "TEAM_REMOVE_DEEP";
      PermissionsList[PermissionsList["ITEM_SUBSCRIBE"] = 71] = "ITEM_SUBSCRIBE";
  })(PermissionsList || (PermissionsList = {}));
  var PermissionTypes;
  (function (PermissionTypes) {
      PermissionTypes[PermissionTypes["ITEM"] = 0] = "ITEM";
      PermissionTypes[PermissionTypes["ITEM_ATTRIBUTES"] = 1] = "ITEM_ATTRIBUTES";
      PermissionTypes[PermissionTypes["ITEM_VERSION"] = 2] = "ITEM_VERSION";
      PermissionTypes[PermissionTypes["ITEM_LOG"] = 3] = "ITEM_LOG";
      PermissionTypes[PermissionTypes["TRASHBIN"] = 4] = "TRASHBIN";
      PermissionTypes[PermissionTypes["TEAM"] = 5] = "TEAM";
      PermissionTypes[PermissionTypes["TIMESTAMPS"] = 6] = "TIMESTAMPS";
      PermissionTypes[PermissionTypes["SERVICES"] = 7] = "SERVICES";
      PermissionTypes[PermissionTypes["TEMPLATES"] = 8] = "TEMPLATES";
      PermissionTypes[PermissionTypes["SHARING"] = 9] = "SHARING";
      PermissionTypes[PermissionTypes["SUBGROUPS"] = 10] = "SUBGROUPS";
      PermissionTypes[PermissionTypes["SETTINGS"] = 11] = "SETTINGS";
      PermissionTypes[PermissionTypes["ROLES"] = 12] = "ROLES";
      PermissionTypes[PermissionTypes["POSITIONS"] = 13] = "POSITIONS";
      PermissionTypes[PermissionTypes["GEE"] = 14] = "GEE";
  })(PermissionTypes || (PermissionTypes = {}));
  (_a = {},
      _a[PermissionTypes.ITEM] = [
          PermissionsList.ITEM_DOWNLOAD,
          PermissionsList.ITEM_CREATE,
          PermissionsList.ITEM_DELETE,
          PermissionsList.ITEM_UPDATE,
          PermissionsList.ITEM_COPY,
          PermissionsList.ITEM_CUT,
          PermissionsList.ITEM_SUBSCRIBE,
          PermissionsList.ITEM_ASSIGN_ROLES,
          PermissionsList.ITEM_PERSONAL_ENABLED,
          PermissionsList.ITEM_COMPANY_ENABLED
      ],
      _a[PermissionTypes.ITEM_ATTRIBUTES] = [
          PermissionsList.ITEM_ATTRIBUTES_VIEW_DESCRIPTION,
          PermissionsList.ITEM_ATTRIBUTES_EDIT_DESCRIPTION,
          PermissionsList.ITEM_ATTRIBUTES_EDIT_COLOR,
          PermissionsList.ITEM_ATTRIBUTES_VIEW_DETAILS
      ],
      _a[PermissionTypes.ITEM_VERSION] = [
          PermissionsList.ITEM_VERSION_ENABLED,
          PermissionsList.ITEM_VERSION_CHANGE_MAIN,
          PermissionsList.ITEM_VERSION_DELETE
      ],
      _a[PermissionTypes.ITEM_LOG] = [PermissionsList.ITEM_LOG_ENABLED],
      _a[PermissionTypes.TRASHBIN] = [
          PermissionsList.TRASHBIN_ENABLED,
          PermissionsList.TRASHBIN_RESTORE,
          PermissionsList.TRASHBIN_EMPTY
      ],
      _a[PermissionTypes.TEAM] = [
          PermissionsList.TEAM_ENABLED,
          PermissionsList.TEAM_LIST,
          PermissionsList.TEAM_INVITE,
          PermissionsList.TEAM_REMOVE,
          PermissionsList.TEAM_REMOVE_DEEP,
          PermissionsList.TEAM_EDIT,
          PermissionsList.TEAM_CHANGE_PASSWORD,
          PermissionsList.TEAM_BYPASS_MANDATORY_2FA
      ],
      _a[PermissionTypes.TIMESTAMPS] = [
          PermissionsList.TIMESTAMPS_ENABLED,
          PermissionsList.TIMESTAMPS_PERSONAL,
          PermissionsList.TIMESTAMPS_COMPANY
      ],
      _a[PermissionTypes.TEMPLATES] = [
          PermissionsList.TEMPLATES_ENABLED,
          PermissionsList.TEMPLATES_CREATE,
          PermissionsList.TEMPLATES_EDIT,
          PermissionsList.TEMPLATES_DELETE,
          PermissionsList.TEMPLATES_APPLY,
          PermissionsList.TEMPLATES_SHARE,
          PermissionsList.TEMPLATES_PUBLIC
      ],
      _a[PermissionTypes.SERVICES] = [PermissionsList.SERVICES_ENABLED],
      _a[PermissionTypes.SHARING] = [
          PermissionsList.SHARING_ENABLED,
          PermissionsList.SHARING_SHARE,
          PermissionsList.SHARING_SET_EXPIRATION_DATE,
          PermissionsList.SHARING_URL_SHARE
      ],
      _a[PermissionTypes.SUBGROUPS] = [
          PermissionsList.SUBGROUPS_ENABLED,
          PermissionsList.SUBGROUPS_CREATE,
          PermissionsList.SUBGROUPS_DELETE,
          PermissionsList.SUBGROUPS_EDIT,
          PermissionsList.SUBGROUPS_CHANGE_PASSWORD
      ],
      _a[PermissionTypes.SETTINGS] = [
          PermissionsList.SETTINGS_OVERVIEW_ENABLED,
          PermissionsList.SETTINGS_GROUP_ENABLED,
          PermissionsList.SETTINGS_GROUP_EDIT,
          PermissionsList.SETTINGS_GROUP_MANDATORY_2FA,
          PermissionsList.SETTINGS_GROUP_BRANDING_EDIT,
          PermissionsList.SETTINGS_GROUP_PAYMENT_SETUP,
          PermissionsList.SETTINGS_GROUP_VIEW_INVOICES,
          PermissionsList.SETTINGS_STORAGE_BUY,
          PermissionsList.SETTINGS_STORAGE_CANCEL_SUBSCRIPTION,
          PermissionsList.SETTINGS_USERS_BUY,
          PermissionsList.SETTINGS_USERS_CANCEL_SUBSCRIPTION,
          PermissionsList.SETTINGS_TIMESTAMPS_BUY
      ],
      _a[PermissionTypes.ROLES] = [
          PermissionsList.ROLES_SETTINGS_ENABLED,
          PermissionsList.ROLES_SETTINGS_CREATE,
          PermissionsList.ROLES_SETTINGS_EDIT,
          PermissionsList.ROLES_SETTINGS_DELETE
      ],
      _a[PermissionTypes.POSITIONS] = [
          PermissionsList.POSITIONS_SETTINGS_ENABLED,
          PermissionsList.POSITIONS_SETTINGS_CREATE,
          PermissionsList.POSITIONS_SETTINGS_EDIT,
          PermissionsList.POSITIONS_SETTINGS_DELETE
      ],
      _a[PermissionTypes.GEE] = [PermissionsList.GEE_ENABLED],
      _a);
  [
      PermissionsList.MASTER_ADMIN,
      PermissionsList.TEAM_INVITE,
      PermissionsList.TEAM_EDIT,
      PermissionsList.TEAM_CHANGE_PASSWORD,
      PermissionsList.SUBGROUPS_CREATE,
      PermissionsList.SUBGROUPS_EDIT,
      PermissionsList.SUBGROUPS_CHANGE_PASSWORD,
      PermissionsList.ROLES_SETTINGS_EDIT
  ];

  var RolesService = /** @class */ (function () {
      function RolesService() {
      }
      RolesService.userHavePermission = function (permissions, user, strict, skipAdmin) {
          if (strict === void 0) { strict = false; }
          if (skipAdmin === void 0) { skipAdmin = false; }
          if (user === undefined || user === null || (user.group === undefined || user.group === null))
              return true;
          var userPermissions = [];
          user.group.roles.forEach(function (role) {
              return role.permissions.forEach(function (permission) { return userPermissions.push(permission.type); });
          });
          if (userPermissions.indexOf(PermissionsList.MASTER_ADMIN) !== -1 && !skipAdmin)
              return true;
          if (strict) {
              return permissions.every(function (permission) { return userPermissions.includes(permission); });
          }
          else {
              for (var _i = 0, permissions_1 = permissions; _i < permissions_1.length; _i++) {
                  var permission = permissions_1[_i];
                  if (userPermissions.indexOf(permission) !== -1)
                      return true;
              }
              return false;
          }
      };
      RolesService.prototype.userHavePermission = function (permissions, user, strict) {
          if (user === void 0) { user = null; }
          if (strict === void 0) { strict = false; }
          if (user === null) {
              var temp = localStorage.getItem('user_data');
              if (temp)
                  user = JSON.parse(temp);
          }
          return RolesService.userHavePermission(permissions, user, strict);
      };
      return RolesService;
  }());

  var GeensAuthorize = geensAuthorize;
  var GeensLogout = geensLogout;
  var GeensJsSdk = /** @class */ (function () {
      function GeensJsSdk(client_id, redirect_uri, geens_server_uri, logout_uri) {
          this.userService = new UserService();
          this._uId = '';
          this._privateKey = '';
          this._accessToken = '';
          this.itemApiService = new ItemApiService();
          this.rolesService = new RolesService();
          this.geensGroupUserPermissionsList = PermissionsList;
          this.code = '';
          this.loggedIn = false;
          this.popup = null;
          this.opener = null;
          GlobalVars.GeensUrl = geens_server_uri;
          GlobalVars.DomainUrl = redirect_uri;
          this._geensClientID = client_id;
          this._geensLoginRedirectURI = redirect_uri;
          this._geensLogoutRedirectURI = logout_uri ? logout_uri : '';
          this._geensOAuthLogout =
              GlobalVars.GeensUrl + GeensLogout.url + '?' + GeensLogout.client + client_id;
          this._geensOAuthLogin =
              GlobalVars.GeensUrl +
                  GeensAuthorize.url +
                  '?' +
                  GeensAuthorize.client +
                  this._geensClientID +
                  '&' +
                  GeensAuthorize.responseType.code +
                  '&' +
                  GeensAuthorize.redirectUri +
                  this._geensLoginRedirectURI;
          localStorage.setItem('client_id', this._geensClientID);
          var privateKey = localStorage.getItem('private_key');
          var userData = localStorage.getItem('user_data');
          var geensAccessToken = localStorage.getItem('geens_access_token');
          // code is used when identifying if login was executed (it only returns a value if the user just
          // clicked approve in the log in modal) if so then finish user login (checkRedirectLink) if it's empty
          // and privateKey, userData and geensAccessToken is not empty it means the user is already
          // logged in
          var code = this.getQueryVariable('code');
          if (privateKey !== null &&
              typeof privateKey !== 'undefined' &&
              userData !== null &&
              typeof userData !== 'undefined' &&
              geensAccessToken !== null &&
              typeof geensAccessToken !== 'undefined' &&
              geensAccessToken !== 'undefined' &&
              (code === null || typeof code === 'undefined' || code === 'undefined' || !code)) {
              this.loggedIn = true;
              this._privateKey = privateKey;
              this._uId = userData['uid'];
          }
          else {
              this.checkRedirectLink();
          }
      }
      /**
       * Open login window
       * */
      GeensJsSdk.prototype.openLogin = function () {
          this.popupCenter(this._geensOAuthLogin, 'Geens login', 550, 750);
      };
      /**
       * Open logout window
       * ///TODO If geens access token is revoked client app logout should clear the local storage and refresh the page
       * */
      GeensJsSdk.prototype.openLogout = function () {
          if (!this._geensLogoutRedirectURI) {
              localStorage.clear();
              this.loggedIn = false;
              window.location.reload();
          }
          else {
              this.popupCenter(this._geensOAuthLogout, 'Geens logout', 550, 750);
          }
      };
      /**
       * Create popup with parameters
       * @param url
       * @param title
       * @param w - width
       * @param h - height
       * */
      GeensJsSdk.prototype.popupCenter = function (url, title, w, h) {
          var dualScreenLeft = window.screenLeft != undefined ? window.screenLeft : window.screenX;
          var dualScreenTop = window.screenTop != undefined ? window.screenTop : window.screenY;
          var width = window.innerWidth
              ? window.innerWidth
              : document.documentElement.clientWidth
                  ? document.documentElement.clientWidth
                  : screen.width;
          var height = window.innerHeight
              ? window.innerHeight
              : document.documentElement.clientHeight
                  ? document.documentElement.clientHeight
                  : screen.height;
          var systemZoom = width / window.screen.availWidth;
          var left = (width - w) / 2 / systemZoom + dualScreenLeft;
          var top = (height - h) / 2 / systemZoom + dualScreenTop;
          var newWindow = window.open(url, title, 'scrollbars=yes' +
              ', width=' +
              w / systemZoom +
              ', height=' +
              h / systemZoom +
              ', top=' +
              top +
              ', left=' +
              left);
          this.popup = newWindow;
          this.opener = newWindow.opener;
          window.focus();
          newWindow.focus();
      };
      /**
       * Get variable from url
       * */
      GeensJsSdk.prototype.getQueryVariable = function (variable) {
          var query = window.location.search.substring(1);
          var vars = query.split('&');
          for (var i = 0; i < vars.length; i++) {
              var pair = vars[i].split('=');
              if (pair[0] == variable) {
                  return pair[1];
              }
          }
          return false;
      };
      /**
       * Check if on redirect url contains "code" and "private" parameters
       * */
      GeensJsSdk.prototype.checkRedirectLink = function () {
          var privateKey = this.getQueryVariable('private');
          var code = this.getQueryVariable('code');
          if (typeof privateKey !== 'undefined' &&
              privateKey !== false &&
              privateKey !== null &&
              typeof code !== 'undefined' &&
              code !== false &&
              code !== null) {
              this.loggedIn = true;
              this.setCode(code);
              this.setPrivateKey(atob(decodeURIComponent(privateKey)));
              window.document.body.style.opacity = '0';
              window.opener.postMessage(code, GlobalVars.DomainUrl);
          }
      };
      /**
       * Get user data from geens api
       * */
      GeensJsSdk.prototype.getUserData = function (on_success, on_error) {
          this.itemApiService.getUserData(on_success, on_error);
      };
      /**
       * Get all user items
       * */
      GeensJsSdk.prototype.getAllItems = function (is_deleted, on_success, on_error) {
          var isDeleted = !(typeof is_deleted !== 'undefined' && is_deleted != true);
          this.itemApiService.all(isDeleted).subscribe({
              next: function (response) {
                  var itemService = new ItemService();
                  on_success(itemService.decryptItems(response, on_error));
              },
              error: function (error) {
                  on_error(error);
              },
          });
      };
      /**
       * List items all items with a specific parent
       * */
      GeensJsSdk.prototype.listAllItems = function (parent_id, options, on_success, on_error) {
          try {
              ErrorService.isIdNaNAndNotNull(parent_id);
              if (options) {
                  ErrorService.isListAllItemsOptionsTypeValid(options.type);
              }
              if (!options ||
                  (options &&
                      (options.type === 'personal' ||
                          options.type === 'company' ||
                          options.type === ''))) {
                  var is_private = false;
                  if (options && (options.type === 'personal' || options.type === 'company')) {
                      if (options.type === 'personal') {
                          is_private = true;
                      }
                  }
                  this.itemApiService.list(parent_id, is_private, true).subscribe({
                      next: function (response) {
                          var itemService = new ItemService();
                          on_success(itemService.decryptItems(response[0], on_error));
                      },
                      error: function (error) {
                          on_error(error);
                      },
                  }
                  // response => {
                  //     let itemService = new ItemService()
                  //
                  //     on_success(itemService.decryptItems(response[0], on_error))
                  // },
                  // error => {
                  //     on_error(error)
                  // }
                  );
              }
              else if (options && options.type === 'shared_for_me') {
                  this.itemApiService.sharedForMe(parent_id).subscribe({
                      next: function (response) {
                          var itemService = new ItemService();
                          on_success(itemService.decryptItems(response, on_error));
                      },
                      error: function (error) {
                          on_error(error);
                      },
                  }
                  // .subscribe(
                  // response => {
                  //     let itemService = new ItemService()
                  //
                  //     on_success(itemService.decryptItems(response, on_error))
                  // },
                  // error => {
                  //     on_error(error)
                  // }
                  );
              }
              else if (options && options.type === 'shared_by_me') {
                  this.itemApiService.sharedbyMe(parent_id).subscribe({
                      next: function (response) {
                          var itemService = new ItemService();
                          on_success(itemService.decryptItems(response, on_error));
                      },
                      error: function (error) {
                          on_error(error);
                      },
                  }
                  // .subscribe(
                  // response => {
                  //     let itemService = new ItemService()
                  //
                  //     on_success(itemService.decryptItems(response, on_error))
                  // },
                  // error => {
                  //     on_error(error)
                  // }
                  );
              }
          }
          catch (e) {
              if (typeof e === 'string') {
                  throw new Error(e);
              }
              else {
                  throw new Error('error');
              }
          }
      };
      /**
       * Get user item
       * */
      GeensJsSdk.prototype.getItem = function (item_ids, options, on_success, on_error) {
          try {
              item_ids.forEach(function (item_id) {
                  ErrorService.isIdNaNAndNotNull(item_id);
              });
              ErrorService.isOptionsSetCorrectly(options);
              this.itemApiService
                  .get(item_ids, options.url_token, options.external_access_token)
                  .subscribe({
                  next: function (response) {
                      var itemService = new ItemService();
                      on_success(itemService.decryptItems(response, on_error, options.password));
                  },
                  error: function (error) {
                      on_error(error);
                  },
              }
              // .subscribe(
              //     response => {
              //         let itemService = new ItemService()
              //
              //         on_success(itemService.decryptItems(response, on_error, options.password))
              //     },
              //     error => {
              //         on_error(error)
              //     }
              );
          }
          catch (e) {
              if (typeof e === 'string') {
                  throw new Error(e);
              }
              else {
                  throw new Error('error');
              }
          }
      };
      /**
       * Create file in Geens
       * */
      GeensJsSdk.prototype.createFile = function (parent_id, title, extension, mime_type, file, is_private, options, on_success, on_error) {
          if (parent_id === void 0) { parent_id = null; }
          if (title === void 0) { title = null; }
          if (extension === void 0) { extension = null; }
          if (mime_type === void 0) { mime_type = null; }
          if (!this.rolesService.userHavePermission([PermissionsList.ITEM_CREATE])) {
              on_error('user_is_missing_required_permissions');
              return;
          }
          if (ErrorService.isNullOrUndefinedOrEmpty(file)) {
              return;
          }
          ErrorService.isFileOfTypeFileOrArrayBuffer(file);
          ErrorService.isOptionsSetCorrectly(options);
          try {
              ErrorService.isIdNaN(parent_id);
              ErrorService.isParameterBoolean(is_private, 'Parameter is_private ');
              ErrorService.isFileOfTypeArrayBufferValid(file, title, extension, mime_type);
              var fileService = new FileService();
              if (title !== null ||
                  extension !== null ||
                  mime_type !== null ||
                  typeof is_private !== 'undefined') {
                  var titleParam = title !== null
                      ? typeof title === 'undefined' || title === ''
                          ? file && file.name
                              ? file.name.slice(0, file.name.lastIndexOf('.'))
                              : null
                          : title
                      : file && file.name
                          ? file.name.slice(0, file.name.lastIndexOf('.'))
                          : null;
                  var extensionParam = extension !== null
                      ? typeof extension === 'undefined' || extension === ''
                          ? null
                          : extension
                      : null;
                  var mimeTypeParam = mime_type !== null
                      ? typeof mime_type === 'undefined' || mime_type === ''
                          ? null
                          : mime_type
                      : null;
                  var isPrivate = !(typeof is_private !== 'undefined' && !is_private);
                  fileService.prepareFileDataForCreation(file, titleParam, extensionParam, mimeTypeParam, parent_id, isPrivate, options, on_success, on_error);
              }
              else {
                  fileService.prepareFileDataForCreation(file, title, extension, mime_type, parent_id, is_private, options, on_success, on_error);
              }
          }
          catch (e) {
              if (typeof e === 'string') {
                  throw new Error(e);
              }
              else {
                  throw new Error('error');
              }
          }
      };
      /**
       * Create directory in geens
       * */
      GeensJsSdk.prototype.createDirectory = function (parent_id, title, is_private_directory, options, on_success, on_error) {
          if (parent_id === void 0) { parent_id = null; }
          if (is_private_directory === void 0) { is_private_directory = false; }
          if (!this.rolesService.userHavePermission([PermissionsList.ITEM_CREATE])) {
              on_error('user_is_missing_required_permissions');
              return;
          }
          try {
              ErrorService.isIdNaN(parent_id);
              ErrorService.isParameterBoolean(is_private_directory, 'Parameter is_private_directory');
              ErrorService.isOptionsSetCorrectly(options);
              var fileService = new FileService();
              if (title !== null) {
                  var titleParam = typeof title === 'undefined' || title === '' ? null : title;
                  var isPrivate = !(typeof is_private_directory !== 'undefined' && !is_private_directory);
                  if (titleParam !== null) {
                      fileService.prepareDirectoryDataForCreation(parent_id, titleParam, isPrivate, options, on_success, on_error);
                  }
                  else {
                      throw new Error('Title value is not valid');
                  }
              }
              else {
                  throw new Error('Title value is not valid');
              }
          }
          catch (e) {
              if (typeof e === 'string') {
                  throw new Error(e);
              }
              else {
                  throw new Error('error');
              }
          }
      };
      /**
       * Move a items
       * */
      GeensJsSdk.prototype.moveItems = function (parent_id, items_ids, options, on_success, on_error) {
          if (!this.rolesService.userHavePermission([PermissionsList.ITEM_CUT])) {
              on_error('user_is_missing_required_permissions');
              return;
          }
          try {
              ErrorService.isIdNaN(parent_id);
              ErrorService.isArrayOfNumbers(items_ids);
              var fileService = new FileService();
              fileService.moveItemsAndUpdateItemsAccesses(parent_id, items_ids, options, on_success, on_error);
          }
          catch (e) {
              if (typeof e === 'string') {
                  throw new Error(e);
              }
              else {
                  throw new Error('error');
              }
          }
      };
      /**
       * Update item
       * */
      GeensJsSdk.prototype.updateItem = function (item_id, title, description, options, on_success, on_error) {
          if (title === void 0) { title = null; }
          if (description === void 0) { description = null; }
          if (!this.rolesService.userHavePermission([PermissionsList.ITEM_UPDATE])) {
              on_error('user_is_missing_required_permissions');
              return;
          }
          if (title === null && description === null) {
              return;
          }
          try {
              ErrorService.isIdNaNAndNotNull(item_id);
              ErrorService.isOptionsSetCorrectly(options);
              if (title !== null) {
                  ErrorService.isTitleValid(title);
              }
              var fileService = new FileService();
              fileService.updateItem(item_id, title, description, options, on_success, on_error);
          }
          catch (e) {
              if (typeof e === 'string') {
                  throw new Error(e);
              }
              else {
                  throw new Error('error');
              }
          }
      };
      /**
       * Update note
       * */
      GeensJsSdk.prototype.editNote = function (item_id, newContent, options, on_success, on_error) {
          if (!this.rolesService.userHavePermission([PermissionsList.ITEM_UPDATE])) {
              on_error('user_is_missing_required_permissions');
              return;
          }
          try {
              ErrorService.isIdNaNAndNotNull(item_id);
              ErrorService.isTitleValid(newContent !== null ? newContent : '');
              ErrorService.isOptionsSetCorrectly(options);
              var fileService = new FileService();
              fileService.updateTextFile(item_id, newContent, options, on_success, on_error);
          }
          catch (e) {
              if (typeof e === 'string') {
                  throw new Error(e);
              }
              else {
                  throw new Error('error');
              }
          }
      };
      /**
       * Create item version
       * */
      GeensJsSdk.prototype.createItemVersion = function (item_id, file, options, on_success, on_error) {
          if (!this.rolesService.userHavePermission([PermissionsList.ITEM_CREATE])) {
              on_error('user_is_missing_required_permissions');
              return;
          }
          try {
              ErrorService.isIdNaNAndNotNull(item_id);
              ErrorService.isOptionsSetCorrectly(options);
              if (!(file instanceof File)) {
                  throw new Error('File is not valid. Expected value of type file');
              }
              var fileService = new FileService();
              fileService.createNewFileVersion(item_id, file, options, on_success, on_error);
          }
          catch (e) {
              if (typeof e === 'string') {
                  throw new Error(e);
              }
              else {
                  throw new Error('error');
              }
          }
      };
      /**
       * Delete item version
       * */
      GeensJsSdk.prototype.deleteItemVersion = function (item, options, on_success, on_error) {
          if (!this.rolesService.userHavePermission([PermissionsList.ITEM_VERSION_DELETE])) {
              on_error('user_is_missing_required_permissions');
              return;
          }
          try {
              ErrorService.isToBeDeletedVersionDataSet(item);
              ErrorService.isOptionsSetCorrectly(options);
              // ErrorService.isArrayOfNumbers(items_ids)
              var fileService = new FileService();
              fileService.deleteItemVersion(item, options, on_success, on_error);
          }
          catch (e) {
              if (typeof e === 'string') {
                  throw new Error(e);
              }
              else {
                  throw new Error('error');
              }
          }
      };
      /**
       * Get all descendants of a specific item id
       * */
      GeensJsSdk.prototype.getItemsDescendants = function (item_ids, options, on_success, on_error) {
          try {
              ErrorService.isArrayOfNumbers(item_ids);
              ErrorService.isOptionsSetCorrectly(options);
              this.itemApiService
                  .getItemsDescendants(item_ids, options.url_token, options.external_access_token)
                  .subscribe({
                  next: function (response) {
                      var itemService = new ItemService();
                      for (var _i = 0, response_1 = response; _i < response_1.length; _i++) {
                          var item = response_1[_i];
                          item = itemService.decryptItems(item, on_error, options.password);
                      }
                      on_success(response);
                  },
                  error: function (error) {
                      on_error(error);
                  },
              }
              // .subscribe(
              //     response => {
              //         let itemService = new ItemService()
              //
              //         for (let item of response) {
              //             item = itemService.decryptItems(item, on_error, options.password)
              //         }
              //
              //         on_success(response)
              //     },
              //     error => {
              //         on_error(error)
              //     }
              );
          }
          catch (e) {
              if (typeof e === 'string') {
                  throw new Error(e);
              }
              else {
                  throw new Error('error');
              }
          }
      };
      // /**
      //  * Restore soft deleted items
      //  * */
      //
      // restoreItems(items_ids: number[], on_success: any, on_error: any): void {
      //   try {
      //     ErrorService.isArrayOfNumbers(items_ids)
      //     let fileService = new FileService()
      //
      //     fileService.restoreDeletedItem(items_ids, on_success, on_error)
      //   } catch (e) {
      //     throw new Error(e)
      //   }
      // }
      // /**
      //  * Permanently delete items (delete with state 2)
      //  * */
      //
      // hardDeleteItems(items_ids: number[], on_success: any, on_error: any): void {
      //   try {
      //     ErrorService.isArrayOfNumbers(items_ids)
      //     let fileService = new FileService()
      //
      //     fileService.hardDeleteItem(items_ids, on_success, on_error)
      //   } catch (e) {
      //     throw new Error(e)
      //   }
      // }
      // /**
      //  * Delete items with ability to restore it (delete with state 1)
      //  * */
      //
      // softDeleteItems(items_ids: number[], on_success: any, on_error: any): void {
      //   try {
      //     ErrorService.isArrayOfNumbers(items_ids)
      //     let fileService = new FileService()
      //
      //     fileService.softDeleteItem(items_ids, on_success, on_error)
      //   } catch (e) {
      //     throw new Error(e)
      //   }
      // }
      /**
       * Permanently delete items without ability to restore it
       * */
      GeensJsSdk.prototype.permanentlyDeleteItems = function (items_ids, options, on_success, on_error) {
          if (!this.rolesService.userHavePermission([PermissionsList.ITEM_DELETE])) {
              on_error('user_is_missing_required_permissions');
              return;
          }
          try {
              ErrorService.isArrayOfNumbers(items_ids);
              ErrorService.isOptionsSetCorrectly(options);
              var fileService = new FileService();
              fileService.softDeleteItem(items_ids, options, on_success, on_error);
          }
          catch (e) {
              if (typeof e === 'string') {
                  throw new Error(e);
              }
              else {
                  throw new Error('error');
              }
          }
      };
      // /**
      //  * Get deleted items
      //  * */
      //
      // getDeletedItems(parent_id: number, on_success: any, on_error: any): void {
      //   try {
      //     ErrorService.isIdNaNAndNotNull(parent_id)
      //     let user_data: any = localStorage.getItem('user_data')
      //     let user: any = JSON.parse(user_data)
      //     let groupId: number | null = user['group_id']
      //
      //     this.itemApiService.deletedItemsList(parent_id, groupId).subscribe(
      //         response => {
      //           let itemService = new ItemService()
      //
      //           on_success(itemService.decryptItems(response))
      //         },
      //         error => {
      //           on_error(error)
      //         }
      //     )
      //   } catch (e) {
      //     throw new Error(e)
      //   }
      // }
      /**
       * Download item
       * */
      GeensJsSdk.prototype.downloadItem = function (items, options, on_success, on_error) {
          if (!this.rolesService.userHavePermission([PermissionsList.ITEM_DOWNLOAD])) {
              on_error('user_is_missing_required_permissions');
              return;
          }
          try {
              ErrorService.isOptionsSetCorrectly(options);
              ErrorService.isItemDataSetCorrectly(items);
              var downloadService = new DownloadService();
              downloadService.downloadItemContent(items, options, on_success, on_error);
          }
          catch (e) {
              if (typeof e === 'string') {
                  throw new Error(e);
              }
              else {
                  throw new Error('error');
              }
          }
      };
      /**
       * Copy items
       * */
      GeensJsSdk.prototype.copyItems = function (parent_id, items_ids, options, on_success, on_error) {
          if (!this.rolesService.userHavePermission([PermissionsList.ITEM_COPY])) {
              on_error('user_is_missing_required_permissions');
              return;
          }
          try {
              ErrorService.isIdNaN(parent_id);
              ErrorService.isArrayOfNumbers(items_ids);
              var fileService = new FileService();
              fileService.copyItemsAndUpdateItemsAccesses(parent_id, items_ids, options, on_success, on_error);
          }
          catch (e) {
              if (typeof e === 'string') {
                  throw new Error(e);
              }
              else {
                  throw new Error('error');
              }
          }
      };
      /**
       * Event with the callback from third party application that makes request to receive access token
       * */
      GeensJsSdk.prototype.onLogin = function (callback) {
          window.addEventListener('message', function (message) {
              if (typeof message.data === 'string' && message.data.substring(0, 3)) {
                  callback(message.data);
              }
          });
      };
      /**
       * Finalize login by setting access token and user data
       * */
      GeensJsSdk.prototype.finalizeLogin = function (access_token_data, redirectUrl, reloadWindow, on_success, on_error) {
          var _this = this;
          if (reloadWindow === void 0) { reloadWindow = true; }
          this.setAccessToken(access_token_data.access_token, access_token_data.expires_in);
          this.getUserData(function (userData) {
              if (!_this.rolesService.userHavePermission([PermissionsList.SERVICES_ENABLED])) {
                  localStorage.clear();
                  _this.loggedIn = false;
                  _this.popup.close();
                  if (on_error) {
                      on_error('user_is_missing_required_permissions');
                  }
                  else {
                      throw new Error('user_is_missing_required_permissions');
                  }
                  return;
              }
              if (userData === true) {
                  if (redirectUrl || reloadWindow) {
                      _this.windowLocationUpdateForPopup(redirectUrl, reloadWindow);
                  }
                  _this.popup.close();
              }
              if (on_success) {
                  on_success();
              }
              else {
                  return;
              }
          }, function (error) {
              throw new Error(error);
          });
      };
      GeensJsSdk.prototype.windowLocationUpdateForPopup = function (redirectUrl, reloadWindow) {
          if (redirectUrl) {
              this.opener.window.location.assign(redirectUrl);
          }
          else {
              if (reloadWindow) {
                  this.opener.window.location.reload();
              }
          }
      };
      GeensJsSdk.prototype.windowLocationUpdateForWebSite = function (redirectUrl, reloadWindow) {
          if (redirectUrl) {
              window.location.assign(redirectUrl);
          }
          else {
              if (reloadWindow) {
                  window.location.reload();
              }
          }
      };
      /**
       * Finalize log out by clearing local storage and reloading the window
       * */
      GeensJsSdk.prototype.finalizeLogout = function (redirectUrl, reloadWindow) {
          if (reloadWindow === void 0) { reloadWindow = true; }
          localStorage.clear();
          this.loggedIn = false;
          if (redirectUrl) {
              window.opener.location.assign(redirectUrl);
          }
          else {
              if (reloadWindow) {
                  window.opener.location.reload();
              }
          }
          window.close();
      };
      /**
       * Clear local storage
       * */
      GeensJsSdk.prototype.clearLocalStorage = function (redirectUrl, reloadWindow) {
          if (reloadWindow === void 0) { reloadWindow = true; }
          localStorage.clear();
          this.loggedIn = false;
          if (redirectUrl || reloadWindow) {
              this.windowLocationUpdateForWebSite(redirectUrl, reloadWindow);
          }
      };
      /**
       * Setting private key in variable and local storage
       * */
      GeensJsSdk.prototype.setPrivateKey = function (privateKey) {
          localStorage.setItem('private_key', privateKey);
          this._privateKey = privateKey;
      };
      /**
       * Setting access token in variable and local storage
       * */
      GeensJsSdk.prototype.setAccessToken = function (access_token, expires_in) {
          localStorage.setItem('geens_access_token', access_token);
          // let expiresAt = new Date();
          // expiresAt = new Date(expiresAt.getTime() + (expires_in * 1000)); // converting expires_in from seconds to milliseconds
          // expiresAt.toUTCString()
          localStorage.setItem('geens_access_token_expires_in', String(expires_in));
          this._accessToken = access_token;
      };
      /**
       * Set code
       * */
      GeensJsSdk.prototype.setCode = function (code) {
          localStorage.setItem('code', code);
          this.code = code;
      };
      /**
       * Revoke item access
       * */
      GeensJsSdk.prototype.revokeSharedItemAccess = function (accessId, on_success, on_error) {
          var clientId = localStorage.getItem('client_id'); // when revoking shared item access you have to pass the client id to Geens backend
          if (clientId) {
              clientId = parseInt(clientId);
          }
          this.itemApiService.revokeItemAccess(accessId, clientId).subscribe({
              next: function (response) {
                  on_success(response);
              },
              error: function (error) {
                  on_error(error);
              },
          });
          //     .subscribe(response => {
          //     on_success(response)
          // }, error => {
          //     on_error(error)
          // })
      };
      /**
       * Revoke url shared access
       * */
      GeensJsSdk.prototype.revokeUrlShare = function (url_token, on_success, on_error) {
          var _this = this;
          try {
              this.itemApiService.getAllUrlSharedItems(url_token).subscribe({
                  next: function (items) {
                      var accessId;
                      if (items) {
                          var accessesIds = items.map(function (item) {
                              return item.url_share ? item.url_share.id : null;
                          });
                          if (accessesIds) {
                              for (var _i = 0, accessesIds_1 = accessesIds; _i < accessesIds_1.length; _i++) {
                                  var id = accessesIds_1[_i];
                                  if (id !== null) {
                                      accessId = id;
                                      break;
                                  }
                              }
                              if (accessId) {
                                  _this.itemApiService
                                      .revokeItemAccess(accessId)
                                      .subscribe(function (response) {
                                      on_success(response);
                                  });
                              }
                              else {
                                  on_error('missing item3');
                              }
                          }
                          else {
                              on_error('missing item2');
                          }
                      }
                      else {
                          on_error('missing item1');
                      }
                  },
                  error: function (error) {
                      on_error(error);
                  },
              });
              //     .subscribe(
              //     items => {
              //         let accessId!: number
              //         if (items) {
              //             let accessesIds = items.map(item => (item.url_share ? item.url_share.id : null))
              //             if (accessesIds) {
              //                 for (let id of accessesIds) {
              //                     if (id !== null) {
              //                         accessId = id
              //                         break
              //                     }
              //                 }
              //                 if (accessId) {
              //                     this.itemApiService.revokeItemAccess(accessId).subscribe(response => {
              //                         on_success(response)
              //                     })
              //                 } else {
              //                     on_error('missing item3')
              //                 }
              //             } else {
              //                 on_error('missing item2')
              //             }
              //         } else {
              //             on_error('missing item1')
              //         }
              //     },
              //     error => {
              //         on_error(error)
              //     }
              // )
          }
          catch (e) {
              if (typeof e === 'string') {
                  throw new Error(e);
              }
              else {
                  throw new Error('error');
              }
          }
      };
      GeensJsSdk.prototype.getAccessesToRevoke = function (item, accessesIds, accessesType) {
          var accessesToRevoke = [];
          if (item.hasOwnProperty(accessesType)) {
              var length_1 = item[accessesType].length;
              while (length_1--) {
                  if (accessesIds.indexOf(item[accessesType][length_1].id) > -1) {
                      accessesToRevoke.push(item[accessesType][length_1]);
                      item[accessesType].splice(length_1, 1);
                  }
              }
          }
          return accessesToRevoke;
      };
      /**
       * Check if geens ids exists
       * */
      GeensJsSdk.prototype.checkGeensIds = function (geensIds, on_success, on_error) {
          ErrorService.isGeensIdsSetCorrectly(geensIds);
          var shareToUserIdentifiers = [];
          geensIds.forEach(function (shareTo) {
              shareToUserIdentifiers.push({ identifier: shareTo.trim() });
          });
          this.userService.getPublicKeys(shareToUserIdentifiers).subscribe(function (receivers) {
              on_success(receivers);
          }, function (error) { return on_error(error); });
      };
      /**
       * Get users by UIDs
       * */
      GeensJsSdk.prototype.getUsersByUids = function (UIds, on_success, on_error) {
          var usersUids = [];
          UIds.forEach(function (uid) {
              usersUids.push({ uid: uid.trim() });
          });
          this.userService.getUIds(usersUids).subscribe(function (receivers) {
              on_success(receivers);
          }, function (error) { return on_error(error); });
      };
      /**
       * Create item share for users
       * */
      GeensJsSdk.prototype.createItemShareForUsers = function (itemId, geensIds, permission, on_success, on_error) {
          var shareToUserIdentifiers = [];
          geensIds.forEach(function (shareTo) {
              shareToUserIdentifiers.push({ identifier: shareTo.trim() });
          });
          try {
              ErrorService.isGeensIdsSetCorrectly(geensIds);
              ErrorService.isIdNaNAndNotNull(itemId);
              ErrorService.isItemSharePermissionSetCorrectly(permission);
              this.itemApiService
                  .geensIDItemsShare(itemId, shareToUserIdentifiers, permission)
                  .subscribe({
                  next: function (response) {
                      on_success(response);
                  },
                  error: function (error) {
                      on_error(error);
                  },
              });
          }
          catch (e) {
              if (typeof e === 'string') {
                  throw new Error(e);
              }
              else {
                  throw new Error('error');
              }
          }
      };
      /**
       * Generate sharable url link
       * */
      GeensJsSdk.prototype.generateSharableUrlLinks = function (itemsIds, password, permission, sharedIdentityType, urlToken, on_success, on_error) {
          if (urlToken === void 0) { urlToken = null; }
          if (!this.rolesService.userHavePermission([PermissionsList.SHARING_URL_SHARE])) {
              on_error('user_is_missing_required_permissions');
              return;
          }
          var allItems = Array();
          var options = { url_token: null, password: null };
          try {
              if (!urlToken) {
                  // if no urlToken it means a new sharable link is being created
                  ErrorService.isArrayOfNumbers(itemsIds);
              }
              if ((itemsIds && itemsIds.length > 0) || (password && urlToken)) {
                  // when creating new url
                  // share or when updating url share and changing its password
                  ErrorService.isPasswordValid(password);
              }
              ErrorService.isPermissionsNaNAndValid(permission);
              ErrorService.isSharedIdentityTypeNaNAndValid(sharedIdentityType);
              var self_1 = this;
              var work_1 = function (itemsIds) {
                  if (itemsIds === void 0) { itemsIds = []; }
                  // if ((itemsIds && itemsIds.length > 0) || (password && urlToken)) { // when creating new sharable link get items descendants
                  if (!urlToken) {
                      // when creating new sharable link get items descendants
                      self_1.getItemsDescendants(itemsIds, options, function (success) {
                          success.forEach(function (descendantItems) {
                              allItems = allItems.concat(GeensJsSdk.prepareUrlShareAccesses(descendantItems, null, password, ''));
                          });
                          self_1.itemApiService
                              .generateShareUrlAPI(allItems, permission, sharedIdentityType)
                              .subscribe({
                              next: function (response) {
                                  on_success(response);
                              },
                              error: function (error) {
                                  on_error(error);
                              },
                          });
                          // .subscribe(
                          //     response => {
                          //         on_success(response)
                          //     },
                          //     error => {
                          //         on_error(error)
                          //     }
                          // )
                      }, function (error) {
                          on_error(error);
                      });
                  }
                  else {
                      self_1.itemApiService
                          .generateShareUrlAPI(itemsIds, permission, sharedIdentityType, urlToken)
                          .subscribe({
                          next: function (response) {
                              on_success(response);
                          },
                          error: function (error) {
                              on_error(error);
                          },
                      });
                      // .subscribe(
                      //     response => {
                      //         on_success(response)
                      //     },
                      //     error => {
                      //         on_error(error)
                      //     }
                      // )
                  }
              };
              if (urlToken) {
                  // when updating sharable link
                  if (password) {
                      // when changing password encrypt items with new password
                      this.itemApiService
                          .getAllUrlSharedItems(urlToken)
                          .subscribe(function (items) {
                          var itemService = new ItemService();
                          items = itemService.decryptItems(items, on_error);
                          allItems = allItems.concat(GeensJsSdk.prepareUrlShareAccesses(items, urlToken, password, ''));
                          work_1(allItems);
                      });
                  }
                  else {
                      work_1();
                  }
              }
              else {
                  // when creating sharable link
                  work_1(itemsIds);
              }
          }
          catch (e) {
              if (typeof e === 'string') {
                  throw new Error(e);
              }
              else {
                  throw new Error('error');
              }
          }
      };
      GeensJsSdk.prepareUrlShareAccesses = function (items, urlToken, urlPassword, oldUrlPassword) {
          if (urlToken === void 0) { urlToken = null; }
          if (oldUrlPassword === void 0) { oldUrlPassword = null; }
          var allItems = Array();
          items.forEach(function (item) {
              var newItem = new Item$1();
              var newItemAccess = new ItemAccess();
              newItem.id = item.id;
              // password is user created, which is required to enter when opening link.
              if (urlToken === null || oldUrlPassword !== urlPassword) {
                  newItemAccess.password = JSON.stringify({
                      password: CryptoService.symEncryptText(item.password, urlPassword, 10000),
                      url_password: CryptoService.symEncryptText(urlPassword, item.password, 10000),
                  });
              }
              newItemAccess.item_id = item.id;
              newItem.url_share = new ItemAccess();
              newItem.url_share = newItemAccess;
              allItems.push(newItem);
          });
          return allItems;
      };
      GeensJsSdk.prototype.getAvatar = function (keyId) {
          this.itemApiService.getAvatar(keyId).subscribe(function () { });
      };
      GeensJsSdk.prototype.encryptText = function (text, password, on_success, on_error) {
          try {
              ErrorService.isTitleValid(text);
              ErrorService.isPasswordValid(password, 4);
              var encrypted = CryptoService.symEncryptText(text, password, 10000);
              on_success(encrypted);
          }
          catch (e) {
              on_error(e);
          }
      };
      GeensJsSdk.prototype.decryptText = function (encrypted_text, password, on_success, on_error) {
          try {
              ErrorService.isTitleValid(encrypted_text);
              ErrorService.isPasswordValid(password, 4);
              var decrypted = CryptoService.symDecryptText(encrypted_text, password);
              on_success(decrypted);
          }
          catch (e) {
              on_error(e);
          }
      };
      GeensJsSdk.prototype.rsaEncryptText = function (text, publicKey, on_success, on_error) {
          if (publicKey === void 0) { publicKey = null; }
          try {
              ErrorService.isTitleValid(text);
              if (publicKey) {
                  ErrorService.isTitleValid(publicKey);
              }
              var userData = localStorage.getItem('user_data');
              if (!userData) {
                  throw new Error('no_user_found');
              }
              var key = '';
              if (publicKey) {
                  key = publicKey;
              }
              else {
                  var user = JSON.parse(userData);
                  key = user.rsa_public;
              }
              var encrypted = CryptoService.rsaEncrypt(text, key);
              on_success(encrypted);
          }
          catch (e) {
              on_error(e);
          }
      };
      GeensJsSdk.prototype.rsaDecryptText = function (encrypted_text, on_success, on_error) {
          try {
              ErrorService.isTitleValid(encrypted_text);
              var privateKey = localStorage.getItem('private_key');
              if (!privateKey) {
                  throw new Error('no_user_found');
              }
              var decrypted = CryptoService.rsaDecrypt(encrypted_text, privateKey);
              on_success(decrypted);
          }
          catch (e) {
              on_error(e);
          }
      };
      GeensJsSdk.prototype.generateCryptographicallySafeRandomToken = function (excludedChars, onlyNumbersAndLetters, on_success, on_error) {
          if (excludedChars === void 0) { excludedChars = []; }
          if (onlyNumbersAndLetters === void 0) { onlyNumbersAndLetters = false; }
          try {
              // excluded chars example
              // let excludedChars = ["%", "/", "\ ", "\'", "`", "\"", "[", "]", "<", ">", "^", "!", "?", "(", ")", "{", "}", ",", ".", "#", "+", "&"];
              var token = CryptoService.getRandomText(32, excludedChars, onlyNumbersAndLetters);
              on_success(token);
          }
          catch (e) {
              on_error(e);
          }
      };
      GeensJsSdk.prototype.getSharedUrl = function (item_id, options, on_success, on_error) {
          try {
              ErrorService.isIdNaNAndNotNull(item_id);
              ErrorService.isOptionsSetCorrectly(options);
              this.itemApiService.getSharedUrl(item_id, options).subscribe({
                  next: function (items) {
                      var itemService = new ItemService();
                      on_success(itemService.decryptItems(items, on_error, options.password));
                  },
                  error: function (error) {
                      on_error(error);
                  },
              });
              //     .subscribe(
              //     response => {
              //         let itemService = new ItemService()
              //
              //         on_success(itemService.decryptItems(response, on_error, options.password))
              //     },
              //     error => {
              //         on_error(error)
              //     }
              // )
          }
          catch (e) {
              if (typeof e === 'string') {
                  throw new Error(e);
              }
              else {
                  throw new Error('error');
              }
          }
      };
      GeensJsSdk.prototype.checkIfUserHasPermission = function (permission) {
          if (localStorage.getItem('user_data')) {
              return this.rolesService.userHavePermission(permission);
          }
          else {
              throw new Error('User is logged out');
          }
      };
      return GeensJsSdk;
  }());

  return GeensJsSdk;

}));
//# sourceMappingURL=geens-js-sdk.umd.js.map
